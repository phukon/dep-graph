{
  ".eslintrc.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  ".storybook\\buildFontPreloads.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  ".storybook\\buildFontPreloads.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  ".storybook\\DocsDecorator\\HealthFactors\\fixture.ts": {
    "incomingDependencies": [
      ".storybook\\DocsDecorator\\HealthFactors\\index.stories.tsx",
      ".storybook\\DocsDecorator\\HealthFactors\\index.test.tsx"
    ],
    "outgoingDependencies": []
  },
  ".storybook\\DocsDecorator\\HealthFactors\\Icons\\index.styles.ts": {
    "incomingDependencies": [
      ".storybook\\DocsDecorator\\HealthFactors\\Icons\\index.tsx"
    ],
    "outgoingDependencies": []
  },
  ".storybook\\DocsDecorator\\HealthFactors\\Icons\\index.tsx": {
    "incomingDependencies": [
      ".storybook\\DocsDecorator\\HealthFactors\\index.tsx",
      ".storybook\\DocsDecorator\\HealthFactors\\SingleDoc\\index.tsx",
      ".storybook\\SidebarLabel\\HealthFactorsSidebarLabel\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "./index.styles",
        "resolvedPath": ".storybook\\DocsDecorator\\HealthFactors\\Icons\\index.styles.ts"
      }
    ]
  },
  ".storybook\\DocsDecorator\\HealthFactors\\index.stories.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": ".",
        "resolvedPath": ".storybook\\DocsDecorator\\HealthFactors\\index.tsx"
      },
      {
        "source": "./fixture",
        "resolvedPath": ".storybook\\DocsDecorator\\HealthFactors\\fixture.ts"
      },
      {
        "source": "./metadata.json",
        "resolvedPath": "..\\EXIM\\Work\\iterate-ai\\dep-graph\\metadata.json"
      },
      {
        "source": "./README.md",
        "resolvedPath": "..\\EXIM\\Work\\iterate-ai\\dep-graph\\README.md"
      }
    ]
  },
  ".storybook\\DocsDecorator\\HealthFactors\\index.styles.tsx": {
    "incomingDependencies": [
      ".storybook\\DocsDecorator\\HealthFactors\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "../../../src/app/utilities/pixelsToRem",
        "resolvedPath": "src\\app\\utilities\\pixelsToRem\\index.ts"
      }
    ]
  },
  ".storybook\\DocsDecorator\\HealthFactors\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@testing-library/react",
        "resolvedPath": "@testing-library/react"
      },
      {
        "source": ".",
        "resolvedPath": ".storybook\\DocsDecorator\\HealthFactors\\index.tsx"
      },
      {
        "source": "../../../src/app/components/ThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\index.tsx"
      },
      {
        "source": "./fixture",
        "resolvedPath": ".storybook\\DocsDecorator\\HealthFactors\\fixture.ts"
      },
      {
        "source": "../types",
        "resolvedPath": ".storybook\\DocsDecorator\\types\\index.ts"
      }
    ]
  },
  ".storybook\\DocsDecorator\\HealthFactors\\index.tsx": {
    "incomingDependencies": [
      ".storybook\\DocsDecorator\\HealthFactors\\index.stories.tsx",
      ".storybook\\DocsDecorator\\HealthFactors\\index.test.tsx",
      ".storybook\\DocsDecorator\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "ramda/src/path",
        "resolvedPath": "ramda/src/path"
      },
      {
        "source": "moment",
        "resolvedPath": "moment"
      },
      {
        "source": "../../../src/app/components/Text",
        "resolvedPath": "src\\app\\components\\Text\\index.tsx"
      },
      {
        "source": "./Icons",
        "resolvedPath": ".storybook\\DocsDecorator\\HealthFactors\\Icons\\index.tsx"
      },
      {
        "source": "./SingleDoc",
        "resolvedPath": ".storybook\\DocsDecorator\\HealthFactors\\SingleDoc\\index.tsx"
      },
      {
        "source": "./index.styles",
        "resolvedPath": ".storybook\\DocsDecorator\\HealthFactors\\index.styles.tsx"
      },
      {
        "source": "../types",
        "resolvedPath": ".storybook\\DocsDecorator\\types\\index.ts"
      },
      {
        "source": "../../helpers/healthFactors",
        "resolvedPath": ".storybook\\helpers\\healthFactors\\index.tsx"
      }
    ]
  },
  ".storybook\\DocsDecorator\\HealthFactors\\SingleDoc\\index.styles.ts": {
    "incomingDependencies": [
      ".storybook\\DocsDecorator\\HealthFactors\\SingleDoc\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "../../../../src/app/utilities/pixelsToRem",
        "resolvedPath": "src\\app\\utilities\\pixelsToRem\\index.ts"
      }
    ]
  },
  ".storybook\\DocsDecorator\\HealthFactors\\SingleDoc\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@testing-library/react",
        "resolvedPath": "@testing-library/react"
      },
      {
        "source": ".",
        "resolvedPath": ".storybook\\DocsDecorator\\HealthFactors\\SingleDoc\\index.tsx"
      },
      {
        "source": "../../../../src/app/components/ThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\index.tsx"
      }
    ]
  },
  ".storybook\\DocsDecorator\\HealthFactors\\SingleDoc\\index.tsx": {
    "incomingDependencies": [
      ".storybook\\DocsDecorator\\HealthFactors\\index.tsx",
      ".storybook\\DocsDecorator\\HealthFactors\\SingleDoc\\index.test.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "../../../../src/app/components/Text",
        "resolvedPath": "src\\app\\components\\Text\\index.tsx"
      },
      {
        "source": "../Icons",
        "resolvedPath": ".storybook\\DocsDecorator\\HealthFactors\\Icons\\index.tsx"
      },
      {
        "source": "./index.styles",
        "resolvedPath": ".storybook\\DocsDecorator\\HealthFactors\\SingleDoc\\index.styles.ts"
      },
      {
        "source": "../../../../src/app/components/VisuallyHiddenText",
        "resolvedPath": "src\\app\\components\\VisuallyHiddenText\\index.tsx"
      },
      {
        "source": "../../../../src/app/lib/utilities/idSanitiser",
        "resolvedPath": "src\\app\\lib\\utilities\\idSanitiser\\index.js"
      }
    ]
  },
  ".storybook\\DocsDecorator\\index.tsx": {
    "incomingDependencies": [
      ".storybook\\preview.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@storybook/addon-docs",
        "resolvedPath": "@storybook/addon-docs"
      },
      {
        "source": "../../src/app/components/ThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\index.tsx"
      },
      {
        "source": "./HealthFactors",
        "resolvedPath": ".storybook\\DocsDecorator\\HealthFactors\\index.tsx"
      },
      {
        "source": "./types",
        "resolvedPath": ".storybook\\DocsDecorator\\types\\index.ts"
      }
    ]
  },
  ".storybook\\DocsDecorator\\types\\index.ts": {
    "incomingDependencies": [
      ".storybook\\DocsDecorator\\HealthFactors\\index.test.tsx",
      ".storybook\\DocsDecorator\\HealthFactors\\index.tsx",
      ".storybook\\DocsDecorator\\index.tsx",
      ".storybook\\SidebarLabel\\types.ts"
    ],
    "outgoingDependencies": []
  },
  ".storybook\\helpers\\ampDecorator\\index.jsx": {
    "incomingDependencies": [
      ".storybook\\helpers\\ampDecorator\\index.test.jsx",
      "src\\app\\components\\Image\\index.stories.tsx",
      "src\\app\\legacy\\containers\\Bulletin\\index.stories.jsx",
      "src\\app\\legacy\\containers\\ConsentBanner\\index.stories.jsx",
      "src\\app\\legacy\\containers\\CpsFeaturesAnalysis\\index.stories.jsx",
      "src\\app\\legacy\\containers\\ImageWithPlaceholder\\index.stories.jsx",
      "src\\app\\legacy\\containers\\IndexPageSection\\index.stories.jsx",
      "src\\app\\legacy\\containers\\Navigation\\index.stories.jsx",
      "src\\app\\legacy\\containers\\SocialEmbed\\index.stories.jsx",
      "src\\app\\legacy\\containers\\StoryPromo\\index.stories.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "react-helmet",
        "resolvedPath": "react-helmet"
      },
      {
        "source": "#psammead/psammead-assets/src/amp-boilerplate",
        "resolvedPath": "#psammead/psammead-assets/src/amp-boilerplate"
      }
    ]
  },
  ".storybook\\helpers\\ampDecorator\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "./index",
        "resolvedPath": ".storybook\\helpers\\ampDecorator\\index.jsx"
      }
    ]
  },
  ".storybook\\helpers\\healthFactors\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": ".",
        "resolvedPath": ".storybook\\helpers\\healthFactors\\index.tsx"
      }
    ]
  },
  ".storybook\\helpers\\healthFactors\\index.tsx": {
    "incomingDependencies": [
      ".storybook\\DocsDecorator\\HealthFactors\\index.tsx",
      ".storybook\\helpers\\healthFactors\\index.test.tsx",
      ".storybook\\SidebarLabel\\HealthFactorsSidebarLabel\\index.tsx",
      ".storybook\\SidebarLabel\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "ramda/src/path",
        "resolvedPath": "ramda/src/path"
      },
      {
        "source": "ramda/src/count",
        "resolvedPath": "ramda/src/count"
      }
    ]
  },
  ".storybook\\main.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "@storybook/react-webpack5",
        "resolvedPath": "@storybook/react-webpack5"
      },
      {
        "source": "webpack",
        "resolvedPath": "webpack"
      },
      {
        "source": "@storybook/core-common",
        "resolvedPath": "@storybook/core-common"
      },
      {
        "source": "../dirAlias",
        "resolvedPath": "dirAlias.js"
      }
    ]
  },
  ".storybook\\manager.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "@storybook/manager-api",
        "resolvedPath": "@storybook/manager-api"
      },
      {
        "source": "./theme",
        "resolvedPath": ".storybook\\theme.ts"
      }
    ]
  },
  ".storybook\\preview.tsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\psammead-image\\src\\index.amp.stories.jsx",
      "src\\app\\legacy\\psammead\\psammead-image-placeholder\\src\\index.amp.stories.jsx",
      "src\\app\\legacy\\psammead\\psammead-navigation\\src\\index.stories.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "chromatic/isChromatic",
        "resolvedPath": "chromatic/isChromatic"
      },
      {
        "source": "react-lazyload",
        "resolvedPath": "react-lazyload"
      },
      {
        "source": "@storybook/react",
        "resolvedPath": "@storybook/react"
      },
      {
        "source": "../src/app/legacy/psammead/psammead-styles/src/global-styles",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-styles\\src\\global-styles.jsx"
      },
      {
        "source": "./DocsDecorator",
        "resolvedPath": ".storybook\\DocsDecorator\\index.tsx"
      },
      {
        "source": "../src/app/components/ThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\index.tsx"
      },
      {
        "source": "../src/app/contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../src/app/contexts/ToggleContext",
        "resolvedPath": "src\\app\\contexts\\ToggleContext\\index.tsx"
      },
      {
        "source": "../src/app/contexts/UserContext",
        "resolvedPath": "src\\app\\contexts\\UserContext\\index.tsx"
      },
      {
        "source": "../src/app/contexts/EventTrackingContext",
        "resolvedPath": "src\\app\\contexts\\EventTrackingContext\\index.tsx"
      },
      {
        "source": "./withServicesDecorator",
        "resolvedPath": ".storybook\\withServicesDecorator\\index.tsx"
      },
      {
        "source": "../data/news/articles/c0g992jmmkko.json",
        "resolvedPath": "..\\EXIM\\Work\\iterate-ai\\data\\news\\articles\\c0g992jmmkko.json"
      },
      {
        "source": "../src/app/contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext\\index.tsx"
      }
    ]
  },
  ".storybook\\SidebarLabel\\HealthFactorsSidebarLabel\\index.stories.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": ".",
        "resolvedPath": ".storybook\\SidebarLabel\\HealthFactorsSidebarLabel\\index.tsx"
      },
      {
        "source": "./metadata.json",
        "resolvedPath": "..\\EXIM\\Work\\iterate-ai\\dep-graph\\metadata.json"
      },
      {
        "source": "./README.md",
        "resolvedPath": "..\\EXIM\\Work\\iterate-ai\\dep-graph\\README.md"
      }
    ]
  },
  ".storybook\\SidebarLabel\\HealthFactorsSidebarLabel\\index.styles.tsx": {
    "incomingDependencies": [
      ".storybook\\SidebarLabel\\HealthFactorsSidebarLabel\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "../../../src/app/utilities/pixelsToRem",
        "resolvedPath": "src\\app\\utilities\\pixelsToRem\\index.ts"
      }
    ]
  },
  ".storybook\\SidebarLabel\\HealthFactorsSidebarLabel\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@testing-library/react",
        "resolvedPath": "@testing-library/react"
      },
      {
        "source": ".",
        "resolvedPath": ".storybook\\SidebarLabel\\HealthFactorsSidebarLabel\\index.tsx"
      }
    ]
  },
  ".storybook\\SidebarLabel\\HealthFactorsSidebarLabel\\index.tsx": {
    "incomingDependencies": [
      ".storybook\\SidebarLabel\\HealthFactorsSidebarLabel\\index.stories.tsx",
      ".storybook\\SidebarLabel\\HealthFactorsSidebarLabel\\index.test.tsx",
      ".storybook\\SidebarLabel\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "./index.styles",
        "resolvedPath": ".storybook\\SidebarLabel\\HealthFactorsSidebarLabel\\index.styles.tsx"
      },
      {
        "source": "../../DocsDecorator/HealthFactors/Icons",
        "resolvedPath": ".storybook\\DocsDecorator\\HealthFactors\\Icons\\index.tsx"
      },
      {
        "source": "../../../src/app/components/ThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\index.tsx"
      },
      {
        "source": "../../helpers/healthFactors",
        "resolvedPath": ".storybook\\helpers\\healthFactors\\index.tsx"
      },
      {
        "source": "../types",
        "resolvedPath": ".storybook\\SidebarLabel\\types.ts"
      },
      {
        "source": "../../../src/app/components/VisuallyHiddenText",
        "resolvedPath": "src\\app\\components\\VisuallyHiddenText\\index.tsx"
      }
    ]
  },
  ".storybook\\SidebarLabel\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@testing-library/react",
        "resolvedPath": "@testing-library/react"
      },
      {
        "source": ".",
        "resolvedPath": ".storybook\\SidebarLabel\\index.tsx"
      }
    ]
  },
  ".storybook\\SidebarLabel\\index.tsx": {
    "incomingDependencies": [
      ".storybook\\SidebarLabel\\index.test.tsx",
      ".storybook\\SidebarLabel\\register.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@storybook/manager-api",
        "resolvedPath": "@storybook/manager-api"
      },
      {
        "source": "ramda/src/path",
        "resolvedPath": "ramda/src/path"
      },
      {
        "source": "../helpers/healthFactors",
        "resolvedPath": ".storybook\\helpers\\healthFactors\\index.tsx"
      },
      {
        "source": "./HealthFactorsSidebarLabel",
        "resolvedPath": ".storybook\\SidebarLabel\\HealthFactorsSidebarLabel\\index.tsx"
      }
    ]
  },
  ".storybook\\SidebarLabel\\register.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@storybook/manager-api",
        "resolvedPath": "@storybook/manager-api"
      },
      {
        "source": ".",
        "resolvedPath": ".storybook\\SidebarLabel\\index.tsx"
      }
    ]
  },
  ".storybook\\SidebarLabel\\types.ts": {
    "incomingDependencies": [
      ".storybook\\SidebarLabel\\HealthFactorsSidebarLabel\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../DocsDecorator/types",
        "resolvedPath": ".storybook\\DocsDecorator\\types\\index.ts"
      }
    ]
  },
  ".storybook\\StorybookComponents\\ColorList\\ColorCard\\index.styles.tsx": {
    "incomingDependencies": [
      ".storybook\\StorybookComponents\\ColorList\\ColorCard\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "../../../../src/app/utilities/pixelsToRem",
        "resolvedPath": "src\\app\\utilities\\pixelsToRem\\index.ts"
      }
    ]
  },
  ".storybook\\StorybookComponents\\ColorList\\ColorCard\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../../../../src/app/components/react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": ".",
        "resolvedPath": ".storybook\\StorybookComponents\\ColorList\\ColorCard\\index.tsx"
      }
    ]
  },
  ".storybook\\StorybookComponents\\ColorList\\ColorCard\\index.tsx": {
    "incomingDependencies": [
      ".storybook\\StorybookComponents\\ColorList\\ColorCard\\index.test.tsx",
      ".storybook\\StorybookComponents\\ColorList\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "./index.styles",
        "resolvedPath": ".storybook\\StorybookComponents\\ColorList\\ColorCard\\index.styles.tsx"
      },
      {
        "source": "../../../../src/app/components/Text",
        "resolvedPath": "src\\app\\components\\Text\\index.tsx"
      }
    ]
  },
  ".storybook\\StorybookComponents\\ColorList\\index.stories.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../../../docs/User-Experience/colours",
        "resolvedPath": "docs\\User-Experience\\colours.tsx"
      },
      {
        "source": ".",
        "resolvedPath": ".storybook\\StorybookComponents\\ColorList\\index.tsx"
      },
      {
        "source": "./metadata.json",
        "resolvedPath": "..\\EXIM\\Work\\iterate-ai\\dep-graph\\metadata.json"
      },
      {
        "source": "./README.md",
        "resolvedPath": "..\\EXIM\\Work\\iterate-ai\\dep-graph\\README.md"
      }
    ]
  },
  ".storybook\\StorybookComponents\\ColorList\\index.styles.tsx": {
    "incomingDependencies": [
      ".storybook\\StorybookComponents\\ColorList\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      }
    ]
  },
  ".storybook\\StorybookComponents\\ColorList\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../../../src/app/components/react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": ".",
        "resolvedPath": ".storybook\\StorybookComponents\\ColorList\\index.tsx"
      },
      {
        "source": "../../../docs/User-Experience/colours",
        "resolvedPath": "docs\\User-Experience\\colours.tsx"
      }
    ]
  },
  ".storybook\\StorybookComponents\\ColorList\\index.tsx": {
    "incomingDependencies": [
      ".storybook\\StorybookComponents\\ColorList\\index.stories.tsx",
      ".storybook\\StorybookComponents\\ColorList\\index.test.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "ramda/src/isEmpty",
        "resolvedPath": "ramda/src/isEmpty"
      },
      {
        "source": "./index.styles",
        "resolvedPath": ".storybook\\StorybookComponents\\ColorList\\index.styles.tsx"
      },
      {
        "source": "./ColorCard",
        "resolvedPath": ".storybook\\StorybookComponents\\ColorList\\ColorCard\\index.tsx"
      }
    ]
  },
  ".storybook\\theme.ts": {
    "incomingDependencies": [
      ".storybook\\manager.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "@storybook/theming/create",
        "resolvedPath": "@storybook/theming/create"
      },
      {
        "source": "./logo.svg",
        "resolvedPath": "..\\EXIM\\Work\\iterate-ai\\dep-graph\\logo.svg"
      }
    ]
  },
  ".storybook\\time-machine.js": {
    "incomingDependencies": [
      "src\\testHelpers\\withTimeMachine.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "timemachine",
        "resolvedPath": "timemachine"
      }
    ]
  },
  ".storybook\\withServicesDecorator\\index.tsx": {
    "incomingDependencies": [
      ".storybook\\preview.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "ramda/src/path",
        "resolvedPath": "ramda/src/path"
      },
      {
        "source": "react-helmet",
        "resolvedPath": "react-helmet"
      },
      {
        "source": "./text-variants",
        "resolvedPath": ".storybook\\withServicesDecorator\\text-variants.ts"
      },
      {
        "source": "../../src/app/components/ThemeProvider/fontScripts/arabic",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\arabic.ts"
      },
      {
        "source": "../../src/app/components/ThemeProvider/fontScripts/bengali",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\bengali.ts"
      },
      {
        "source": "../../src/app/components/ThemeProvider/fontScripts/burmese",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\burmese.ts"
      },
      {
        "source": "../../src/app/components/ThemeProvider/fontScripts/devanagari",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\devanagari.ts"
      },
      {
        "source": "../../src/app/components/ThemeProvider/fontScripts/latin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts"
      },
      {
        "source": "../../src/app/components/ThemeProvider/fontScripts/cyrillic",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\cyrillic.ts"
      },
      {
        "source": "../../src/app/components/ThemeProvider/fontScripts/latinWithDiacritics",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latinWithDiacritics.ts"
      },
      {
        "source": "../../src/app/components/ThemeProvider/fontScripts/noAscOrDesc",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\noAscOrDesc.ts"
      },
      {
        "source": "../../src/app/components/ThemeProvider/fontScripts/sinhalese",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\sinhalese.ts"
      },
      {
        "source": "../../src/app/components/ThemeProvider/fontScripts/tamil",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\tamil.ts"
      },
      {
        "source": "../../src/app/components/ThemeProvider/fontScripts/thai",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\thai.ts"
      },
      {
        "source": "../../src/app/models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global.ts"
      }
    ]
  },
  ".storybook\\withServicesDecorator\\text-variants.ts": {
    "incomingDependencies": [
      ".storybook\\withServicesDecorator\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "#app/models/types/global",
        "resolvedPath": "#app/models/types/global"
      }
    ]
  },
  "3rdPartyCypress\\cypress\\support\\commands.js": {
    "incomingDependencies": [
      "3rdPartyCypress\\cypress\\support\\index.js"
    ],
    "outgoingDependencies": []
  },
  "3rdPartyCypress\\cypress\\support\\index.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "./commands",
        "resolvedPath": "3rdPartyCypress\\cypress\\support\\commands.js"
      }
    ]
  },
  "a11y.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "AdHocCypress\\cypress\\integration\\topcat2MediaPlayback\\config.js": {
    "incomingDependencies": [
      "AdHocCypress\\cypress\\integration\\topcat2MediaPlayback\\index.js"
    ],
    "outgoingDependencies": []
  },
  "AdHocCypress\\cypress\\integration\\topcat2MediaPlayback\\index.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "./config",
        "resolvedPath": "AdHocCypress\\cypress\\integration\\topcat2MediaPlayback\\config.js"
      },
      {
        "source": "../../../../cypress/support/helpers/getAppEnv",
        "resolvedPath": "cypress\\support\\helpers\\getAppEnv.js"
      },
      {
        "source": "../../support/utilities/getDataUrl",
        "resolvedPath": "..\\EXIM\\Work\\support\\utilities\\getDataUrl"
      }
    ]
  },
  "AdHocCypress\\cypress\\plugins\\index.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "AdHocCypress\\cypress\\support\\commands.js": {
    "incomingDependencies": [
      "AdHocCypress\\cypress\\support\\index.js"
    ],
    "outgoingDependencies": []
  },
  "AdHocCypress\\cypress\\support\\index.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "./commands",
        "resolvedPath": "AdHocCypress\\cypress\\support\\commands.js"
      }
    ]
  },
  "babel.config.main.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "cypress\\e2e\\123PlaygroundForTests\\index.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../../support/helpers/runTestsForPage",
        "resolvedPath": "cypress\\support\\helpers\\runTestsForPage.js"
      },
      {
        "source": "./tests",
        "resolvedPath": "cypress\\e2e\\123PlaygroundForTests\\tests.js"
      },
      {
        "source": "./testsForAMPOnly",
        "resolvedPath": "cypress\\e2e\\123PlaygroundForTests\\testsForAMPOnly.js"
      },
      {
        "source": "./testsForCanonicalOnly",
        "resolvedPath": "cypress\\e2e\\123PlaygroundForTests\\testsForCanonicalOnly.js"
      }
    ]
  },
  "cypress\\e2e\\123PlaygroundForTests\\tests.js": {
    "incomingDependencies": [
      "cypress\\e2e\\123PlaygroundForTests\\index.js"
    ],
    "outgoingDependencies": []
  },
  "cypress\\e2e\\123PlaygroundForTests\\testsForAMPOnly.js": {
    "incomingDependencies": [
      "cypress\\e2e\\123PlaygroundForTests\\index.js"
    ],
    "outgoingDependencies": []
  },
  "cypress\\e2e\\123PlaygroundForTests\\testsForCanonicalOnly.js": {
    "incomingDependencies": [
      "cypress\\e2e\\123PlaygroundForTests\\index.js"
    ],
    "outgoingDependencies": []
  },
  "cypress\\e2e\\application\\index.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../../support/config/services",
        "resolvedPath": "cypress\\support\\config\\services.js"
      },
      {
        "source": "../../../src/server/utilities/serviceConfigs",
        "resolvedPath": "src\\server\\utilities\\serviceConfigs\\index.ts"
      },
      {
        "source": "../../support/helpers/serviceHasPageType",
        "resolvedPath": "cypress\\support\\helpers\\serviceHasPageType.js"
      },
      {
        "source": "../../support/helpers/ampOnlyServices",
        "resolvedPath": "cypress\\support\\helpers\\ampOnlyServices.js"
      },
      {
        "source": "../../support/config/envs",
        "resolvedPath": "cypress\\support\\config\\envs.js"
      },
      {
        "source": "../../support/helpers/getPaths",
        "resolvedPath": "cypress\\support\\helpers\\getPaths\\index.js"
      },
      {
        "source": "../pages/topicPage/helpers",
        "resolvedPath": "cypress\\e2e\\pages\\topicPage\\helpers.js"
      }
    ]
  },
  "cypress\\e2e\\pages\\articles\\helpers.js": {
    "incomingDependencies": [
      "cypress\\e2e\\pages\\articles\\testsForCanonicalOnly.js"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../support/config/envs",
        "resolvedPath": "cypress\\support\\config\\envs.js"
      }
    ]
  },
  "cypress\\e2e\\pages\\articles\\index.cy.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../../../support/helpers/runTestsForPage",
        "resolvedPath": "cypress\\support\\helpers\\runTestsForPage.js"
      },
      {
        "source": "./tests",
        "resolvedPath": "cypress\\e2e\\pages\\articles\\tests.js"
      },
      {
        "source": "./testsForAMPOnly",
        "resolvedPath": "cypress\\e2e\\pages\\articles\\testsForAMPOnly.js"
      },
      {
        "source": "./testsForCanonicalOnly",
        "resolvedPath": "cypress\\e2e\\pages\\articles\\testsForCanonicalOnly.js"
      }
    ]
  },
  "cypress\\e2e\\pages\\articles\\tests.js": {
    "incomingDependencies": [
      "cypress\\e2e\\pages\\articles\\index.cy.js"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../support/config/services",
        "resolvedPath": "cypress\\support\\config\\services.js"
      },
      {
        "source": "../../../../src/server/utilities/serviceConfigs",
        "resolvedPath": "src\\server\\utilities\\serviceConfigs\\index.ts"
      },
      {
        "source": "../mostReadPage/mostReadAssertions",
        "resolvedPath": "cypress\\e2e\\pages\\mostReadPage\\mostReadAssertions.js"
      }
    ]
  },
  "cypress\\e2e\\pages\\articles\\testsForAMPOnly.js": {
    "incomingDependencies": [
      "cypress\\e2e\\pages\\articles\\index.cy.js"
    ],
    "outgoingDependencies": [
      {
        "source": "../mostReadPage/mostReadAssertions",
        "resolvedPath": "cypress\\e2e\\pages\\mostReadPage\\mostReadAssertions.js"
      }
    ]
  },
  "cypress\\e2e\\pages\\articles\\testsForCanonicalOnly.js": {
    "incomingDependencies": [
      "cypress\\e2e\\pages\\articles\\index.cy.js"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../../src/server/utilities/serviceConfigs",
        "resolvedPath": "src\\server\\utilities\\serviceConfigs\\index.ts"
      },
      {
        "source": "../../../support/config/envs",
        "resolvedPath": "cypress\\support\\config\\envs.js"
      },
      {
        "source": "../../../support/helpers/useAppToggles",
        "resolvedPath": "cypress\\support\\helpers\\useAppToggles.js"
      },
      {
        "source": "./helpers",
        "resolvedPath": "cypress\\e2e\\pages\\articles\\helpers.js"
      }
    ]
  },
  "cypress\\e2e\\pages\\errorPage404\\getErrorPath.js": {
    "incomingDependencies": [
      "cypress\\e2e\\pages\\errorPage404\\tests.js",
      "cypress\\e2e\\pages\\errorPage404\\testsForAMPOnly.js",
      "cypress\\e2e\\pages\\errorPage404\\testsForCanonicalOnly.js"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../support/helpers/getPaths",
        "resolvedPath": "cypress\\support\\helpers\\getPaths\\index.js"
      }
    ]
  },
  "cypress\\e2e\\pages\\errorPage404\\index.cy.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../../../support/helpers/runTestsForPage",
        "resolvedPath": "cypress\\support\\helpers\\runTestsForPage.js"
      },
      {
        "source": "./tests",
        "resolvedPath": "cypress\\e2e\\pages\\errorPage404\\tests.js"
      },
      {
        "source": "./testsForAMPOnly",
        "resolvedPath": "cypress\\e2e\\pages\\errorPage404\\testsForAMPOnly.js"
      },
      {
        "source": "./testsForCanonicalOnly",
        "resolvedPath": "cypress\\e2e\\pages\\errorPage404\\testsForCanonicalOnly.js"
      }
    ]
  },
  "cypress\\e2e\\pages\\errorPage404\\tests.js": {
    "incomingDependencies": [
      "cypress\\e2e\\pages\\errorPage404\\index.cy.js"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../support/config/services",
        "resolvedPath": "cypress\\support\\config\\services.js"
      },
      {
        "source": "../../../support/config/envs",
        "resolvedPath": "cypress\\support\\config\\envs.js"
      },
      {
        "source": "../../../../src/server/utilities/serviceConfigs",
        "resolvedPath": "src\\server\\utilities\\serviceConfigs\\index.ts"
      },
      {
        "source": "./getErrorPath",
        "resolvedPath": "cypress\\e2e\\pages\\errorPage404\\getErrorPath.js"
      }
    ]
  },
  "cypress\\e2e\\pages\\errorPage404\\testsForAMPOnly.js": {
    "incomingDependencies": [
      "cypress\\e2e\\pages\\errorPage404\\index.cy.js"
    ],
    "outgoingDependencies": [
      {
        "source": "./getErrorPath",
        "resolvedPath": "cypress\\e2e\\pages\\errorPage404\\getErrorPath.js"
      }
    ]
  },
  "cypress\\e2e\\pages\\errorPage404\\testsForCanonicalOnly.js": {
    "incomingDependencies": [
      "cypress\\e2e\\pages\\errorPage404\\index.cy.js"
    ],
    "outgoingDependencies": [
      {
        "source": "./getErrorPath",
        "resolvedPath": "cypress\\e2e\\pages\\errorPage404\\getErrorPath.js"
      }
    ]
  },
  "cypress\\e2e\\pages\\featureIndexPage\\index.cy.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../../../support/helpers/runTestsForPage",
        "resolvedPath": "cypress\\support\\helpers\\runTestsForPage.js"
      },
      {
        "source": "./testsForAMPOnly",
        "resolvedPath": "cypress\\e2e\\pages\\featureIndexPage\\testsForAMPOnly.js"
      },
      {
        "source": "./testsForCanonicalOnly",
        "resolvedPath": "cypress\\e2e\\pages\\featureIndexPage\\testsForCanonicalOnly.js"
      }
    ]
  },
  "cypress\\e2e\\pages\\featureIndexPage\\testsForAMPOnly.js": {
    "incomingDependencies": [
      "cypress\\e2e\\pages\\featureIndexPage\\index.cy.js"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../support/helpers/adsTests/testsForAMPOnly",
        "resolvedPath": "cypress\\support\\helpers\\adsTests\\testsForAMPOnly.js"
      }
    ]
  },
  "cypress\\e2e\\pages\\featureIndexPage\\testsForCanonicalOnly.js": {
    "incomingDependencies": [
      "cypress\\e2e\\pages\\featureIndexPage\\index.cy.js"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../support/helpers/adsTests/testsForCanonicalOnly",
        "resolvedPath": "cypress\\support\\helpers\\adsTests\\testsForCanonicalOnly.js"
      }
    ]
  },
  "cypress\\e2e\\pages\\frontPage\\index.cy.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../../../support/helpers/runTestsForPage",
        "resolvedPath": "cypress\\support\\helpers\\runTestsForPage.js"
      },
      {
        "source": "./tests",
        "resolvedPath": "cypress\\e2e\\pages\\frontPage\\tests.js"
      },
      {
        "source": "./testsForAMPOnly",
        "resolvedPath": "cypress\\e2e\\pages\\frontPage\\testsForAMPOnly.js"
      },
      {
        "source": "./testsForCanonicalOnly",
        "resolvedPath": "cypress\\e2e\\pages\\frontPage\\testsForCanonicalOnly.js"
      }
    ]
  },
  "cypress\\e2e\\pages\\frontPage\\tests.js": {
    "incomingDependencies": [
      "cypress\\e2e\\pages\\frontPage\\index.cy.js"
    ],
    "outgoingDependencies": []
  },
  "cypress\\e2e\\pages\\frontPage\\testsForAMPOnly.js": {
    "incomingDependencies": [
      "cypress\\e2e\\pages\\frontPage\\index.cy.js"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../support/helpers/adsTests/testsForAMPOnly",
        "resolvedPath": "cypress\\support\\helpers\\adsTests\\testsForAMPOnly.js"
      }
    ]
  },
  "cypress\\e2e\\pages\\frontPage\\testsForCanonicalOnly.js": {
    "incomingDependencies": [
      "cypress\\e2e\\pages\\frontPage\\index.cy.js"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../support/helpers/adsTests/testsForCanonicalOnly",
        "resolvedPath": "cypress\\support\\helpers\\adsTests\\testsForCanonicalOnly.js"
      }
    ]
  },
  "cypress\\e2e\\pages\\homePage\\index.cy.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": "./urls",
        "resolvedPath": "cypress\\e2e\\pages\\homePage\\urls.js"
      },
      {
        "source": "../../../support/helpers/getAppEnv",
        "resolvedPath": "cypress\\support\\helpers\\getAppEnv.js"
      },
      {
        "source": "../../../support/helpers/visitPage",
        "resolvedPath": "cypress\\support\\helpers\\visitPage.js"
      },
      {
        "source": "./tests",
        "resolvedPath": "cypress\\e2e\\pages\\homePage\\tests.js"
      },
      {
        "source": "./testsForCanonicalOnly",
        "resolvedPath": "cypress\\e2e\\pages\\homePage\\testsForCanonicalOnly.js"
      }
    ]
  },
  "cypress\\e2e\\pages\\homePage\\tests.js": {
    "incomingDependencies": [
      "cypress\\e2e\\pages\\homePage\\index.cy.js"
    ],
    "outgoingDependencies": []
  },
  "cypress\\e2e\\pages\\homePage\\testsForAMPOnly.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../../../support/helpers/adsTests/testsForAMPOnly",
        "resolvedPath": "cypress\\support\\helpers\\adsTests\\testsForAMPOnly.js"
      },
      {
        "source": "../../../support/helpers/getAppEnv",
        "resolvedPath": "cypress\\support\\helpers\\getAppEnv.js"
      }
    ]
  },
  "cypress\\e2e\\pages\\homePage\\testsForCanonicalOnly.js": {
    "incomingDependencies": [
      "cypress\\e2e\\pages\\homePage\\index.cy.js"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../support/helpers/adsTests/testsForCanonicalOnly",
        "resolvedPath": "cypress\\support\\helpers\\adsTests\\testsForCanonicalOnly.js"
      },
      {
        "source": "../../../support/helpers/getAppEnv",
        "resolvedPath": "cypress\\support\\helpers\\getAppEnv.js"
      }
    ]
  },
  "cypress\\e2e\\pages\\homePage\\urls.js": {
    "incomingDependencies": [
      "cypress\\e2e\\pages\\homePage\\index.cy.js"
    ],
    "outgoingDependencies": []
  },
  "cypress\\e2e\\pages\\liveRadio\\index.cy.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../../../support/config/services",
        "resolvedPath": "cypress\\support\\config\\services.js"
      },
      {
        "source": "../../../support/helpers/getPaths",
        "resolvedPath": "cypress\\support\\helpers\\getPaths\\index.js"
      },
      {
        "source": "../../../support/helpers/serviceHasPageType",
        "resolvedPath": "cypress\\support\\helpers\\serviceHasPageType.js"
      },
      {
        "source": "./tests",
        "resolvedPath": "cypress\\e2e\\pages\\liveRadio\\tests.js"
      },
      {
        "source": "../../../support/helpers/visitPage",
        "resolvedPath": "cypress\\support\\helpers\\visitPage.js"
      },
      {
        "source": "../../../support/helpers/onDemandRadioTv",
        "resolvedPath": "cypress\\support\\helpers\\onDemandRadioTv.js"
      }
    ]
  },
  "cypress\\e2e\\pages\\liveRadio\\tests.js": {
    "incomingDependencies": [
      "cypress\\e2e\\pages\\liveRadio\\index.cy.js"
    ],
    "outgoingDependencies": [
      {
        "source": "ramda/src/path",
        "resolvedPath": "ramda/src/path"
      },
      {
        "source": "../../../support/config/services",
        "resolvedPath": "cypress\\support\\config\\services.js"
      },
      {
        "source": "../../../support/config/envs",
        "resolvedPath": "cypress\\support\\config\\envs.js"
      }
    ]
  },
  "cypress\\e2e\\pages\\mediaAssetPage\\helpers.js": {
    "incomingDependencies": [
      "cypress\\e2e\\pages\\mediaAssetPage\\testsForAMPOnly.js"
    ],
    "outgoingDependencies": [
      {
        "source": "ramda/src/paths",
        "resolvedPath": "ramda/src/paths"
      },
      {
        "source": "../../../support/config/envs",
        "resolvedPath": "cypress\\support\\config\\envs.js"
      }
    ]
  },
  "cypress\\e2e\\pages\\mediaAssetPage\\index.cy.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../../../support/helpers/runTestsForPage",
        "resolvedPath": "cypress\\support\\helpers\\runTestsForPage.js"
      },
      {
        "source": "./testsForAMPOnly",
        "resolvedPath": "cypress\\e2e\\pages\\mediaAssetPage\\testsForAMPOnly.js"
      },
      {
        "source": "./testsForCanonicalOnly",
        "resolvedPath": "cypress\\e2e\\pages\\mediaAssetPage\\testsForCanonicalOnly.js"
      }
    ]
  },
  "cypress\\e2e\\pages\\mediaAssetPage\\testsForAMPOnly.js": {
    "incomingDependencies": [
      "cypress\\e2e\\pages\\mediaAssetPage\\index.cy.js"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../support/config/services",
        "resolvedPath": "cypress\\support\\config\\services.js"
      },
      {
        "source": "../../../../src/server/utilities/serviceConfigs",
        "resolvedPath": "src\\server\\utilities\\serviceConfigs\\index.ts"
      },
      {
        "source": "./helpers",
        "resolvedPath": "cypress\\e2e\\pages\\mediaAssetPage\\helpers.js"
      }
    ]
  },
  "cypress\\e2e\\pages\\mediaAssetPage\\testsForCanonicalOnly.js": {
    "incomingDependencies": [
      "cypress\\e2e\\pages\\mediaAssetPage\\index.cy.js"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../support/helpers/useAppToggles",
        "resolvedPath": "cypress\\support\\helpers\\useAppToggles.js"
      },
      {
        "source": "../../../support/config/envs",
        "resolvedPath": "cypress\\support\\config\\envs.js"
      }
    ]
  },
  "cypress\\e2e\\pages\\mostReadPage\\index.cy.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../../../support/config/services",
        "resolvedPath": "cypress\\support\\config\\services.js"
      },
      {
        "source": "../../../support/config/envs",
        "resolvedPath": "cypress\\support\\config\\envs.js"
      },
      {
        "source": "./testsForCanonicalOnly",
        "resolvedPath": "cypress\\e2e\\pages\\mostReadPage\\testsForCanonicalOnly.js"
      },
      {
        "source": "./tests",
        "resolvedPath": "cypress\\e2e\\pages\\mostReadPage\\tests.js"
      },
      {
        "source": "../../../support/helpers/visitPage",
        "resolvedPath": "cypress\\support\\helpers\\visitPage.js"
      },
      {
        "source": "../../../support/helpers/getAppEnv",
        "resolvedPath": "cypress\\support\\helpers\\getAppEnv.js"
      }
    ]
  },
  "cypress\\e2e\\pages\\mostReadPage\\mostReadAssertions.js": {
    "incomingDependencies": [
      "cypress\\e2e\\pages\\articles\\tests.js",
      "cypress\\e2e\\pages\\articles\\testsForAMPOnly.js",
      "cypress\\e2e\\pages\\mostReadPage\\tests.js",
      "cypress\\e2e\\pages\\storyPage\\tests.js",
      "cypress\\e2e\\pages\\storyPage\\testsForAMPOnly.js"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../../src/app/components/MostRead/Canonical/Rank",
        "resolvedPath": "src\\app\\components\\MostRead\\Canonical\\Rank\\index.tsx"
      },
      {
        "source": "../../../support/config/services",
        "resolvedPath": "cypress\\support\\config\\services.js"
      },
      {
        "source": "../../../../src/server/utilities/serviceConfigs",
        "resolvedPath": "src\\server\\utilities\\serviceConfigs\\index.ts"
      },
      {
        "source": "../../../../src/app/lib/utilities/getUrlHelpers/getMostReadUrls",
        "resolvedPath": "src\\app\\lib\\utilities\\getUrlHelpers\\getMostReadUrls\\index.js"
      },
      {
        "source": "../../../support/helpers/getAppEnv",
        "resolvedPath": "cypress\\support\\helpers\\getAppEnv.js"
      },
      {
        "source": "../../../support/helpers/ampOnlyServices",
        "resolvedPath": "cypress\\support\\helpers\\ampOnlyServices.js"
      }
    ]
  },
  "cypress\\e2e\\pages\\mostReadPage\\tests.js": {
    "incomingDependencies": [
      "cypress\\e2e\\pages\\mostReadPage\\index.cy.js"
    ],
    "outgoingDependencies": [
      {
        "source": "./mostReadAssertions",
        "resolvedPath": "cypress\\e2e\\pages\\mostReadPage\\mostReadAssertions.js"
      }
    ]
  },
  "cypress\\e2e\\pages\\mostReadPage\\testsForCanonicalOnly.js": {
    "incomingDependencies": [
      "cypress\\e2e\\pages\\mostReadPage\\index.cy.js"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../support/config/envs",
        "resolvedPath": "cypress\\support\\config\\envs.js"
      }
    ]
  },
  "cypress\\e2e\\pages\\onDemandAudio\\index.cy.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../../../support/config/services",
        "resolvedPath": "cypress\\support\\config\\services.js"
      },
      {
        "source": "../../../support/helpers/getPaths",
        "resolvedPath": "cypress\\support\\helpers\\getPaths\\index.js"
      },
      {
        "source": "../../../support/helpers/serviceHasPageType",
        "resolvedPath": "cypress\\support\\helpers\\serviceHasPageType.js"
      },
      {
        "source": "./tests",
        "resolvedPath": "cypress\\e2e\\pages\\onDemandAudio\\tests.js"
      },
      {
        "source": "../../../support/helpers/visitPage",
        "resolvedPath": "cypress\\support\\helpers\\visitPage.js"
      },
      {
        "source": "../../../support/helpers/onDemandRadioTv",
        "resolvedPath": "cypress\\support\\helpers\\onDemandRadioTv.js"
      }
    ]
  },
  "cypress\\e2e\\pages\\onDemandAudio\\tests.js": {
    "incomingDependencies": [
      "cypress\\e2e\\pages\\onDemandAudio\\index.cy.js"
    ],
    "outgoingDependencies": [
      {
        "source": "ramda/src/path",
        "resolvedPath": "ramda/src/path"
      },
      {
        "source": "../../../support/helpers/onDemandRadioTv",
        "resolvedPath": "cypress\\support\\helpers\\onDemandRadioTv.js"
      },
      {
        "source": "../../../support/config/envs",
        "resolvedPath": "cypress\\support\\config\\envs.js"
      },
      {
        "source": "../../../support/helpers/getDataUrl",
        "resolvedPath": "cypress\\support\\helpers\\getDataUrl\\index.js"
      },
      {
        "source": "../../../../src/app/routes/utils/processRecentEpisodes",
        "resolvedPath": "src\\app\\routes\\utils\\processRecentEpisodes\\index.jsx"
      },
      {
        "source": "../../../../src/app/legacy/containers/RadioSchedule/utilities/evaluateScheduleData",
        "resolvedPath": "src\\app\\legacy\\containers\\RadioSchedule\\utilities\\evaluateScheduleData.js"
      }
    ]
  },
  "cypress\\e2e\\pages\\onDemandTV\\index.cy.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../../../support/config/services",
        "resolvedPath": "cypress\\support\\config\\services.js"
      },
      {
        "source": "../../../support/helpers/getPaths",
        "resolvedPath": "cypress\\support\\helpers\\getPaths\\index.js"
      },
      {
        "source": "../../../support/helpers/serviceHasPageType",
        "resolvedPath": "cypress\\support\\helpers\\serviceHasPageType.js"
      },
      {
        "source": "./tests",
        "resolvedPath": "cypress\\e2e\\pages\\onDemandTV\\tests.js"
      },
      {
        "source": "../../../support/helpers/visitPage",
        "resolvedPath": "cypress\\support\\helpers\\visitPage.js"
      },
      {
        "source": "../../../support/helpers/onDemandRadioTv",
        "resolvedPath": "cypress\\support\\helpers\\onDemandRadioTv.js"
      }
    ]
  },
  "cypress\\e2e\\pages\\onDemandTV\\tests.js": {
    "incomingDependencies": [
      "cypress\\e2e\\pages\\onDemandTV\\index.cy.js"
    ],
    "outgoingDependencies": [
      {
        "source": "ramda/src/path",
        "resolvedPath": "ramda/src/path"
      },
      {
        "source": "../../../support/config/envs",
        "resolvedPath": "cypress\\support\\config\\envs.js"
      },
      {
        "source": "../../../support/helpers/onDemandRadioTv",
        "resolvedPath": "cypress\\support\\helpers\\onDemandRadioTv.js"
      },
      {
        "source": "../../../support/helpers/getDataUrl",
        "resolvedPath": "cypress\\support\\helpers\\getDataUrl\\index.js"
      },
      {
        "source": "../../../../src/app/routes/utils/processRecentEpisodes",
        "resolvedPath": "src\\app\\routes\\utils\\processRecentEpisodes\\index.jsx"
      }
    ]
  },
  "cypress\\e2e\\pages\\photoGalleryPage\\index.cy.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../../../support/helpers/runTestsForPage",
        "resolvedPath": "cypress\\support\\helpers\\runTestsForPage.js"
      },
      {
        "source": "./tests",
        "resolvedPath": "cypress\\e2e\\pages\\photoGalleryPage\\tests.js"
      }
    ]
  },
  "cypress\\e2e\\pages\\photoGalleryPage\\tests.js": {
    "incomingDependencies": [
      "cypress\\e2e\\pages\\photoGalleryPage\\index.cy.js"
    ],
    "outgoingDependencies": []
  },
  "cypress\\e2e\\pages\\storyPage\\index.cy.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../../../support/helpers/runTestsForPage",
        "resolvedPath": "cypress\\support\\helpers\\runTestsForPage.js"
      },
      {
        "source": "./tests",
        "resolvedPath": "cypress\\e2e\\pages\\storyPage\\tests.js"
      },
      {
        "source": "./testsForAMPOnly",
        "resolvedPath": "cypress\\e2e\\pages\\storyPage\\testsForAMPOnly.js"
      },
      {
        "source": "./testsForCanonicalOnly",
        "resolvedPath": "cypress\\e2e\\pages\\storyPage\\testsForCanonicalOnly.js"
      }
    ]
  },
  "cypress\\e2e\\pages\\storyPage\\tests.js": {
    "incomingDependencies": [
      "cypress\\e2e\\pages\\storyPage\\index.cy.js"
    ],
    "outgoingDependencies": [
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "ramda/src/path",
        "resolvedPath": "ramda/src/path"
      },
      {
        "source": "ramda/src/paths",
        "resolvedPath": "ramda/src/paths"
      },
      {
        "source": "../../../support/helpers/getDataUrl",
        "resolvedPath": "cypress\\support\\helpers\\getDataUrl\\index.js"
      },
      {
        "source": "../mostReadPage/mostReadAssertions",
        "resolvedPath": "cypress\\e2e\\pages\\mostReadPage\\mostReadAssertions.js"
      },
      {
        "source": "../../../support/helpers/getAppEnv",
        "resolvedPath": "cypress\\support\\helpers\\getAppEnv.js"
      }
    ]
  },
  "cypress\\e2e\\pages\\storyPage\\testsForAMPOnly.js": {
    "incomingDependencies": [
      "cypress\\e2e\\pages\\storyPage\\index.cy.js"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../support/helpers/adsTests/testsForAMPOnly",
        "resolvedPath": "cypress\\support\\helpers\\adsTests\\testsForAMPOnly.js"
      },
      {
        "source": "../mostReadPage/mostReadAssertions",
        "resolvedPath": "cypress\\e2e\\pages\\mostReadPage\\mostReadAssertions.js"
      }
    ]
  },
  "cypress\\e2e\\pages\\storyPage\\testsForCanonicalOnly.js": {
    "incomingDependencies": [
      "cypress\\e2e\\pages\\storyPage\\index.cy.js"
    ],
    "outgoingDependencies": [
      {
        "source": "ramda/src/path",
        "resolvedPath": "ramda/src/path"
      },
      {
        "source": "../../../support/helpers/adsTests/testsForCanonicalOnly",
        "resolvedPath": "cypress\\support\\helpers\\adsTests\\testsForCanonicalOnly.js"
      }
    ]
  },
  "cypress\\e2e\\pages\\testsForAllAMPPages.js": {
    "incomingDependencies": [
      "cypress\\support\\helpers\\runTestsForPage.js"
    ],
    "outgoingDependencies": [
      {
        "source": "../../support/config/services",
        "resolvedPath": "cypress\\support\\config\\services.js"
      }
    ]
  },
  "cypress\\e2e\\pages\\testsForAllCanonicalPages.js": {
    "incomingDependencies": [
      "cypress\\support\\helpers\\runTestsForPage.js"
    ],
    "outgoingDependencies": [
      {
        "source": "../../support/config/envs",
        "resolvedPath": "cypress\\support\\config\\envs.js"
      },
      {
        "source": "../../support/config/services",
        "resolvedPath": "cypress\\support\\config\\services.js"
      }
    ]
  },
  "cypress\\e2e\\pages\\testsForAllPages.js": {
    "incomingDependencies": [
      "cypress\\support\\helpers\\runTestsForPage.js"
    ],
    "outgoingDependencies": [
      {
        "source": "../../support/helpers/topicTagsTest",
        "resolvedPath": "cypress\\support\\helpers\\topicTagsTest.js"
      },
      {
        "source": "../../support/helpers/checkA11y",
        "resolvedPath": "cypress\\support\\helpers\\checkA11y.js"
      }
    ]
  },
  "cypress\\e2e\\pages\\topicPage\\helpers.js": {
    "incomingDependencies": [
      "cypress\\e2e\\application\\index.js",
      "cypress\\e2e\\pages\\topicPage\\index.cy.js"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../support/config/envs",
        "resolvedPath": "cypress\\support\\config\\envs.js"
      },
      {
        "source": "../../../support/helpers/getAppEnv",
        "resolvedPath": "cypress\\support\\helpers\\getAppEnv.js"
      }
    ]
  },
  "cypress\\e2e\\pages\\topicPage\\index.cy.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../../../support/config/services",
        "resolvedPath": "cypress\\support\\config\\services.js"
      },
      {
        "source": "../../../support/helpers/getPaths",
        "resolvedPath": "cypress\\support\\helpers\\getPaths\\index.js"
      },
      {
        "source": "../../../support/helpers/serviceHasPageType",
        "resolvedPath": "cypress\\support\\helpers\\serviceHasPageType.js"
      },
      {
        "source": "./tests",
        "resolvedPath": "cypress\\e2e\\pages\\topicPage\\tests.js"
      },
      {
        "source": "../../../support/helpers/visitPage",
        "resolvedPath": "cypress\\support\\helpers\\visitPage.js"
      },
      {
        "source": "./helpers",
        "resolvedPath": "cypress\\e2e\\pages\\topicPage\\helpers.js"
      }
    ]
  },
  "cypress\\e2e\\pages\\topicPage\\tests.js": {
    "incomingDependencies": [
      "cypress\\e2e\\pages\\topicPage\\index.cy.js"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../../src/app/lib/utilities/idSanitiser",
        "resolvedPath": "src\\app\\lib\\utilities\\idSanitiser\\index.js"
      }
    ]
  },
  "cypress\\e2e\\specialFeatures\\cookieBanner\\index.cy.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "ramda/src/path",
        "resolvedPath": "ramda/src/path"
      },
      {
        "source": "../../../support/config/services",
        "resolvedPath": "cypress\\support\\config\\services.js"
      },
      {
        "source": "../../../support/helpers/describeForEuOnly",
        "resolvedPath": "cypress\\support\\helpers\\describeForEuOnly.js"
      },
      {
        "source": "../../../support/helpers/visitPage",
        "resolvedPath": "cypress\\support\\helpers\\visitPage.js"
      },
      {
        "source": "../../../support/helpers/getAppEnv",
        "resolvedPath": "cypress\\support\\helpers\\getAppEnv.js"
      },
      {
        "source": "./testsForCanonicalOnly",
        "resolvedPath": "cypress\\e2e\\specialFeatures\\cookieBanner\\testsForCanonicalOnly.js"
      },
      {
        "source": "./testsForAMPOnly",
        "resolvedPath": "cypress\\e2e\\specialFeatures\\cookieBanner\\testsForAMPOnly.js"
      }
    ]
  },
  "cypress\\e2e\\specialFeatures\\cookieBanner\\testsForAMPOnly.js": {
    "incomingDependencies": [
      "cypress\\e2e\\specialFeatures\\cookieBanner\\index.cy.js"
    ],
    "outgoingDependencies": [
      {
        "source": "../utilities/cookiePrivacyBanner",
        "resolvedPath": "cypress\\e2e\\specialFeatures\\utilities\\cookiePrivacyBanner\\index.js"
      },
      {
        "source": "../../../support/helpers/visitPage",
        "resolvedPath": "cypress\\support\\helpers\\visitPage.js"
      }
    ]
  },
  "cypress\\e2e\\specialFeatures\\cookieBanner\\testsForCanonicalOnly.js": {
    "incomingDependencies": [
      "cypress\\e2e\\specialFeatures\\cookieBanner\\index.cy.js"
    ],
    "outgoingDependencies": [
      {
        "source": "../utilities/cookiePrivacyBanner",
        "resolvedPath": "cypress\\e2e\\specialFeatures\\utilities\\cookiePrivacyBanner\\index.js"
      },
      {
        "source": "../../../support/helpers/visitPage",
        "resolvedPath": "cypress\\support\\helpers\\visitPage.js"
      }
    ]
  },
  "cypress\\e2e\\specialFeatures\\prerollAds\\config.js": {
    "incomingDependencies": [
      "cypress\\e2e\\specialFeatures\\prerollAds\\index.cy.js"
    ],
    "outgoingDependencies": []
  },
  "cypress\\e2e\\specialFeatures\\prerollAds\\index.cy.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "ramda/src/path",
        "resolvedPath": "ramda/src/path"
      },
      {
        "source": "../../../support/helpers/getAppEnv",
        "resolvedPath": "cypress\\support\\helpers\\getAppEnv.js"
      },
      {
        "source": "./config",
        "resolvedPath": "cypress\\e2e\\specialFeatures\\prerollAds\\config.js"
      }
    ]
  },
  "cypress\\e2e\\specialFeatures\\scriptSwitching\\index.cy.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../../../support/config/services",
        "resolvedPath": "cypress\\support\\config\\services.js"
      },
      {
        "source": "../../../../src/server/utilities/serviceConfigs",
        "resolvedPath": "src\\server\\utilities\\serviceConfigs\\index.ts"
      },
      {
        "source": "../../../support/helpers/getPaths",
        "resolvedPath": "cypress\\support\\helpers\\getPaths\\index.js"
      },
      {
        "source": "../../../support/helpers/serviceHasPageType",
        "resolvedPath": "cypress\\support\\helpers\\serviceHasPageType.js"
      },
      {
        "source": "./testsForCanonicalOnly",
        "resolvedPath": "cypress\\e2e\\specialFeatures\\scriptSwitching\\testsForCanonicalOnly.js"
      },
      {
        "source": "./testsForAMPOnly",
        "resolvedPath": "cypress\\e2e\\specialFeatures\\scriptSwitching\\testsForAMPOnly.js"
      }
    ]
  },
  "cypress\\e2e\\specialFeatures\\scriptSwitching\\testsForAMPOnly.js": {
    "incomingDependencies": [
      "cypress\\e2e\\specialFeatures\\scriptSwitching\\index.cy.js"
    ],
    "outgoingDependencies": []
  },
  "cypress\\e2e\\specialFeatures\\scriptSwitching\\testsForCanonicalOnly.js": {
    "incomingDependencies": [
      "cypress\\e2e\\specialFeatures\\scriptSwitching\\index.cy.js"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../support/helpers/visitPage",
        "resolvedPath": "cypress\\support\\helpers\\visitPage.js"
      },
      {
        "source": "../utilities/scriptSwitchingJourneyAssertions",
        "resolvedPath": "cypress\\e2e\\specialFeatures\\utilities\\scriptSwitchingJourneyAssertions\\index.js"
      },
      {
        "source": "../utilities/scriptSwitchingJourneyActions",
        "resolvedPath": "cypress\\e2e\\specialFeatures\\utilities\\scriptSwitchingJourneyActions\\index.js"
      },
      {
        "source": "../utilities/cookiePrivacyBanner",
        "resolvedPath": "cypress\\e2e\\specialFeatures\\utilities\\cookiePrivacyBanner\\index.js"
      }
    ]
  },
  "cypress\\e2e\\specialFeatures\\utilities\\cookiePrivacyBanner\\index.js": {
    "incomingDependencies": [
      "cypress\\e2e\\specialFeatures\\cookieBanner\\testsForAMPOnly.js",
      "cypress\\e2e\\specialFeatures\\cookieBanner\\testsForCanonicalOnly.js",
      "cypress\\e2e\\specialFeatures\\scriptSwitching\\testsForCanonicalOnly.js"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../../../src/server/utilities/serviceConfigs",
        "resolvedPath": "src\\server\\utilities\\serviceConfigs\\index.ts"
      },
      {
        "source": "../../../../support/config/services",
        "resolvedPath": "cypress\\support\\config\\services.js"
      }
    ]
  },
  "cypress\\e2e\\specialFeatures\\utilities\\onDemandRadioJourneyActions\\index.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "cypress\\e2e\\specialFeatures\\utilities\\scriptSwitchingJourneyActions\\index.js": {
    "incomingDependencies": [
      "cypress\\e2e\\specialFeatures\\scriptSwitching\\testsForCanonicalOnly.js"
    ],
    "outgoingDependencies": []
  },
  "cypress\\e2e\\specialFeatures\\utilities\\scriptSwitchingJourneyAssertions\\index.js": {
    "incomingDependencies": [
      "cypress\\e2e\\specialFeatures\\scriptSwitching\\testsForCanonicalOnly.js"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../../../src/server/utilities/serviceConfigs/index",
        "resolvedPath": "src\\server\\utilities\\serviceConfigs\\index.ts"
      }
    ]
  },
  "cypress\\support\\commands\\analytics.js": {
    "incomingDependencies": [
      "cypress\\support\\commands\\index.js"
    ],
    "outgoingDependencies": []
  },
  "cypress\\support\\commands\\application.js": {
    "incomingDependencies": [
      "cypress\\support\\commands\\index.js",
      "ws-nextjs-app\\cypress\\support\\commands.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../config/services",
        "resolvedPath": "cypress\\support\\config\\services.js"
      }
    ]
  },
  "cypress\\support\\commands\\index.js": {
    "incomingDependencies": [
      "cypress\\support\\e2e.js"
    ],
    "outgoingDependencies": [
      {
        "source": "./application",
        "resolvedPath": "cypress\\support\\commands\\application.js"
      },
      {
        "source": "./analytics",
        "resolvedPath": "cypress\\support\\commands\\analytics.js"
      },
      {
        "source": "./toggles",
        "resolvedPath": "cypress\\support\\commands\\toggles.js"
      }
    ]
  },
  "cypress\\support\\commands\\toggles.js": {
    "incomingDependencies": [
      "cypress\\support\\commands\\index.js"
    ],
    "outgoingDependencies": [
      {
        "source": "ramda/src/memoizeWith",
        "resolvedPath": "ramda/src/memoizeWith"
      },
      {
        "source": "ramda/src/identity",
        "resolvedPath": "ramda/src/identity"
      },
      {
        "source": "../config/envs",
        "resolvedPath": "cypress\\support\\config\\envs.js"
      }
    ]
  },
  "cypress\\support\\config\\envs.js": {
    "incomingDependencies": [
      "cypress\\e2e\\application\\index.js",
      "cypress\\e2e\\pages\\articles\\helpers.js",
      "cypress\\e2e\\pages\\articles\\testsForCanonicalOnly.js",
      "cypress\\e2e\\pages\\errorPage404\\tests.js",
      "cypress\\e2e\\pages\\liveRadio\\tests.js",
      "cypress\\e2e\\pages\\mediaAssetPage\\helpers.js",
      "cypress\\e2e\\pages\\mediaAssetPage\\testsForCanonicalOnly.js",
      "cypress\\e2e\\pages\\mostReadPage\\index.cy.js",
      "cypress\\e2e\\pages\\mostReadPage\\testsForCanonicalOnly.js",
      "cypress\\e2e\\pages\\onDemandAudio\\tests.js",
      "cypress\\e2e\\pages\\onDemandTV\\tests.js",
      "cypress\\e2e\\pages\\testsForAllCanonicalPages.js",
      "cypress\\e2e\\pages\\topicPage\\helpers.js",
      "cypress\\support\\commands\\toggles.js",
      "cypress\\support\\helpers\\adsTests\\testsForCanonicalOnly.js",
      "cypress\\support\\helpers\\getEmbedUrl.js",
      "cypress\\support\\helpers\\onDemandRadioTv.js"
    ],
    "outgoingDependencies": []
  },
  "cypress\\support\\config\\services.js": {
    "incomingDependencies": [
      "cypress\\e2e\\application\\index.js",
      "cypress\\e2e\\pages\\articles\\tests.js",
      "cypress\\e2e\\pages\\errorPage404\\tests.js",
      "cypress\\e2e\\pages\\liveRadio\\index.cy.js",
      "cypress\\e2e\\pages\\liveRadio\\tests.js",
      "cypress\\e2e\\pages\\mediaAssetPage\\testsForAMPOnly.js",
      "cypress\\e2e\\pages\\mostReadPage\\index.cy.js",
      "cypress\\e2e\\pages\\mostReadPage\\mostReadAssertions.js",
      "cypress\\e2e\\pages\\onDemandAudio\\index.cy.js",
      "cypress\\e2e\\pages\\onDemandTV\\index.cy.js",
      "cypress\\e2e\\pages\\testsForAllAMPPages.js",
      "cypress\\e2e\\pages\\testsForAllCanonicalPages.js",
      "cypress\\e2e\\pages\\topicPage\\index.cy.js",
      "cypress\\e2e\\specialFeatures\\cookieBanner\\index.cy.js",
      "cypress\\e2e\\specialFeatures\\scriptSwitching\\index.cy.js",
      "cypress\\e2e\\specialFeatures\\utilities\\cookiePrivacyBanner\\index.js",
      "cypress\\support\\commands\\application.js",
      "cypress\\support\\helpers\\adsTests\\testsForAMPOnly.js",
      "cypress\\support\\helpers\\adsTests\\testsForCanonicalOnly.js",
      "cypress\\support\\helpers\\getPaths\\index.js",
      "cypress\\support\\helpers\\runTestsForPage.js",
      "cypress\\support\\helpers\\shouldSmokeTest\\index.js",
      "cypress\\support\\helpers\\shouldSmokeTest\\index.test.js"
    ],
    "outgoingDependencies": []
  },
  "cypress\\support\\config\\settings.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "cypress\\support\\e2e.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "cypress-axe",
        "resolvedPath": "cypress-axe"
      },
      {
        "source": "./commands",
        "resolvedPath": "cypress\\support\\commands\\index.js"
      }
    ]
  },
  "cypress\\support\\helpers\\adsTests\\testsForAMPOnly.js": {
    "incomingDependencies": [
      "cypress\\e2e\\pages\\featureIndexPage\\testsForAMPOnly.js",
      "cypress\\e2e\\pages\\frontPage\\testsForAMPOnly.js",
      "cypress\\e2e\\pages\\homePage\\testsForAMPOnly.js",
      "cypress\\e2e\\pages\\storyPage\\testsForAMPOnly.js"
    ],
    "outgoingDependencies": [
      {
        "source": "ramda/src/path",
        "resolvedPath": "ramda/src/path"
      },
      {
        "source": "../../config/services",
        "resolvedPath": "cypress\\support\\config\\services.js"
      }
    ]
  },
  "cypress\\support\\helpers\\adsTests\\testsForCanonicalOnly.js": {
    "incomingDependencies": [
      "cypress\\e2e\\pages\\featureIndexPage\\testsForCanonicalOnly.js",
      "cypress\\e2e\\pages\\frontPage\\testsForCanonicalOnly.js",
      "cypress\\e2e\\pages\\homePage\\testsForCanonicalOnly.js",
      "cypress\\e2e\\pages\\storyPage\\testsForCanonicalOnly.js"
    ],
    "outgoingDependencies": [
      {
        "source": "ramda/src/path",
        "resolvedPath": "ramda/src/path"
      },
      {
        "source": "../../config/services",
        "resolvedPath": "cypress\\support\\config\\services.js"
      },
      {
        "source": "../../config/envs",
        "resolvedPath": "cypress\\support\\config\\envs.js"
      }
    ]
  },
  "cypress\\support\\helpers\\ampOnlyServices.js": {
    "incomingDependencies": [
      "cypress\\e2e\\application\\index.js",
      "cypress\\e2e\\pages\\mostReadPage\\mostReadAssertions.js",
      "cypress\\support\\helpers\\runTestsForPage.js"
    ],
    "outgoingDependencies": []
  },
  "cypress\\support\\helpers\\checkA11y.js": {
    "incomingDependencies": [
      "cypress\\e2e\\pages\\testsForAllPages.js",
      "ws-nextjs-app\\cypress\\e2e\\testsForAllPages.ts"
    ],
    "outgoingDependencies": []
  },
  "cypress\\support\\helpers\\describeForEuOnly.js": {
    "incomingDependencies": [
      "cypress\\e2e\\specialFeatures\\cookieBanner\\index.cy.js"
    ],
    "outgoingDependencies": []
  },
  "cypress\\support\\helpers\\getAmpUrl\\index.js": {
    "incomingDependencies": [
      "cypress\\support\\helpers\\runTestsForPage.js"
    ],
    "outgoingDependencies": [
      {
        "source": "url-parse",
        "resolvedPath": "url-parse"
      }
    ]
  },
  "cypress\\support\\helpers\\getAmpUrl\\index.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "cypress\\support\\helpers\\getAppEnv.js": {
    "incomingDependencies": [
      "AdHocCypress\\cypress\\integration\\topcat2MediaPlayback\\index.js",
      "cypress\\e2e\\pages\\homePage\\index.cy.js",
      "cypress\\e2e\\pages\\homePage\\testsForAMPOnly.js",
      "cypress\\e2e\\pages\\homePage\\testsForCanonicalOnly.js",
      "cypress\\e2e\\pages\\mostReadPage\\index.cy.js",
      "cypress\\e2e\\pages\\mostReadPage\\mostReadAssertions.js",
      "cypress\\e2e\\pages\\storyPage\\tests.js",
      "cypress\\e2e\\pages\\topicPage\\helpers.js",
      "cypress\\e2e\\specialFeatures\\cookieBanner\\index.cy.js",
      "cypress\\e2e\\specialFeatures\\prerollAds\\index.cy.js",
      "cypress\\support\\helpers\\getPaths\\index.js"
    ],
    "outgoingDependencies": []
  },
  "cypress\\support\\helpers\\getDataUrl\\index.js": {
    "incomingDependencies": [
      "cypress\\e2e\\pages\\onDemandAudio\\tests.js",
      "cypress\\e2e\\pages\\onDemandTV\\tests.js",
      "cypress\\e2e\\pages\\storyPage\\tests.js"
    ],
    "outgoingDependencies": [
      {
        "source": "url-parse",
        "resolvedPath": "url-parse"
      }
    ]
  },
  "cypress\\support\\helpers\\getDataUrl\\index.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "cypress\\support\\helpers\\getEmbedUrl.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../config/envs",
        "resolvedPath": "cypress\\support\\config\\envs.js"
      }
    ]
  },
  "cypress\\support\\helpers\\getPageUrls.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "cypress\\support\\helpers\\getPaths\\index.js": {
    "incomingDependencies": [
      "cypress\\e2e\\application\\index.js",
      "cypress\\e2e\\pages\\errorPage404\\getErrorPath.js",
      "cypress\\e2e\\pages\\liveRadio\\index.cy.js",
      "cypress\\e2e\\pages\\onDemandAudio\\index.cy.js",
      "cypress\\e2e\\pages\\onDemandTV\\index.cy.js",
      "cypress\\e2e\\pages\\topicPage\\index.cy.js",
      "cypress\\e2e\\specialFeatures\\scriptSwitching\\index.cy.js",
      "cypress\\support\\helpers\\runTestsForPage.js",
      "cypress\\support\\helpers\\serviceHasPageType.js",
      "puppeteer\\bundleRequests.test.js"
    ],
    "outgoingDependencies": [
      {
        "source": "../../config/services",
        "resolvedPath": "cypress\\support\\config\\services.js"
      },
      {
        "source": "../getAppEnv",
        "resolvedPath": "cypress\\support\\helpers\\getAppEnv.js"
      }
    ]
  },
  "cypress\\support\\helpers\\getPaths\\index.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "cypress\\support\\helpers\\onDemandRadioTv.js": {
    "incomingDependencies": [
      "cypress\\e2e\\pages\\liveRadio\\index.cy.js",
      "cypress\\e2e\\pages\\onDemandAudio\\index.cy.js",
      "cypress\\e2e\\pages\\onDemandAudio\\tests.js",
      "cypress\\e2e\\pages\\onDemandTV\\index.cy.js",
      "cypress\\e2e\\pages\\onDemandTV\\tests.js"
    ],
    "outgoingDependencies": [
      {
        "source": "ramda/src/path",
        "resolvedPath": "ramda/src/path"
      },
      {
        "source": "../config/envs",
        "resolvedPath": "cypress\\support\\config\\envs.js"
      }
    ]
  },
  "cypress\\support\\helpers\\runTestsForPage.js": {
    "incomingDependencies": [
      "cypress\\e2e\\123PlaygroundForTests\\index.js",
      "cypress\\e2e\\pages\\articles\\index.cy.js",
      "cypress\\e2e\\pages\\errorPage404\\index.cy.js",
      "cypress\\e2e\\pages\\featureIndexPage\\index.cy.js",
      "cypress\\e2e\\pages\\frontPage\\index.cy.js",
      "cypress\\e2e\\pages\\mediaAssetPage\\index.cy.js",
      "cypress\\e2e\\pages\\photoGalleryPage\\index.cy.js",
      "cypress\\e2e\\pages\\storyPage\\index.cy.js"
    ],
    "outgoingDependencies": [
      {
        "source": "../config/services",
        "resolvedPath": "cypress\\support\\config\\services.js"
      },
      {
        "source": "./shouldSmokeTest",
        "resolvedPath": "cypress\\support\\helpers\\shouldSmokeTest\\index.js"
      },
      {
        "source": "../../e2e/pages/testsForAllPages",
        "resolvedPath": "cypress\\e2e\\pages\\testsForAllPages.js"
      },
      {
        "source": "../../e2e/pages/testsForAllAMPPages",
        "resolvedPath": "cypress\\e2e\\pages\\testsForAllAMPPages.js"
      },
      {
        "source": "../../e2e/pages/testsForAllCanonicalPages",
        "resolvedPath": "cypress\\e2e\\pages\\testsForAllCanonicalPages.js"
      },
      {
        "source": "./getPaths",
        "resolvedPath": "cypress\\support\\helpers\\getPaths\\index.js"
      },
      {
        "source": "./serviceHasPageType",
        "resolvedPath": "cypress\\support\\helpers\\serviceHasPageType.js"
      },
      {
        "source": "./ampOnlyServices",
        "resolvedPath": "cypress\\support\\helpers\\ampOnlyServices.js"
      },
      {
        "source": "./visitPage",
        "resolvedPath": "cypress\\support\\helpers\\visitPage.js"
      },
      {
        "source": "./getAmpUrl",
        "resolvedPath": "cypress\\support\\helpers\\getAmpUrl\\index.js"
      }
    ]
  },
  "cypress\\support\\helpers\\serviceHasPageType.js": {
    "incomingDependencies": [
      "cypress\\e2e\\application\\index.js",
      "cypress\\e2e\\pages\\liveRadio\\index.cy.js",
      "cypress\\e2e\\pages\\onDemandAudio\\index.cy.js",
      "cypress\\e2e\\pages\\onDemandTV\\index.cy.js",
      "cypress\\e2e\\pages\\topicPage\\index.cy.js",
      "cypress\\e2e\\specialFeatures\\scriptSwitching\\index.cy.js",
      "cypress\\support\\helpers\\runTestsForPage.js",
      "puppeteer\\bundleRequests.test.js"
    ],
    "outgoingDependencies": [
      {
        "source": "./getPaths",
        "resolvedPath": "cypress\\support\\helpers\\getPaths\\index.js"
      }
    ]
  },
  "cypress\\support\\helpers\\shouldSmokeTest\\index.js": {
    "incomingDependencies": [
      "cypress\\support\\helpers\\runTestsForPage.js",
      "cypress\\support\\helpers\\shouldSmokeTest\\index.test.js",
      "puppeteer\\bundleRequests.test.js"
    ],
    "outgoingDependencies": [
      {
        "source": "ramda/src/path",
        "resolvedPath": "ramda/src/path"
      },
      {
        "source": "../../config/services",
        "resolvedPath": "cypress\\support\\config\\services.js"
      }
    ]
  },
  "cypress\\support\\helpers\\shouldSmokeTest\\index.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../../config/services",
        "resolvedPath": "cypress\\support\\config\\services.js"
      },
      {
        "source": "./index",
        "resolvedPath": "cypress\\support\\helpers\\shouldSmokeTest\\index.js"
      }
    ]
  },
  "cypress\\support\\helpers\\topicTagsTest.js": {
    "incomingDependencies": [
      "cypress\\e2e\\pages\\testsForAllPages.js"
    ],
    "outgoingDependencies": []
  },
  "cypress\\support\\helpers\\useAppToggles.js": {
    "incomingDependencies": [
      "cypress\\e2e\\pages\\articles\\testsForCanonicalOnly.js",
      "cypress\\e2e\\pages\\mediaAssetPage\\testsForCanonicalOnly.js"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../src/app/lib/config/toggles",
        "resolvedPath": "src\\app\\lib\\config\\toggles\\index.js"
      }
    ]
  },
  "cypress\\support\\helpers\\visitPage.js": {
    "incomingDependencies": [
      "cypress\\e2e\\pages\\homePage\\index.cy.js",
      "cypress\\e2e\\pages\\liveRadio\\index.cy.js",
      "cypress\\e2e\\pages\\mostReadPage\\index.cy.js",
      "cypress\\e2e\\pages\\onDemandAudio\\index.cy.js",
      "cypress\\e2e\\pages\\onDemandTV\\index.cy.js",
      "cypress\\e2e\\pages\\topicPage\\index.cy.js",
      "cypress\\e2e\\specialFeatures\\cookieBanner\\index.cy.js",
      "cypress\\e2e\\specialFeatures\\cookieBanner\\testsForAMPOnly.js",
      "cypress\\e2e\\specialFeatures\\cookieBanner\\testsForCanonicalOnly.js",
      "cypress\\e2e\\specialFeatures\\scriptSwitching\\testsForCanonicalOnly.js",
      "cypress\\support\\helpers\\runTestsForPage.js"
    ],
    "outgoingDependencies": []
  },
  "cypress.config.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "cypress",
        "resolvedPath": "cypress"
      },
      {
        "source": "@cypress/webpack-preprocessor",
        "resolvedPath": "@cypress/webpack-preprocessor"
      },
      {
        "source": "fs",
        "resolvedPath": "fs"
      },
      {
        "source": "path",
        "resolvedPath": "path"
      },
      {
        "source": "./src/app/legacy/psammead/moment-timezone-include/src",
        "resolvedPath": "src\\app\\legacy\\psammead\\moment-timezone-include\\src\\index.js"
      },
      {
        "source": "./dirAlias",
        "resolvedPath": "dirAlias.js"
      }
    ]
  },
  "dirAlias.js": {
    "incomingDependencies": [
      ".storybook\\main.ts",
      "cypress.config.ts"
    ],
    "outgoingDependencies": []
  },
  "docs\\User-Experience\\colours.tsx": {
    "incomingDependencies": [
      ".storybook\\StorybookComponents\\ColorList\\index.stories.tsx",
      ".storybook\\StorybookComponents\\ColorList\\index.test.tsx"
    ],
    "outgoingDependencies": []
  },
  "jest.config.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "lighthouse\\lighthouserc.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "public\\static\\js\\comscore\\main-1.0.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "public\\sw.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "public\\vendor\\cwr.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "puppeteer\\bundleRequests.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "puppeteer",
        "resolvedPath": "puppeteer"
      },
      {
        "source": "#testHelpers/config",
        "resolvedPath": "#testHelpers/config"
      },
      {
        "source": "../cypress/support/helpers/shouldSmokeTest",
        "resolvedPath": "cypress\\support\\helpers\\shouldSmokeTest\\index.js"
      },
      {
        "source": "../cypress/support/helpers/serviceHasPageType",
        "resolvedPath": "cypress\\support\\helpers\\serviceHasPageType.js"
      },
      {
        "source": "../cypress/support/helpers/getPaths",
        "resolvedPath": "cypress\\support\\helpers\\getPaths\\index.js"
      }
    ]
  },
  "scripts\\ampHtmlValidator\\cli.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "scripts\\ampHtmlValidator\\index.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "scripts\\ampHtmlValidator\\index.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "scripts\\bundleSize\\bundleSize.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "strip-ansi",
        "resolvedPath": "strip-ansi"
      },
      {
        "source": "@jest/globals",
        "resolvedPath": "@jest/globals"
      },
      {
        "source": "./__mocks__/pageTypeBundleExtractor.js",
        "resolvedPath": "..\\EXIM\\Work\\iterate-ai\\dep-graph\\__mocks__\\pageTypeBundleExtractor.js"
      }
    ]
  },
  "scripts\\bundleSize\\bundleSizeConfig.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "scripts\\bundleSize\\createConsoleError.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "chalk",
        "resolvedPath": "chalk"
      }
    ]
  },
  "scripts\\bundleSize\\getAverageBundleSize.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "scripts\\bundleSize\\getBundleData.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "fs",
        "resolvedPath": "fs"
      },
      {
        "source": "./pageTypeBundleExtractor.js",
        "resolvedPath": "..\\EXIM\\Work\\iterate-ai\\dep-graph\\pageTypeBundleExtractor.js"
      },
      {
        "source": "./serviceList.js",
        "resolvedPath": "..\\EXIM\\Work\\iterate-ai\\dep-graph\\serviceList.js"
      },
      {
        "source": "./pages.js",
        "resolvedPath": "..\\EXIM\\Work\\iterate-ai\\dep-graph\\pages.js"
      }
    ]
  },
  "scripts\\bundleSize\\getBundleData.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "@jest/globals",
        "resolvedPath": "@jest/globals"
      },
      {
        "source": "./pages.js",
        "resolvedPath": "..\\EXIM\\Work\\iterate-ai\\dep-graph\\pages.js"
      },
      {
        "source": "./__mocks__/pageTypeBundleExtractor.js",
        "resolvedPath": "..\\EXIM\\Work\\iterate-ai\\dep-graph\\__mocks__\\pageTypeBundleExtractor.js"
      }
    ]
  },
  "scripts\\bundleSize\\index.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "chalk",
        "resolvedPath": "chalk"
      },
      {
        "source": "cli-table",
        "resolvedPath": "cli-table"
      },
      {
        "source": "./sortByBundlesTotalAscending.js",
        "resolvedPath": "..\\EXIM\\Work\\iterate-ai\\dep-graph\\sortByBundlesTotalAscending.js"
      },
      {
        "source": "./getAverageBundleSize.js",
        "resolvedPath": "..\\EXIM\\Work\\iterate-ai\\dep-graph\\getAverageBundleSize.js"
      },
      {
        "source": "./createConsoleError.js",
        "resolvedPath": "..\\EXIM\\Work\\iterate-ai\\dep-graph\\createConsoleError.js"
      },
      {
        "source": "./getBundleData.js",
        "resolvedPath": "..\\EXIM\\Work\\iterate-ai\\dep-graph\\getBundleData.js"
      },
      {
        "source": "./bundleSizeConfig.js",
        "resolvedPath": "..\\EXIM\\Work\\iterate-ai\\dep-graph\\bundleSizeConfig.js"
      }
    ]
  },
  "scripts\\bundleSize\\pages.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "scripts\\bundleSize\\pageTypeBundleExtractor.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "fs/promises",
        "resolvedPath": "fs/promises"
      }
    ]
  },
  "scripts\\bundleSize\\pageTypeBundleExtractor.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "@jest/globals",
        "resolvedPath": "@jest/globals"
      }
    ]
  },
  "scripts\\bundleSize\\runBundleSize.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "./index.js",
        "resolvedPath": "..\\EXIM\\Work\\iterate-ai\\dep-graph\\index.js"
      }
    ]
  },
  "scripts\\bundleSize\\serviceList.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "scripts\\bundleSize\\sortByBundlesTotalAscending.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "scripts\\bundleSize\\__mocks__\\pageTypeBundleExtractor.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "scripts\\check-package-manager.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "scripts\\dependencyCheck.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "scripts\\dependencyFreshness.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "scripts\\esmDependencyCheck.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "scripts\\lighthouseBudget.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "scripts\\lighthouseBudget.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "scripts\\lighthouseConfig.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "scripts\\linkeySetup.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "scripts\\linkeyTest.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "node-fetch",
        "resolvedPath": "node-fetch"
      }
    ]
  },
  "scripts\\mostReadAndWatchedCollectionData.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "scripts\\mostReadCollectionTimes.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "scripts\\releaseInfo\\index.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "scripts\\releaseInfo\\launchDates.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\components\\Ad\\Amp\\AdSlot\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../../../react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\Ad\\Amp\\AdSlot\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\Ad\\Amp\\AdSlot\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\Ad\\Amp\\AdSlot\\index.test.tsx",
      "src\\app\\components\\Ad\\Amp\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#lib/utilities/isLive",
        "resolvedPath": "#lib/utilities/isLive"
      },
      {
        "source": "../../../../routes/utils/pageTypes",
        "resolvedPath": "src\\app\\routes\\utils\\pageTypes.ts"
      },
      {
        "source": "../../../../models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global.ts"
      },
      {
        "source": "../../types",
        "resolvedPath": "src\\app\\components\\Ad\\types.ts"
      },
      {
        "source": "../../../ThemeProvider/mediaQueries",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\mediaQueries.ts"
      }
    ]
  },
  "src\\app\\components\\Ad\\Amp\\index.styles.ts": {
    "incomingDependencies": [
      "src\\app\\components\\Ad\\Amp\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      }
    ]
  },
  "src\\app\\components\\Ad\\Amp\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "#contexts/RequestContext"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": "./index",
        "resolvedPath": "src\\app\\components\\Ad\\Amp\\index.tsx"
      },
      {
        "source": "../../react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../../ThemeProvider/fontScripts/latinWithDiacritics",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latinWithDiacritics.ts"
      },
      {
        "source": "../types",
        "resolvedPath": "src\\app\\components\\Ad\\types.ts"
      }
    ]
  },
  "src\\app\\components\\Ad\\Amp\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\Ad\\Amp\\index.test.tsx",
      "src\\app\\components\\Ad\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "react-helmet",
        "resolvedPath": "react-helmet"
      },
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "#contexts/RequestContext"
      },
      {
        "source": "#psammead/psammead-assets/src/amp-boilerplate",
        "resolvedPath": "#psammead/psammead-assets/src/amp-boilerplate"
      },
      {
        "source": "#app/lib/utilities/getEnvConfig",
        "resolvedPath": "#app/lib/utilities/getEnvConfig"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../utilities/getAdsAriaLabel",
        "resolvedPath": "src\\app\\components\\Ad\\utilities\\getAdsAriaLabel\\index.ts"
      },
      {
        "source": "./AdSlot",
        "resolvedPath": "src\\app\\components\\Ad\\Amp\\AdSlot\\index.tsx"
      },
      {
        "source": "../../../models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global.ts"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\components\\Ad\\Amp\\index.styles.ts"
      },
      {
        "source": "../utilities/adSlot.styles",
        "resolvedPath": "src\\app\\components\\Ad\\utilities\\adSlot.styles.ts"
      },
      {
        "source": "../types",
        "resolvedPath": "src\\app\\components\\Ad\\types.ts"
      }
    ]
  },
  "src\\app\\components\\Ad\\Canonical\\AdBootstrapJs\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "react-helmet",
        "resolvedPath": "react-helmet"
      },
      {
        "source": "../../../react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\Ad\\Canonical\\AdBootstrapJs\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\Ad\\Canonical\\AdBootstrapJs\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\Ad\\Canonical\\AdBootstrapJs\\index.test.tsx",
      "src\\app\\components\\Ad\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "react-helmet",
        "resolvedPath": "react-helmet"
      }
    ]
  },
  "src\\app\\components\\Ad\\Canonical\\index.styles.ts": {
    "incomingDependencies": [
      "src\\app\\components\\Ad\\Canonical\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      }
    ]
  },
  "src\\app\\components\\Ad\\Canonical\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "react-router-dom",
        "resolvedPath": "react-router-dom"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "#contexts/RequestContext"
      },
      {
        "source": "#lib/utilities/isLive",
        "resolvedPath": "#lib/utilities/isLive"
      },
      {
        "source": "../../react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\Ad\\Canonical\\index.tsx"
      },
      {
        "source": "../types",
        "resolvedPath": "src\\app\\components\\Ad\\types.ts"
      }
    ]
  },
  "src\\app\\components\\Ad\\Canonical\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\Ad\\Canonical\\index.test.tsx",
      "src\\app\\components\\Ad\\index.tsx",
      "src\\app\\components\\MediaLoader\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "react-helmet",
        "resolvedPath": "react-helmet"
      },
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "#hooks/useLocation",
        "resolvedPath": "#hooks/useLocation"
      },
      {
        "source": "../../../lib/utilities/isLive",
        "resolvedPath": "src\\app\\lib\\utilities\\isLive\\index.js"
      },
      {
        "source": "../../../hooks/useOperaMiniDetection",
        "resolvedPath": "src\\app\\hooks\\useOperaMiniDetection\\index.jsx"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../utilities/getAdsAriaLabel",
        "resolvedPath": "src\\app\\components\\Ad\\utilities\\getAdsAriaLabel\\index.ts"
      },
      {
        "source": "../utilities/adSlot.styles",
        "resolvedPath": "src\\app\\components\\Ad\\utilities\\adSlot.styles.ts"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\components\\Ad\\Canonical\\index.styles.ts"
      },
      {
        "source": "../types",
        "resolvedPath": "src\\app\\components\\Ad\\types.ts"
      }
    ]
  },
  "src\\app\\components\\Ad\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "react-router-dom",
        "resolvedPath": "react-router-dom"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "#contexts/RequestContext"
      },
      {
        "source": "#contexts/ToggleContext",
        "resolvedPath": "#contexts/ToggleContext"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": "react-helmet",
        "resolvedPath": "react-helmet"
      },
      {
        "source": "../react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "../ThemeProvider/fontScripts/latinWithDiacritics",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latinWithDiacritics.ts"
      },
      {
        "source": "../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "./index",
        "resolvedPath": "src\\app\\components\\Ad\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\Ad\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\Ad\\index.test.tsx",
      "src\\app\\components\\Ad\\MPU\\index.tsx",
      "src\\app\\pages\\ArticlePage\\ArticlePage.tsx",
      "src\\app\\pages\\FeatureIdxPage\\FeatureIdxPage.jsx",
      "src\\app\\pages\\FrontPage\\FrontPage.jsx",
      "src\\app\\pages\\HomePage\\HomePage.tsx",
      "src\\app\\pages\\TopicPage\\TopicPage.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#hooks/useToggle",
        "resolvedPath": "#hooks/useToggle"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "#contexts/RequestContext"
      },
      {
        "source": "./Amp",
        "resolvedPath": "src\\app\\components\\Ad\\Amp\\index.tsx"
      },
      {
        "source": "./Canonical",
        "resolvedPath": "src\\app\\components\\Ad\\Canonical\\index.tsx"
      },
      {
        "source": "./types",
        "resolvedPath": "src\\app\\components\\Ad\\types.ts"
      },
      {
        "source": "./Canonical/AdBootstrapJs",
        "resolvedPath": "src\\app\\components\\Ad\\Canonical\\AdBootstrapJs\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\Ad\\MPU\\index.styles.ts": {
    "incomingDependencies": [
      "src\\app\\components\\Ad\\MPU\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      }
    ]
  },
  "src\\app\\components\\Ad\\MPU\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "react-router-dom",
        "resolvedPath": "react-router-dom"
      },
      {
        "source": "../../react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\Ad\\MPU\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\Ad\\MPU\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\Ad\\MPU\\index.test.tsx",
      "src\\app\\pages\\FeatureIdxPage\\FeatureIdxPage.jsx",
      "src\\app\\pages\\FrontPage\\FrontPage.jsx",
      "src\\app\\pages\\HomePage\\HomePage.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "../../../lib/styles.const",
        "resolvedPath": "src\\app\\lib\\styles.const\\index.ts"
      },
      {
        "source": "..",
        "resolvedPath": "src\\app\\components\\Ad\\index.tsx"
      },
      {
        "source": "../types",
        "resolvedPath": "src\\app\\components\\Ad\\types.ts"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\components\\Ad\\MPU\\index.styles.ts"
      }
    ]
  },
  "src\\app\\components\\Ad\\types.ts": {
    "incomingDependencies": [
      "src\\app\\components\\Ad\\Amp\\AdSlot\\index.tsx",
      "src\\app\\components\\Ad\\Amp\\index.test.tsx",
      "src\\app\\components\\Ad\\Amp\\index.tsx",
      "src\\app\\components\\Ad\\Canonical\\index.test.tsx",
      "src\\app\\components\\Ad\\Canonical\\index.tsx",
      "src\\app\\components\\Ad\\index.tsx",
      "src\\app\\components\\Ad\\MPU\\index.tsx",
      "src\\app\\components\\Ad\\utilities\\getAdsAriaLabel\\index.test.ts",
      "src\\app\\components\\Ad\\utilities\\getAdsAriaLabel\\index.ts"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\components\\Ad\\utilities\\adSlot.styles.ts": {
    "incomingDependencies": [
      "src\\app\\components\\Ad\\Amp\\index.tsx",
      "src\\app\\components\\Ad\\Canonical\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      }
    ]
  },
  "src\\app\\components\\Ad\\utilities\\getAdsAriaLabel\\index.test.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\Ad\\utilities\\getAdsAriaLabel\\index.ts"
      },
      {
        "source": "../../types",
        "resolvedPath": "src\\app\\components\\Ad\\types.ts"
      }
    ]
  },
  "src\\app\\components\\Ad\\utilities\\getAdsAriaLabel\\index.ts": {
    "incomingDependencies": [
      "src\\app\\components\\Ad\\Amp\\index.tsx",
      "src\\app\\components\\Ad\\Canonical\\index.tsx",
      "src\\app\\components\\Ad\\utilities\\getAdsAriaLabel\\index.test.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../../models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global.ts"
      },
      {
        "source": "../../types",
        "resolvedPath": "src\\app\\components\\Ad\\types.ts"
      }
    ]
  },
  "src\\app\\components\\AmpIframe\\index.styles.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\AmpIframe\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "../../utilities/pixelsToRem",
        "resolvedPath": "src\\app\\utilities\\pixelsToRem\\index.ts"
      }
    ]
  },
  "src\\app\\components\\AmpIframe\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "./index",
        "resolvedPath": "src\\app\\components\\AmpIframe\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\AmpIframe\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\AmpIframe\\index.test.tsx",
      "src\\app\\components\\Embeds\\AmpIframeEmbed\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "react-helmet",
        "resolvedPath": "react-helmet"
      },
      {
        "source": "#components/Grid",
        "resolvedPath": "#components/Grid"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\components\\AmpIframe\\index.styles.tsx"
      }
    ]
  },
  "src\\app\\components\\ATIAnalytics\\amp\\ampAnalyticsJson.test.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "./ampAnalyticsJson",
        "resolvedPath": "src\\app\\components\\ATIAnalytics\\amp\\ampAnalyticsJson.ts"
      }
    ]
  },
  "src\\app\\components\\ATIAnalytics\\amp\\ampAnalyticsJson.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ATIAnalytics\\amp\\ampAnalyticsJson.test.ts",
      "src\\app\\components\\ATIAnalytics\\amp\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../types",
        "resolvedPath": "src\\app\\components\\ATIAnalytics\\types.ts"
      }
    ]
  },
  "src\\app\\components\\ATIAnalytics\\amp\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../../react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\ATIAnalytics\\amp\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\ATIAnalytics\\amp\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\ATIAnalytics\\amp\\index.test.tsx",
      "src\\app\\components\\ATIAnalytics\\index.test.tsx",
      "src\\app\\components\\ATIAnalytics\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "#app/lib/utilities/getEnvConfig",
        "resolvedPath": "#app/lib/utilities/getEnvConfig"
      },
      {
        "source": "./ampAnalyticsJson",
        "resolvedPath": "src\\app\\components\\ATIAnalytics\\amp\\ampAnalyticsJson.ts"
      },
      {
        "source": "../types",
        "resolvedPath": "src\\app\\components\\ATIAnalytics\\types.ts"
      }
    ]
  },
  "src\\app\\components\\ATIAnalytics\\atiUrl\\index.test.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "#psammead/psammead-test-helpers/src",
        "resolvedPath": "#psammead/psammead-test-helpers/src"
      },
      {
        "source": "../../../lib/analyticsUtils",
        "resolvedPath": "src\\app\\lib\\analyticsUtils\\index.js"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\ATIAnalytics\\atiUrl\\index.ts"
      }
    ]
  },
  "src\\app\\components\\ATIAnalytics\\atiUrl\\index.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ATIAnalytics\\atiUrl\\index.test.ts",
      "src\\app\\components\\ATIAnalytics\\beacon\\index.ts",
      "src\\app\\components\\ATIAnalytics\\params\\genericPage\\buildParams.ts",
      "src\\app\\components\\ATIAnalytics\\params\\indexPage\\buildParams.ts",
      "src\\app\\components\\ATIAnalytics\\params\\topicPage\\buildParams.ts",
      "src\\app\\components\\ATIAnalytics\\params\\tvRadioPage\\buildParams.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "#app/lib/utilities/getEnvConfig",
        "resolvedPath": "#app/lib/utilities/getEnvConfig"
      },
      {
        "source": "../../../lib/analyticsUtils",
        "resolvedPath": "src\\app\\lib\\analyticsUtils\\index.js"
      },
      {
        "source": "../types",
        "resolvedPath": "src\\app\\components\\ATIAnalytics\\types.ts"
      }
    ]
  },
  "src\\app\\components\\ATIAnalytics\\beacon\\index.test.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../../../lib/analyticsUtils/sendBeacon",
        "resolvedPath": "src\\app\\lib\\analyticsUtils\\sendBeacon\\index.js"
      },
      {
        "source": "../../../lib/analyticsUtils",
        "resolvedPath": "src\\app\\lib\\analyticsUtils\\index.js"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\ATIAnalytics\\beacon\\index.ts"
      }
    ]
  },
  "src\\app\\components\\ATIAnalytics\\beacon\\index.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ATIAnalytics\\beacon\\index.test.ts",
      "src\\app\\hooks\\useClickTrackerHandler\\index.jsx",
      "src\\app\\hooks\\useViewTracker\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../lib/analyticsUtils/sendBeacon",
        "resolvedPath": "src\\app\\lib\\analyticsUtils\\sendBeacon\\index.js"
      },
      {
        "source": "../atiUrl",
        "resolvedPath": "src\\app\\components\\ATIAnalytics\\atiUrl\\index.ts"
      },
      {
        "source": "../types",
        "resolvedPath": "src\\app\\components\\ATIAnalytics\\types.ts"
      }
    ]
  },
  "src\\app\\components\\ATIAnalytics\\canonical\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#app/components/react-testing-library-with-providers",
        "resolvedPath": "#app/components/react-testing-library-with-providers"
      },
      {
        "source": "#app/lib/utilities/isOperaProxy",
        "resolvedPath": "#app/lib/utilities/isOperaProxy"
      },
      {
        "source": "../../../lib/analyticsUtils/sendBeacon",
        "resolvedPath": "src\\app\\lib\\analyticsUtils\\sendBeacon\\index.js"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\ATIAnalytics\\canonical\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\ATIAnalytics\\canonical\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\ATIAnalytics\\canonical\\index.test.tsx",
      "src\\app\\components\\ATIAnalytics\\index.test.tsx",
      "src\\app\\components\\ATIAnalytics\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#app/lib/utilities/getEnvConfig",
        "resolvedPath": "#app/lib/utilities/getEnvConfig"
      },
      {
        "source": "#app/contexts/RequestContext",
        "resolvedPath": "#app/contexts/RequestContext"
      },
      {
        "source": "#app/lib/utilities/isOperaProxy",
        "resolvedPath": "#app/lib/utilities/isOperaProxy"
      },
      {
        "source": "react-helmet",
        "resolvedPath": "react-helmet"
      },
      {
        "source": "../../../lib/analyticsUtils/sendBeacon",
        "resolvedPath": "src\\app\\lib\\analyticsUtils\\sendBeacon\\index.js"
      },
      {
        "source": "../types",
        "resolvedPath": "src\\app\\components\\ATIAnalytics\\types.ts"
      },
      {
        "source": "./sendBeaconOperaMiniScript",
        "resolvedPath": "src\\app\\components\\ATIAnalytics\\canonical\\sendBeaconOperaMiniScript.ts"
      }
    ]
  },
  "src\\app\\components\\ATIAnalytics\\canonical\\sendBeaconOperaMini.test.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "./sendBeaconOperaMiniScript",
        "resolvedPath": "src\\app\\components\\ATIAnalytics\\canonical\\sendBeaconOperaMiniScript.ts"
      }
    ]
  },
  "src\\app\\components\\ATIAnalytics\\canonical\\sendBeaconOperaMiniScript.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ATIAnalytics\\canonical\\index.tsx",
      "src\\app\\components\\ATIAnalytics\\canonical\\sendBeaconOperaMini.test.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "#app/lib/utilities/isOperaProxy",
        "resolvedPath": "#app/lib/utilities/isOperaProxy"
      }
    ]
  },
  "src\\app\\components\\ATIAnalytics\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#pages/ArticlePage/fixtureData",
        "resolvedPath": "#pages/ArticlePage/fixtureData"
      },
      {
        "source": "#data/afrique/cpsAssets/48465371.json",
        "resolvedPath": "#data/afrique/cpsAssets/48465371.json"
      },
      {
        "source": "#data/ukrainian/cpsAssets/news-53561143.json",
        "resolvedPath": "#data/ukrainian/cpsAssets/news-53561143.json"
      },
      {
        "source": "#data/ukrainian/cpsAssets/features-russian-53477115.json",
        "resolvedPath": "#data/ukrainian/cpsAssets/features-russian-53477115.json"
      },
      {
        "source": "#lib/analyticsUtils",
        "resolvedPath": "#lib/analyticsUtils"
      },
      {
        "source": "#psammead/psammead-test-helpers/src",
        "resolvedPath": "#psammead/psammead-test-helpers/src"
      },
      {
        "source": "./fixtures/storyPage.json",
        "resolvedPath": "..\\EXIM\\Work\\iterate-ai\\dep-graph\\fixtures\\storyPage.json"
      },
      {
        "source": "./fixtures/photoGalleryPage.json",
        "resolvedPath": "..\\EXIM\\Work\\iterate-ai\\dep-graph\\fixtures\\photoGalleryPage.json"
      },
      {
        "source": "./fixtures/mediaAssetPage.json",
        "resolvedPath": "..\\EXIM\\Work\\iterate-ai\\dep-graph\\fixtures\\mediaAssetPage.json"
      },
      {
        "source": "../react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "../../routes/utils/pageTypes",
        "resolvedPath": "src\\app\\routes\\utils\\pageTypes.ts"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\ATIAnalytics\\index.tsx"
      },
      {
        "source": "./amp",
        "resolvedPath": "src\\app\\components\\ATIAnalytics\\amp\\index.tsx"
      },
      {
        "source": "./canonical",
        "resolvedPath": "src\\app\\components\\ATIAnalytics\\canonical\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\ATIAnalytics\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\ATIAnalytics\\index.test.tsx",
      "src\\app\\pages\\ArticlePage\\ArticlePage.tsx",
      "src\\app\\pages\\ArticlePage\\index.test.tsx",
      "src\\app\\pages\\FeatureIdxPage\\FeatureIdxPage.jsx",
      "src\\app\\pages\\FrontPage\\FrontPage.jsx",
      "src\\app\\pages\\HomePage\\HomePage.tsx",
      "src\\app\\pages\\LiveRadioPage\\LiveRadioPage.tsx",
      "src\\app\\pages\\MediaArticlePage\\MediaArticlePage.tsx",
      "src\\app\\pages\\MostReadPage\\MostReadPage.jsx",
      "src\\app\\pages\\OnDemandAudioPage\\OnDemandAudioPage.tsx",
      "src\\app\\pages\\OnDemandTvPage\\OnDemandTvPage.tsx",
      "src\\app\\pages\\TopicPage\\TopicPage.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "#contexts/RequestContext"
      },
      {
        "source": "../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "./canonical",
        "resolvedPath": "src\\app\\components\\ATIAnalytics\\canonical\\index.tsx"
      },
      {
        "source": "./amp",
        "resolvedPath": "src\\app\\components\\ATIAnalytics\\amp\\index.tsx"
      },
      {
        "source": "./types",
        "resolvedPath": "src\\app\\components\\ATIAnalytics\\types.ts"
      },
      {
        "source": "./params",
        "resolvedPath": "src\\app\\components\\ATIAnalytics\\params\\index.ts"
      }
    ]
  },
  "src\\app\\components\\ATIAnalytics\\params\\genericPage\\buildParams.test.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": "#lib/analyticsUtils",
        "resolvedPath": "#lib/analyticsUtils"
      },
      {
        "source": "../../../../contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext\\index.tsx"
      },
      {
        "source": "../../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      },
      {
        "source": "./buildParams",
        "resolvedPath": "src\\app\\components\\ATIAnalytics\\params\\genericPage\\buildParams.ts"
      }
    ]
  },
  "src\\app\\components\\ATIAnalytics\\params\\genericPage\\buildParams.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ATIAnalytics\\params\\genericPage\\buildParams.test.ts",
      "src\\app\\components\\ATIAnalytics\\params\\index.test.ts",
      "src\\app\\components\\ATIAnalytics\\params\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../../lib/analyticsUtils",
        "resolvedPath": "src\\app\\lib\\analyticsUtils\\index.js"
      },
      {
        "source": "../../atiUrl",
        "resolvedPath": "src\\app\\components\\ATIAnalytics\\atiUrl\\index.ts"
      },
      {
        "source": "../../types",
        "resolvedPath": "src\\app\\components\\ATIAnalytics\\types.ts"
      }
    ]
  },
  "src\\app\\components\\ATIAnalytics\\params\\index.test.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../../../lib/analyticsUtils",
        "resolvedPath": "src\\app\\lib\\analyticsUtils\\index.js"
      },
      {
        "source": "../../../routes/utils/pageTypes",
        "resolvedPath": "src\\app\\routes\\utils\\pageTypes.ts"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\ATIAnalytics\\params\\index.ts"
      },
      {
        "source": "./genericPage/buildParams",
        "resolvedPath": "src\\app\\components\\ATIAnalytics\\params\\genericPage\\buildParams.ts"
      },
      {
        "source": "../../../contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext\\index.tsx"
      },
      {
        "source": "../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      },
      {
        "source": "../types",
        "resolvedPath": "src\\app\\components\\ATIAnalytics\\types.ts"
      }
    ]
  },
  "src\\app\\components\\ATIAnalytics\\params\\index.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ATIAnalytics\\index.tsx",
      "src\\app\\components\\ATIAnalytics\\params\\index.test.ts",
      "src\\app\\contexts\\EventTrackingContext\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../routes/utils/pageTypes",
        "resolvedPath": "src\\app\\routes\\utils\\pageTypes.ts"
      },
      {
        "source": "./tvRadioPage/buildParams",
        "resolvedPath": "src\\app\\components\\ATIAnalytics\\params\\tvRadioPage\\buildParams.ts"
      },
      {
        "source": "./genericPage/buildParams",
        "resolvedPath": "src\\app\\components\\ATIAnalytics\\params\\genericPage\\buildParams.ts"
      },
      {
        "source": "./indexPage/buildParams",
        "resolvedPath": "src\\app\\components\\ATIAnalytics\\params\\indexPage\\buildParams.ts"
      },
      {
        "source": "../../../contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext\\index.tsx"
      },
      {
        "source": "../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      },
      {
        "source": "../types",
        "resolvedPath": "src\\app\\components\\ATIAnalytics\\types.ts"
      },
      {
        "source": "../../../models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global.ts"
      }
    ]
  },
  "src\\app\\components\\ATIAnalytics\\params\\indexPage\\buildParams.test.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "#lib/analyticsUtils",
        "resolvedPath": "#lib/analyticsUtils"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": "./buildParams",
        "resolvedPath": "src\\app\\components\\ATIAnalytics\\params\\indexPage\\buildParams.ts"
      },
      {
        "source": "../../../../contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext\\index.tsx"
      },
      {
        "source": "../../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      }
    ]
  },
  "src\\app\\components\\ATIAnalytics\\params\\indexPage\\buildParams.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ATIAnalytics\\params\\index.ts",
      "src\\app\\components\\ATIAnalytics\\params\\indexPage\\buildParams.test.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../../lib/analyticsUtils",
        "resolvedPath": "src\\app\\lib\\analyticsUtils\\index.js"
      },
      {
        "source": "../../../../lib/analyticsUtils/indexPage",
        "resolvedPath": "src\\app\\lib\\analyticsUtils\\indexPage\\index.js"
      },
      {
        "source": "../../../../contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext\\index.tsx"
      },
      {
        "source": "../../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      },
      {
        "source": "../../atiUrl",
        "resolvedPath": "src\\app\\components\\ATIAnalytics\\atiUrl\\index.ts"
      },
      {
        "source": "../../types",
        "resolvedPath": "src\\app\\components\\ATIAnalytics\\types.ts"
      }
    ]
  },
  "src\\app\\components\\ATIAnalytics\\params\\topicPage\\buildParams.test.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "#lib/analyticsUtils",
        "resolvedPath": "#lib/analyticsUtils"
      },
      {
        "source": "../../../../contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext\\index.tsx"
      },
      {
        "source": "../../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      },
      {
        "source": "./buildParams",
        "resolvedPath": "src\\app\\components\\ATIAnalytics\\params\\topicPage\\buildParams.ts"
      }
    ]
  },
  "src\\app\\components\\ATIAnalytics\\params\\topicPage\\buildParams.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ATIAnalytics\\params\\topicPage\\buildParams.test.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../../lib/analyticsUtils",
        "resolvedPath": "src\\app\\lib\\analyticsUtils\\index.js"
      },
      {
        "source": "../../../../contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext\\index.tsx"
      },
      {
        "source": "../../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      },
      {
        "source": "../../atiUrl",
        "resolvedPath": "src\\app\\components\\ATIAnalytics\\atiUrl\\index.ts"
      },
      {
        "source": "../../types",
        "resolvedPath": "src\\app\\components\\ATIAnalytics\\types.ts"
      }
    ]
  },
  "src\\app\\components\\ATIAnalytics\\params\\tvRadioPage\\buildParams.test.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "#lib/analyticsUtils",
        "resolvedPath": "#lib/analyticsUtils"
      },
      {
        "source": "../../../../contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext\\index.tsx"
      },
      {
        "source": "../../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      },
      {
        "source": "./buildParams",
        "resolvedPath": "src\\app\\components\\ATIAnalytics\\params\\tvRadioPage\\buildParams.ts"
      }
    ]
  },
  "src\\app\\components\\ATIAnalytics\\params\\tvRadioPage\\buildParams.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ATIAnalytics\\params\\index.ts",
      "src\\app\\components\\ATIAnalytics\\params\\tvRadioPage\\buildParams.test.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../../lib/analyticsUtils",
        "resolvedPath": "src\\app\\lib\\analyticsUtils\\index.js"
      },
      {
        "source": "../../../../contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext\\index.tsx"
      },
      {
        "source": "../../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      },
      {
        "source": "../../atiUrl",
        "resolvedPath": "src\\app\\components\\ATIAnalytics\\atiUrl\\index.ts"
      },
      {
        "source": "../../types",
        "resolvedPath": "src\\app\\components\\ATIAnalytics\\types.ts"
      }
    ]
  },
  "src\\app\\components\\ATIAnalytics\\types.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ATIAnalytics\\amp\\ampAnalyticsJson.ts",
      "src\\app\\components\\ATIAnalytics\\amp\\index.tsx",
      "src\\app\\components\\ATIAnalytics\\atiUrl\\index.ts",
      "src\\app\\components\\ATIAnalytics\\beacon\\index.ts",
      "src\\app\\components\\ATIAnalytics\\canonical\\index.tsx",
      "src\\app\\components\\ATIAnalytics\\index.tsx",
      "src\\app\\components\\ATIAnalytics\\params\\genericPage\\buildParams.ts",
      "src\\app\\components\\ATIAnalytics\\params\\index.test.ts",
      "src\\app\\components\\ATIAnalytics\\params\\index.ts",
      "src\\app\\components\\ATIAnalytics\\params\\indexPage\\buildParams.ts",
      "src\\app\\components\\ATIAnalytics\\params\\topicPage\\buildParams.ts",
      "src\\app\\components\\ATIAnalytics\\params\\tvRadioPage\\buildParams.ts",
      "src\\app\\components\\react-testing-library-with-providers.tsx",
      "src\\app\\contexts\\EventTrackingContext\\index.tsx",
      "src\\app\\pages\\HomePage\\HomePage.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../../models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global.ts"
      },
      {
        "source": "../../contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext\\index.tsx"
      },
      {
        "source": "../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      }
    ]
  },
  "src\\app\\components\\Billboard\\fixtures.ts": {
    "incomingDependencies": [
      "src\\app\\components\\Billboard\\index.test.tsx"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\components\\Billboard\\index.stories.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\Billboard\\index.tsx"
      },
      {
        "source": "../../models/types/storybook",
        "resolvedPath": "src\\app\\models\\types\\storybook.ts"
      },
      {
        "source": "./metadata.json",
        "resolvedPath": "..\\EXIM\\Work\\iterate-ai\\dep-graph\\metadata.json"
      },
      {
        "source": "./README.md",
        "resolvedPath": "..\\EXIM\\Work\\iterate-ai\\dep-graph\\README.md"
      }
    ]
  },
  "src\\app\\components\\Billboard\\index.styles.ts": {
    "incomingDependencies": [
      "src\\app\\components\\Billboard\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "../../utilities/pixelsToRem",
        "resolvedPath": "src\\app\\utilities\\pixelsToRem\\index.ts"
      }
    ]
  },
  "src\\app\\components\\Billboard\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\Billboard\\index.tsx"
      },
      {
        "source": "./fixtures",
        "resolvedPath": "src\\app\\components\\Billboard\\fixtures.ts"
      },
      {
        "source": "../../hooks/useViewTracker",
        "resolvedPath": "src\\app\\hooks\\useViewTracker\\index.jsx"
      },
      {
        "source": "../../hooks/useClickTrackerHandler",
        "resolvedPath": "src\\app\\hooks\\useClickTrackerHandler\\index.jsx"
      }
    ]
  },
  "src\\app\\components\\Billboard\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\Billboard\\index.stories.tsx",
      "src\\app\\components\\Billboard\\index.test.tsx",
      "src\\app\\components\\Curation\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "#app/hooks/useViewTracker",
        "resolvedPath": "#app/hooks/useViewTracker"
      },
      {
        "source": "#app/hooks/useClickTrackerHandler",
        "resolvedPath": "#app/hooks/useClickTrackerHandler"
      },
      {
        "source": "#app/models/types/eventTracking",
        "resolvedPath": "#app/models/types/eventTracking"
      },
      {
        "source": "../Heading",
        "resolvedPath": "src\\app\\components\\Heading\\index.tsx"
      },
      {
        "source": "../LiveLabel",
        "resolvedPath": "src\\app\\components\\LiveLabel\\index.tsx"
      },
      {
        "source": "../MaskedImage",
        "resolvedPath": "src\\app\\components\\MaskedImage\\index.tsx"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\components\\Billboard\\index.styles.ts"
      },
      {
        "source": "../Text",
        "resolvedPath": "src\\app\\components\\Text\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\BulletedList\\index.stories.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\BulletedList\\index.tsx"
      },
      {
        "source": "../../models/types/storybook",
        "resolvedPath": "src\\app\\models\\types\\storybook.ts"
      },
      {
        "source": "./README.md",
        "resolvedPath": "..\\EXIM\\Work\\iterate-ai\\dep-graph\\README.md"
      },
      {
        "source": "../ThemeProvider/palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      }
    ]
  },
  "src\\app\\components\\BulletedList\\index.styles.ts": {
    "incomingDependencies": [
      "src\\app\\components\\BulletedList\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      }
    ]
  },
  "src\\app\\components\\BulletedList\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "./index",
        "resolvedPath": "src\\app\\components\\BulletedList\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\BulletedList\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\BulletedList\\index.stories.tsx",
      "src\\app\\components\\BulletedList\\index.test.tsx",
      "src\\app\\legacy\\containers\\BulletedList\\index.jsx",
      "src\\app\\legacy\\containers\\BulletedListItem\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../ThemeProvider/palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\components\\BulletedList\\index.styles.ts"
      }
    ]
  },
  "src\\app\\components\\Byline\\index.stories.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#app/models/types/optimo",
        "resolvedPath": "#app/models/types/optimo"
      },
      {
        "source": "../../legacy/containers/ArticleTimestamp",
        "resolvedPath": "src\\app\\legacy\\containers\\ArticleTimestamp\\index.jsx"
      },
      {
        "source": "../../pages/ArticlePage/fixtureData",
        "resolvedPath": "src\\app\\pages\\ArticlePage\\fixtureData.ts"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\Byline\\index.tsx"
      },
      {
        "source": "./README.md",
        "resolvedPath": "..\\EXIM\\Work\\iterate-ai\\dep-graph\\README.md"
      }
    ]
  },
  "src\\app\\components\\Byline\\index.styles.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\Byline\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "../../utilities/pixelsToRem",
        "resolvedPath": "src\\app\\utilities\\pixelsToRem\\index.ts"
      }
    ]
  },
  "src\\app\\components\\Byline\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\Byline\\index.tsx"
      },
      {
        "source": "../../legacy/containers/ArticleTimestamp",
        "resolvedPath": "src\\app\\legacy\\containers\\ArticleTimestamp\\index.jsx"
      },
      {
        "source": "../../pages/ArticlePage/fixtureData",
        "resolvedPath": "src\\app\\pages\\ArticlePage\\fixtureData.ts"
      }
    ]
  },
  "src\\app\\components\\Byline\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\Byline\\index.stories.tsx",
      "src\\app\\components\\Byline\\index.test.tsx",
      "src\\app\\pages\\ArticlePage\\ArticlePage.tsx",
      "src\\app\\pages\\MediaArticlePage\\MediaArticlePage.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "#app/models/types/optimo",
        "resolvedPath": "#app/models/types/optimo"
      },
      {
        "source": "../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../VisuallyHiddenText",
        "resolvedPath": "src\\app\\components\\VisuallyHiddenText\\index.tsx"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\components\\Byline\\index.styles.tsx"
      },
      {
        "source": "../icons",
        "resolvedPath": "src\\app\\components\\icons\\index.tsx"
      },
      {
        "source": "../Text",
        "resolvedPath": "src\\app\\components\\Text\\index.tsx"
      },
      {
        "source": "../Image",
        "resolvedPath": "src\\app\\components\\Image\\index.tsx"
      },
      {
        "source": "./utilities/bylineExtractor",
        "resolvedPath": "src\\app\\components\\Byline\\utilities\\bylineExtractor\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\Byline\\utilities\\bylineExtractor\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\Byline\\utilities\\bylineExtractor\\index.tsx"
      },
      {
        "source": "../../../../pages/ArticlePage/fixtureData",
        "resolvedPath": "src\\app\\pages\\ArticlePage\\fixtureData.ts"
      }
    ]
  },
  "src\\app\\components\\Byline\\utilities\\bylineExtractor\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\Byline\\index.tsx",
      "src\\app\\components\\Byline\\utilities\\bylineExtractor\\index.test.tsx",
      "src\\app\\components\\Byline\\utilities\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "#app/models/types/optimo",
        "resolvedPath": "#app/models/types/optimo"
      },
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "../../../../lib/utilities/ichefURL",
        "resolvedPath": "src\\app\\lib\\utilities\\ichefURL\\index.js"
      }
    ]
  },
  "src\\app\\components\\Byline\\utilities\\categoryName\\index.test.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "ramda/src/clone",
        "resolvedPath": "ramda/src/clone"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\Byline\\utilities\\categoryName\\index.ts"
      },
      {
        "source": "../../../../pages/ArticlePage/fixtureData",
        "resolvedPath": "src\\app\\pages\\ArticlePage\\fixtureData.ts"
      }
    ]
  },
  "src\\app\\components\\Byline\\utilities\\categoryName\\index.ts": {
    "incomingDependencies": [
      "src\\app\\components\\Byline\\utilities\\categoryName\\index.test.ts",
      "src\\app\\components\\Byline\\utilities\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "ramda/src/isEmpty",
        "resolvedPath": "ramda/src/isEmpty"
      },
      {
        "source": "../../../../models/types/metadata",
        "resolvedPath": "src\\app\\models\\types\\metadata.ts"
      }
    ]
  },
  "src\\app\\components\\Byline\\utilities\\getAuthorTwitterHandle\\fixture\\index.js": {
    "incomingDependencies": [
      "src\\app\\components\\Byline\\utilities\\getAuthorTwitterHandle\\index.test.js"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\components\\Byline\\utilities\\getAuthorTwitterHandle\\index.js": {
    "incomingDependencies": [
      "src\\app\\components\\Byline\\utilities\\getAuthorTwitterHandle\\index.test.js",
      "src\\app\\components\\Byline\\utilities\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "ramda/src/isEmpty",
        "resolvedPath": "ramda/src/isEmpty"
      }
    ]
  },
  "src\\app\\components\\Byline\\utilities\\getAuthorTwitterHandle\\index.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\Byline\\utilities\\getAuthorTwitterHandle\\index.js"
      },
      {
        "source": "./fixture",
        "resolvedPath": "src\\app\\components\\Byline\\utilities\\getAuthorTwitterHandle\\fixture\\index.js"
      }
    ]
  },
  "src\\app\\components\\Byline\\utilities\\index.ts": {
    "incomingDependencies": [
      "src\\app\\components\\Metadata\\index.test.tsx",
      "src\\app\\legacy\\containers\\ArticleMetadata\\index.test.jsx",
      "src\\app\\pages\\ArticlePage\\ArticlePage.tsx",
      "src\\app\\pages\\MediaArticlePage\\MediaArticlePage.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "./bylineExtractor",
        "resolvedPath": "src\\app\\components\\Byline\\utilities\\bylineExtractor\\index.tsx"
      },
      {
        "source": "./categoryName",
        "resolvedPath": "src\\app\\components\\Byline\\utilities\\categoryName\\index.ts"
      },
      {
        "source": "./getAuthorTwitterHandle",
        "resolvedPath": "src\\app\\components\\Byline\\utilities\\getAuthorTwitterHandle\\index.js"
      }
    ]
  },
  "src\\app\\components\\CallToActionLink\\index.stories.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "./types",
        "resolvedPath": "src\\app\\components\\CallToActionLink\\types.ts"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\CallToActionLink\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\CallToActionLink\\index.styles.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\CallToActionLink\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      }
    ]
  },
  "src\\app\\components\\CallToActionLink\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#app/hooks/useClickTrackerHandler",
        "resolvedPath": "#app/hooks/useClickTrackerHandler"
      },
      {
        "source": "../react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\CallToActionLink\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\CallToActionLink\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\CallToActionLink\\index.stories.tsx",
      "src\\app\\components\\CallToActionLink\\index.test.tsx",
      "src\\app\\components\\Embeds\\Uploader\\index.tsx",
      "src\\app\\components\\MessageBanner\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "#app/hooks/useClickTrackerHandler",
        "resolvedPath": "#app/hooks/useClickTrackerHandler"
      },
      {
        "source": "../Text",
        "resolvedPath": "src\\app\\components\\Text\\index.tsx"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\components\\CallToActionLink\\index.styles.tsx"
      },
      {
        "source": "./types",
        "resolvedPath": "src\\app\\components\\CallToActionLink\\types.ts"
      }
    ]
  },
  "src\\app\\components\\CallToActionLink\\types.ts": {
    "incomingDependencies": [
      "src\\app\\components\\CallToActionLink\\index.stories.tsx",
      "src\\app\\components\\CallToActionLink\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "#app/models/types/eventTracking",
        "resolvedPath": "#app/models/types/eventTracking"
      }
    ]
  },
  "src\\app\\components\\Caption\\fixture.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\Caption\\index.stories.tsx",
      "src\\app\\components\\Caption\\index.test.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "#models/blocks",
        "resolvedPath": "#models/blocks"
      },
      {
        "source": "#app/models/types/optimo",
        "resolvedPath": "#app/models/types/optimo"
      }
    ]
  },
  "src\\app\\components\\Caption\\index.stories.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#app/models/types/optimo",
        "resolvedPath": "#app/models/types/optimo"
      },
      {
        "source": "#app/contexts/ServiceContext",
        "resolvedPath": "#app/contexts/ServiceContext"
      },
      {
        "source": "#app/models/types/storybook",
        "resolvedPath": "#app/models/types/storybook"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\Caption\\index.tsx"
      },
      {
        "source": "./fixture",
        "resolvedPath": "src\\app\\components\\Caption\\fixture.tsx"
      }
    ]
  },
  "src\\app\\components\\Caption\\index.style.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\Caption\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "../ThemeProvider/spacings",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\spacings.ts"
      }
    ]
  },
  "src\\app\\components\\Caption\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#app/models/types/optimo",
        "resolvedPath": "#app/models/types/optimo"
      },
      {
        "source": "#app/contexts/ServiceContext",
        "resolvedPath": "#app/contexts/ServiceContext"
      },
      {
        "source": "#app/models/types/serviceConfig",
        "resolvedPath": "#app/models/types/serviceConfig"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\Caption\\index.tsx"
      },
      {
        "source": "../ThemeProvider/fontScripts/latin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts"
      },
      {
        "source": "../ThemeProvider/fontScripts/arabic",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\arabic.ts"
      },
      {
        "source": "../react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "./fixture",
        "resolvedPath": "src\\app\\components\\Caption\\fixture.tsx"
      }
    ]
  },
  "src\\app\\components\\Caption\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\Caption\\index.stories.tsx",
      "src\\app\\components\\Caption\\index.test.tsx",
      "src\\app\\components\\ImageWithCaption\\index.tsx",
      "src\\app\\components\\MediaLoader\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "#app/contexts/ServiceContext",
        "resolvedPath": "#app/contexts/ServiceContext"
      },
      {
        "source": "#app/legacy/containers/Blocks",
        "resolvedPath": "#app/legacy/containers/Blocks"
      },
      {
        "source": "#app/models/types/optimo",
        "resolvedPath": "#app/models/types/optimo"
      },
      {
        "source": "../DecoratedInline",
        "resolvedPath": "src\\app\\components\\DecoratedInline\\index.tsx"
      },
      {
        "source": "../VisuallyHiddenText",
        "resolvedPath": "src\\app\\components\\VisuallyHiddenText\\index.tsx"
      },
      {
        "source": "./index.style",
        "resolvedPath": "src\\app\\components\\Caption\\index.style.tsx"
      },
      {
        "source": "../Fragment",
        "resolvedPath": "src\\app\\components\\Fragment\\index.tsx"
      },
      {
        "source": "../Text",
        "resolvedPath": "src\\app\\components\\Text\\index.tsx"
      },
      {
        "source": "../DecoratedInlineLink",
        "resolvedPath": "src\\app\\components\\DecoratedInlineLink\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\ChartbeatAnalytics\\amp\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../../react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\ChartbeatAnalytics\\amp\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\ChartbeatAnalytics\\amp\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\ChartbeatAnalytics\\amp\\index.test.tsx",
      "src\\app\\components\\ChartbeatAnalytics\\index.test.tsx",
      "src\\app\\components\\ChartbeatAnalytics\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "../types",
        "resolvedPath": "src\\app\\components\\ChartbeatAnalytics\\types.ts"
      }
    ]
  },
  "src\\app\\components\\ChartbeatAnalytics\\canonical\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "react-helmet",
        "resolvedPath": "react-helmet"
      },
      {
        "source": "@testing-library/react",
        "resolvedPath": "@testing-library/react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\ChartbeatAnalytics\\canonical\\index.tsx"
      },
      {
        "source": "../types",
        "resolvedPath": "src\\app\\components\\ChartbeatAnalytics\\types.ts"
      }
    ]
  },
  "src\\app\\components\\ChartbeatAnalytics\\canonical\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\ChartbeatAnalytics\\canonical\\index.test.tsx",
      "src\\app\\contexts\\UserContext\\Chartbeat\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "react-helmet",
        "resolvedPath": "react-helmet"
      },
      {
        "source": "../types",
        "resolvedPath": "src\\app\\components\\ChartbeatAnalytics\\types.ts"
      },
      {
        "source": "../utils",
        "resolvedPath": "src\\app\\components\\ChartbeatAnalytics\\utils\\index.ts"
      }
    ]
  },
  "src\\app\\components\\ChartbeatAnalytics\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@testing-library/react",
        "resolvedPath": "@testing-library/react"
      },
      {
        "source": "../../routes/utils/pageTypes",
        "resolvedPath": "src\\app\\routes\\utils\\pageTypes.ts"
      },
      {
        "source": "../../contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext\\index.tsx"
      },
      {
        "source": "../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../../contexts/ToggleContext",
        "resolvedPath": "src\\app\\contexts\\ToggleContext\\index.tsx"
      },
      {
        "source": "../../contexts/UserContext",
        "resolvedPath": "src\\app\\contexts\\UserContext\\index.tsx"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\ChartbeatAnalytics\\index.tsx"
      },
      {
        "source": "./utils",
        "resolvedPath": "src\\app\\components\\ChartbeatAnalytics\\utils\\index.ts"
      },
      {
        "source": "./amp",
        "resolvedPath": "src\\app\\components\\ChartbeatAnalytics\\amp\\index.tsx"
      },
      {
        "source": "../../../testHelpers/config",
        "resolvedPath": "src\\testHelpers\\config.js"
      },
      {
        "source": "../../../../data/news/frontpage/index.json",
        "resolvedPath": "..\\data\\news\\frontpage\\index.json"
      },
      {
        "source": "../../models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global.ts"
      }
    ]
  },
  "src\\app\\components\\ChartbeatAnalytics\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\ChartbeatAnalytics\\index.test.tsx",
      "src\\app\\pages\\ArticlePage\\ArticlePage.tsx",
      "src\\app\\pages\\FeatureIdxPage\\FeatureIdxPage.jsx",
      "src\\app\\pages\\FrontPage\\FrontPage.jsx",
      "src\\app\\pages\\HomePage\\HomePage.tsx",
      "src\\app\\pages\\LiveRadioPage\\LiveRadioPage.tsx",
      "src\\app\\pages\\MediaArticlePage\\MediaArticlePage.tsx",
      "src\\app\\pages\\MostReadPage\\MostReadPage.jsx",
      "src\\app\\pages\\OnDemandAudioPage\\OnDemandAudioPage.tsx",
      "src\\app\\pages\\OnDemandTvPage\\OnDemandTvPage.tsx",
      "src\\app\\pages\\TopicPage\\TopicPage.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../../hooks/useToggle",
        "resolvedPath": "src\\app\\hooks\\useToggle\\index.js"
      },
      {
        "source": "../../contexts/UserContext",
        "resolvedPath": "src\\app\\contexts\\UserContext\\index.tsx"
      },
      {
        "source": "../../contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext\\index.tsx"
      },
      {
        "source": "../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "./amp",
        "resolvedPath": "src\\app\\components\\ChartbeatAnalytics\\amp\\index.tsx"
      },
      {
        "source": "./utils",
        "resolvedPath": "src\\app\\components\\ChartbeatAnalytics\\utils\\index.ts"
      },
      {
        "source": "./types",
        "resolvedPath": "src\\app\\components\\ChartbeatAnalytics\\types.ts"
      }
    ]
  },
  "src\\app\\components\\ChartbeatAnalytics\\types.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ChartbeatAnalytics\\amp\\index.tsx",
      "src\\app\\components\\ChartbeatAnalytics\\canonical\\index.test.tsx",
      "src\\app\\components\\ChartbeatAnalytics\\canonical\\index.tsx",
      "src\\app\\components\\ChartbeatAnalytics\\index.tsx",
      "src\\app\\contexts\\UserContext\\Chartbeat\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../../models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global.ts"
      },
      {
        "source": "../../models/types/metadata",
        "resolvedPath": "src\\app\\models\\types\\metadata.ts"
      }
    ]
  },
  "src\\app\\components\\ChartbeatAnalytics\\utils\\index.test.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "js-cookie",
        "resolvedPath": "js-cookie"
      },
      {
        "source": "../../../lib/utilities/onClient",
        "resolvedPath": "src\\app\\lib\\utilities\\onClient\\index.js"
      },
      {
        "source": "../../../routes/utils/pageTypes",
        "resolvedPath": "src\\app\\routes\\utils\\pageTypes.ts"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\ChartbeatAnalytics\\utils\\index.ts"
      },
      {
        "source": "../../../models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global.ts"
      }
    ]
  },
  "src\\app\\components\\ChartbeatAnalytics\\utils\\index.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ChartbeatAnalytics\\canonical\\index.tsx",
      "src\\app\\components\\ChartbeatAnalytics\\index.test.tsx",
      "src\\app\\components\\ChartbeatAnalytics\\index.tsx",
      "src\\app\\components\\ChartbeatAnalytics\\utils\\index.test.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "js-cookie",
        "resolvedPath": "js-cookie"
      },
      {
        "source": "ramda/src/find",
        "resolvedPath": "ramda/src/find"
      },
      {
        "source": "ramda/src/propSatisfies",
        "resolvedPath": "ramda/src/propSatisfies"
      },
      {
        "source": "ramda/src/includes",
        "resolvedPath": "ramda/src/includes"
      },
      {
        "source": "../../../lib/utilities/onClient",
        "resolvedPath": "src\\app\\lib\\utilities\\onClient\\index.js"
      },
      {
        "source": "../../../lib/analyticsUtils",
        "resolvedPath": "src\\app\\lib\\analyticsUtils\\index.js"
      },
      {
        "source": "../../../routes/utils/pageTypes",
        "resolvedPath": "src\\app\\routes\\utils\\pageTypes.ts"
      },
      {
        "source": "../../../models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global.ts"
      },
      {
        "source": "../../../models/types/metadata",
        "resolvedPath": "src\\app\\models\\types\\metadata.ts"
      }
    ]
  },
  "src\\app\\components\\Copyright\\index.stories.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#server/utilities/serviceConfigs",
        "resolvedPath": "#server/utilities/serviceConfigs"
      },
      {
        "source": "../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\Copyright\\index.tsx"
      },
      {
        "source": "../../models/types/storybook",
        "resolvedPath": "src\\app\\models\\types\\storybook.ts"
      },
      {
        "source": "../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      }
    ]
  },
  "src\\app\\components\\Copyright\\index.styles.ts": {
    "incomingDependencies": [
      "src\\app\\components\\Copyright\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      }
    ]
  },
  "src\\app\\components\\Copyright\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "./index",
        "resolvedPath": "src\\app\\components\\Copyright\\index.tsx"
      },
      {
        "source": "../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      }
    ]
  },
  "src\\app\\components\\Copyright\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\Copyright\\index.stories.tsx",
      "src\\app\\components\\Copyright\\index.test.tsx",
      "src\\app\\components\\ImageWithCaption\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../VisuallyHiddenText",
        "resolvedPath": "src\\app\\components\\VisuallyHiddenText\\index.tsx"
      },
      {
        "source": "../Text",
        "resolvedPath": "src\\app\\components\\Text\\index.tsx"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\components\\Copyright\\index.styles.ts"
      }
    ]
  },
  "src\\app\\components\\Curation\\CurationGrid\\index.stories.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#data/pidgin/topics/c95y35941vrt.json",
        "resolvedPath": "#data/pidgin/topics/c95y35941vrt.json"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\Curation\\CurationGrid\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\Curation\\CurationGrid\\index.styles.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\Curation\\CurationGrid\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      }
    ]
  },
  "src\\app\\components\\Curation\\CurationGrid\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\Curation\\CurationGrid\\index.stories.tsx",
      "src\\app\\components\\Curation\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\components\\Curation\\CurationGrid\\index.styles.tsx"
      },
      {
        "source": "../CurationPromo",
        "resolvedPath": "src\\app\\components\\Curation\\CurationPromo\\index.tsx"
      },
      {
        "source": "../types",
        "resolvedPath": "src\\app\\components\\Curation\\types.ts"
      }
    ]
  },
  "src\\app\\components\\Curation\\CurationPromo\\index.stories.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#data/pidgin/topics/c95y35941vrt.json",
        "resolvedPath": "#data/pidgin/topics/c95y35941vrt.json"
      },
      {
        "source": "#components/Promo",
        "resolvedPath": "#components/Promo"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\Curation\\CurationPromo\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\Curation\\CurationPromo\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#psammead/psammead-test-helpers/src",
        "resolvedPath": "#psammead/psammead-test-helpers/src"
      },
      {
        "source": "../../react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\Curation\\CurationPromo\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\Curation\\CurationPromo\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\Curation\\CurationGrid\\index.tsx",
      "src\\app\\components\\Curation\\CurationPromo\\index.stories.tsx",
      "src\\app\\components\\Curation\\CurationPromo\\index.test.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "moment",
        "resolvedPath": "moment"
      },
      {
        "source": "ramda/src/path",
        "resolvedPath": "ramda/src/path"
      },
      {
        "source": "#app/lib/utilities/formatDuration",
        "resolvedPath": "#app/lib/utilities/formatDuration"
      },
      {
        "source": "#components/Promo",
        "resolvedPath": "#components/Promo"
      },
      {
        "source": "#app/models/types/curationData",
        "resolvedPath": "#app/models/types/curationData"
      },
      {
        "source": "../../VisuallyHiddenText",
        "resolvedPath": "src\\app\\components\\VisuallyHiddenText\\index.tsx"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../../../contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext\\index.tsx"
      },
      {
        "source": "../../LiveLabel",
        "resolvedPath": "src\\app\\components\\LiveLabel\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\Curation\\getComponentName\\index.test.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "#app/models/types/curationData",
        "resolvedPath": "#app/models/types/curationData"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\Curation\\getComponentName\\index.ts"
      },
      {
        "source": "../../../../../data/afrique/homePage/index.json",
        "resolvedPath": "..\\..\\data\\afrique\\homePage\\index.json"
      },
      {
        "source": "../../../../../data/hindi/homePage/index.json",
        "resolvedPath": "..\\..\\data\\hindi\\homePage\\index.json"
      }
    ]
  },
  "src\\app\\components\\Curation\\getComponentName\\index.ts": {
    "incomingDependencies": [
      "src\\app\\components\\Curation\\getComponentName\\index.test.ts",
      "src\\app\\components\\Curation\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "#app/models/types/curationData",
        "resolvedPath": "#app/models/types/curationData"
      }
    ]
  },
  "src\\app\\components\\Curation\\HierarchicalGrid\\dataStructures.js": {
    "incomingDependencies": [
      "src\\app\\components\\Curation\\HierarchicalGrid\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\components\\Curation\\HierarchicalGrid\\index.styles.tsx"
      }
    ]
  },
  "src\\app\\components\\Curation\\HierarchicalGrid\\fixtures.js": {
    "incomingDependencies": [
      "src\\app\\components\\Curation\\HierarchicalGrid\\index.stories.tsx",
      "src\\app\\components\\Curation\\HierarchicalGrid\\index.test.tsx"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\components\\Curation\\HierarchicalGrid\\index.stories.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "./index",
        "resolvedPath": "src\\app\\components\\Curation\\HierarchicalGrid\\index.tsx"
      },
      {
        "source": "./fixtures",
        "resolvedPath": "src\\app\\components\\Curation\\HierarchicalGrid\\fixtures.js"
      }
    ]
  },
  "src\\app\\components\\Curation\\HierarchicalGrid\\index.styles.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\Curation\\HierarchicalGrid\\dataStructures.js",
      "src\\app\\components\\Curation\\HierarchicalGrid\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "#app/components/ThemeProvider/mediaQueries",
        "resolvedPath": "#app/components/ThemeProvider/mediaQueries"
      }
    ]
  },
  "src\\app\\components\\Curation\\HierarchicalGrid\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../../../legacy/psammead/psammead-test-helpers/src",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-test-helpers\\src\\index.js"
      },
      {
        "source": "../../react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "./fixtures",
        "resolvedPath": "src\\app\\components\\Curation\\HierarchicalGrid\\fixtures.js"
      },
      {
        "source": "./mediaFixtures",
        "resolvedPath": "src\\app\\components\\Curation\\HierarchicalGrid\\mediaFixtures.js"
      },
      {
        "source": "./liveFixtures",
        "resolvedPath": "src\\app\\components\\Curation\\HierarchicalGrid\\liveFixtures.js"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\Curation\\HierarchicalGrid\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\Curation\\HierarchicalGrid\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\Curation\\HierarchicalGrid\\index.stories.tsx",
      "src\\app\\components\\Curation\\HierarchicalGrid\\index.test.tsx",
      "src\\app\\components\\Curation\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "moment",
        "resolvedPath": "moment"
      },
      {
        "source": "ramda/src/path",
        "resolvedPath": "ramda/src/path"
      },
      {
        "source": "../../VisuallyHiddenText",
        "resolvedPath": "src\\app\\components\\VisuallyHiddenText\\index.tsx"
      },
      {
        "source": "../../../lib/utilities/formatDuration",
        "resolvedPath": "src\\app\\lib\\utilities\\formatDuration\\index.js"
      },
      {
        "source": "../../../legacy/components/Promo",
        "resolvedPath": "src\\app\\legacy\\components\\Promo\\index.jsx"
      },
      {
        "source": "./dataStructures",
        "resolvedPath": "src\\app\\components\\Curation\\HierarchicalGrid\\dataStructures.js"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\components\\Curation\\HierarchicalGrid\\index.styles.tsx"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../types",
        "resolvedPath": "src\\app\\components\\Curation\\types.ts"
      },
      {
        "source": "../../../contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext\\index.tsx"
      },
      {
        "source": "../../LiveLabel",
        "resolvedPath": "src\\app\\components\\LiveLabel\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\Curation\\HierarchicalGrid\\liveFixtures.js": {
    "incomingDependencies": [
      "src\\app\\components\\Curation\\HierarchicalGrid\\index.test.tsx"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\components\\Curation\\HierarchicalGrid\\mediaFixtures.js": {
    "incomingDependencies": [
      "src\\app\\components\\Curation\\HierarchicalGrid\\index.test.tsx"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\components\\Curation\\index.styles.ts": {
    "incomingDependencies": [
      "src\\app\\components\\Curation\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      }
    ]
  },
  "src\\app\\components\\Curation\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#psammead/psammead-test-helpers/src",
        "resolvedPath": "#psammead/psammead-test-helpers/src"
      },
      {
        "source": "../../../../data/pidgin/topics/c95y35941vrt.json",
        "resolvedPath": "..\\data\\pidgin\\topics\\c95y35941vrt.json"
      },
      {
        "source": "../../../../data/mundo/topics/c1en6xwmpkvt.json",
        "resolvedPath": "..\\data\\mundo\\topics\\c1en6xwmpkvt.json"
      },
      {
        "source": "../../../../data/kyrgyz/homePage/index.json",
        "resolvedPath": "..\\data\\kyrgyz\\homePage\\index.json"
      },
      {
        "source": "../../../../data/kyrgyz/mostRead/index.json",
        "resolvedPath": "..\\data\\kyrgyz\\mostRead\\index.json"
      },
      {
        "source": "../../../../data/afrique/homePage/index.json",
        "resolvedPath": "..\\data\\afrique\\homePage\\index.json"
      },
      {
        "source": "../react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\Curation\\index.tsx"
      },
      {
        "source": "../../models/types/curationData",
        "resolvedPath": "src\\app\\models\\types\\curationData.ts"
      },
      {
        "source": "../MostRead/types",
        "resolvedPath": "src\\app\\components\\MostRead\\types.ts"
      },
      {
        "source": "../../models/types/radioSchedule",
        "resolvedPath": "src\\app\\models\\types\\radioSchedule.ts"
      }
    ]
  },
  "src\\app\\components\\Curation\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\Curation\\index.test.tsx",
      "src\\app\\pages\\HomePage\\HomePage.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "#app/models/types/curationData",
        "resolvedPath": "#app/models/types/curationData"
      },
      {
        "source": "#app/legacy/containers/RadioSchedule",
        "resolvedPath": "#app/legacy/containers/RadioSchedule"
      },
      {
        "source": "../VisuallyHiddenText",
        "resolvedPath": "src\\app\\components\\VisuallyHiddenText\\index.tsx"
      },
      {
        "source": "./CurationGrid",
        "resolvedPath": "src\\app\\components\\Curation\\CurationGrid\\index.tsx"
      },
      {
        "source": "./HierarchicalGrid",
        "resolvedPath": "src\\app\\components\\Curation\\HierarchicalGrid\\index.tsx"
      },
      {
        "source": "./Subhead",
        "resolvedPath": "src\\app\\components\\Curation\\Subhead\\index.tsx"
      },
      {
        "source": "./getComponentName",
        "resolvedPath": "src\\app\\components\\Curation\\getComponentName\\index.ts"
      },
      {
        "source": "../MessageBanner",
        "resolvedPath": "src\\app\\components\\MessageBanner\\index.tsx"
      },
      {
        "source": "../MostRead",
        "resolvedPath": "src\\app\\components\\MostRead\\index.tsx"
      },
      {
        "source": "../ThemeProvider/palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "../Embeds/OEmbed",
        "resolvedPath": "src\\app\\components\\Embeds\\OEmbed\\index.tsx"
      },
      {
        "source": "../Billboard",
        "resolvedPath": "src\\app\\components\\Billboard\\index.tsx"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\components\\Curation\\index.styles.ts"
      }
    ]
  },
  "src\\app\\components\\Curation\\Subhead\\index.stories.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../../../../server/utilities/serviceConfigs",
        "resolvedPath": "src\\server\\utilities\\serviceConfigs\\index.ts"
      },
      {
        "source": "../../ThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\index.tsx"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\Curation\\Subhead\\index.tsx"
      },
      {
        "source": "../../../models/types/storybook",
        "resolvedPath": "src\\app\\models\\types\\storybook.ts"
      }
    ]
  },
  "src\\app\\components\\Curation\\Subhead\\index.styles.ts": {
    "incomingDependencies": [
      "src\\app\\components\\Curation\\Subhead\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      }
    ]
  },
  "src\\app\\components\\Curation\\Subhead\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../../react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\Curation\\Subhead\\index.tsx"
      },
      {
        "source": "../../../models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global.ts"
      }
    ]
  },
  "src\\app\\components\\Curation\\Subhead\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\Curation\\index.tsx",
      "src\\app\\components\\Curation\\Subhead\\index.stories.tsx",
      "src\\app\\components\\Curation\\Subhead\\index.test.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\components\\Curation\\Subhead\\index.styles.ts"
      },
      {
        "source": "../../icons",
        "resolvedPath": "src\\app\\components\\icons\\index.tsx"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\Curation\\types.ts": {
    "incomingDependencies": [
      "src\\app\\components\\Curation\\CurationGrid\\index.tsx",
      "src\\app\\components\\Curation\\HierarchicalGrid\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "#app/models/types/curationData",
        "resolvedPath": "#app/models/types/curationData"
      }
    ]
  },
  "src\\app\\components\\DecoratedInline\\fixture.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\DecoratedInline\\index.stories.tsx",
      "src\\app\\components\\DecoratedInline\\index.test.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "#app/models/types/optimo",
        "resolvedPath": "#app/models/types/optimo"
      }
    ]
  },
  "src\\app\\components\\DecoratedInline\\index.stories.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#app/models/types/optimo",
        "resolvedPath": "#app/models/types/optimo"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\DecoratedInline\\index.tsx"
      },
      {
        "source": "./fixture",
        "resolvedPath": "src\\app\\components\\DecoratedInline\\fixture.tsx"
      }
    ]
  },
  "src\\app\\components\\DecoratedInline\\index.style.ts": {
    "incomingDependencies": [
      "src\\app\\components\\DecoratedInline\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      }
    ]
  },
  "src\\app\\components\\DecoratedInline\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\DecoratedInline\\index.tsx"
      },
      {
        "source": "../react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "./fixture",
        "resolvedPath": "src\\app\\components\\DecoratedInline\\fixture.tsx"
      }
    ]
  },
  "src\\app\\components\\DecoratedInline\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\Caption\\index.tsx",
      "src\\app\\components\\DecoratedInline\\index.stories.tsx",
      "src\\app\\components\\DecoratedInline\\index.test.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "#app/legacy/containers/Blocks",
        "resolvedPath": "#app/legacy/containers/Blocks"
      },
      {
        "source": "#app/models/types/optimo",
        "resolvedPath": "#app/models/types/optimo"
      },
      {
        "source": "../Fragment",
        "resolvedPath": "src\\app\\components\\Fragment\\index.tsx"
      },
      {
        "source": "../DecoratedInlineLink",
        "resolvedPath": "src\\app\\components\\DecoratedInlineLink\\index.tsx"
      },
      {
        "source": "../Text",
        "resolvedPath": "src\\app\\components\\Text\\index.tsx"
      },
      {
        "source": "./index.style",
        "resolvedPath": "src\\app\\components\\DecoratedInline\\index.style.ts"
      }
    ]
  },
  "src\\app\\components\\DecoratedInlineLink\\index.stories.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#app/models/types/optimo",
        "resolvedPath": "#app/models/types/optimo"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\DecoratedInlineLink\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\DecoratedInlineLink\\index.style.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\DecoratedInlineLink\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      }
    ]
  },
  "src\\app\\components\\DecoratedInlineLink\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "./index",
        "resolvedPath": "src\\app\\components\\DecoratedInlineLink\\index.tsx"
      },
      {
        "source": "../react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      }
    ]
  },
  "src\\app\\components\\DecoratedInlineLink\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\Caption\\index.tsx",
      "src\\app\\components\\DecoratedInline\\index.tsx",
      "src\\app\\components\\DecoratedInlineLink\\index.stories.tsx",
      "src\\app\\components\\DecoratedInlineLink\\index.test.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#app/contexts/ServiceContext",
        "resolvedPath": "#app/contexts/ServiceContext"
      },
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "#app/legacy/containers/Blocks",
        "resolvedPath": "#app/legacy/containers/Blocks"
      },
      {
        "source": "#app/lib/utilities/makeRelativeUrlPath",
        "resolvedPath": "#app/lib/utilities/makeRelativeUrlPath"
      },
      {
        "source": "#app/models/types/optimo",
        "resolvedPath": "#app/models/types/optimo"
      },
      {
        "source": "./index.style",
        "resolvedPath": "src\\app\\components\\DecoratedInlineLink\\index.style.tsx"
      },
      {
        "source": "../Fragment",
        "resolvedPath": "src\\app\\components\\Fragment\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\Disclaimer\\index.stories.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../../contexts/ToggleContext",
        "resolvedPath": "src\\app\\contexts\\ToggleContext\\index.tsx"
      },
      {
        "source": "../../models/types/storybook",
        "resolvedPath": "src\\app\\models\\types\\storybook.ts"
      },
      {
        "source": "./metadata.json",
        "resolvedPath": "..\\EXIM\\Work\\iterate-ai\\dep-graph\\metadata.json"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\Disclaimer\\index.tsx"
      },
      {
        "source": "./README.md",
        "resolvedPath": "..\\EXIM\\Work\\iterate-ai\\dep-graph\\README.md"
      }
    ]
  },
  "src\\app\\components\\Disclaimer\\index.styles.ts": {
    "incomingDependencies": [
      "src\\app\\components\\Disclaimer\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "../../utilities/pixelsToRem",
        "resolvedPath": "src\\app\\utilities\\pixelsToRem\\index.ts"
      }
    ]
  },
  "src\\app\\components\\Disclaimer\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#contexts/ToggleContext",
        "resolvedPath": "#contexts/ToggleContext"
      },
      {
        "source": "#contexts/ServiceContext",
        "resolvedPath": "#contexts/ServiceContext"
      },
      {
        "source": "../react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\Disclaimer\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\Disclaimer\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\Disclaimer\\index.stories.tsx",
      "src\\app\\components\\Disclaimer\\index.test.tsx",
      "src\\app\\pages\\ArticlePage\\ArticlePage.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "ramda/src/isEmpty",
        "resolvedPath": "ramda/src/isEmpty"
      },
      {
        "source": "../../legacy/components/Grid",
        "resolvedPath": "src\\app\\legacy\\components\\Grid\\index.jsx"
      },
      {
        "source": "../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../../contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext\\index.tsx"
      },
      {
        "source": "../../hooks/useToggle",
        "resolvedPath": "src\\app\\hooks\\useToggle\\index.js"
      },
      {
        "source": "../../routes/utils/pageTypes",
        "resolvedPath": "src\\app\\routes\\utils\\pageTypes.ts"
      },
      {
        "source": "../Text",
        "resolvedPath": "src\\app\\components\\Text\\index.tsx"
      },
      {
        "source": "../InlineLink",
        "resolvedPath": "src\\app\\components\\InlineLink\\index.tsx"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\components\\Disclaimer\\index.styles.ts"
      }
    ]
  },
  "src\\app\\components\\EmbedConsentBanner\\ConsentBanner.styles.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\EmbedConsentBanner\\ConsentBanner.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "../../utilities/pixelsToRem",
        "resolvedPath": "src\\app\\utilities\\pixelsToRem\\index.ts"
      },
      {
        "source": "../ThemeProvider/focusIndicator",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\focusIndicator.ts"
      }
    ]
  },
  "src\\app\\components\\EmbedConsentBanner\\ConsentBanner.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "./ConsentBanner",
        "resolvedPath": "src\\app\\components\\EmbedConsentBanner\\ConsentBanner.tsx"
      },
      {
        "source": "../../hooks/useViewTracker",
        "resolvedPath": "src\\app\\hooks\\useViewTracker\\index.jsx"
      }
    ]
  },
  "src\\app\\components\\EmbedConsentBanner\\ConsentBanner.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\EmbedConsentBanner\\ConsentBanner.test.tsx",
      "src\\app\\components\\EmbedConsentBanner\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "#app/contexts/RequestContext",
        "resolvedPath": "#app/contexts/RequestContext"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": "../Text",
        "resolvedPath": "src\\app\\components\\Text\\index.tsx"
      },
      {
        "source": "../Paragraph",
        "resolvedPath": "src\\app\\components\\Paragraph\\index.tsx"
      },
      {
        "source": "../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../../models/types/translations",
        "resolvedPath": "src\\app\\models\\types\\translations.ts"
      },
      {
        "source": "../../hooks/useViewTracker",
        "resolvedPath": "src\\app\\hooks\\useViewTracker\\index.jsx"
      },
      {
        "source": "./ConsentBanner.styles",
        "resolvedPath": "src\\app\\components\\EmbedConsentBanner\\ConsentBanner.styles.tsx"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\EmbedConsentBanner\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\EmbedConsentBanner\\index.stories.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "./metadata.json",
        "resolvedPath": "..\\EXIM\\Work\\iterate-ai\\dep-graph\\metadata.json"
      },
      {
        "source": "./README.md",
        "resolvedPath": "..\\EXIM\\Work\\iterate-ai\\dep-graph\\README.md"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\EmbedConsentBanner\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\EmbedConsentBanner\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\EmbedConsentBanner\\index.tsx"
      },
      {
        "source": "../../hooks/useClickTrackerHandler",
        "resolvedPath": "src\\app\\hooks\\useClickTrackerHandler\\index.jsx"
      }
    ]
  },
  "src\\app\\components\\EmbedConsentBanner\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\EmbedConsentBanner\\ConsentBanner.tsx",
      "src\\app\\components\\EmbedConsentBanner\\index.stories.tsx",
      "src\\app\\components\\EmbedConsentBanner\\index.test.tsx",
      "src\\app\\legacy\\psammead\\psammead-social-embed\\src\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "./ConsentBanner",
        "resolvedPath": "src\\app\\components\\EmbedConsentBanner\\ConsentBanner.tsx"
      },
      {
        "source": "../../models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global.ts"
      },
      {
        "source": "../../hooks/useClickTrackerHandler",
        "resolvedPath": "src\\app\\hooks\\useClickTrackerHandler\\index.jsx"
      }
    ]
  },
  "src\\app\\components\\Embeds\\AmpIframeEmbed\\index.stories.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\Embeds\\AmpIframeEmbed\\index.tsx"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../../../contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext\\index.tsx"
      },
      {
        "source": "../../../routes/utils/pageTypes",
        "resolvedPath": "src\\app\\routes\\utils\\pageTypes.ts"
      },
      {
        "source": "../../../models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global.ts"
      },
      {
        "source": "../types",
        "resolvedPath": "src\\app\\components\\Embeds\\types.ts"
      }
    ]
  },
  "src\\app\\components\\Embeds\\AmpIframeEmbed\\index.styles.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\Embeds\\AmpIframeEmbed\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      }
    ]
  },
  "src\\app\\components\\Embeds\\AmpIframeEmbed\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../../react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\Embeds\\AmpIframeEmbed\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\Embeds\\AmpIframeEmbed\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\Embeds\\AmpIframeEmbed\\index.stories.tsx",
      "src\\app\\components\\Embeds\\AmpIframeEmbed\\index.test.tsx",
      "src\\app\\components\\Embeds\\OEmbed\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "../../AmpIframe",
        "resolvedPath": "src\\app\\components\\AmpIframe\\index.tsx"
      },
      {
        "source": "../types",
        "resolvedPath": "src\\app\\components\\Embeds\\types.ts"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\components\\Embeds\\AmpIframeEmbed\\index.styles.tsx"
      }
    ]
  },
  "src\\app\\components\\Embeds\\EmbedError\\index.stories.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\Embeds\\EmbedError\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\Embeds\\EmbedError\\index.styles.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\Embeds\\EmbedError\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "../../../utilities/pixelsToRem",
        "resolvedPath": "src\\app\\utilities\\pixelsToRem\\index.ts"
      }
    ]
  },
  "src\\app\\components\\Embeds\\EmbedError\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#app/components/react-testing-library-with-providers",
        "resolvedPath": "#app/components/react-testing-library-with-providers"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\Embeds\\EmbedError\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\Embeds\\EmbedError\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\Embeds\\EmbedError\\index.stories.tsx",
      "src\\app\\components\\Embeds\\EmbedError\\index.test.tsx",
      "src\\app\\components\\Embeds\\OEmbed\\index.tsx",
      "src\\app\\components\\Embeds\\UnsupportedEmbed\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\components\\Embeds\\EmbedError\\index.styles.tsx"
      },
      {
        "source": "../../InlineLink",
        "resolvedPath": "src\\app\\components\\InlineLink\\index.tsx"
      },
      {
        "source": "../../Text",
        "resolvedPath": "src\\app\\components\\Text\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\Embeds\\EmbedHtml\\fixtures.ts": {
    "incomingDependencies": [
      "src\\app\\components\\Embeds\\EmbedHtml\\index.stories.tsx"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\components\\Embeds\\EmbedHtml\\index.stories.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\Embeds\\EmbedHtml\\index.tsx"
      },
      {
        "source": "./fixtures",
        "resolvedPath": "src\\app\\components\\Embeds\\EmbedHtml\\fixtures.ts"
      }
    ]
  },
  "src\\app\\components\\Embeds\\EmbedHtml\\index.styles.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\Embeds\\EmbedHtml\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      }
    ]
  },
  "src\\app\\components\\Embeds\\EmbedHtml\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../../react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\Embeds\\EmbedHtml\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\Embeds\\EmbedHtml\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\Embeds\\EmbedHtml\\index.stories.tsx",
      "src\\app\\components\\Embeds\\EmbedHtml\\index.test.tsx",
      "src\\app\\components\\Embeds\\OEmbed\\index.tsx",
      "src\\app\\pages\\ArticlePage\\ArticlePage.tsx",
      "src\\app\\pages\\MediaArticlePage\\MediaArticlePage.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\components\\Embeds\\EmbedHtml\\index.styles.tsx"
      }
    ]
  },
  "src\\app\\components\\Embeds\\EmbedImages\\fixtures.ts": {
    "incomingDependencies": [
      "src\\app\\components\\Embeds\\EmbedImages\\index.stories.tsx",
      "src\\app\\components\\Embeds\\EmbedImages\\index.test.tsx"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\components\\Embeds\\EmbedImages\\index.stories.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\Embeds\\EmbedImages\\index.tsx"
      },
      {
        "source": "./fixtures",
        "resolvedPath": "src\\app\\components\\Embeds\\EmbedImages\\fixtures.ts"
      }
    ]
  },
  "src\\app\\components\\Embeds\\EmbedImages\\index.styles.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\Embeds\\EmbedImages\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      }
    ]
  },
  "src\\app\\components\\Embeds\\EmbedImages\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../../react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "./fixtures",
        "resolvedPath": "src\\app\\components\\Embeds\\EmbedImages\\fixtures.ts"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\Embeds\\EmbedImages\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\Embeds\\EmbedImages\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\Embeds\\EmbedImages\\index.stories.tsx",
      "src\\app\\components\\Embeds\\EmbedImages\\index.test.tsx",
      "src\\app\\pages\\ArticlePage\\ArticlePage.tsx",
      "src\\app\\pages\\MediaArticlePage\\MediaArticlePage.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#app/contexts/RequestContext",
        "resolvedPath": "#app/contexts/RequestContext"
      },
      {
        "source": "#app/lib/utilities/getEnvConfig",
        "resolvedPath": "#app/lib/utilities/getEnvConfig"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\components\\Embeds\\EmbedImages\\index.styles.tsx"
      },
      {
        "source": "../../Image",
        "resolvedPath": "src\\app\\components\\Image\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\Embeds\\FlourishEmbed\\fixtures.ts": {
    "incomingDependencies": [
      "src\\app\\components\\Embeds\\FlourishEmbed\\index.stories.tsx"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\components\\Embeds\\FlourishEmbed\\index.stories.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "./fixtures",
        "resolvedPath": "src\\app\\components\\Embeds\\FlourishEmbed\\fixtures.ts"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\Embeds\\FlourishEmbed\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\Embeds\\FlourishEmbed\\index.styles.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\Embeds\\FlourishEmbed\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      }
    ]
  },
  "src\\app\\components\\Embeds\\FlourishEmbed\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "react-helmet",
        "resolvedPath": "react-helmet"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\Embeds\\FlourishEmbed\\index.tsx"
      },
      {
        "source": "../../react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "../types",
        "resolvedPath": "src\\app\\components\\Embeds\\types.ts"
      }
    ]
  },
  "src\\app\\components\\Embeds\\FlourishEmbed\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\Embeds\\FlourishEmbed\\index.stories.tsx",
      "src\\app\\components\\Embeds\\FlourishEmbed\\index.test.tsx",
      "src\\app\\components\\Embeds\\OEmbed\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "react-helmet",
        "resolvedPath": "react-helmet"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\components\\Embeds\\FlourishEmbed\\index.styles.tsx"
      },
      {
        "source": "../types",
        "resolvedPath": "src\\app\\components\\Embeds\\types.ts"
      }
    ]
  },
  "src\\app\\components\\Embeds\\OEmbed\\fixtures.ts": {
    "incomingDependencies": [
      "src\\app\\components\\Embeds\\OEmbed\\index.test.tsx"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\components\\Embeds\\OEmbed\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../../react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "../types",
        "resolvedPath": "src\\app\\components\\Embeds\\types.ts"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../../../contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext\\index.tsx"
      },
      {
        "source": "../../../routes/utils/pageTypes",
        "resolvedPath": "src\\app\\routes\\utils\\pageTypes.ts"
      },
      {
        "source": "../../../models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global.ts"
      },
      {
        "source": "./fixtures",
        "resolvedPath": "src\\app\\components\\Embeds\\OEmbed\\fixtures.ts"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\Embeds\\OEmbed\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\Embeds\\OEmbed\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\Curation\\index.tsx",
      "src\\app\\components\\Embeds\\OEmbed\\index.test.tsx",
      "src\\app\\pages\\ArticlePage\\ArticlePage.tsx",
      "src\\app\\pages\\MediaArticlePage\\MediaArticlePage.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "../../../contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext\\index.tsx"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../EmbedHtml",
        "resolvedPath": "src\\app\\components\\Embeds\\EmbedHtml\\index.tsx"
      },
      {
        "source": "../EmbedError",
        "resolvedPath": "src\\app\\components\\Embeds\\EmbedError\\index.tsx"
      },
      {
        "source": "../FlourishEmbed",
        "resolvedPath": "src\\app\\components\\Embeds\\FlourishEmbed\\index.tsx"
      },
      {
        "source": "../AmpIframeEmbed",
        "resolvedPath": "src\\app\\components\\Embeds\\AmpIframeEmbed\\index.tsx"
      },
      {
        "source": "../types",
        "resolvedPath": "src\\app\\components\\Embeds\\types.ts"
      }
    ]
  },
  "src\\app\\components\\Embeds\\types.ts": {
    "incomingDependencies": [
      "src\\app\\components\\Embeds\\AmpIframeEmbed\\index.stories.tsx",
      "src\\app\\components\\Embeds\\AmpIframeEmbed\\index.tsx",
      "src\\app\\components\\Embeds\\FlourishEmbed\\index.test.tsx",
      "src\\app\\components\\Embeds\\FlourishEmbed\\index.tsx",
      "src\\app\\components\\Embeds\\OEmbed\\index.test.tsx",
      "src\\app\\components\\Embeds\\OEmbed\\index.tsx"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\components\\Embeds\\UnsupportedEmbed\\fixtures.ts": {
    "incomingDependencies": [
      "src\\app\\components\\Embeds\\UnsupportedEmbed\\index.test.tsx"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\components\\Embeds\\UnsupportedEmbed\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../../react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "../../../routes/utils/pageTypes",
        "resolvedPath": "src\\app\\routes\\utils\\pageTypes.ts"
      },
      {
        "source": "./fixtures",
        "resolvedPath": "src\\app\\components\\Embeds\\UnsupportedEmbed\\fixtures.ts"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\Embeds\\UnsupportedEmbed\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\Embeds\\UnsupportedEmbed\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\Embeds\\UnsupportedEmbed\\index.test.tsx",
      "src\\app\\pages\\ArticlePage\\ArticlePage.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "../../../contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext\\index.tsx"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../EmbedError",
        "resolvedPath": "src\\app\\components\\Embeds\\EmbedError\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\Embeds\\Uploader\\fixtures.ts": {
    "incomingDependencies": [
      "src\\app\\components\\Embeds\\Uploader\\index.stories.tsx",
      "src\\app\\components\\Embeds\\Uploader\\index.test.tsx"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\components\\Embeds\\Uploader\\index.stories.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#app/contexts/ToggleContext",
        "resolvedPath": "#app/contexts/ToggleContext"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\Embeds\\Uploader\\index.tsx"
      },
      {
        "source": "./fixtures",
        "resolvedPath": "src\\app\\components\\Embeds\\Uploader\\fixtures.ts"
      },
      {
        "source": "./metadata.json",
        "resolvedPath": "..\\EXIM\\Work\\iterate-ai\\dep-graph\\metadata.json"
      }
    ]
  },
  "src\\app\\components\\Embeds\\Uploader\\index.styles.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\Embeds\\Uploader\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "#app/utilities/pixelsToRem",
        "resolvedPath": "#app/utilities/pixelsToRem"
      }
    ]
  },
  "src\\app\\components\\Embeds\\Uploader\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../../react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\Embeds\\Uploader\\index.tsx"
      },
      {
        "source": "./fixtures",
        "resolvedPath": "src\\app\\components\\Embeds\\Uploader\\fixtures.ts"
      }
    ]
  },
  "src\\app\\components\\Embeds\\Uploader\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\Embeds\\Uploader\\index.stories.tsx",
      "src\\app\\components\\Embeds\\Uploader\\index.test.tsx",
      "src\\app\\pages\\ArticlePage\\ArticlePage.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "ramda/src/path",
        "resolvedPath": "ramda/src/path"
      },
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../../Paragraph",
        "resolvedPath": "src\\app\\components\\Paragraph\\index.tsx"
      },
      {
        "source": "../../Text",
        "resolvedPath": "src\\app\\components\\Text\\index.tsx"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\components\\Embeds\\Uploader\\index.styles.tsx"
      },
      {
        "source": "../../icons",
        "resolvedPath": "src\\app\\components\\icons\\index.tsx"
      },
      {
        "source": "../../CallToActionLink",
        "resolvedPath": "src\\app\\components\\CallToActionLink\\index.tsx"
      },
      {
        "source": "../../../lib/utilities/idSanitiser",
        "resolvedPath": "src\\app\\lib\\utilities\\idSanitiser\\index.js"
      }
    ]
  },
  "src\\app\\components\\Footer\\index.styles.ts": {
    "incomingDependencies": [
      "src\\app\\components\\Footer\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "../ThemeProvider/spacings",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\spacings.ts"
      },
      {
        "source": "../ThemeProvider/mediaQueries",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\mediaQueries.ts"
      }
    ]
  },
  "src\\app\\components\\Footer\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#app/components/Footer",
        "resolvedPath": "#app/components/Footer"
      },
      {
        "source": "../react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      }
    ]
  },
  "src\\app\\components\\Footer\\index.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#containers/ConsentBanner/Banner/cookie.amp",
        "resolvedPath": "#containers/ConsentBanner/Banner/cookie.amp"
      },
      {
        "source": "#app/contexts/RequestContext",
        "resolvedPath": "#app/contexts/RequestContext"
      },
      {
        "source": "#app/contexts/ServiceContext",
        "resolvedPath": "#app/contexts/ServiceContext"
      },
      {
        "source": "./Link",
        "resolvedPath": "src\\app\\components\\Footer\\Link\\index.tsx"
      },
      {
        "source": "./List",
        "resolvedPath": "src\\app\\components\\Footer\\List\\index.tsx"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\components\\Footer\\index.styles.ts"
      }
    ]
  },
  "src\\app\\components\\Footer\\Link\\index.styles.ts": {
    "incomingDependencies": [
      "src\\app\\components\\Footer\\Link\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      }
    ]
  },
  "src\\app\\components\\Footer\\Link\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\Footer\\index.tsx",
      "src\\app\\components\\Footer\\List\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#app/models/types/serviceConfig",
        "resolvedPath": "#app/models/types/serviceConfig"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\components\\Footer\\Link\\index.styles.ts"
      }
    ]
  },
  "src\\app\\components\\Footer\\List\\index.styles.ts": {
    "incomingDependencies": [
      "src\\app\\components\\Footer\\List\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "#psammead/psammead-styles/src/detection",
        "resolvedPath": "#psammead/psammead-styles/src/detection"
      },
      {
        "source": "#app/models/types/serviceConfig",
        "resolvedPath": "#app/models/types/serviceConfig"
      },
      {
        "source": "../../ThemeProvider/mediaQueries",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\mediaQueries.ts"
      }
    ]
  },
  "src\\app\\components\\Footer\\List\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\Footer\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "#app/models/types/serviceConfig",
        "resolvedPath": "#app/models/types/serviceConfig"
      },
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../Link",
        "resolvedPath": "src\\app\\components\\Footer\\Link\\index.tsx"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\components\\Footer\\List\\index.styles.ts"
      }
    ]
  },
  "src\\app\\components\\Fragment\\index.stories.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\Fragment\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\Fragment\\index.style.ts": {
    "incomingDependencies": [
      "src\\app\\components\\Fragment\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      }
    ]
  },
  "src\\app\\components\\Fragment\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\Fragment\\index.tsx"
      },
      {
        "source": "../react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      }
    ]
  },
  "src\\app\\components\\Fragment\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\Caption\\index.tsx",
      "src\\app\\components\\DecoratedInline\\index.tsx",
      "src\\app\\components\\DecoratedInlineLink\\index.tsx",
      "src\\app\\components\\Fragment\\index.stories.tsx",
      "src\\app\\components\\Fragment\\index.test.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "./index.style",
        "resolvedPath": "src\\app\\components\\Fragment\\index.style.ts"
      }
    ]
  },
  "src\\app\\components\\FrostedGlassPromo\\fixtures.ts": {
    "incomingDependencies": [
      "src\\app\\components\\FrostedGlassPromo\\index.stories.tsx",
      "src\\app\\components\\FrostedGlassPromo\\index.test.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "./types",
        "resolvedPath": "src\\app\\components\\FrostedGlassPromo\\types.ts"
      }
    ]
  },
  "src\\app\\components\\FrostedGlassPromo\\FrostedGlassPanel.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\FrostedGlassPromo\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../../hooks/useImageColour",
        "resolvedPath": "src\\app\\hooks\\useImageColour\\index.js"
      },
      {
        "source": "./styles",
        "resolvedPath": "src\\app\\components\\FrostedGlassPromo\\styles.ts"
      }
    ]
  },
  "src\\app\\components\\FrostedGlassPromo\\index.stories.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\FrostedGlassPromo\\index.tsx"
      },
      {
        "source": "./fixtures",
        "resolvedPath": "src\\app\\components\\FrostedGlassPromo\\fixtures.ts"
      }
    ]
  },
  "src\\app\\components\\FrostedGlassPromo\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../../contexts/ToggleContext",
        "resolvedPath": "src\\app\\contexts\\ToggleContext\\index.tsx"
      },
      {
        "source": "../../contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext\\index.tsx"
      },
      {
        "source": "../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../../routes/utils/pageTypes",
        "resolvedPath": "src\\app\\routes\\utils\\pageTypes.ts"
      },
      {
        "source": "../../lib/utilities/makeRelativeUrlPath",
        "resolvedPath": "src\\app\\lib\\utilities\\makeRelativeUrlPath\\index.js"
      },
      {
        "source": "../../hooks/useClickTrackerHandler",
        "resolvedPath": "src\\app\\hooks\\useClickTrackerHandler\\index.jsx"
      },
      {
        "source": "../react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "../../models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global.ts"
      },
      {
        "source": "./fixtures",
        "resolvedPath": "src\\app\\components\\FrostedGlassPromo\\fixtures.ts"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\FrostedGlassPromo\\index.tsx"
      },
      {
        "source": "./types",
        "resolvedPath": "src\\app\\components\\FrostedGlassPromo\\types.ts"
      }
    ]
  },
  "src\\app\\components\\FrostedGlassPromo\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\FrostedGlassPromo\\index.stories.tsx",
      "src\\app\\components\\FrostedGlassPromo\\index.test.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "ramda/src/pick",
        "resolvedPath": "ramda/src/pick"
      },
      {
        "source": "react-lazyload",
        "resolvedPath": "react-lazyload"
      },
      {
        "source": "../Image",
        "resolvedPath": "src\\app\\components\\Image\\index.tsx"
      },
      {
        "source": "../../lib/utilities/makeRelativeUrlPath",
        "resolvedPath": "src\\app\\lib\\utilities\\makeRelativeUrlPath\\index.js"
      },
      {
        "source": "../../hooks/useClickTrackerHandler",
        "resolvedPath": "src\\app\\hooks\\useClickTrackerHandler\\index.jsx"
      },
      {
        "source": "../../contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext\\index.tsx"
      },
      {
        "source": "./FrostedGlassPanel",
        "resolvedPath": "src\\app\\components\\FrostedGlassPromo\\FrostedGlassPanel.tsx"
      },
      {
        "source": "./withData",
        "resolvedPath": "src\\app\\components\\FrostedGlassPromo\\withData.tsx"
      },
      {
        "source": "./styles",
        "resolvedPath": "src\\app\\components\\FrostedGlassPromo\\styles.ts"
      },
      {
        "source": "../../models/types/eventTracking",
        "resolvedPath": "src\\app\\models\\types\\eventTracking.ts"
      },
      {
        "source": "./types",
        "resolvedPath": "src\\app\\components\\FrostedGlassPromo\\types.ts"
      }
    ]
  },
  "src\\app\\components\\FrostedGlassPromo\\lazy.tsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\CpsFeaturesAnalysis\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@loadable/component",
        "resolvedPath": "@loadable/component"
      }
    ]
  },
  "src\\app\\components\\FrostedGlassPromo\\styles.ts": {
    "incomingDependencies": [
      "src\\app\\components\\FrostedGlassPromo\\FrostedGlassPanel.tsx",
      "src\\app\\components\\FrostedGlassPromo\\index.tsx",
      "src\\app\\components\\FrostedGlassPromo\\withData.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      }
    ]
  },
  "src\\app\\components\\FrostedGlassPromo\\types.ts": {
    "incomingDependencies": [
      "src\\app\\components\\FrostedGlassPromo\\fixtures.ts",
      "src\\app\\components\\FrostedGlassPromo\\index.test.tsx",
      "src\\app\\components\\FrostedGlassPromo\\index.tsx",
      "src\\app\\components\\FrostedGlassPromo\\withData.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../../models/types/eventTracking",
        "resolvedPath": "src\\app\\models\\types\\eventTracking.ts"
      }
    ]
  },
  "src\\app\\components\\FrostedGlassPromo\\withData.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\FrostedGlassPromo\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "ramda/src/path",
        "resolvedPath": "ramda/src/path"
      },
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "ramda/src/pick",
        "resolvedPath": "ramda/src/pick"
      },
      {
        "source": "../../legacy/components/Promo/timestamp",
        "resolvedPath": "src\\app\\legacy\\components\\Promo\\timestamp.jsx"
      },
      {
        "source": "../../lib/utilities/imageSrcHelpers/originCode",
        "resolvedPath": "src\\app\\lib\\utilities\\imageSrcHelpers\\originCode.js"
      },
      {
        "source": "../../lib/utilities/imageSrcHelpers/locator",
        "resolvedPath": "src\\app\\lib\\utilities\\imageSrcHelpers\\locator.js"
      },
      {
        "source": "../../lib/utilities/ichefURL",
        "resolvedPath": "src\\app\\lib\\utilities\\ichefURL\\index.js"
      },
      {
        "source": "../../lib/utilities/srcSet",
        "resolvedPath": "src\\app\\lib\\utilities\\srcSet\\index.js"
      },
      {
        "source": "../../contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext\\index.tsx"
      },
      {
        "source": "./styles",
        "resolvedPath": "src\\app\\components\\FrostedGlassPromo\\styles.ts"
      },
      {
        "source": "./types",
        "resolvedPath": "src\\app\\components\\FrostedGlassPromo\\types.ts"
      },
      {
        "source": "../../models/types/optimo",
        "resolvedPath": "src\\app\\models\\types\\optimo.ts"
      }
    ]
  },
  "src\\app\\components\\Header\\ScriptLink\\index.stories.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#app/contexts/ServiceContext",
        "resolvedPath": "#app/contexts/ServiceContext"
      },
      {
        "source": "#app/models/types/serviceConfig",
        "resolvedPath": "#app/models/types/serviceConfig"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\Header\\ScriptLink\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\Header\\ScriptLink\\index.styles.ts": {
    "incomingDependencies": [
      "src\\app\\components\\Header\\ScriptLink\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      }
    ]
  },
  "src\\app\\components\\Header\\ScriptLink\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "react-router-dom",
        "resolvedPath": "react-router-dom"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "#contexts/RequestContext"
      },
      {
        "source": "#contexts/ToggleContext",
        "resolvedPath": "#contexts/ToggleContext"
      },
      {
        "source": "#app/routes/utils/regex",
        "resolvedPath": "#app/routes/utils/regex"
      },
      {
        "source": "../../react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "../../../lib/config/services/ukchina",
        "resolvedPath": "src\\app\\lib\\config\\services\\ukchina.ts"
      },
      {
        "source": "../../../lib/config/services/serbian",
        "resolvedPath": "src\\app\\lib\\config\\services\\serbian.ts"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\Header\\ScriptLink\\index.tsx"
      },
      {
        "source": "../../ThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\Header\\ScriptLink\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\Header\\ScriptLink\\index.stories.tsx",
      "src\\app\\components\\Header\\ScriptLink\\index.test.tsx",
      "src\\app\\legacy\\psammead\\psammead-brand\\src\\index.stories.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "path-to-regexp",
        "resolvedPath": "path-to-regexp"
      },
      {
        "source": "ramda/src/clone",
        "resolvedPath": "ramda/src/clone"
      },
      {
        "source": "react-router-dom",
        "resolvedPath": "react-router-dom"
      },
      {
        "source": "#hooks/useToggle",
        "resolvedPath": "#hooks/useToggle"
      },
      {
        "source": "#app/models/types/global",
        "resolvedPath": "#app/models/types/global"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../../../contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext\\index.tsx"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\components\\Header\\ScriptLink\\index.styles.ts"
      }
    ]
  },
  "src\\app\\components\\Heading\\index.stories.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#app/models/types/theming",
        "resolvedPath": "#app/models/types/theming"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\Heading\\index.tsx"
      },
      {
        "source": "./README.md",
        "resolvedPath": "..\\EXIM\\Work\\iterate-ai\\dep-graph\\README.md"
      },
      {
        "source": "../../models/types/storybook",
        "resolvedPath": "src\\app\\models\\types\\storybook.ts"
      }
    ]
  },
  "src\\app\\components\\Heading\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\Heading\\index.tsx"
      },
      {
        "source": "../react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      }
    ]
  },
  "src\\app\\components\\Heading\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\Billboard\\index.tsx",
      "src\\app\\components\\Heading\\index.stories.tsx",
      "src\\app\\components\\Heading\\index.test.tsx",
      "src\\app\\components\\LiveLabel\\index.stories.tsx",
      "src\\app\\components\\MessageBanner\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "../../models/types/theming",
        "resolvedPath": "src\\app\\models\\types\\theming.ts"
      },
      {
        "source": "../Text",
        "resolvedPath": "src\\app\\components\\Text\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\icons\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\Byline\\index.tsx",
      "src\\app\\components\\Curation\\Subhead\\index.tsx",
      "src\\app\\components\\Embeds\\Uploader\\index.tsx",
      "src\\app\\components\\MessageBanner\\index.tsx",
      "src\\app\\components\\Pagination\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      }
    ]
  },
  "src\\app\\components\\Image\\base64Placeholder.ts": {
    "incomingDependencies": [
      "src\\app\\components\\Image\\index.styles.tsx",
      "src\\app\\components\\Image\\index.test.tsx"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\components\\Image\\index.stories.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../../../../.storybook/helpers/ampDecorator",
        "resolvedPath": ".storybook\\helpers\\ampDecorator\\index.jsx"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\Image\\index.tsx"
      },
      {
        "source": "./README.md",
        "resolvedPath": "..\\EXIM\\Work\\iterate-ai\\dep-graph\\README.md"
      }
    ]
  },
  "src\\app\\components\\Image\\index.styles.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\Image\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "./base64Placeholder",
        "resolvedPath": "src\\app\\components\\Image\\base64Placeholder.ts"
      }
    ]
  },
  "src\\app\\components\\Image\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "jsdom",
        "resolvedPath": "jsdom"
      },
      {
        "source": "../react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\Image\\index.tsx"
      },
      {
        "source": "./base64Placeholder",
        "resolvedPath": "src\\app\\components\\Image\\base64Placeholder.ts"
      },
      {
        "source": "../ThemeProvider/palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      }
    ]
  },
  "src\\app\\components\\Image\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\Byline\\index.tsx",
      "src\\app\\components\\Embeds\\EmbedImages\\index.tsx",
      "src\\app\\components\\FrostedGlassPromo\\index.tsx",
      "src\\app\\components\\Image\\index.stories.tsx",
      "src\\app\\components\\Image\\index.test.tsx",
      "src\\app\\components\\ImageWithCaption\\index.tsx",
      "src\\app\\components\\MediaLoader\\Placeholder\\index.tsx",
      "src\\app\\components\\MessageBanner\\index.tsx",
      "src\\app\\legacy\\components\\OptimoPromos\\Image\\index.jsx",
      "src\\app\\legacy\\components\\Promo\\image.jsx",
      "src\\app\\legacy\\containers\\StoryPromo\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "react-helmet",
        "resolvedPath": "react-helmet"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\components\\Image\\index.styles.tsx"
      },
      {
        "source": "../../contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext\\index.tsx"
      },
      {
        "source": "../../routes/utils/pageTypes",
        "resolvedPath": "src\\app\\routes\\utils\\pageTypes.ts"
      }
    ]
  },
  "src\\app\\components\\ImageWithCaption\\fixtureData.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ImageWithCaption\\index.stories.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "#models/blocks",
        "resolvedPath": "#models/blocks"
      }
    ]
  },
  "src\\app\\components\\ImageWithCaption\\index.stories.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\ImageWithCaption\\index.tsx"
      },
      {
        "source": "./fixtureData",
        "resolvedPath": "src\\app\\components\\ImageWithCaption\\fixtureData.ts"
      }
    ]
  },
  "src\\app\\components\\ImageWithCaption\\index.styles.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ImageWithCaption\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      }
    ]
  },
  "src\\app\\components\\ImageWithCaption\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#psammead/psammead-test-helpers/src",
        "resolvedPath": "#psammead/psammead-test-helpers/src"
      },
      {
        "source": "#models/blocks",
        "resolvedPath": "#models/blocks"
      },
      {
        "source": "../react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "./index",
        "resolvedPath": "src\\app\\components\\ImageWithCaption\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\ImageWithCaption\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\ImageWithCaption\\index.stories.tsx",
      "src\\app\\components\\ImageWithCaption\\index.test.tsx",
      "src\\app\\pages\\ArticlePage\\ArticlePage.tsx",
      "src\\app\\pages\\MediaArticlePage\\MediaArticlePage.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../../lib/utilities/ichefURL",
        "resolvedPath": "src\\app\\lib\\utilities\\ichefURL\\index.js"
      },
      {
        "source": "../../lib/utilities/pageAnchor",
        "resolvedPath": "src\\app\\lib\\utilities\\pageAnchor\\index.js"
      },
      {
        "source": "../../lib/utilities/srcSet",
        "resolvedPath": "src\\app\\lib\\utilities\\srcSet\\index.js"
      },
      {
        "source": "../../lib/utilities/blockHandlers",
        "resolvedPath": "src\\app\\lib\\utilities\\blockHandlers\\index.js"
      },
      {
        "source": "../Copyright",
        "resolvedPath": "src\\app\\components\\Copyright\\index.tsx"
      },
      {
        "source": "../Caption",
        "resolvedPath": "src\\app\\components\\Caption\\index.tsx"
      },
      {
        "source": "../Image",
        "resolvedPath": "src\\app\\components\\Image\\index.tsx"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\components\\ImageWithCaption\\index.styles.ts"
      },
      {
        "source": "../../contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\InlineLink\\index.stories.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../../models/types/storybook",
        "resolvedPath": "src\\app\\models\\types\\storybook.ts"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\InlineLink\\index.tsx"
      },
      {
        "source": "../Text",
        "resolvedPath": "src\\app\\components\\Text\\index.tsx"
      },
      {
        "source": "./README.md",
        "resolvedPath": "..\\EXIM\\Work\\iterate-ai\\dep-graph\\README.md"
      }
    ]
  },
  "src\\app\\components\\InlineLink\\index.styles.ts": {
    "incomingDependencies": [
      "src\\app\\components\\InlineLink\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "../../utilities/pixelsToRem",
        "resolvedPath": "src\\app\\utilities\\pixelsToRem\\index.ts"
      }
    ]
  },
  "src\\app\\components\\InlineLink\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\InlineLink\\index.tsx"
      },
      {
        "source": "../react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      }
    ]
  },
  "src\\app\\components\\InlineLink\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\Disclaimer\\index.tsx",
      "src\\app\\components\\Embeds\\EmbedError\\index.tsx",
      "src\\app\\components\\InlineLink\\index.stories.tsx",
      "src\\app\\components\\InlineLink\\index.test.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "url-parse",
        "resolvedPath": "url-parse"
      },
      {
        "source": "../../models/types/theming",
        "resolvedPath": "src\\app\\models\\types\\theming.ts"
      },
      {
        "source": "../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\components\\InlineLink\\index.styles.ts"
      }
    ]
  },
  "src\\app\\components\\LinkedData\\getAboutTagsContent.test.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "./types",
        "resolvedPath": "src\\app\\components\\LinkedData\\types.ts"
      },
      {
        "source": "./getAboutTagsContent",
        "resolvedPath": "src\\app\\components\\LinkedData\\getAboutTagsContent.ts"
      }
    ]
  },
  "src\\app\\components\\LinkedData\\getAboutTagsContent.ts": {
    "incomingDependencies": [
      "src\\app\\components\\LinkedData\\getAboutTagsContent.test.ts",
      "src\\app\\components\\LinkedData\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "./types",
        "resolvedPath": "src\\app\\components\\LinkedData\\types.ts"
      }
    ]
  },
  "src\\app\\components\\LinkedData\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "react-helmet",
        "resolvedPath": "react-helmet"
      },
      {
        "source": "ramda/src/assocPath",
        "resolvedPath": "ramda/src/assocPath"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "#contexts/RequestContext"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": "../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "../../models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global.ts"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\LinkedData\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\LinkedData\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\LinkedData\\index.test.tsx",
      "src\\app\\pages\\ArticlePage\\ArticlePage.tsx",
      "src\\app\\pages\\FeatureIdxPage\\FeatureIdxPage.jsx",
      "src\\app\\pages\\FrontPage\\FrontPage.jsx",
      "src\\app\\pages\\HomePage\\HomePage.tsx",
      "src\\app\\pages\\LiveRadioPage\\LiveRadioPage.tsx",
      "src\\app\\pages\\MediaArticlePage\\MediaArticlePage.tsx",
      "src\\app\\pages\\MostReadPage\\MostReadPage.jsx",
      "src\\app\\pages\\OnDemandAudioPage\\OnDemandAudioPage.tsx",
      "src\\app\\pages\\OnDemandTvPage\\OnDemandTvPage.tsx",
      "src\\app\\pages\\TopicPage\\TopicPage.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "react-helmet",
        "resolvedPath": "react-helmet"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "#contexts/RequestContext"
      },
      {
        "source": "#lib/utilities/serialiseForScript",
        "resolvedPath": "#lib/utilities/serialiseForScript"
      },
      {
        "source": "#lib/utilities/getBrandedImage",
        "resolvedPath": "#lib/utilities/getBrandedImage"
      },
      {
        "source": "../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "./getAboutTagsContent",
        "resolvedPath": "src\\app\\components\\LinkedData\\getAboutTagsContent.ts"
      },
      {
        "source": "./types",
        "resolvedPath": "src\\app\\components\\LinkedData\\types.ts"
      }
    ]
  },
  "src\\app\\components\\LinkedData\\types.ts": {
    "incomingDependencies": [
      "src\\app\\components\\LinkedData\\getAboutTagsContent.test.ts",
      "src\\app\\components\\LinkedData\\getAboutTagsContent.ts",
      "src\\app\\components\\LinkedData\\index.tsx"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\components\\LiveLabel\\index.stories.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#app/legacy/components/Promo",
        "resolvedPath": "#app/legacy/components/Promo"
      },
      {
        "source": "./index",
        "resolvedPath": "src\\app\\components\\LiveLabel\\index.tsx"
      },
      {
        "source": "./README.md",
        "resolvedPath": "..\\EXIM\\Work\\iterate-ai\\dep-graph\\README.md"
      },
      {
        "source": "../Heading",
        "resolvedPath": "src\\app\\components\\Heading\\index.tsx"
      },
      {
        "source": "./metadata.json",
        "resolvedPath": "..\\EXIM\\Work\\iterate-ai\\dep-graph\\metadata.json"
      }
    ]
  },
  "src\\app\\components\\LiveLabel\\index.styles.ts": {
    "incomingDependencies": [
      "src\\app\\components\\LiveLabel\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "#app/utilities/pixelsToRem",
        "resolvedPath": "#app/utilities/pixelsToRem"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      }
    ]
  },
  "src\\app\\components\\LiveLabel\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\LiveLabel\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\LiveLabel\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\Billboard\\index.tsx",
      "src\\app\\components\\Curation\\CurationPromo\\index.tsx",
      "src\\app\\components\\Curation\\HierarchicalGrid\\index.tsx",
      "src\\app\\components\\LiveLabel\\index.stories.tsx",
      "src\\app\\components\\LiveLabel\\index.test.tsx",
      "src\\app\\legacy\\psammead\\psammead-story-promo\\src\\index.test.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "./types",
        "resolvedPath": "src\\app\\components\\LiveLabel\\types.ts"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\components\\LiveLabel\\index.styles.ts"
      },
      {
        "source": "./Text",
        "resolvedPath": "src\\app\\components\\LiveLabel\\Text\\index.tsx"
      },
      {
        "source": "./Pulse",
        "resolvedPath": "src\\app\\components\\LiveLabel\\Pulse\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\LiveLabel\\Pulse\\index.styles.ts": {
    "incomingDependencies": [
      "src\\app\\components\\LiveLabel\\Pulse\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      }
    ]
  },
  "src\\app\\components\\LiveLabel\\Pulse\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\LiveLabel\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\components\\LiveLabel\\Pulse\\index.styles.ts"
      },
      {
        "source": "../types",
        "resolvedPath": "src\\app\\components\\LiveLabel\\types.ts"
      }
    ]
  },
  "src\\app\\components\\LiveLabel\\Text\\index.styles.ts": {
    "incomingDependencies": [
      "src\\app\\components\\LiveLabel\\Text\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      }
    ]
  },
  "src\\app\\components\\LiveLabel\\Text\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\LiveLabel\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "../../VisuallyHiddenText",
        "resolvedPath": "src\\app\\components\\VisuallyHiddenText\\index.tsx"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\components\\LiveLabel\\Text\\index.styles.ts"
      },
      {
        "source": "../types",
        "resolvedPath": "src\\app\\components\\LiveLabel\\types.ts"
      }
    ]
  },
  "src\\app\\components\\LiveLabel\\types.ts": {
    "incomingDependencies": [
      "src\\app\\components\\LiveLabel\\index.tsx",
      "src\\app\\components\\LiveLabel\\Pulse\\index.tsx",
      "src\\app\\components\\LiveLabel\\Text\\index.tsx"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\components\\LiveRegion\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@testing-library/user-event",
        "resolvedPath": "@testing-library/user-event"
      },
      {
        "source": "../react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\LiveRegion\\index.tsx"
      },
      {
        "source": "./LiveRegionContext",
        "resolvedPath": "src\\app\\components\\LiveRegion\\LiveRegionContext\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\LiveRegion\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\LiveRegion\\index.test.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../VisuallyHiddenText",
        "resolvedPath": "src\\app\\components\\VisuallyHiddenText\\index.tsx"
      },
      {
        "source": "./LiveRegionContext",
        "resolvedPath": "src\\app\\components\\LiveRegion\\LiveRegionContext\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\LiveRegion\\LiveRegionContext\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\LiveRegion\\index.test.tsx",
      "src\\app\\components\\LiveRegion\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      }
    ]
  },
  "src\\app\\components\\MaskedImage\\index.stories.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\MaskedImage\\index.tsx"
      },
      {
        "source": "./metadata.json",
        "resolvedPath": "..\\EXIM\\Work\\iterate-ai\\dep-graph\\metadata.json"
      }
    ]
  },
  "src\\app\\components\\MaskedImage\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#app/components/react-testing-library-with-providers",
        "resolvedPath": "#app/components/react-testing-library-with-providers"
      },
      {
        "source": "./index",
        "resolvedPath": "src\\app\\components\\MaskedImage\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\MaskedImage\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\Billboard\\index.tsx",
      "src\\app\\components\\MaskedImage\\index.stories.tsx",
      "src\\app\\components\\MaskedImage\\index.test.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "#contexts/ServiceContext",
        "resolvedPath": "#contexts/ServiceContext"
      },
      {
        "source": "#app/contexts/RequestContext",
        "resolvedPath": "#app/contexts/RequestContext"
      },
      {
        "source": "#app/components/Image",
        "resolvedPath": "#app/components/Image"
      },
      {
        "source": "#app/lib/utilities/srcSet",
        "resolvedPath": "#app/lib/utilities/srcSet"
      },
      {
        "source": "#app/lib/utilities/imageSrcHelpers/originCode",
        "resolvedPath": "#app/lib/utilities/imageSrcHelpers/originCode"
      },
      {
        "source": "#app/lib/utilities/imageSrcHelpers/locator",
        "resolvedPath": "#app/lib/utilities/imageSrcHelpers/locator"
      },
      {
        "source": "./styles",
        "resolvedPath": "src\\app\\components\\MaskedImage\\styles.tsx"
      }
    ]
  },
  "src\\app\\components\\MaskedImage\\styles.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\MaskedImage\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      }
    ]
  },
  "src\\app\\components\\MediaLoader\\Amp\\index.styles.ts": {
    "incomingDependencies": [
      "src\\app\\components\\MediaLoader\\Amp\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "#app/components/Image/base64Placeholder",
        "resolvedPath": "#app/components/Image/base64Placeholder"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      }
    ]
  },
  "src\\app\\components\\MediaLoader\\Amp\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#app/components/react-testing-library-with-providers",
        "resolvedPath": "#app/components/react-testing-library-with-providers"
      },
      {
        "source": "./index",
        "resolvedPath": "src\\app\\components\\MediaLoader\\Amp\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\MediaLoader\\Amp\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\MediaLoader\\Amp\\index.test.tsx",
      "src\\app\\components\\MediaLoader\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "react-helmet",
        "resolvedPath": "react-helmet"
      },
      {
        "source": "../Message",
        "resolvedPath": "src\\app\\components\\MediaLoader\\Message\\index.tsx"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\components\\MediaLoader\\Amp\\index.styles.ts"
      }
    ]
  },
  "src\\app\\components\\MediaLoader\\configs\\aresMedia.ts": {
    "incomingDependencies": [
      "src\\app\\components\\MediaLoader\\configs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "#lib/utilities/ichefURL",
        "resolvedPath": "#lib/utilities/ichefURL"
      },
      {
        "source": "#lib/utilities/blockHandlers",
        "resolvedPath": "#lib/utilities/blockHandlers"
      },
      {
        "source": "#app/models/types/optimo",
        "resolvedPath": "#app/models/types/optimo"
      },
      {
        "source": "../types",
        "resolvedPath": "src\\app\\components\\MediaLoader\\types.ts"
      },
      {
        "source": "../utils/getCaptionBlock",
        "resolvedPath": "src\\app\\components\\MediaLoader\\utils\\getCaptionBlock.ts"
      },
      {
        "source": "../utils/buildPlaceholderConfig",
        "resolvedPath": "src\\app\\components\\MediaLoader\\utils\\buildPlaceholderConfig\\index.ts"
      },
      {
        "source": "../utils/shouldDisplayAds",
        "resolvedPath": "src\\app\\components\\MediaLoader\\utils\\shouldDisplayAds\\index.ts"
      },
      {
        "source": "../utils/urlConstructors",
        "resolvedPath": "src\\app\\components\\MediaLoader\\utils\\urlConstructors.ts"
      }
    ]
  },
  "src\\app\\components\\MediaLoader\\configs\\audio.ts": {
    "incomingDependencies": [
      "src\\app\\components\\MediaLoader\\configs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "#lib/utilities/blockHandlers",
        "resolvedPath": "#lib/utilities/blockHandlers"
      },
      {
        "source": "../types",
        "resolvedPath": "src\\app\\components\\MediaLoader\\types.ts"
      },
      {
        "source": "./constants",
        "resolvedPath": "src\\app\\components\\MediaLoader\\configs\\constants.ts"
      }
    ]
  },
  "src\\app\\components\\MediaLoader\\configs\\clipMedia.ts": {
    "incomingDependencies": [
      "src\\app\\components\\MediaLoader\\configs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "moment-timezone",
        "resolvedPath": "moment-timezone"
      },
      {
        "source": "#lib/utilities/ichefURL",
        "resolvedPath": "#lib/utilities/ichefURL"
      },
      {
        "source": "#lib/utilities/blockHandlers",
        "resolvedPath": "#lib/utilities/blockHandlers"
      },
      {
        "source": "../types",
        "resolvedPath": "src\\app\\components\\MediaLoader\\types.ts"
      },
      {
        "source": "../utils/getCaptionBlock",
        "resolvedPath": "src\\app\\components\\MediaLoader\\utils\\getCaptionBlock.ts"
      },
      {
        "source": "../utils/buildPlaceholderConfig",
        "resolvedPath": "src\\app\\components\\MediaLoader\\utils\\buildPlaceholderConfig\\index.ts"
      },
      {
        "source": "../utils/shouldDisplayAds",
        "resolvedPath": "src\\app\\components\\MediaLoader\\utils\\shouldDisplayAds\\index.ts"
      },
      {
        "source": "../utils/urlConstructors",
        "resolvedPath": "src\\app\\components\\MediaLoader\\utils\\urlConstructors.ts"
      },
      {
        "source": "./constants",
        "resolvedPath": "src\\app\\components\\MediaLoader\\configs\\constants.ts"
      }
    ]
  },
  "src\\app\\components\\MediaLoader\\configs\\constants.ts": {
    "incomingDependencies": [
      "src\\app\\components\\MediaLoader\\configs\\audio.ts",
      "src\\app\\components\\MediaLoader\\configs\\clipMedia.ts",
      "src\\app\\components\\MediaLoader\\configs\\liveRadio.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../types",
        "resolvedPath": "src\\app\\components\\MediaLoader\\types.ts"
      }
    ]
  },
  "src\\app\\components\\MediaLoader\\configs\\index.ts": {
    "incomingDependencies": [
      "src\\app\\components\\MediaLoader\\utils\\buildSettings.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "#app/lib/utilities/blockHandlers",
        "resolvedPath": "#app/lib/utilities/blockHandlers"
      },
      {
        "source": "./clipMedia",
        "resolvedPath": "src\\app\\components\\MediaLoader\\configs\\clipMedia.ts"
      },
      {
        "source": "./aresMedia",
        "resolvedPath": "src\\app\\components\\MediaLoader\\configs\\aresMedia.ts"
      },
      {
        "source": "./tv",
        "resolvedPath": "src\\app\\components\\MediaLoader\\configs\\tv.ts"
      },
      {
        "source": "./liveRadio",
        "resolvedPath": "src\\app\\components\\MediaLoader\\configs\\liveRadio.ts"
      },
      {
        "source": "./audio",
        "resolvedPath": "src\\app\\components\\MediaLoader\\configs\\audio.ts"
      },
      {
        "source": "./legacyMedia",
        "resolvedPath": "src\\app\\components\\MediaLoader\\configs\\legacyMedia.ts"
      },
      {
        "source": "../types",
        "resolvedPath": "src\\app\\components\\MediaLoader\\types.ts"
      }
    ]
  },
  "src\\app\\components\\MediaLoader\\configs\\legacyMedia.ts": {
    "incomingDependencies": [
      "src\\app\\components\\MediaLoader\\configs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "#app/models/types/media",
        "resolvedPath": "#app/models/types/media"
      },
      {
        "source": "#lib/utilities/blockHandlers",
        "resolvedPath": "#lib/utilities/blockHandlers"
      },
      {
        "source": "../types",
        "resolvedPath": "src\\app\\components\\MediaLoader\\types.ts"
      },
      {
        "source": "../utils/buildPlaceholderConfig",
        "resolvedPath": "src\\app\\components\\MediaLoader\\utils\\buildPlaceholderConfig\\index.ts"
      }
    ]
  },
  "src\\app\\components\\MediaLoader\\configs\\liveRadio.ts": {
    "incomingDependencies": [
      "src\\app\\components\\MediaLoader\\configs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "#lib/utilities/blockHandlers",
        "resolvedPath": "#lib/utilities/blockHandlers"
      },
      {
        "source": "#app/models/types/media",
        "resolvedPath": "#app/models/types/media"
      },
      {
        "source": "../types",
        "resolvedPath": "src\\app\\components\\MediaLoader\\types.ts"
      },
      {
        "source": "./constants",
        "resolvedPath": "src\\app\\components\\MediaLoader\\configs\\constants.ts"
      }
    ]
  },
  "src\\app\\components\\MediaLoader\\configs\\tv.ts": {
    "incomingDependencies": [
      "src\\app\\components\\MediaLoader\\configs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "#lib/utilities/blockHandlers",
        "resolvedPath": "#lib/utilities/blockHandlers"
      },
      {
        "source": "../types",
        "resolvedPath": "src\\app\\components\\MediaLoader\\types.ts"
      },
      {
        "source": "../utils/buildPlaceholderConfig",
        "resolvedPath": "src\\app\\components\\MediaLoader\\utils\\buildPlaceholderConfig\\index.ts"
      }
    ]
  },
  "src\\app\\components\\MediaLoader\\fixture.ts": {
    "incomingDependencies": [
      "src\\app\\components\\MediaLoader\\index.stories.tsx",
      "src\\app\\components\\MediaLoader\\index.test.tsx",
      "src\\app\\components\\MediaLoader\\Metadata\\index.test.tsx",
      "src\\app\\components\\MediaLoader\\utils\\buildSettings.test.ts",
      "src\\app\\components\\MediaLoader\\utils\\getCaptionBlock.test.ts"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\components\\MediaLoader\\index.stories.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#app/models/types/global",
        "resolvedPath": "#app/models/types/global"
      },
      {
        "source": "#app/contexts/RequestContext",
        "resolvedPath": "#app/contexts/RequestContext"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\MediaLoader\\index.tsx"
      },
      {
        "source": "./fixture",
        "resolvedPath": "src\\app\\components\\MediaLoader\\fixture.ts"
      },
      {
        "source": "./types",
        "resolvedPath": "src\\app\\components\\MediaLoader\\types.ts"
      },
      {
        "source": "./README.md",
        "resolvedPath": "..\\EXIM\\Work\\iterate-ai\\dep-graph\\README.md"
      }
    ]
  },
  "src\\app\\components\\MediaLoader\\index.styles.ts": {
    "incomingDependencies": [
      "src\\app\\components\\MediaLoader\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "#app/utilities/pixelsToRem",
        "resolvedPath": "#app/utilities/pixelsToRem"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      }
    ]
  },
  "src\\app\\components\\MediaLoader\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#app/components/react-testing-library-with-providers",
        "resolvedPath": "#app/components/react-testing-library-with-providers"
      },
      {
        "source": "react-helmet",
        "resolvedPath": "react-helmet"
      },
      {
        "source": "#app/hooks/useLocation",
        "resolvedPath": "#app/hooks/useLocation"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\MediaLoader\\index.tsx"
      },
      {
        "source": "./fixture",
        "resolvedPath": "src\\app\\components\\MediaLoader\\fixture.ts"
      },
      {
        "source": "./types",
        "resolvedPath": "src\\app\\components\\MediaLoader\\types.ts"
      },
      {
        "source": "./utils/buildSettings",
        "resolvedPath": "src\\app\\components\\MediaLoader\\utils\\buildSettings.ts"
      }
    ]
  },
  "src\\app\\components\\MediaLoader\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\MediaLoader\\index.stories.tsx",
      "src\\app\\components\\MediaLoader\\index.test.tsx",
      "src\\app\\pages\\OnDemandTvPage\\index.test.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "react-helmet",
        "resolvedPath": "react-helmet"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "#contexts/RequestContext"
      },
      {
        "source": "#app/lib/logger.const",
        "resolvedPath": "#app/lib/logger.const"
      },
      {
        "source": "#app/contexts/ServiceContext",
        "resolvedPath": "#app/contexts/ServiceContext"
      },
      {
        "source": "#app/hooks/useLocation",
        "resolvedPath": "#app/hooks/useLocation"
      },
      {
        "source": "#app/hooks/useToggle",
        "resolvedPath": "#app/hooks/useToggle"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": "#lib/utilities/blockHandlers",
        "resolvedPath": "#lib/utilities/blockHandlers"
      },
      {
        "source": "#app/models/types/global",
        "resolvedPath": "#app/models/types/global"
      },
      {
        "source": "#app/contexts/EventTrackingContext",
        "resolvedPath": "#app/contexts/EventTrackingContext"
      },
      {
        "source": "./types",
        "resolvedPath": "src\\app\\components\\MediaLoader\\types.ts"
      },
      {
        "source": "../Caption",
        "resolvedPath": "src\\app\\components\\Caption\\index.tsx"
      },
      {
        "source": "../../lib/logger.node",
        "resolvedPath": "src\\app\\lib\\logger.node.js"
      },
      {
        "source": "./utils/buildSettings",
        "resolvedPath": "src\\app\\components\\MediaLoader\\utils\\buildSettings.ts"
      },
      {
        "source": "./Placeholder",
        "resolvedPath": "src\\app\\components\\MediaLoader\\Placeholder\\index.tsx"
      },
      {
        "source": "./utils/getProducerFromServiceName",
        "resolvedPath": "src\\app\\components\\MediaLoader\\utils\\getProducerFromServiceName.ts"
      },
      {
        "source": "./utils/getCaptionBlock",
        "resolvedPath": "src\\app\\components\\MediaLoader\\utils\\getCaptionBlock.ts"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\components\\MediaLoader\\index.styles.ts"
      },
      {
        "source": "../Ad/Canonical",
        "resolvedPath": "src\\app\\components\\Ad\\Canonical\\index.tsx"
      },
      {
        "source": "./Metadata",
        "resolvedPath": "src\\app\\components\\MediaLoader\\Metadata\\index.tsx"
      },
      {
        "source": "./Amp",
        "resolvedPath": "src\\app\\components\\MediaLoader\\Amp\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\MediaLoader\\Message\\index.styles.ts": {
    "incomingDependencies": [
      "src\\app\\components\\MediaLoader\\Message\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      }
    ]
  },
  "src\\app\\components\\MediaLoader\\Message\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#app/components/react-testing-library-with-providers",
        "resolvedPath": "#app/components/react-testing-library-with-providers"
      },
      {
        "source": "./index",
        "resolvedPath": "src\\app\\components\\MediaLoader\\Message\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\MediaLoader\\Message\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\MediaLoader\\Amp\\index.tsx",
      "src\\app\\components\\MediaLoader\\Message\\index.test.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\components\\MediaLoader\\Message\\index.styles.ts"
      }
    ]
  },
  "src\\app\\components\\MediaLoader\\Metadata\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "react-helmet",
        "resolvedPath": "react-helmet"
      },
      {
        "source": "#app/components/react-testing-library-with-providers",
        "resolvedPath": "#app/components/react-testing-library-with-providers"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\MediaLoader\\Metadata\\index.tsx"
      },
      {
        "source": "../fixture",
        "resolvedPath": "src\\app\\components\\MediaLoader\\fixture.ts"
      },
      {
        "source": "../types",
        "resolvedPath": "src\\app\\components\\MediaLoader\\types.ts"
      }
    ]
  },
  "src\\app\\components\\MediaLoader\\Metadata\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\MediaLoader\\index.tsx",
      "src\\app\\components\\MediaLoader\\Metadata\\index.test.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "react-helmet",
        "resolvedPath": "react-helmet"
      },
      {
        "source": "#app/lib/utilities/blockHandlers",
        "resolvedPath": "#app/lib/utilities/blockHandlers"
      },
      {
        "source": "#app/contexts/RequestContext",
        "resolvedPath": "#app/contexts/RequestContext"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": "#app/models/types/global",
        "resolvedPath": "#app/models/types/global"
      },
      {
        "source": "../types",
        "resolvedPath": "src\\app\\components\\MediaLoader\\types.ts"
      }
    ]
  },
  "src\\app\\components\\MediaLoader\\Placeholder\\Guidance\\index.styles.ts": {
    "incomingDependencies": [
      "src\\app\\components\\MediaLoader\\Placeholder\\Guidance\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "#app/lib/noJs.const",
        "resolvedPath": "#app/lib/noJs.const"
      }
    ]
  },
  "src\\app\\components\\MediaLoader\\Placeholder\\Guidance\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#app/components/react-testing-library-with-providers",
        "resolvedPath": "#app/components/react-testing-library-with-providers"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\MediaLoader\\Placeholder\\Guidance\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\MediaLoader\\Placeholder\\Guidance\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\MediaLoader\\Placeholder\\Guidance\\index.test.tsx",
      "src\\app\\components\\MediaLoader\\Placeholder\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\components\\MediaLoader\\Placeholder\\Guidance\\index.styles.ts"
      }
    ]
  },
  "src\\app\\components\\MediaLoader\\Placeholder\\index.styles.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\MediaLoader\\Placeholder\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "#app/lib/noJs.const",
        "resolvedPath": "#app/lib/noJs.const"
      },
      {
        "source": "#app/utilities/pixelsToRem",
        "resolvedPath": "#app/utilities/pixelsToRem"
      },
      {
        "source": "../../ThemeProvider/focusIndicator",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\focusIndicator.ts"
      }
    ]
  },
  "src\\app\\components\\MediaLoader\\Placeholder\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#app/components/react-testing-library-with-providers",
        "resolvedPath": "#app/components/react-testing-library-with-providers"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\MediaLoader\\Placeholder\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\MediaLoader\\Placeholder\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\MediaLoader\\index.tsx",
      "src\\app\\components\\MediaLoader\\Placeholder\\index.test.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "../../Image",
        "resolvedPath": "src\\app\\components\\Image\\index.tsx"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\components\\MediaLoader\\Placeholder\\index.styles.tsx"
      },
      {
        "source": "./PlayButton",
        "resolvedPath": "src\\app\\components\\MediaLoader\\Placeholder\\PlayButton\\index.tsx"
      },
      {
        "source": "./Guidance",
        "resolvedPath": "src\\app\\components\\MediaLoader\\Placeholder\\Guidance\\index.tsx"
      },
      {
        "source": "../types",
        "resolvedPath": "src\\app\\components\\MediaLoader\\types.ts"
      }
    ]
  },
  "src\\app\\components\\MediaLoader\\Placeholder\\PlayButton\\index.styles.ts": {
    "incomingDependencies": [
      "src\\app\\components\\MediaLoader\\Placeholder\\PlayButton\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "#app/utilities/pixelsToRem",
        "resolvedPath": "#app/utilities/pixelsToRem"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      }
    ]
  },
  "src\\app\\components\\MediaLoader\\Placeholder\\PlayButton\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#app/components/react-testing-library-with-providers",
        "resolvedPath": "#app/components/react-testing-library-with-providers"
      },
      {
        "source": "./index",
        "resolvedPath": "src\\app\\components\\MediaLoader\\Placeholder\\PlayButton\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\MediaLoader\\Placeholder\\PlayButton\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\MediaLoader\\Placeholder\\index.tsx",
      "src\\app\\components\\MediaLoader\\Placeholder\\PlayButton\\index.test.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "#psammead/psammead-assets/src/svgs",
        "resolvedPath": "#psammead/psammead-assets/src/svgs"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\components\\MediaLoader\\Placeholder\\PlayButton\\index.styles.ts"
      },
      {
        "source": "../../../VisuallyHiddenText",
        "resolvedPath": "src\\app\\components\\VisuallyHiddenText\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\MediaLoader\\types.ts": {
    "incomingDependencies": [
      "src\\app\\components\\MediaLoader\\configs\\aresMedia.ts",
      "src\\app\\components\\MediaLoader\\configs\\audio.ts",
      "src\\app\\components\\MediaLoader\\configs\\clipMedia.ts",
      "src\\app\\components\\MediaLoader\\configs\\constants.ts",
      "src\\app\\components\\MediaLoader\\configs\\index.ts",
      "src\\app\\components\\MediaLoader\\configs\\legacyMedia.ts",
      "src\\app\\components\\MediaLoader\\configs\\liveRadio.ts",
      "src\\app\\components\\MediaLoader\\configs\\tv.ts",
      "src\\app\\components\\MediaLoader\\index.stories.tsx",
      "src\\app\\components\\MediaLoader\\index.test.tsx",
      "src\\app\\components\\MediaLoader\\index.tsx",
      "src\\app\\components\\MediaLoader\\Metadata\\index.test.tsx",
      "src\\app\\components\\MediaLoader\\Metadata\\index.tsx",
      "src\\app\\components\\MediaLoader\\Placeholder\\index.tsx",
      "src\\app\\components\\MediaLoader\\utils\\buildPlaceholderConfig\\index.test.ts",
      "src\\app\\components\\MediaLoader\\utils\\buildPlaceholderConfig\\index.ts",
      "src\\app\\components\\MediaLoader\\utils\\buildSettings.test.ts",
      "src\\app\\components\\MediaLoader\\utils\\buildSettings.ts",
      "src\\app\\components\\MediaLoader\\utils\\getCaptionBlock.test.ts",
      "src\\app\\components\\MediaLoader\\utils\\getCaptionBlock.ts",
      "ws-nextjs-app\\pages\\[service]\\av-embeds\\AvEmbedsMetadata.test.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "#app/models/types/global",
        "resolvedPath": "#app/models/types/global"
      },
      {
        "source": "#app/models/types/media",
        "resolvedPath": "#app/models/types/media"
      },
      {
        "source": "#app/models/types/optimo",
        "resolvedPath": "#app/models/types/optimo"
      },
      {
        "source": "#app/models/types/translations",
        "resolvedPath": "#app/models/types/translations"
      }
    ]
  },
  "src\\app\\components\\MediaLoader\\utils\\buildPlaceholderConfig\\index.test.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\MediaLoader\\utils\\buildPlaceholderConfig\\index.ts"
      },
      {
        "source": "../../types",
        "resolvedPath": "src\\app\\components\\MediaLoader\\types.ts"
      }
    ]
  },
  "src\\app\\components\\MediaLoader\\utils\\buildPlaceholderConfig\\index.ts": {
    "incomingDependencies": [
      "src\\app\\components\\MediaLoader\\configs\\aresMedia.ts",
      "src\\app\\components\\MediaLoader\\configs\\clipMedia.ts",
      "src\\app\\components\\MediaLoader\\configs\\legacyMedia.ts",
      "src\\app\\components\\MediaLoader\\configs\\tv.ts",
      "src\\app\\components\\MediaLoader\\utils\\buildPlaceholderConfig\\index.test.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "moment-timezone",
        "resolvedPath": "moment-timezone"
      },
      {
        "source": "#app/lib/utilities/formatDuration",
        "resolvedPath": "#app/lib/utilities/formatDuration"
      },
      {
        "source": "#app/models/types/translations",
        "resolvedPath": "#app/models/types/translations"
      },
      {
        "source": "#app/lib/utilities/srcSet",
        "resolvedPath": "#app/lib/utilities/srcSet"
      },
      {
        "source": "#app/models/types/media",
        "resolvedPath": "#app/models/types/media"
      },
      {
        "source": "../../types",
        "resolvedPath": "src\\app\\components\\MediaLoader\\types.ts"
      }
    ]
  },
  "src\\app\\components\\MediaLoader\\utils\\buildSettings.test.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "#app/models/types/global",
        "resolvedPath": "#app/models/types/global"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": "#data/hindi/bbc_hindi_tv/tv_programmes/w13xttlw.json",
        "resolvedPath": "#data/hindi/bbc_hindi_tv/tv_programmes/w13xttlw.json"
      },
      {
        "source": "#data/hausa/bbc_hausa_radio/liveradio.json",
        "resolvedPath": "#data/hausa/bbc_hausa_radio/liveradio.json"
      },
      {
        "source": "#data/afrique/bbc_afrique_radio/w172xqydyfv659p.json",
        "resolvedPath": "#data/afrique/bbc_afrique_radio/w172xqydyfv659p.json"
      },
      {
        "source": "#app/lib/config/services/hausa",
        "resolvedPath": "#app/lib/config/services/hausa"
      },
      {
        "source": "#app/lib/config/services/hindi",
        "resolvedPath": "#app/lib/config/services/hindi"
      },
      {
        "source": "#app/lib/config/services/afrique",
        "resolvedPath": "#app/lib/config/services/afrique"
      },
      {
        "source": "#app/lib/utilities/isLive",
        "resolvedPath": "#app/lib/utilities/isLive"
      },
      {
        "source": "./buildSettings",
        "resolvedPath": "src\\app\\components\\MediaLoader\\utils\\buildSettings.ts"
      },
      {
        "source": "../fixture",
        "resolvedPath": "src\\app\\components\\MediaLoader\\fixture.ts"
      },
      {
        "source": "../types",
        "resolvedPath": "src\\app\\components\\MediaLoader\\types.ts"
      }
    ]
  },
  "src\\app\\components\\MediaLoader\\utils\\buildSettings.ts": {
    "incomingDependencies": [
      "src\\app\\components\\MediaLoader\\index.test.tsx",
      "src\\app\\components\\MediaLoader\\index.tsx",
      "src\\app\\components\\MediaLoader\\utils\\buildSettings.test.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "#app/lib/utilities/onClient",
        "resolvedPath": "#app/lib/utilities/onClient"
      },
      {
        "source": "#app/lib/utilities/isLive",
        "resolvedPath": "#app/lib/utilities/isLive"
      },
      {
        "source": "#app/lib/utilities/blockHandlers",
        "resolvedPath": "#app/lib/utilities/blockHandlers"
      },
      {
        "source": "../types",
        "resolvedPath": "src\\app\\components\\MediaLoader\\types.ts"
      },
      {
        "source": "../configs",
        "resolvedPath": "src\\app\\components\\MediaLoader\\configs\\index.ts"
      }
    ]
  },
  "src\\app\\components\\MediaLoader\\utils\\getCaptionBlock.test.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../fixture",
        "resolvedPath": "src\\app\\components\\MediaLoader\\fixture.ts"
      },
      {
        "source": "../types",
        "resolvedPath": "src\\app\\components\\MediaLoader\\types.ts"
      },
      {
        "source": "./getCaptionBlock",
        "resolvedPath": "src\\app\\components\\MediaLoader\\utils\\getCaptionBlock.ts"
      }
    ]
  },
  "src\\app\\components\\MediaLoader\\utils\\getCaptionBlock.ts": {
    "incomingDependencies": [
      "src\\app\\components\\MediaLoader\\configs\\aresMedia.ts",
      "src\\app\\components\\MediaLoader\\configs\\clipMedia.ts",
      "src\\app\\components\\MediaLoader\\index.tsx",
      "src\\app\\components\\MediaLoader\\utils\\getCaptionBlock.test.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "#app/lib/utilities/blockHandlers",
        "resolvedPath": "#app/lib/utilities/blockHandlers"
      },
      {
        "source": "#app/models/types/global",
        "resolvedPath": "#app/models/types/global"
      },
      {
        "source": "../types",
        "resolvedPath": "src\\app\\components\\MediaLoader\\types.ts"
      }
    ]
  },
  "src\\app\\components\\MediaLoader\\utils\\getProducerFromServiceName.test.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "./getProducerFromServiceName",
        "resolvedPath": "src\\app\\components\\MediaLoader\\utils\\getProducerFromServiceName.ts"
      }
    ]
  },
  "src\\app\\components\\MediaLoader\\utils\\getProducerFromServiceName.ts": {
    "incomingDependencies": [
      "src\\app\\components\\MediaLoader\\index.tsx",
      "src\\app\\components\\MediaLoader\\utils\\getProducerFromServiceName.test.ts"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\components\\MediaLoader\\utils\\shouldDisplayAds\\index.test.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\MediaLoader\\utils\\shouldDisplayAds\\index.ts"
      }
    ]
  },
  "src\\app\\components\\MediaLoader\\utils\\shouldDisplayAds\\index.ts": {
    "incomingDependencies": [
      "src\\app\\components\\MediaLoader\\configs\\aresMedia.ts",
      "src\\app\\components\\MediaLoader\\configs\\clipMedia.ts",
      "src\\app\\components\\MediaLoader\\utils\\shouldDisplayAds\\index.test.ts"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\components\\MediaLoader\\utils\\urlConstructors.test.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "./urlConstructors",
        "resolvedPath": "src\\app\\components\\MediaLoader\\utils\\urlConstructors.ts"
      }
    ]
  },
  "src\\app\\components\\MediaLoader\\utils\\urlConstructors.ts": {
    "incomingDependencies": [
      "src\\app\\components\\MediaLoader\\configs\\aresMedia.ts",
      "src\\app\\components\\MediaLoader\\configs\\clipMedia.ts",
      "src\\app\\components\\MediaLoader\\utils\\urlConstructors.test.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "#app/lib/utilities/isLive",
        "resolvedPath": "#app/lib/utilities/isLive"
      },
      {
        "source": "#app/routes/utils/parseAvRoute",
        "resolvedPath": "#app/routes/utils/parseAvRoute"
      }
    ]
  },
  "src\\app\\components\\MessageBanner\\fixtures.ts": {
    "incomingDependencies": [
      "src\\app\\components\\MessageBanner\\index.test.tsx"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\components\\MessageBanner\\index.stories.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\MessageBanner\\index.tsx"
      },
      {
        "source": "../../models/types/storybook",
        "resolvedPath": "src\\app\\models\\types\\storybook.ts"
      },
      {
        "source": "./README.md",
        "resolvedPath": "..\\EXIM\\Work\\iterate-ai\\dep-graph\\README.md"
      }
    ]
  },
  "src\\app\\components\\MessageBanner\\index.styles.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\MessageBanner\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      }
    ]
  },
  "src\\app\\components\\MessageBanner\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\MessageBanner\\index.tsx"
      },
      {
        "source": "./fixtures",
        "resolvedPath": "src\\app\\components\\MessageBanner\\fixtures.ts"
      },
      {
        "source": "../../hooks/useViewTracker",
        "resolvedPath": "src\\app\\hooks\\useViewTracker\\index.jsx"
      },
      {
        "source": "../../hooks/useClickTrackerHandler",
        "resolvedPath": "src\\app\\hooks\\useClickTrackerHandler\\index.jsx"
      }
    ]
  },
  "src\\app\\components\\MessageBanner\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\Curation\\index.tsx",
      "src\\app\\components\\MessageBanner\\index.stories.tsx",
      "src\\app\\components\\MessageBanner\\index.test.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "#app/hooks/useViewTracker",
        "resolvedPath": "#app/hooks/useViewTracker"
      },
      {
        "source": "#app/models/types/eventTracking",
        "resolvedPath": "#app/models/types/eventTracking"
      },
      {
        "source": "../Paragraph",
        "resolvedPath": "src\\app\\components\\Paragraph\\index.tsx"
      },
      {
        "source": "../Heading",
        "resolvedPath": "src\\app\\components\\Heading\\index.tsx"
      },
      {
        "source": "../Image",
        "resolvedPath": "src\\app\\components\\Image\\index.tsx"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\components\\MessageBanner\\index.styles.tsx"
      },
      {
        "source": "../icons",
        "resolvedPath": "src\\app\\components\\icons\\index.tsx"
      },
      {
        "source": "../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../CallToActionLink",
        "resolvedPath": "src\\app\\components\\CallToActionLink\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\Metadata\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "react-helmet",
        "resolvedPath": "react-helmet"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": "#pages/ArticlePage/fixtureData",
        "resolvedPath": "#pages/ArticlePage/fixtureData"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "#contexts/RequestContext"
      },
      {
        "source": "#data/serbian/frontpage/lat.json",
        "resolvedPath": "#data/serbian/frontpage/lat.json"
      },
      {
        "source": "#data/urdu/frontpage/index.json",
        "resolvedPath": "#data/urdu/frontpage/index.json"
      },
      {
        "source": "#data/korean/bbc_korean_radio/liveradio.json",
        "resolvedPath": "#data/korean/bbc_korean_radio/liveradio.json"
      },
      {
        "source": "#lib/utilities/parseAssetData/index",
        "resolvedPath": "#lib/utilities/parseAssetData/index"
      },
      {
        "source": "#app/models/types/global",
        "resolvedPath": "#app/models/types/global"
      },
      {
        "source": "#app/models/types/optimo",
        "resolvedPath": "#app/models/types/optimo"
      },
      {
        "source": "../react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "../../../server/utilities/serviceConfigs",
        "resolvedPath": "src\\server\\utilities\\serviceConfigs\\index.ts"
      },
      {
        "source": "../Byline/utilities",
        "resolvedPath": "src\\app\\components\\Byline\\utilities\\index.ts"
      },
      {
        "source": "../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "./index",
        "resolvedPath": "src\\app\\components\\Metadata\\index.tsx"
      },
      {
        "source": "./types",
        "resolvedPath": "src\\app\\components\\Metadata\\types.ts"
      }
    ]
  },
  "src\\app\\components\\Metadata\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\Metadata\\index.test.tsx",
      "src\\app\\legacy\\containers\\ArticleMetadata\\index.jsx",
      "src\\app\\pages\\FeatureIdxPage\\FeatureIdxPage.jsx",
      "src\\app\\pages\\FrontPage\\FrontPage.jsx",
      "src\\app\\pages\\HomePage\\HomePage.tsx",
      "src\\app\\pages\\LiveRadioPage\\LiveRadioPage.tsx",
      "src\\app\\pages\\MostReadPage\\MostReadPage.jsx",
      "src\\app\\pages\\OnDemandAudioPage\\OnDemandAudioPage.tsx",
      "src\\app\\pages\\OnDemandTvPage\\OnDemandTvPage.tsx",
      "src\\app\\pages\\TopicPage\\TopicPage.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "react-helmet",
        "resolvedPath": "react-helmet"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "#contexts/RequestContext"
      },
      {
        "source": "../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "./utils",
        "resolvedPath": "src\\app\\components\\Metadata\\utils\\index.tsx"
      },
      {
        "source": "./types",
        "resolvedPath": "src\\app\\components\\Metadata\\types.ts"
      }
    ]
  },
  "src\\app\\components\\Metadata\\types.ts": {
    "incomingDependencies": [
      "src\\app\\components\\Metadata\\index.test.tsx",
      "src\\app\\components\\Metadata\\index.tsx",
      "src\\app\\components\\Metadata\\utils\\index.tsx"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\components\\Metadata\\utils\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\Metadata\\utils\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\Metadata\\utils\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\Metadata\\index.tsx",
      "src\\app\\components\\Metadata\\utils\\index.test.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#app/models/types/global",
        "resolvedPath": "#app/models/types/global"
      },
      {
        "source": "#app/lib/utilities/getEnvConfig",
        "resolvedPath": "#app/lib/utilities/getEnvConfig"
      },
      {
        "source": "../types",
        "resolvedPath": "src\\app\\components\\Metadata\\types.ts"
      }
    ]
  },
  "src\\app\\components\\MostRead\\Amp\\getRemoteDataScript\\index.test.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\MostRead\\Amp\\getRemoteDataScript\\index.ts"
      },
      {
        "source": "../../../../legacy/psammead/psammead-locales/src/numerals",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-locales\\src\\numerals\\index.js"
      },
      {
        "source": "../../../../../../data/pidgin/mostRead/index.json",
        "resolvedPath": "..\\..\\..\\data\\pidgin\\mostRead\\index.json"
      }
    ]
  },
  "src\\app\\components\\MostRead\\Amp\\getRemoteDataScript\\index.ts": {
    "incomingDependencies": [
      "src\\app\\components\\MostRead\\Amp\\getRemoteDataScript\\index.test.ts",
      "src\\app\\components\\MostRead\\Amp\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../../models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global.ts"
      },
      {
        "source": "../../Canonical/Rank",
        "resolvedPath": "src\\app\\components\\MostRead\\Canonical\\Rank\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\MostRead\\Amp\\index.styles.ts": {
    "incomingDependencies": [
      "src\\app\\components\\MostRead\\Amp\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      }
    ]
  },
  "src\\app\\components\\MostRead\\Amp\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "jest-fetch-mock",
        "resolvedPath": "jest-fetch-mock"
      },
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../../react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\MostRead\\Amp\\index.tsx"
      },
      {
        "source": "../../../models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global.ts"
      },
      {
        "source": "../../../../../data/mundo/mostRead/mundo.json",
        "resolvedPath": "..\\..\\data\\mundo\\mostRead\\mundo.json"
      }
    ]
  },
  "src\\app\\components\\MostRead\\Amp\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\MostRead\\Amp\\index.test.tsx",
      "src\\app\\components\\MostRead\\index.test.tsx",
      "src\\app\\components\\MostRead\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "react-helmet",
        "resolvedPath": "react-helmet"
      },
      {
        "source": "#psammead/psammead-assets/src/amp-boilerplate",
        "resolvedPath": "#psammead/psammead-assets/src/amp-boilerplate"
      },
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../Canonical/Item",
        "resolvedPath": "src\\app\\components\\MostRead\\Canonical\\Item\\index.tsx"
      },
      {
        "source": "../Canonical/Rank",
        "resolvedPath": "src\\app\\components\\MostRead\\Canonical\\Rank\\index.tsx"
      },
      {
        "source": "../utilities/generateCSPHash",
        "resolvedPath": "src\\app\\components\\MostRead\\utilities\\generateCSPHash\\index.ts"
      },
      {
        "source": "../../../models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global.ts"
      },
      {
        "source": "../types",
        "resolvedPath": "src\\app\\components\\MostRead\\types.ts"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\components\\MostRead\\Amp\\index.styles.ts"
      },
      {
        "source": "./getRemoteDataScript",
        "resolvedPath": "src\\app\\components\\MostRead\\Amp\\getRemoteDataScript\\index.ts"
      }
    ]
  },
  "src\\app\\components\\MostRead\\Canonical\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../../../../../data/arabic/mostRead/index.json",
        "resolvedPath": "..\\..\\data\\arabic\\mostRead\\index.json"
      },
      {
        "source": "../../../../../data/pidgin/mostRead/index.json",
        "resolvedPath": "..\\..\\data\\pidgin\\mostRead\\index.json"
      },
      {
        "source": "../../../../../data/kyrgyz/mostRead/index.json",
        "resolvedPath": "..\\..\\data\\kyrgyz\\mostRead\\index.json"
      },
      {
        "source": "../../../../../data/ukrainian/mostRead/index.json",
        "resolvedPath": "..\\..\\data\\ukrainian\\mostRead\\index.json"
      },
      {
        "source": "../../../contexts/ToggleContext",
        "resolvedPath": "src\\app\\contexts\\ToggleContext\\index.tsx"
      },
      {
        "source": "../../../hooks/useViewTracker",
        "resolvedPath": "src\\app\\hooks\\useViewTracker\\index.jsx"
      },
      {
        "source": "../../../hooks/useClickTrackerHandler",
        "resolvedPath": "src\\app\\hooks\\useClickTrackerHandler\\index.jsx"
      },
      {
        "source": "../../react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\MostRead\\Canonical\\index.tsx"
      },
      {
        "source": "../../../models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global.ts"
      },
      {
        "source": "../types",
        "resolvedPath": "src\\app\\components\\MostRead\\types.ts"
      },
      {
        "source": "../utilities/testHelpers",
        "resolvedPath": "src\\app\\components\\MostRead\\utilities\\testHelpers.tsx"
      }
    ]
  },
  "src\\app\\components\\MostRead\\Canonical\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\MostRead\\Canonical\\index.test.tsx",
      "src\\app\\components\\MostRead\\index.test.tsx",
      "src\\app\\components\\MostRead\\index.tsx",
      "src\\app\\pages\\MostReadPage\\MostReadPage.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#lib/utilities/filterPopularStaleData/isDataStale",
        "resolvedPath": "#lib/utilities/filterPopularStaleData/isDataStale"
      },
      {
        "source": "#app/contexts/ServiceContext",
        "resolvedPath": "#app/contexts/ServiceContext"
      },
      {
        "source": "../../../hooks/useViewTracker",
        "resolvedPath": "src\\app\\hooks\\useViewTracker\\index.jsx"
      },
      {
        "source": "./Item",
        "resolvedPath": "src\\app\\components\\MostRead\\Canonical\\Item\\index.tsx"
      },
      {
        "source": "./List",
        "resolvedPath": "src\\app\\components\\MostRead\\Canonical\\List\\index.tsx"
      },
      {
        "source": "./Rank",
        "resolvedPath": "src\\app\\components\\MostRead\\Canonical\\Rank\\index.tsx"
      },
      {
        "source": "./LastUpdated",
        "resolvedPath": "src\\app\\components\\MostRead\\Canonical\\LastUpdated\\index.tsx"
      },
      {
        "source": "../types",
        "resolvedPath": "src\\app\\components\\MostRead\\types.ts"
      },
      {
        "source": "../../../models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global.ts"
      },
      {
        "source": "../../../models/types/theming",
        "resolvedPath": "src\\app\\models\\types\\theming.ts"
      }
    ]
  },
  "src\\app\\components\\MostRead\\Canonical\\Item\\index.styles.ts": {
    "incomingDependencies": [
      "src\\app\\components\\MostRead\\Canonical\\Item\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "../../../../legacy/psammead/psammead-styles/src/detection",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-styles\\src\\detection.js"
      }
    ]
  },
  "src\\app\\components\\MostRead\\Canonical\\Item\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../../../react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\MostRead\\Canonical\\Item\\index.tsx"
      },
      {
        "source": "../../utilities/testHelpers",
        "resolvedPath": "src\\app\\components\\MostRead\\utilities\\testHelpers.tsx"
      }
    ]
  },
  "src\\app\\components\\MostRead\\Canonical\\Item\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\MostRead\\Amp\\index.tsx",
      "src\\app\\components\\MostRead\\Canonical\\index.tsx",
      "src\\app\\components\\MostRead\\Canonical\\Item\\index.test.tsx",
      "src\\app\\components\\MostRead\\utilities\\testHelpers.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "#hooks/useClickTrackerHandler",
        "resolvedPath": "#hooks/useClickTrackerHandler"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\components\\MostRead\\Canonical\\Item\\index.styles.ts"
      },
      {
        "source": "../../utilities/gridProps",
        "resolvedPath": "src\\app\\components\\MostRead\\utilities\\gridProps.ts"
      },
      {
        "source": "../../types",
        "resolvedPath": "src\\app\\components\\MostRead\\types.ts"
      },
      {
        "source": "../../../../models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global.ts"
      },
      {
        "source": "../../../../legacy/components/Grid",
        "resolvedPath": "src\\app\\legacy\\components\\Grid\\index.jsx"
      }
    ]
  },
  "src\\app\\components\\MostRead\\Canonical\\LastUpdated\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../../../react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "../../../ThemeProvider/fontScripts/latin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\MostRead\\Canonical\\LastUpdated\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\MostRead\\Canonical\\LastUpdated\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\MostRead\\Canonical\\index.tsx",
      "src\\app\\components\\MostRead\\Canonical\\LastUpdated\\index.test.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../../../../legacy/psammead/psammead-timestamp-container/src",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-timestamp-container\\src\\index.jsx"
      },
      {
        "source": "../../../../models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global.ts"
      },
      {
        "source": "../../../../models/types/theming",
        "resolvedPath": "src\\app\\models\\types\\theming.ts"
      }
    ]
  },
  "src\\app\\components\\MostRead\\Canonical\\List\\index.styles.ts": {
    "incomingDependencies": [
      "src\\app\\components\\MostRead\\Canonical\\List\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "../../../ThemeProvider/mediaQueries",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\mediaQueries.ts"
      }
    ]
  },
  "src\\app\\components\\MostRead\\Canonical\\List\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../../../react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\MostRead\\Canonical\\List\\index.tsx"
      },
      {
        "source": "../../utilities/testHelpers",
        "resolvedPath": "src\\app\\components\\MostRead\\utilities\\testHelpers.tsx"
      }
    ]
  },
  "src\\app\\components\\MostRead\\Canonical\\List\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\MostRead\\Canonical\\index.tsx",
      "src\\app\\components\\MostRead\\Canonical\\List\\index.test.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "../../../../legacy/psammead/psammead-grid/src",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-grid\\src\\index.jsx"
      },
      {
        "source": "../../utilities/gridProps",
        "resolvedPath": "src\\app\\components\\MostRead\\utilities\\gridProps.ts"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\components\\MostRead\\Canonical\\List\\index.styles.ts"
      },
      {
        "source": "../../types",
        "resolvedPath": "src\\app\\components\\MostRead\\types.ts"
      },
      {
        "source": "../../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\MostRead\\Canonical\\Rank\\index.styles.ts": {
    "incomingDependencies": [
      "src\\app\\components\\MostRead\\Canonical\\Rank\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "../../utilities/rankMinWidth",
        "resolvedPath": "src\\app\\components\\MostRead\\utilities\\rankMinWidth.ts"
      },
      {
        "source": "../../../ThemeProvider/mediaQueries",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\mediaQueries.ts"
      },
      {
        "source": "../../../../models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global.ts"
      },
      {
        "source": "../../types",
        "resolvedPath": "src\\app\\components\\MostRead\\types.ts"
      },
      {
        "source": "../../../../legacy/psammead/psammead-styles/src/detection",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-styles\\src\\detection.js"
      }
    ]
  },
  "src\\app\\components\\MostRead\\Canonical\\Rank\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../../../react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\MostRead\\Canonical\\Rank\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\MostRead\\Canonical\\Rank\\index.tsx": {
    "incomingDependencies": [
      "cypress\\e2e\\pages\\mostReadPage\\mostReadAssertions.js",
      "src\\app\\components\\MostRead\\Amp\\getRemoteDataScript\\index.ts",
      "src\\app\\components\\MostRead\\Amp\\index.tsx",
      "src\\app\\components\\MostRead\\Canonical\\index.tsx",
      "src\\app\\components\\MostRead\\Canonical\\Rank\\index.test.tsx",
      "src\\app\\components\\MostRead\\utilities\\testHelpers.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "../../../../legacy/psammead/psammead-locales/src/numerals",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-locales\\src\\numerals\\index.js"
      },
      {
        "source": "../../../../models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global.ts"
      },
      {
        "source": "../../types",
        "resolvedPath": "src\\app\\components\\MostRead\\types.ts"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\components\\MostRead\\Canonical\\Rank\\index.styles.ts"
      }
    ]
  },
  "src\\app\\components\\MostRead\\index.stories.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "url-parse",
        "resolvedPath": "url-parse"
      },
      {
        "source": "#app/contexts/ToggleContext",
        "resolvedPath": "#app/contexts/ToggleContext"
      },
      {
        "source": "#app/contexts/ServiceContext",
        "resolvedPath": "#app/contexts/ServiceContext"
      },
      {
        "source": "./metadata.json",
        "resolvedPath": "..\\EXIM\\Work\\iterate-ai\\dep-graph\\metadata.json"
      },
      {
        "source": "./README.md",
        "resolvedPath": "..\\EXIM\\Work\\iterate-ai\\dep-graph\\README.md"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\MostRead\\index.tsx"
      },
      {
        "source": "../../models/types/storybook",
        "resolvedPath": "src\\app\\models\\types\\storybook.ts"
      },
      {
        "source": "./types",
        "resolvedPath": "src\\app\\components\\MostRead\\types.ts"
      }
    ]
  },
  "src\\app\\components\\MostRead\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../../contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext\\index.tsx"
      },
      {
        "source": "../../contexts/ToggleContext",
        "resolvedPath": "src\\app\\contexts\\ToggleContext\\index.tsx"
      },
      {
        "source": "../../../../data/pidgin/mostRead/index.json",
        "resolvedPath": "..\\data\\pidgin\\mostRead\\index.json"
      },
      {
        "source": "../../../../data/serbian/mostRead/lat.json",
        "resolvedPath": "..\\data\\serbian\\mostRead\\lat.json"
      },
      {
        "source": "../../routes/utils/pageTypes",
        "resolvedPath": "src\\app\\routes\\utils\\pageTypes.ts"
      },
      {
        "source": "../react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\MostRead\\index.tsx"
      },
      {
        "source": "../../models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global.ts"
      },
      {
        "source": "./Canonical",
        "resolvedPath": "src\\app\\components\\MostRead\\Canonical\\index.tsx"
      },
      {
        "source": "./Amp",
        "resolvedPath": "src\\app\\components\\MostRead\\Amp\\index.tsx"
      },
      {
        "source": "./types",
        "resolvedPath": "src\\app\\components\\MostRead\\types.ts"
      },
      {
        "source": "../../lib/utilities/isLocal",
        "resolvedPath": "src\\app\\lib\\utilities\\isLocal\\index.js"
      }
    ]
  },
  "src\\app\\components\\MostRead\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\Curation\\index.tsx",
      "src\\app\\components\\MostRead\\index.stories.tsx",
      "src\\app\\components\\MostRead\\index.test.tsx",
      "src\\app\\pages\\ArticlePage\\ArticlePage.tsx",
      "src\\app\\pages\\FrontPage\\FrontPage.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "#contexts/RequestContext"
      },
      {
        "source": "#hooks/useToggle",
        "resolvedPath": "#hooks/useToggle"
      },
      {
        "source": "#app/lib/utilities/getUrlHelpers/getMostReadUrls",
        "resolvedPath": "#app/lib/utilities/getUrlHelpers/getMostReadUrls"
      },
      {
        "source": "#app/lib/utilities/getEnvConfig",
        "resolvedPath": "#app/lib/utilities/getEnvConfig"
      },
      {
        "source": "../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "./Canonical",
        "resolvedPath": "src\\app\\components\\MostRead\\Canonical\\index.tsx"
      },
      {
        "source": "./Amp",
        "resolvedPath": "src\\app\\components\\MostRead\\Amp\\index.tsx"
      },
      {
        "source": "./types",
        "resolvedPath": "src\\app\\components\\MostRead\\types.ts"
      },
      {
        "source": "./Section",
        "resolvedPath": "src\\app\\components\\MostRead\\Section\\index.tsx"
      },
      {
        "source": "./Label",
        "resolvedPath": "src\\app\\components\\MostRead\\Label\\index.tsx"
      },
      {
        "source": "../ThemeProvider/palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "../../lib/utilities/isLocal",
        "resolvedPath": "src\\app\\lib\\utilities\\isLocal\\index.js"
      },
      {
        "source": "../../routes/utils/pageTypes",
        "resolvedPath": "src\\app\\routes\\utils\\pageTypes.ts"
      },
      {
        "source": "../../models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global.ts"
      }
    ]
  },
  "src\\app\\components\\MostRead\\Label\\index.styles.ts": {
    "incomingDependencies": [
      "src\\app\\components\\MostRead\\Label\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      }
    ]
  },
  "src\\app\\components\\MostRead\\Label\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../../react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\MostRead\\Label\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\MostRead\\Label\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\MostRead\\index.tsx",
      "src\\app\\components\\MostRead\\Label\\index.test.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\components\\MostRead\\Label\\index.styles.ts"
      },
      {
        "source": "../../../legacy/psammead/psammead-section-label/src",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-section-label\\src\\index.jsx"
      },
      {
        "source": "../../ThemeProvider/palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\MostRead\\Section\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@testing-library/react",
        "resolvedPath": "@testing-library/react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\MostRead\\Section\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\MostRead\\Section\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\MostRead\\index.tsx",
      "src\\app\\components\\MostRead\\Section\\index.test.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      }
    ]
  },
  "src\\app\\components\\MostRead\\types.ts": {
    "incomingDependencies": [
      "src\\app\\components\\Curation\\index.test.tsx",
      "src\\app\\components\\MostRead\\Amp\\index.tsx",
      "src\\app\\components\\MostRead\\Canonical\\index.test.tsx",
      "src\\app\\components\\MostRead\\Canonical\\index.tsx",
      "src\\app\\components\\MostRead\\Canonical\\Item\\index.tsx",
      "src\\app\\components\\MostRead\\Canonical\\List\\index.tsx",
      "src\\app\\components\\MostRead\\Canonical\\Rank\\index.styles.ts",
      "src\\app\\components\\MostRead\\Canonical\\Rank\\index.tsx",
      "src\\app\\components\\MostRead\\index.stories.tsx",
      "src\\app\\components\\MostRead\\index.test.tsx",
      "src\\app\\components\\MostRead\\index.tsx",
      "src\\app\\components\\MostRead\\utilities\\gridProps.ts",
      "src\\app\\components\\MostRead\\utilities\\rankMinWidth.ts",
      "src\\app\\components\\MostRead\\utilities\\testHelpers.tsx",
      "src\\app\\models\\types\\curationData.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global.ts"
      }
    ]
  },
  "src\\app\\components\\MostRead\\utilities\\generateCSPHash\\index.test.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\MostRead\\utilities\\generateCSPHash\\index.ts"
      }
    ]
  },
  "src\\app\\components\\MostRead\\utilities\\generateCSPHash\\index.ts": {
    "incomingDependencies": [
      "src\\app\\components\\MostRead\\Amp\\index.tsx",
      "src\\app\\components\\MostRead\\utilities\\generateCSPHash\\index.test.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "crypto",
        "resolvedPath": "crypto"
      }
    ]
  },
  "src\\app\\components\\MostRead\\utilities\\gridProps.ts": {
    "incomingDependencies": [
      "src\\app\\components\\MostRead\\Canonical\\Item\\index.tsx",
      "src\\app\\components\\MostRead\\Canonical\\List\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../types",
        "resolvedPath": "src\\app\\components\\MostRead\\types.ts"
      }
    ]
  },
  "src\\app\\components\\MostRead\\utilities\\rankMinWidth.ts": {
    "incomingDependencies": [
      "src\\app\\components\\MostRead\\Canonical\\Rank\\index.styles.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../ThemeProvider/spacings",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\spacings.ts"
      },
      {
        "source": "../types",
        "resolvedPath": "src\\app\\components\\MostRead\\types.ts"
      }
    ]
  },
  "src\\app\\components\\MostRead\\utilities\\testHelpers.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\MostRead\\Canonical\\index.test.tsx",
      "src\\app\\components\\MostRead\\Canonical\\Item\\index.test.tsx",
      "src\\app\\components\\MostRead\\Canonical\\List\\index.test.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#contexts/ToggleContext",
        "resolvedPath": "#contexts/ToggleContext"
      },
      {
        "source": "#storybook/withServicesDecorator/text-variants",
        "resolvedPath": "#storybook/withServicesDecorator/text-variants"
      },
      {
        "source": "../../../legacy/psammead/psammead-timestamp/src",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-timestamp\\src\\index.jsx"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../../ThemeProvider/fontScripts/latin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts"
      },
      {
        "source": "../Canonical/Item",
        "resolvedPath": "src\\app\\components\\MostRead\\Canonical\\Item\\index.tsx"
      },
      {
        "source": "../Canonical/Rank",
        "resolvedPath": "src\\app\\components\\MostRead\\Canonical\\Rank\\index.tsx"
      },
      {
        "source": "../../../models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global.ts"
      },
      {
        "source": "../../../models/types/theming",
        "resolvedPath": "src\\app\\models\\types\\theming.ts"
      },
      {
        "source": "../types",
        "resolvedPath": "src\\app\\components\\MostRead\\types.ts"
      }
    ]
  },
  "src\\app\\components\\OptimizelyRecommendations\\fixtureData.js": {
    "incomingDependencies": [
      "src\\app\\components\\OptimizelyRecommendations\\index.test.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "#models/blocks",
        "resolvedPath": "#models/blocks"
      }
    ]
  },
  "src\\app\\components\\OptimizelyRecommendations\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "#contexts/RequestContext"
      },
      {
        "source": "#contexts/ToggleContext",
        "resolvedPath": "#contexts/ToggleContext"
      },
      {
        "source": "@optimizely/react-sdk",
        "resolvedPath": "@optimizely/react-sdk"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": "#app/models/types/optimo",
        "resolvedPath": "#app/models/types/optimo"
      },
      {
        "source": "../react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../../models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global.ts"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\OptimizelyRecommendations\\index.tsx"
      },
      {
        "source": "./fixtureData",
        "resolvedPath": "src\\app\\components\\OptimizelyRecommendations\\fixtureData.js"
      },
      {
        "source": "../../legacy/psammead/psammead-test-helpers/src",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-test-helpers\\src\\index.js"
      }
    ]
  },
  "src\\app\\components\\OptimizelyRecommendations\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\OptimizelyRecommendations\\index.test.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#containers/CpsRecommendations",
        "resolvedPath": "#containers/CpsRecommendations"
      },
      {
        "source": "@optimizely/react-sdk",
        "resolvedPath": "@optimizely/react-sdk"
      },
      {
        "source": "#lib/config/optimizely",
        "resolvedPath": "#lib/config/optimizely"
      },
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "#app/models/types/optimo",
        "resolvedPath": "#app/models/types/optimo"
      }
    ]
  },
  "src\\app\\components\\PageLayoutWrapper\\index.styles.ts": {
    "incomingDependencies": [
      "src\\app\\components\\PageLayoutWrapper\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      }
    ]
  },
  "src\\app\\components\\PageLayoutWrapper\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\PageLayoutWrapper\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\PageLayoutWrapper\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\PageLayoutWrapper\\index.test.tsx",
      "src\\app\\legacy\\containers\\PageHandlers\\withPageWrapper\\index.jsx",
      "ws-nextjs-app\\pages\\_app.page.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "react-helmet",
        "resolvedPath": "react-helmet"
      },
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "#psammead/psammead-styles/src/global-styles",
        "resolvedPath": "#psammead/psammead-styles/src/global-styles"
      },
      {
        "source": "#app/models/types/global",
        "resolvedPath": "#app/models/types/global"
      },
      {
        "source": "../../legacy/containers/WebVitals",
        "resolvedPath": "src\\app\\legacy\\containers\\WebVitals\\index.jsx"
      },
      {
        "source": "../../legacy/containers/Header",
        "resolvedPath": "src\\app\\legacy\\containers\\Header\\index.jsx"
      },
      {
        "source": "../../legacy/containers/Footer",
        "resolvedPath": "src\\app\\legacy\\containers\\Footer\\index.jsx"
      },
      {
        "source": "../../legacy/containers/Manifest",
        "resolvedPath": "src\\app\\legacy\\containers\\Manifest\\index.jsx"
      },
      {
        "source": "../ServiceWorker",
        "resolvedPath": "src\\app\\components\\ServiceWorker\\index.tsx"
      },
      {
        "source": "../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../../contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext\\index.tsx"
      },
      {
        "source": "../ThemeProvider/fontFacesLazy",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontFacesLazy.ts"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\components\\PageLayoutWrapper\\index.styles.ts"
      }
    ]
  },
  "src\\app\\components\\Pagination\\buildBlocks.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "./buildBlocks",
        "resolvedPath": "src\\app\\components\\Pagination\\buildBlocks.ts"
      }
    ]
  },
  "src\\app\\components\\Pagination\\buildBlocks.ts": {
    "incomingDependencies": [
      "src\\app\\components\\Pagination\\buildBlocks.test.tsx",
      "src\\app\\components\\Pagination\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "ramda/src/pipe",
        "resolvedPath": "ramda/src/pipe"
      },
      {
        "source": "ramda/src/clone",
        "resolvedPath": "ramda/src/clone"
      },
      {
        "source": "#lib/utilities/findNClosestIndicies",
        "resolvedPath": "#lib/utilities/findNClosestIndicies"
      }
    ]
  },
  "src\\app\\components\\Pagination\\index.styles.ts": {
    "incomingDependencies": [
      "src\\app\\components\\Pagination\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      }
    ]
  },
  "src\\app\\components\\Pagination\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\Pagination\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\Pagination\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\Pagination\\index.test.tsx",
      "src\\app\\components\\Pagination\\pagination.stories.jsx",
      "src\\app\\pages\\TopicPage\\TopicPage.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#app/components/ThemeProvider/mediaQueries",
        "resolvedPath": "#app/components/ThemeProvider/mediaQueries"
      },
      {
        "source": "#app/contexts/RequestContext",
        "resolvedPath": "#app/contexts/RequestContext"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": "#app/models/types/global",
        "resolvedPath": "#app/models/types/global"
      },
      {
        "source": "../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "./buildBlocks",
        "resolvedPath": "src\\app\\components\\Pagination\\buildBlocks.ts"
      },
      {
        "source": "../icons",
        "resolvedPath": "src\\app\\components\\icons\\index.tsx"
      },
      {
        "source": "../VisuallyHiddenText",
        "resolvedPath": "src\\app\\components\\VisuallyHiddenText\\index.tsx"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\components\\Pagination\\index.styles.ts"
      }
    ]
  },
  "src\\app\\components\\Pagination\\pagination.stories.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\Pagination\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\Paragraph\\index.stories.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#app/models/types/theming",
        "resolvedPath": "#app/models/types/theming"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\Paragraph\\index.tsx"
      },
      {
        "source": "./README.md",
        "resolvedPath": "..\\EXIM\\Work\\iterate-ai\\dep-graph\\README.md"
      },
      {
        "source": "../../models/types/storybook",
        "resolvedPath": "src\\app\\models\\types\\storybook.ts"
      }
    ]
  },
  "src\\app\\components\\Paragraph\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\Paragraph\\index.tsx"
      },
      {
        "source": "../react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      }
    ]
  },
  "src\\app\\components\\Paragraph\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\EmbedConsentBanner\\ConsentBanner.tsx",
      "src\\app\\components\\Embeds\\Uploader\\index.tsx",
      "src\\app\\components\\MessageBanner\\index.tsx",
      "src\\app\\components\\Paragraph\\index.stories.tsx",
      "src\\app\\components\\Paragraph\\index.test.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "../../models/types/theming",
        "resolvedPath": "src\\app\\models\\types\\theming.ts"
      },
      {
        "source": "../Text",
        "resolvedPath": "src\\app\\components\\Text\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\react-testing-library-with-providers.tsx": {
    "incomingDependencies": [
      ".storybook\\StorybookComponents\\ColorList\\ColorCard\\index.test.tsx",
      ".storybook\\StorybookComponents\\ColorList\\index.test.tsx",
      "src\\app\\components\\Ad\\Amp\\AdSlot\\index.test.tsx",
      "src\\app\\components\\Ad\\Amp\\index.test.tsx",
      "src\\app\\components\\Ad\\Canonical\\AdBootstrapJs\\index.test.tsx",
      "src\\app\\components\\Ad\\Canonical\\index.test.tsx",
      "src\\app\\components\\Ad\\index.test.tsx",
      "src\\app\\components\\Ad\\MPU\\index.test.tsx",
      "src\\app\\components\\AmpIframe\\index.test.tsx",
      "src\\app\\components\\ATIAnalytics\\amp\\index.test.tsx",
      "src\\app\\components\\ATIAnalytics\\index.test.tsx",
      "src\\app\\components\\Billboard\\index.test.tsx",
      "src\\app\\components\\BulletedList\\index.test.tsx",
      "src\\app\\components\\Byline\\index.test.tsx",
      "src\\app\\components\\CallToActionLink\\index.test.tsx",
      "src\\app\\components\\Caption\\index.test.tsx",
      "src\\app\\components\\ChartbeatAnalytics\\amp\\index.test.tsx",
      "src\\app\\components\\Copyright\\index.test.tsx",
      "src\\app\\components\\Curation\\CurationPromo\\index.test.tsx",
      "src\\app\\components\\Curation\\HierarchicalGrid\\index.test.tsx",
      "src\\app\\components\\Curation\\index.test.tsx",
      "src\\app\\components\\Curation\\Subhead\\index.test.tsx",
      "src\\app\\components\\DecoratedInline\\index.test.tsx",
      "src\\app\\components\\DecoratedInlineLink\\index.test.tsx",
      "src\\app\\components\\Disclaimer\\index.test.tsx",
      "src\\app\\components\\EmbedConsentBanner\\ConsentBanner.test.tsx",
      "src\\app\\components\\EmbedConsentBanner\\index.test.tsx",
      "src\\app\\components\\Embeds\\AmpIframeEmbed\\index.test.tsx",
      "src\\app\\components\\Embeds\\EmbedHtml\\index.test.tsx",
      "src\\app\\components\\Embeds\\EmbedImages\\index.test.tsx",
      "src\\app\\components\\Embeds\\FlourishEmbed\\index.test.tsx",
      "src\\app\\components\\Embeds\\OEmbed\\index.test.tsx",
      "src\\app\\components\\Embeds\\UnsupportedEmbed\\index.test.tsx",
      "src\\app\\components\\Embeds\\Uploader\\index.test.tsx",
      "src\\app\\components\\Footer\\index.test.tsx",
      "src\\app\\components\\Fragment\\index.test.tsx",
      "src\\app\\components\\FrostedGlassPromo\\index.test.tsx",
      "src\\app\\components\\Header\\ScriptLink\\index.test.tsx",
      "src\\app\\components\\Heading\\index.test.tsx",
      "src\\app\\components\\Image\\index.test.tsx",
      "src\\app\\components\\ImageWithCaption\\index.test.tsx",
      "src\\app\\components\\InlineLink\\index.test.tsx",
      "src\\app\\components\\LinkedData\\index.test.tsx",
      "src\\app\\components\\LiveLabel\\index.test.tsx",
      "src\\app\\components\\LiveRegion\\index.test.tsx",
      "src\\app\\components\\MessageBanner\\index.test.tsx",
      "src\\app\\components\\Metadata\\index.test.tsx",
      "src\\app\\components\\MostRead\\Amp\\index.test.tsx",
      "src\\app\\components\\MostRead\\Canonical\\index.test.tsx",
      "src\\app\\components\\MostRead\\Canonical\\Item\\index.test.tsx",
      "src\\app\\components\\MostRead\\Canonical\\LastUpdated\\index.test.tsx",
      "src\\app\\components\\MostRead\\Canonical\\List\\index.test.tsx",
      "src\\app\\components\\MostRead\\Canonical\\Rank\\index.test.tsx",
      "src\\app\\components\\MostRead\\index.test.tsx",
      "src\\app\\components\\MostRead\\Label\\index.test.tsx",
      "src\\app\\components\\OptimizelyRecommendations\\index.test.tsx",
      "src\\app\\components\\PageLayoutWrapper\\index.test.tsx",
      "src\\app\\components\\Pagination\\index.test.tsx",
      "src\\app\\components\\Paragraph\\index.test.tsx",
      "src\\app\\components\\ServiceWorker\\index.test.tsx",
      "src\\app\\components\\Text\\index.test.tsx",
      "src\\app\\components\\VisuallyHiddenText\\index.test.tsx",
      "src\\app\\contexts\\EventTrackingContext\\index.test.tsx",
      "src\\app\\hooks\\useClickTrackerHandler\\index.test.jsx",
      "src\\app\\legacy\\components\\ErrorMain\\index.test.jsx",
      "src\\app\\legacy\\components\\OptimoPromos\\Link\\index.test.jsx",
      "src\\app\\legacy\\components\\Promo\\index.test.jsx",
      "src\\app\\legacy\\components\\RadioSchedule\\index.test.jsx",
      "src\\app\\legacy\\components\\RadioSchedule\\ProgramCard\\index.test.jsx",
      "src\\app\\legacy\\components\\RadioSchedule\\ScheduleItemHeader\\index.test.jsx",
      "src\\app\\legacy\\components\\RadioSchedule\\StartTime\\index.test.jsx",
      "src\\app\\legacy\\components\\ScrollablePromo\\index.test.jsx",
      "src\\app\\legacy\\components\\ScrollablePromo\\Promo\\index.test.jsx",
      "src\\app\\legacy\\components\\SkipLinkWrapper\\index.test.jsx",
      "src\\app\\legacy\\containers\\ArticleMetadata\\index.test.jsx",
      "src\\app\\legacy\\containers\\ArticleTimestamp\\index.test.jsx",
      "src\\app\\legacy\\containers\\Brand\\index.test.jsx",
      "src\\app\\legacy\\containers\\BulletedList\\index.test.jsx",
      "src\\app\\legacy\\containers\\BulletedListItem\\index.test.jsx",
      "src\\app\\legacy\\containers\\Bulletin\\index.test.jsx",
      "src\\app\\legacy\\containers\\ConsentBanner\\a11y.test.jsx",
      "src\\app\\legacy\\containers\\ConsentBanner\\Banner\\index.amp.test.jsx",
      "src\\app\\legacy\\containers\\ConsentBanner\\Banner\\index.canonical.test.jsx",
      "src\\app\\legacy\\containers\\ConsentBanner\\Banner\\Text.test.jsx",
      "src\\app\\legacy\\containers\\ConsentBanner\\index.amp.test.jsx",
      "src\\app\\legacy\\containers\\ConsentBanner\\index.canonical.test.jsx",
      "src\\app\\legacy\\containers\\CpsFeaturesAnalysis\\index.test.jsx",
      "src\\app\\legacy\\containers\\CpsOnwardJourney\\index.test.jsx",
      "src\\app\\legacy\\containers\\CpsRecommendations\\ErrorBoundary.test.tsx",
      "src\\app\\legacy\\containers\\CpsRecommendations\\index.test.jsx",
      "src\\app\\legacy\\containers\\CpsRecommendations\\RecommendationsPromo\\index.test.jsx",
      "src\\app\\legacy\\containers\\CpsRecommendations\\RecommendationsPromoImage\\index.test.jsx",
      "src\\app\\legacy\\containers\\CpsRecommendations\\RecommendationsPromoList\\index.test.jsx",
      "src\\app\\legacy\\containers\\EpisodeList\\RecentAudioEpisodes\\index.test.jsx",
      "src\\app\\legacy\\containers\\EpisodeList\\RecentVideoEpisodes\\index.test.jsx",
      "src\\app\\legacy\\containers\\FauxHeadline\\index.test.jsx",
      "src\\app\\legacy\\containers\\Footer\\index.test.jsx",
      "src\\app\\legacy\\containers\\Gist\\index.test.jsx",
      "src\\app\\legacy\\containers\\Header\\index.test.jsx",
      "src\\app\\legacy\\containers\\Headings\\index.test.jsx",
      "src\\app\\legacy\\containers\\ImageWithPlaceholder\\index.test.jsx",
      "src\\app\\legacy\\containers\\IndexHeading\\index.test.jsx",
      "src\\app\\legacy\\containers\\IndexPageSection\\UsefulLinks\\index.test.jsx",
      "src\\app\\legacy\\containers\\InlineContainer\\index.test.jsx",
      "src\\app\\legacy\\containers\\InlineLink\\index.test.jsx",
      "src\\app\\legacy\\containers\\Navigation\\index.amp.test.jsx",
      "src\\app\\legacy\\containers\\Navigation\\index.canonical.test.jsx",
      "src\\app\\legacy\\containers\\Navigation\\index.test.jsx",
      "src\\app\\legacy\\containers\\OnDemandFooterTimestamp\\index.test.jsx",
      "src\\app\\legacy\\containers\\OnDemandHeading\\index.test.jsx",
      "src\\app\\legacy\\containers\\OnDemandImage\\index.test.jsx",
      "src\\app\\legacy\\containers\\OnDemandParagraph\\index.test.jsx",
      "src\\app\\legacy\\containers\\PageHandlers\\withData\\index.test.jsx",
      "src\\app\\legacy\\containers\\Paragraph\\index.test.jsx",
      "src\\app\\legacy\\containers\\PodcastExternalLinks\\index.test.jsx",
      "src\\app\\legacy\\containers\\PodcastPromo\\components\\index.test.jsx",
      "src\\app\\legacy\\containers\\PodcastPromo\\index.test.jsx",
      "src\\app\\legacy\\containers\\RadioSchedule\\Canonical\\index.test.jsx",
      "src\\app\\legacy\\containers\\RadioSchedule\\index.test.jsx",
      "src\\app\\legacy\\containers\\RelatedTopics\\index.test.jsx",
      "src\\app\\legacy\\containers\\SocialEmbed\\index.test.jsx",
      "src\\app\\legacy\\containers\\StoryPromo\\IndexAlsos\\index.test.jsx",
      "src\\app\\legacy\\containers\\StoryPromo\\MediaIndicator\\index.test.jsx",
      "src\\app\\legacy\\containers\\Text\\index.test.jsx",
      "src\\app\\legacy\\psammead\\psammead-brand\\src\\index.test.jsx",
      "src\\app\\legacy\\psammead\\psammead-bulletin\\src\\index.test.jsx",
      "src\\app\\legacy\\psammead\\psammead-consent-banner\\src\\index.test.jsx",
      "src\\app\\legacy\\psammead\\psammead-grid\\src\\index.test.jsx",
      "src\\app\\legacy\\psammead\\psammead-heading-index\\src\\index.test.jsx",
      "src\\app\\legacy\\psammead\\psammead-headings\\src\\index.test.jsx",
      "src\\app\\legacy\\psammead\\psammead-image-placeholder\\src\\index.amp.test.jsx",
      "src\\app\\legacy\\psammead\\psammead-image-placeholder\\src\\index.test.jsx",
      "src\\app\\legacy\\psammead\\psammead-inline-link\\src\\index.test.jsx",
      "src\\app\\legacy\\psammead\\psammead-media-indicator\\src\\index.test.jsx",
      "src\\app\\legacy\\psammead\\psammead-navigation\\src\\DropdownNavigation\\index.test.jsx",
      "src\\app\\legacy\\psammead\\psammead-navigation\\src\\index.test.jsx",
      "src\\app\\legacy\\psammead\\psammead-paragraph\\src\\index.test.jsx",
      "src\\app\\legacy\\psammead\\psammead-section-label\\src\\index.test.jsx",
      "src\\app\\legacy\\psammead\\psammead-social-embed\\src\\index.test.jsx",
      "src\\app\\legacy\\psammead\\psammead-story-promo\\src\\index.test.jsx",
      "src\\app\\legacy\\psammead\\psammead-story-promo\\src\\IndexAlsos\\index.test.jsx",
      "src\\app\\legacy\\psammead\\psammead-story-promo-list\\src\\index.test.jsx",
      "src\\app\\legacy\\psammead\\psammead-timestamp\\src\\index.test.jsx",
      "src\\app\\legacy\\psammead\\psammead-timestamp-container\\src\\index.test.jsx",
      "src\\app\\legacy\\psammead\\psammead-topic-tags\\src\\index.test.jsx",
      "src\\app\\legacy\\psammead\\psammead-useful-links\\src\\index.test.jsx",
      "src\\app\\lib\\utilities\\episodeAvailability\\ErrorMessage\\index.test.jsx",
      "src\\app\\pages\\ArticlePage\\index.test.tsx",
      "src\\app\\pages\\ArticlePage\\PagePromoSections\\TopStoriesSection\\index.test.tsx",
      "src\\app\\pages\\ArticlePage\\PagePromoSections\\TopStoriesSection\\TopStoriesItem\\index.test.tsx",
      "src\\app\\pages\\ErrorPage\\index.test.jsx",
      "src\\app\\pages\\HomePage\\index.test.tsx",
      "src\\app\\pages\\LiveRadioPage\\index.test.tsx",
      "src\\app\\pages\\MediaArticlePage\\PagePromoSections\\LatestMediaSection\\index.test.tsx",
      "src\\app\\pages\\MediaArticlePage\\PagePromoSections\\LatestMediaSection\\LatestMediaIndicator\\index.test.tsx",
      "src\\app\\pages\\MediaArticlePage\\PagePromoSections\\LatestMediaSection\\LatestMediaItem\\index.test.tsx",
      "src\\app\\pages\\MostReadPage\\index.test.jsx",
      "src\\app\\pages\\OnDemandAudioPage\\index.test.tsx",
      "src\\app\\pages\\OnDemandTvPage\\index.test.tsx",
      "src\\app\\pages\\TopicPage\\index.test.jsx",
      "src\\app\\routes\\index.test.jsx",
      "ws-nextjs-app\\pages\\[service]\\av-embeds\\AvEmbedsMetadata.test.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@testing-library/react",
        "resolvedPath": "@testing-library/react"
      },
      {
        "source": "../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext\\index.tsx"
      },
      {
        "source": "../contexts/ToggleContext",
        "resolvedPath": "src\\app\\contexts\\ToggleContext\\index.tsx"
      },
      {
        "source": "../contexts/UserContext",
        "resolvedPath": "src\\app\\contexts\\UserContext\\index.tsx"
      },
      {
        "source": "../contexts/EventTrackingContext",
        "resolvedPath": "src\\app\\contexts\\EventTrackingContext\\index.tsx"
      },
      {
        "source": "./ThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\index.tsx"
      },
      {
        "source": "../models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global.ts"
      },
      {
        "source": "./ATIAnalytics/types",
        "resolvedPath": "src\\app\\components\\ATIAnalytics\\types.ts"
      }
    ]
  },
  "src\\app\\components\\RelatedContentSection\\fixture\\index.ts": {
    "incomingDependencies": [
      "src\\app\\components\\RelatedContentSection\\index.stories.tsx",
      "src\\app\\components\\RelatedContentSection\\index.test.tsx",
      "src\\app\\components\\RelatedContentSection\\RelatedContentItem\\index.test.tsx"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\components\\RelatedContentSection\\index.stories.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#app/contexts/ServiceContext",
        "resolvedPath": "#app/contexts/ServiceContext"
      },
      {
        "source": "../../models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global.ts"
      },
      {
        "source": "../../models/types/optimo",
        "resolvedPath": "src\\app\\models\\types\\optimo.ts"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\RelatedContentSection\\index.tsx"
      },
      {
        "source": "./fixture",
        "resolvedPath": "src\\app\\components\\RelatedContentSection\\fixture\\index.ts"
      },
      {
        "source": "./README.md",
        "resolvedPath": "..\\EXIM\\Work\\iterate-ai\\dep-graph\\README.md"
      }
    ]
  },
  "src\\app\\components\\RelatedContentSection\\index.styles.ts": {
    "incomingDependencies": [
      "src\\app\\components\\RelatedContentSection\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      }
    ]
  },
  "src\\app\\components\\RelatedContentSection\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@testing-library/react",
        "resolvedPath": "@testing-library/react"
      },
      {
        "source": "#contexts/ToggleContext",
        "resolvedPath": "#contexts/ToggleContext"
      },
      {
        "source": "#hooks/useClickTrackerHandler",
        "resolvedPath": "#hooks/useClickTrackerHandler"
      },
      {
        "source": "#hooks/useViewTracker",
        "resolvedPath": "#hooks/useViewTracker"
      },
      {
        "source": "../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../ThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\index.tsx"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\RelatedContentSection\\index.tsx"
      },
      {
        "source": "./fixture",
        "resolvedPath": "src\\app\\components\\RelatedContentSection\\fixture\\index.ts"
      },
      {
        "source": "../../models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global.ts"
      },
      {
        "source": "../../models/types/optimo",
        "resolvedPath": "src\\app\\models\\types\\optimo.ts"
      }
    ]
  },
  "src\\app\\components\\RelatedContentSection\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\RelatedContentSection\\index.stories.tsx",
      "src\\app\\components\\RelatedContentSection\\index.test.tsx",
      "src\\app\\pages\\ArticlePage\\ArticlePage.tsx",
      "src\\app\\pages\\MediaArticlePage\\MediaArticlePage.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "#psammead/psammead-section-label/src",
        "resolvedPath": "#psammead/psammead-section-label/src"
      },
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "ramda/src/pathEq",
        "resolvedPath": "ramda/src/pathEq"
      },
      {
        "source": "ramda/src/path",
        "resolvedPath": "ramda/src/path"
      },
      {
        "source": "ramda/src/tail",
        "resolvedPath": "ramda/src/tail"
      },
      {
        "source": "ramda/src/slice",
        "resolvedPath": "ramda/src/slice"
      },
      {
        "source": "ramda/src/identity",
        "resolvedPath": "ramda/src/identity"
      },
      {
        "source": "ramda/src/last",
        "resolvedPath": "ramda/src/last"
      },
      {
        "source": "ramda/src/filter",
        "resolvedPath": "ramda/src/filter"
      },
      {
        "source": "ramda/src/pipe",
        "resolvedPath": "ramda/src/pipe"
      },
      {
        "source": "#hooks/useViewTracker",
        "resolvedPath": "#hooks/useViewTracker"
      },
      {
        "source": "../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\components\\RelatedContentSection\\index.styles.ts"
      },
      {
        "source": "../../lib/utilities/generatePromoId",
        "resolvedPath": "src\\app\\lib\\utilities\\generatePromoId\\index.ts"
      },
      {
        "source": "./RelatedContentItem",
        "resolvedPath": "src\\app\\components\\RelatedContentSection\\RelatedContentItem\\index.tsx"
      },
      {
        "source": "../../legacy/components/OptimoPromos/PromoList",
        "resolvedPath": "src\\app\\legacy\\components\\OptimoPromos\\PromoList\\index.jsx"
      },
      {
        "source": "../../legacy/components/OptimoPromos/PromoItem/index.styles",
        "resolvedPath": "src\\app\\legacy\\components\\OptimoPromos\\PromoItem\\index.styles.jsx"
      },
      {
        "source": "../../models/types/eventTracking",
        "resolvedPath": "src\\app\\models\\types\\eventTracking.ts"
      },
      {
        "source": "../../models/types/optimo",
        "resolvedPath": "src\\app\\models\\types\\optimo.ts"
      }
    ]
  },
  "src\\app\\components\\RelatedContentSection\\RelatedContentItem\\index.styles.ts": {
    "incomingDependencies": [
      "src\\app\\components\\RelatedContentSection\\RelatedContentItem\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      }
    ]
  },
  "src\\app\\components\\RelatedContentSection\\RelatedContentItem\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@testing-library/react",
        "resolvedPath": "@testing-library/react"
      },
      {
        "source": "#contexts/ToggleContext",
        "resolvedPath": "#contexts/ToggleContext"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../../ThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\index.tsx"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\RelatedContentSection\\RelatedContentItem\\index.tsx"
      },
      {
        "source": "../fixture",
        "resolvedPath": "src\\app\\components\\RelatedContentSection\\fixture\\index.ts"
      },
      {
        "source": "../../../models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global.ts"
      }
    ]
  },
  "src\\app\\components\\RelatedContentSection\\RelatedContentItem\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\RelatedContentSection\\index.tsx",
      "src\\app\\components\\RelatedContentSection\\RelatedContentItem\\index.test.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "ramda/src/path",
        "resolvedPath": "ramda/src/path"
      },
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "#lib/utilities/srcSet",
        "resolvedPath": "#lib/utilities/srcSet"
      },
      {
        "source": "#app/lib/utilities/ichefURL",
        "resolvedPath": "#app/lib/utilities/ichefURL"
      },
      {
        "source": "#components/OptimoPromos",
        "resolvedPath": "#components/OptimoPromos"
      },
      {
        "source": "ramda/src/isEmpty",
        "resolvedPath": "ramda/src/isEmpty"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\components\\RelatedContentSection\\RelatedContentItem\\index.styles.ts"
      },
      {
        "source": "../../../models/types/eventTracking",
        "resolvedPath": "src\\app\\models\\types\\eventTracking.ts"
      }
    ]
  },
  "src\\app\\components\\ServiceWorker\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#app/lib/utilities/onClient",
        "resolvedPath": "#app/lib/utilities/onClient"
      },
      {
        "source": "#app/lib/utilities/isLocal",
        "resolvedPath": "#app/lib/utilities/isLocal"
      },
      {
        "source": "../react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "./index",
        "resolvedPath": "src\\app\\components\\ServiceWorker\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\ServiceWorker\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\PageLayoutWrapper\\index.tsx",
      "src\\app\\components\\ServiceWorker\\index.test.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "react-helmet",
        "resolvedPath": "react-helmet"
      },
      {
        "source": "#lib/utilities/onClient",
        "resolvedPath": "#lib/utilities/onClient"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "#contexts/RequestContext"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "#app/lib/utilities/isLocal",
        "resolvedPath": "#app/lib/utilities/isLocal"
      },
      {
        "source": "#app/lib/utilities/getEnvConfig",
        "resolvedPath": "#app/lib/utilities/getEnvConfig"
      },
      {
        "source": "../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\Text\\index.stories.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#app/models/types/theming",
        "resolvedPath": "#app/models/types/theming"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\Text\\index.tsx"
      },
      {
        "source": "./README.md",
        "resolvedPath": "..\\EXIM\\Work\\iterate-ai\\dep-graph\\README.md"
      },
      {
        "source": "../../models/types/storybook",
        "resolvedPath": "src\\app\\models\\types\\storybook.ts"
      }
    ]
  },
  "src\\app\\components\\Text\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\Text\\index.tsx"
      },
      {
        "source": "../react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      }
    ]
  },
  "src\\app\\components\\Text\\index.tsx": {
    "incomingDependencies": [
      ".storybook\\DocsDecorator\\HealthFactors\\index.tsx",
      ".storybook\\DocsDecorator\\HealthFactors\\SingleDoc\\index.tsx",
      ".storybook\\StorybookComponents\\ColorList\\ColorCard\\index.tsx",
      "src\\app\\components\\Billboard\\index.tsx",
      "src\\app\\components\\Byline\\index.tsx",
      "src\\app\\components\\CallToActionLink\\index.tsx",
      "src\\app\\components\\Caption\\index.tsx",
      "src\\app\\components\\Copyright\\index.tsx",
      "src\\app\\components\\DecoratedInline\\index.tsx",
      "src\\app\\components\\Disclaimer\\index.tsx",
      "src\\app\\components\\EmbedConsentBanner\\ConsentBanner.tsx",
      "src\\app\\components\\Embeds\\EmbedError\\index.tsx",
      "src\\app\\components\\Embeds\\Uploader\\index.tsx",
      "src\\app\\components\\Heading\\index.tsx",
      "src\\app\\components\\InlineLink\\index.stories.tsx",
      "src\\app\\components\\Paragraph\\index.tsx",
      "src\\app\\components\\Text\\index.stories.tsx",
      "src\\app\\components\\Text\\index.test.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "../../models/types/theming",
        "resolvedPath": "src\\app\\models\\types\\theming.ts"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\chameleonLogos\\afaanoromoo.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\afaanoromoo.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\chameleonLogos\\afrique.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\afrique.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\chameleonLogos\\amharic.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\amharic.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\chameleonLogos\\arabic.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\arabic.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\chameleonLogos\\azeri.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\azeri.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\chameleonLogos\\bangla.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\bengali.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\chameleonLogos\\burmese.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\burmese.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\chameleonLogos\\gahuza.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\gahuza.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\chameleonLogos\\gujarati.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\gujarati.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\chameleonLogos\\hausa.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\hausa.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\chameleonLogos\\hindi.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\hindi.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\chameleonLogos\\igbo.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\igbo.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\chameleonLogos\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\chameleonLogos\\afaanoromoo.tsx",
      "src\\app\\components\\ThemeProvider\\chameleonLogos\\afrique.tsx",
      "src\\app\\components\\ThemeProvider\\chameleonLogos\\amharic.tsx",
      "src\\app\\components\\ThemeProvider\\chameleonLogos\\arabic.tsx",
      "src\\app\\components\\ThemeProvider\\chameleonLogos\\azeri.tsx",
      "src\\app\\components\\ThemeProvider\\chameleonLogos\\bangla.tsx",
      "src\\app\\components\\ThemeProvider\\chameleonLogos\\burmese.tsx",
      "src\\app\\components\\ThemeProvider\\chameleonLogos\\gahuza.tsx",
      "src\\app\\components\\ThemeProvider\\chameleonLogos\\gujarati.tsx",
      "src\\app\\components\\ThemeProvider\\chameleonLogos\\hausa.tsx",
      "src\\app\\components\\ThemeProvider\\chameleonLogos\\hindi.tsx",
      "src\\app\\components\\ThemeProvider\\chameleonLogos\\igbo.tsx",
      "src\\app\\components\\ThemeProvider\\chameleonLogos\\indonesian.tsx",
      "src\\app\\components\\ThemeProvider\\chameleonLogos\\japanese.tsx",
      "src\\app\\components\\ThemeProvider\\chameleonLogos\\korean.tsx",
      "src\\app\\components\\ThemeProvider\\chameleonLogos\\kyrgyz.tsx",
      "src\\app\\components\\ThemeProvider\\chameleonLogos\\marathi.tsx",
      "src\\app\\components\\ThemeProvider\\chameleonLogos\\mundo.tsx",
      "src\\app\\components\\ThemeProvider\\chameleonLogos\\nepali.tsx",
      "src\\app\\components\\ThemeProvider\\chameleonLogos\\news.tsx",
      "src\\app\\components\\ThemeProvider\\chameleonLogos\\pashto.tsx",
      "src\\app\\components\\ThemeProvider\\chameleonLogos\\persian.tsx",
      "src\\app\\components\\ThemeProvider\\chameleonLogos\\pidgin.tsx",
      "src\\app\\components\\ThemeProvider\\chameleonLogos\\portuguese.tsx",
      "src\\app\\components\\ThemeProvider\\chameleonLogos\\punjabi.tsx",
      "src\\app\\components\\ThemeProvider\\chameleonLogos\\russian.tsx",
      "src\\app\\components\\ThemeProvider\\chameleonLogos\\serbian.tsx",
      "src\\app\\components\\ThemeProvider\\chameleonLogos\\sinhala.tsx",
      "src\\app\\components\\ThemeProvider\\chameleonLogos\\somali.tsx",
      "src\\app\\components\\ThemeProvider\\chameleonLogos\\sport.tsx",
      "src\\app\\components\\ThemeProvider\\chameleonLogos\\swahili.tsx",
      "src\\app\\components\\ThemeProvider\\chameleonLogos\\tamil.tsx",
      "src\\app\\components\\ThemeProvider\\chameleonLogos\\telugu.tsx",
      "src\\app\\components\\ThemeProvider\\chameleonLogos\\thai.tsx",
      "src\\app\\components\\ThemeProvider\\chameleonLogos\\tigrinya.tsx",
      "src\\app\\components\\ThemeProvider\\chameleonLogos\\turkish.tsx",
      "src\\app\\components\\ThemeProvider\\chameleonLogos\\ukrainian.tsx",
      "src\\app\\components\\ThemeProvider\\chameleonLogos\\urdu.tsx",
      "src\\app\\components\\ThemeProvider\\chameleonLogos\\uzbek.tsx",
      "src\\app\\components\\ThemeProvider\\chameleonLogos\\vietnamese.tsx",
      "src\\app\\components\\ThemeProvider\\chameleonLogos\\ws.tsx",
      "src\\app\\components\\ThemeProvider\\chameleonLogos\\yoruba.tsx",
      "src\\app\\components\\ThemeProvider\\chameleonLogos\\zhongwen.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../../../models/types/theming",
        "resolvedPath": "src\\app\\models\\types\\theming.ts"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\chameleonLogos\\indonesian.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\indonesia.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\chameleonLogos\\japanese.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\japanese.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\chameleonLogos\\korean.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\korean.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\chameleonLogos\\kyrgyz.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\kyrgyz.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\chameleonLogos\\marathi.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\marathi.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\chameleonLogos\\mundo.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\mundo.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\chameleonLogos\\nepali.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\nepali.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\chameleonLogos\\news.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\news.ts",
      "src\\app\\components\\ThemeProvider\\themes\\ws.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\chameleonLogos\\pashto.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\pashto.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\chameleonLogos\\persian.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\persian.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\chameleonLogos\\pidgin.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\pidgin.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\chameleonLogos\\portuguese.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\portuguese.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\chameleonLogos\\punjabi.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\punjabi.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\chameleonLogos\\russian.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\russian.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\chameleonLogos\\serbian.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\serbian\\base.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\chameleonLogos\\sinhala.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\sinhala.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\chameleonLogos\\somali.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\somali.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\chameleonLogos\\sport.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\sport.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\chameleonLogos\\swahili.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\swahili.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\chameleonLogos\\tamil.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\tamil.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\chameleonLogos\\telugu.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\telugu.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\chameleonLogos\\thai.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\thai.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\chameleonLogos\\tigrinya.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\tigrinya.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\chameleonLogos\\turkish.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\turkce.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\chameleonLogos\\ukrainian.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\ukrainian.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\chameleonLogos\\urdu.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\urdu.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\chameleonLogos\\uzbek.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\uzbek\\base.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\chameleonLogos\\vietnamese.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\vietnamese.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\chameleonLogos\\ws.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\chameleonLogos\\yoruba.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\yoruba.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\chameleonLogos\\zhongwen.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\ukchina\\base.ts",
      "src\\app\\components\\ThemeProvider\\themes\\zhongwen\\base.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\defaultServiceVariants.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\index.tsx",
      "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "#app/models/types/global",
        "resolvedPath": "#app/models/types/global"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\focusIndicator.ts": {
    "incomingDependencies": [
      "src\\app\\components\\EmbedConsentBanner\\ConsentBanner.styles.tsx",
      "src\\app\\components\\MediaLoader\\Placeholder\\index.styles.tsx",
      "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx",
      "src\\app\\legacy\\containers\\ConsentBanner\\Banner\\cookie.amp.jsx",
      "src\\app\\legacy\\psammead\\psammead-brand\\src\\index.jsx",
      "src\\app\\legacy\\psammead\\psammead-consent-banner\\src\\index.jsx",
      "src\\app\\legacy\\psammead\\psammead-navigation\\src\\index.jsx",
      "src\\app\\legacy\\psammead\\psammead-navigation\\src\\ScrollableNavigation\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "../../utilities/pixelsToRem",
        "resolvedPath": "src\\app\\utilities\\pixelsToRem\\index.ts"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\fontFaces.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\amharic.ts",
      "src\\app\\components\\ThemeProvider\\themes\\arabic.ts",
      "src\\app\\components\\ThemeProvider\\themes\\archive.ts",
      "src\\app\\components\\ThemeProvider\\themes\\bengali.ts",
      "src\\app\\components\\ThemeProvider\\themes\\burmese.ts",
      "src\\app\\components\\ThemeProvider\\themes\\cymrufyw.ts",
      "src\\app\\components\\ThemeProvider\\themes\\gujarati.ts",
      "src\\app\\components\\ThemeProvider\\themes\\mundo.ts",
      "src\\app\\components\\ThemeProvider\\themes\\naidheachdan.ts",
      "src\\app\\components\\ThemeProvider\\themes\\news.ts",
      "src\\app\\components\\ThemeProvider\\themes\\newsround.ts",
      "src\\app\\components\\ThemeProvider\\themes\\pashto.ts",
      "src\\app\\components\\ThemeProvider\\themes\\persian.ts",
      "src\\app\\components\\ThemeProvider\\themes\\portuguese.ts",
      "src\\app\\components\\ThemeProvider\\themes\\russian.ts",
      "src\\app\\components\\ThemeProvider\\themes\\scotland.ts",
      "src\\app\\components\\ThemeProvider\\themes\\sinhala.ts",
      "src\\app\\components\\ThemeProvider\\themes\\sport.ts",
      "src\\app\\components\\ThemeProvider\\themes\\tamil.ts",
      "src\\app\\components\\ThemeProvider\\themes\\telugu.ts",
      "src\\app\\components\\ThemeProvider\\themes\\tigrinya.ts",
      "src\\app\\components\\ThemeProvider\\themes\\turkce.ts",
      "src\\app\\components\\ThemeProvider\\themes\\urdu.ts",
      "src\\app\\components\\ThemeProvider\\themes\\ws.ts"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\components\\ThemeProvider\\fontFacesLazy.ts": {
    "incomingDependencies": [
      "src\\app\\components\\PageLayoutWrapper\\index.tsx"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\components\\ThemeProvider\\fontFamilies.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\fontVariants\\amharic.ts",
      "src\\app\\components\\ThemeProvider\\fontVariants\\bengali.ts",
      "src\\app\\components\\ThemeProvider\\fontVariants\\burmese.ts",
      "src\\app\\components\\ThemeProvider\\fontVariants\\chinese.ts",
      "src\\app\\components\\ThemeProvider\\fontVariants\\gujarati.ts",
      "src\\app\\components\\ThemeProvider\\fontVariants\\helmet.ts",
      "src\\app\\components\\ThemeProvider\\fontVariants\\hindi.ts",
      "src\\app\\components\\ThemeProvider\\fontVariants\\japanese.ts",
      "src\\app\\components\\ThemeProvider\\fontVariants\\korean.ts",
      "src\\app\\components\\ThemeProvider\\fontVariants\\marathi.ts",
      "src\\app\\components\\ThemeProvider\\fontVariants\\nepali.ts",
      "src\\app\\components\\ThemeProvider\\fontVariants\\punjabi.ts",
      "src\\app\\components\\ThemeProvider\\fontVariants\\reith.ts",
      "src\\app\\components\\ThemeProvider\\fontVariants\\reithQalam.ts",
      "src\\app\\components\\ThemeProvider\\fontVariants\\sinhala.ts",
      "src\\app\\components\\ThemeProvider\\fontVariants\\tamil.ts",
      "src\\app\\components\\ThemeProvider\\fontVariants\\telugu.ts",
      "src\\app\\components\\ThemeProvider\\fontVariants\\thai.ts",
      "src\\app\\components\\ThemeProvider\\fontVariants\\tigrinya.ts"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\components\\ThemeProvider\\fontMediaQueries.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\fontSizes.ts",
      "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../../utilities/pixelsToRem",
        "resolvedPath": "src\\app\\utilities\\pixelsToRem\\index.ts"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\fontScripts\\arabic.ts": {
    "incomingDependencies": [
      ".storybook\\withServicesDecorator\\index.tsx",
      "src\\app\\components\\Caption\\index.test.tsx",
      "src\\app\\components\\ThemeProvider\\themes\\arabic.ts",
      "src\\app\\components\\ThemeProvider\\themes\\pashto.ts",
      "src\\app\\components\\ThemeProvider\\themes\\persian.ts",
      "src\\app\\components\\ThemeProvider\\themes\\urdu.ts",
      "src\\app\\legacy\\components\\ErrorMain\\index.test.jsx",
      "src\\app\\legacy\\components\\InlineSpan\\index.test.jsx",
      "src\\app\\legacy\\components\\RadioSchedule\\index.test.jsx",
      "src\\app\\legacy\\components\\RadioSchedule\\ScheduleItemHeader\\index.test.jsx",
      "src\\app\\legacy\\components\\RadioSchedule\\StartTime\\index.test.jsx",
      "src\\app\\legacy\\components\\RadioSchedule\\testHelpers\\helper.jsx",
      "src\\app\\legacy\\containers\\BulletedList\\index.test.jsx",
      "src\\app\\legacy\\containers\\StoryPromo\\MediaIndicator\\index.test.jsx",
      "src\\app\\legacy\\psammead\\gel-foundations\\tests\\getTypeSizes.test.js",
      "src\\app\\legacy\\psammead\\psammead-bulletin\\src\\index.test.jsx",
      "src\\app\\legacy\\psammead\\psammead-consent-banner\\src\\index.test.jsx",
      "src\\app\\legacy\\psammead\\psammead-heading-index\\src\\index.test.jsx",
      "src\\app\\legacy\\psammead\\psammead-headings\\src\\index.test.jsx",
      "src\\app\\legacy\\psammead\\psammead-media-indicator\\src\\index.test.jsx",
      "src\\app\\legacy\\psammead\\psammead-navigation\\src\\DropdownNavigation\\index.test.jsx",
      "src\\app\\legacy\\psammead\\psammead-paragraph\\src\\index.test.jsx",
      "src\\app\\legacy\\psammead\\psammead-section-label\\src\\index.test.jsx",
      "src\\app\\legacy\\psammead\\psammead-topic-tags\\src\\index.test.jsx",
      "src\\app\\lib\\config\\services\\arabic.ts",
      "src\\app\\lib\\config\\services\\pashto.ts",
      "src\\app\\lib\\config\\services\\persian.ts",
      "src\\app\\lib\\config\\services\\urdu.ts"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\components\\ThemeProvider\\fontScripts\\bengali.ts": {
    "incomingDependencies": [
      ".storybook\\withServicesDecorator\\index.tsx",
      "src\\app\\components\\ThemeProvider\\themes\\bengali.ts",
      "src\\app\\legacy\\psammead\\gel-foundations\\tests\\getTypeSizes.test.js",
      "src\\app\\lib\\config\\services\\bengali.ts"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\components\\ThemeProvider\\fontScripts\\burmese.ts": {
    "incomingDependencies": [
      ".storybook\\withServicesDecorator\\index.tsx",
      "src\\app\\components\\ThemeProvider\\themes\\burmese.ts",
      "src\\app\\legacy\\psammead\\gel-foundations\\tests\\getTypeSizes.test.js",
      "src\\app\\legacy\\psammead\\psammead-topic-tags\\src\\index.test.jsx",
      "src\\app\\lib\\config\\services\\burmese.ts"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\components\\ThemeProvider\\fontScripts\\cyrillic.ts": {
    "incomingDependencies": [
      ".storybook\\withServicesDecorator\\index.tsx",
      "src\\app\\components\\ThemeProvider\\themes\\kyrgyz.ts",
      "src\\app\\components\\ThemeProvider\\themes\\russian.ts",
      "src\\app\\components\\ThemeProvider\\themes\\serbian\\cyr.ts",
      "src\\app\\components\\ThemeProvider\\themes\\ukrainian.ts",
      "src\\app\\components\\ThemeProvider\\themes\\uzbek\\cyr.ts",
      "src\\app\\legacy\\psammead\\gel-foundations\\tests\\getTypeSizes.test.js",
      "src\\app\\lib\\config\\services\\kyrgyz.ts",
      "src\\app\\lib\\config\\services\\serbian.ts",
      "src\\app\\lib\\config\\services\\ukrainian.ts",
      "src\\app\\lib\\config\\services\\uzbek.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "./latin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\fontScripts\\devanagari.ts": {
    "incomingDependencies": [
      ".storybook\\withServicesDecorator\\index.tsx",
      "src\\app\\components\\ThemeProvider\\fontScripts\\gurmukhi.ts",
      "src\\app\\components\\ThemeProvider\\themes\\gujarati.ts",
      "src\\app\\components\\ThemeProvider\\themes\\hindi.ts",
      "src\\app\\components\\ThemeProvider\\themes\\marathi.ts",
      "src\\app\\components\\ThemeProvider\\themes\\nepali.ts",
      "src\\app\\components\\ThemeProvider\\themes\\telugu.ts",
      "src\\app\\legacy\\psammead\\gel-foundations\\tests\\getTypeSizes.test.js",
      "src\\app\\lib\\config\\services\\gujarati.ts",
      "src\\app\\lib\\config\\services\\hindi.ts",
      "src\\app\\lib\\config\\services\\marathi.ts",
      "src\\app\\lib\\config\\services\\nepali.ts",
      "src\\app\\lib\\config\\services\\telugu.ts"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\components\\ThemeProvider\\fontScripts\\gurmukhi.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\punjabi.ts",
      "src\\app\\legacy\\psammead\\gel-foundations\\tests\\getTypeSizes.test.js",
      "src\\app\\lib\\config\\services\\punjabi.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "./devanagari",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\devanagari.ts"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts": {
    "incomingDependencies": [
      ".storybook\\withServicesDecorator\\index.tsx",
      "src\\app\\components\\Caption\\index.test.tsx",
      "src\\app\\components\\MostRead\\Canonical\\LastUpdated\\index.test.tsx",
      "src\\app\\components\\MostRead\\utilities\\testHelpers.tsx",
      "src\\app\\components\\ThemeProvider\\fontScripts\\cyrillic.ts",
      "src\\app\\components\\ThemeProvider\\themes\\afaanoromoo.ts",
      "src\\app\\components\\ThemeProvider\\themes\\afrique.ts",
      "src\\app\\components\\ThemeProvider\\themes\\archive.ts",
      "src\\app\\components\\ThemeProvider\\themes\\gahuza.ts",
      "src\\app\\components\\ThemeProvider\\themes\\hausa.ts",
      "src\\app\\components\\ThemeProvider\\themes\\igbo.ts",
      "src\\app\\components\\ThemeProvider\\themes\\indonesia.ts",
      "src\\app\\components\\ThemeProvider\\themes\\news.ts",
      "src\\app\\components\\ThemeProvider\\themes\\newsround.ts",
      "src\\app\\components\\ThemeProvider\\themes\\pidgin.ts",
      "src\\app\\components\\ThemeProvider\\themes\\scotland.ts",
      "src\\app\\components\\ThemeProvider\\themes\\somali.ts",
      "src\\app\\components\\ThemeProvider\\themes\\sport.ts",
      "src\\app\\components\\ThemeProvider\\themes\\swahili.ts",
      "src\\app\\components\\ThemeProvider\\themes\\ws.ts",
      "src\\app\\components\\ThemeProvider\\themes\\yoruba.ts",
      "src\\app\\legacy\\components\\ErrorMain\\index.test.jsx",
      "src\\app\\legacy\\components\\InlineSpan\\index.test.jsx",
      "src\\app\\legacy\\components\\RadioSchedule\\index.test.jsx",
      "src\\app\\legacy\\components\\RadioSchedule\\StartTime\\index.test.jsx",
      "src\\app\\legacy\\components\\RadioSchedule\\testHelpers\\helper.jsx",
      "src\\app\\legacy\\containers\\FauxHeadline\\index.stories.jsx",
      "src\\app\\legacy\\containers\\FauxHeadline\\index.test.jsx",
      "src\\app\\legacy\\containers\\Headings\\index.test.jsx",
      "src\\app\\legacy\\containers\\IndexPageSection\\UsefulLinks\\index.test.jsx",
      "src\\app\\legacy\\containers\\InlineContainer\\index.test.jsx",
      "src\\app\\legacy\\containers\\Navigation\\index.amp.test.jsx",
      "src\\app\\legacy\\containers\\Navigation\\index.canonical.test.jsx",
      "src\\app\\legacy\\containers\\PageHandlers\\withOptimizelyProvider\\index.test.jsx",
      "src\\app\\legacy\\containers\\Paragraph\\index.test.jsx",
      "src\\app\\legacy\\containers\\PodcastPromo\\components\\index.test.jsx",
      "src\\app\\legacy\\containers\\PodcastPromo\\index.stories.jsx",
      "src\\app\\legacy\\containers\\StoryPromo\\IndexAlsos\\index.test.jsx",
      "src\\app\\legacy\\containers\\StoryPromo\\MediaIndicator\\index.test.jsx",
      "src\\app\\legacy\\psammead\\gel-foundations\\tests\\getTypeSizes.test.js",
      "src\\app\\legacy\\psammead\\psammead-bulletin\\src\\index.test.jsx",
      "src\\app\\legacy\\psammead\\psammead-consent-banner\\src\\index.test.jsx",
      "src\\app\\legacy\\psammead\\psammead-grid\\src\\testHelpers.jsx",
      "src\\app\\legacy\\psammead\\psammead-heading-index\\src\\index.test.jsx",
      "src\\app\\legacy\\psammead\\psammead-headings\\src\\index.test.jsx",
      "src\\app\\legacy\\psammead\\psammead-media-indicator\\src\\index.test.jsx",
      "src\\app\\legacy\\psammead\\psammead-navigation\\src\\DropdownNavigation\\index.test.jsx",
      "src\\app\\legacy\\psammead\\psammead-navigation\\src\\index.test.jsx",
      "src\\app\\legacy\\psammead\\psammead-paragraph\\src\\index.test.jsx",
      "src\\app\\legacy\\psammead\\psammead-section-label\\src\\index.test.jsx",
      "src\\app\\legacy\\psammead\\psammead-story-promo\\src\\index.test.jsx",
      "src\\app\\legacy\\psammead\\psammead-story-promo\\src\\IndexAlsos\\index.test.jsx",
      "src\\app\\legacy\\psammead\\psammead-story-promo-list\\src\\index.test.jsx",
      "src\\app\\legacy\\psammead\\psammead-timestamp\\src\\index.test.jsx",
      "src\\app\\legacy\\psammead\\psammead-timestamp-container\\src\\index.test.jsx",
      "src\\app\\legacy\\psammead\\psammead-topic-tags\\src\\index.test.jsx",
      "src\\app\\legacy\\psammead\\psammead-useful-links\\src\\index.test.jsx",
      "src\\app\\lib\\config\\services\\afaanoromoo.ts",
      "src\\app\\lib\\config\\services\\archive.ts",
      "src\\app\\lib\\config\\services\\gahuza.ts",
      "src\\app\\lib\\config\\services\\hausa.ts",
      "src\\app\\lib\\config\\services\\igbo.ts",
      "src\\app\\lib\\config\\services\\indonesia.ts",
      "src\\app\\lib\\config\\services\\news.ts",
      "src\\app\\lib\\config\\services\\newsround.ts",
      "src\\app\\lib\\config\\services\\pidgin.ts",
      "src\\app\\lib\\config\\services\\russian.ts",
      "src\\app\\lib\\config\\services\\scotland.ts",
      "src\\app\\lib\\config\\services\\somali.ts",
      "src\\app\\lib\\config\\services\\sport.ts",
      "src\\app\\lib\\config\\services\\swahili.ts",
      "src\\app\\lib\\config\\services\\ws.ts",
      "src\\app\\lib\\config\\services\\yoruba.ts"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\components\\ThemeProvider\\fontScripts\\latinWithDiacritics.ts": {
    "incomingDependencies": [
      ".storybook\\withServicesDecorator\\index.tsx",
      "src\\app\\components\\Ad\\Amp\\index.test.tsx",
      "src\\app\\components\\Ad\\index.test.tsx",
      "src\\app\\components\\ThemeProvider\\themes\\azeri.ts",
      "src\\app\\components\\ThemeProvider\\themes\\cymrufyw.ts",
      "src\\app\\components\\ThemeProvider\\themes\\mundo.ts",
      "src\\app\\components\\ThemeProvider\\themes\\naidheachdan.ts",
      "src\\app\\components\\ThemeProvider\\themes\\portuguese.ts",
      "src\\app\\components\\ThemeProvider\\themes\\serbian\\lat.ts",
      "src\\app\\components\\ThemeProvider\\themes\\turkce.ts",
      "src\\app\\components\\ThemeProvider\\themes\\uzbek\\lat.ts",
      "src\\app\\components\\ThemeProvider\\themes\\vietnamese.ts",
      "src\\app\\legacy\\psammead\\gel-foundations\\tests\\getTypeSizes.test.js",
      "src\\app\\lib\\config\\services\\afrique.ts",
      "src\\app\\lib\\config\\services\\azeri.ts",
      "src\\app\\lib\\config\\services\\cymrufyw.ts",
      "src\\app\\lib\\config\\services\\mundo.ts",
      "src\\app\\lib\\config\\services\\naidheachdan.ts",
      "src\\app\\lib\\config\\services\\portuguese.ts",
      "src\\app\\lib\\config\\services\\serbian.ts",
      "src\\app\\lib\\config\\services\\turkce.ts",
      "src\\app\\lib\\config\\services\\uzbek.ts",
      "src\\app\\lib\\config\\services\\vietnamese.ts"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\components\\ThemeProvider\\fontScripts\\noAscOrDesc.ts": {
    "incomingDependencies": [
      ".storybook\\withServicesDecorator\\index.tsx",
      "src\\app\\components\\ThemeProvider\\themes\\amharic.ts",
      "src\\app\\components\\ThemeProvider\\themes\\japanese.ts",
      "src\\app\\components\\ThemeProvider\\themes\\korean.ts",
      "src\\app\\components\\ThemeProvider\\themes\\tigrinya.ts",
      "src\\app\\components\\ThemeProvider\\themes\\ukchina\\base.ts",
      "src\\app\\components\\ThemeProvider\\themes\\zhongwen\\base.ts",
      "src\\app\\legacy\\psammead\\gel-foundations\\tests\\getTypeSizes.test.js",
      "src\\app\\lib\\config\\services\\amharic.ts",
      "src\\app\\lib\\config\\services\\japanese.ts",
      "src\\app\\lib\\config\\services\\korean.ts",
      "src\\app\\lib\\config\\services\\tigrinya.ts",
      "src\\app\\lib\\config\\services\\ukchina.ts",
      "src\\app\\lib\\config\\services\\zhongwen.ts"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\components\\ThemeProvider\\fontScripts\\sinhalese.ts": {
    "incomingDependencies": [
      ".storybook\\withServicesDecorator\\index.tsx",
      "src\\app\\components\\ThemeProvider\\themes\\sinhala.ts",
      "src\\app\\legacy\\psammead\\gel-foundations\\tests\\getTypeSizes.test.js",
      "src\\app\\lib\\config\\services\\sinhala.ts"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\components\\ThemeProvider\\fontScripts\\tamil.ts": {
    "incomingDependencies": [
      ".storybook\\withServicesDecorator\\index.tsx",
      "src\\app\\components\\ThemeProvider\\themes\\tamil.ts",
      "src\\app\\legacy\\psammead\\gel-foundations\\tests\\getTypeSizes.test.js",
      "src\\app\\lib\\config\\services\\tamil.ts"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\components\\ThemeProvider\\fontScripts\\thai.ts": {
    "incomingDependencies": [
      ".storybook\\withServicesDecorator\\index.tsx",
      "src\\app\\components\\ThemeProvider\\themes\\thai.ts",
      "src\\app\\legacy\\psammead\\gel-foundations\\tests\\getTypeSizes.test.js",
      "src\\app\\lib\\config\\services\\thai.ts"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\components\\ThemeProvider\\fontSizes.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../../utilities/pixelsToRem",
        "resolvedPath": "src\\app\\utilities\\pixelsToRem\\index.ts"
      },
      {
        "source": "./fontMediaQueries",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontMediaQueries.ts"
      },
      {
        "source": "../../models/types/theming",
        "resolvedPath": "src\\app\\models\\types\\theming.ts"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\fontVariants\\amharic.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\amharic.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../fontFamilies",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontFamilies.ts"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\fontVariants\\bengali.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\bengali.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../fontFamilies",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontFamilies.ts"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\fontVariants\\burmese.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\burmese.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../fontFamilies",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontFamilies.ts"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\fontVariants\\chinese.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\ukchina\\base.ts",
      "src\\app\\components\\ThemeProvider\\themes\\zhongwen\\base.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../fontFamilies",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontFamilies.ts"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\fontVariants\\gujarati.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\gujarati.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../fontFamilies",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontFamilies.ts"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\fontVariants\\helmet.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\afaanoromoo.ts",
      "src\\app\\components\\ThemeProvider\\themes\\afrique.ts",
      "src\\app\\components\\ThemeProvider\\themes\\azeri.ts",
      "src\\app\\components\\ThemeProvider\\themes\\gahuza.ts",
      "src\\app\\components\\ThemeProvider\\themes\\hausa.ts",
      "src\\app\\components\\ThemeProvider\\themes\\igbo.ts",
      "src\\app\\components\\ThemeProvider\\themes\\indonesia.ts",
      "src\\app\\components\\ThemeProvider\\themes\\kyrgyz.ts",
      "src\\app\\components\\ThemeProvider\\themes\\pidgin.ts",
      "src\\app\\components\\ThemeProvider\\themes\\serbian\\base.ts",
      "src\\app\\components\\ThemeProvider\\themes\\somali.ts",
      "src\\app\\components\\ThemeProvider\\themes\\swahili.ts",
      "src\\app\\components\\ThemeProvider\\themes\\ukrainian.ts",
      "src\\app\\components\\ThemeProvider\\themes\\uzbek\\base.ts",
      "src\\app\\components\\ThemeProvider\\themes\\vietnamese.ts",
      "src\\app\\components\\ThemeProvider\\themes\\yoruba.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../fontFamilies",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontFamilies.ts"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\fontVariants\\hindi.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\hindi.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../fontFamilies",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontFamilies.ts"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\fontVariants\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../models/types/theming",
        "resolvedPath": "src\\app\\models\\types\\theming.ts"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\fontVariants\\japanese.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\japanese.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../fontFamilies",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontFamilies.ts"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\fontVariants\\korean.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\korean.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../fontFamilies",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontFamilies.ts"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\fontVariants\\marathi.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\marathi.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../fontFamilies",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontFamilies.ts"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\fontVariants\\nepali.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\nepali.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../fontFamilies",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontFamilies.ts"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\fontVariants\\punjabi.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\punjabi.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../fontFamilies",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontFamilies.ts"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\fontVariants\\reith.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\archive.ts",
      "src\\app\\components\\ThemeProvider\\themes\\cymrufyw.ts",
      "src\\app\\components\\ThemeProvider\\themes\\mundo.ts",
      "src\\app\\components\\ThemeProvider\\themes\\naidheachdan.ts",
      "src\\app\\components\\ThemeProvider\\themes\\news.ts",
      "src\\app\\components\\ThemeProvider\\themes\\newsround.ts",
      "src\\app\\components\\ThemeProvider\\themes\\portuguese.ts",
      "src\\app\\components\\ThemeProvider\\themes\\russian.ts",
      "src\\app\\components\\ThemeProvider\\themes\\scotland.ts",
      "src\\app\\components\\ThemeProvider\\themes\\sport.ts",
      "src\\app\\components\\ThemeProvider\\themes\\turkce.ts",
      "src\\app\\components\\ThemeProvider\\themes\\ws.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../fontFamilies",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontFamilies.ts"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\fontVariants\\reithQalam.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\arabic.ts",
      "src\\app\\components\\ThemeProvider\\themes\\pashto.ts",
      "src\\app\\components\\ThemeProvider\\themes\\persian.ts",
      "src\\app\\components\\ThemeProvider\\themes\\urdu.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../fontFamilies",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontFamilies.ts"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\fontVariants\\sinhala.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\sinhala.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../fontFamilies",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontFamilies.ts"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\fontVariants\\tamil.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\tamil.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../fontFamilies",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontFamilies.ts"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\fontVariants\\telugu.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\telugu.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../fontFamilies",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontFamilies.ts"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\fontVariants\\thai.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\thai.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../fontFamilies",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontFamilies.ts"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\fontVariants\\tigrinya.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\tigrinya.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../fontFamilies",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontFamilies.ts"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\gridWidths.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../../models/types/theming",
        "resolvedPath": "src\\app\\models\\types\\theming.ts"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "@testing-library/react",
        "resolvedPath": "@testing-library/react"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\index.tsx": {
    "incomingDependencies": [
      ".storybook\\DocsDecorator\\HealthFactors\\index.test.tsx",
      ".storybook\\DocsDecorator\\HealthFactors\\SingleDoc\\index.test.tsx",
      ".storybook\\DocsDecorator\\index.tsx",
      ".storybook\\preview.tsx",
      ".storybook\\SidebarLabel\\HealthFactorsSidebarLabel\\index.tsx",
      "src\\app\\components\\Curation\\Subhead\\index.stories.tsx",
      "src\\app\\components\\Header\\ScriptLink\\index.test.tsx",
      "src\\app\\components\\react-testing-library-with-providers.tsx",
      "src\\app\\components\\RelatedContentSection\\index.test.tsx",
      "src\\app\\components\\RelatedContentSection\\RelatedContentItem\\index.test.tsx",
      "src\\app\\components\\ThemeProvider\\index.test.tsx",
      "src\\app\\legacy\\containers\\ConsentBanner\\index.stories.jsx",
      "src\\app\\legacy\\containers\\CpsFeaturesAnalysis\\index.stories.jsx",
      "src\\app\\legacy\\containers\\CpsRecommendations\\index.stories.jsx",
      "src\\app\\legacy\\containers\\Footer\\index.stories.tsx",
      "src\\app\\legacy\\containers\\FrontPageStoryRows\\index.test.jsx",
      "src\\app\\legacy\\containers\\ImageWithPlaceholder\\fixtureData.jsx",
      "src\\app\\legacy\\containers\\IndexPageSection\\index.test.jsx",
      "src\\app\\legacy\\containers\\InlineLink\\index.stories.jsx",
      "src\\app\\legacy\\containers\\PageHandlers\\withContexts.jsx",
      "src\\app\\legacy\\containers\\SocialEmbed\\common\\testHelper.jsx",
      "src\\app\\legacy\\containers\\StoryPromo\\index.test.jsx",
      "src\\app\\legacy\\containers\\StoryPromo\\IndexAlsos\\index.test.jsx",
      "src\\app\\pages\\ArticlePage\\index.test.tsx",
      "src\\app\\pages\\ErrorPage\\index.stories.jsx",
      "src\\app\\pages\\FeatureIdxPage\\index.test.jsx",
      "src\\app\\pages\\FrontPage\\index.stories.jsx",
      "src\\app\\pages\\FrontPage\\index.test.jsx",
      "src\\app\\pages\\MediaArticlePage\\index.test.tsx",
      "src\\app\\pages\\MediaArticlePage\\PagePromoSections\\LatestMediaSection\\index.stories.tsx",
      "src\\app\\pages\\TopicPage\\index.stories.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../../models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global.ts"
      },
      {
        "source": "./defaultServiceVariants",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\defaultServiceVariants.ts"
      },
      {
        "source": "./themes/loadableConfig",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\loadableConfig.ts"
      },
      {
        "source": "./themes/news",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\news.ts"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\mediaQueries.ts": {
    "incomingDependencies": [
      "src\\app\\components\\Ad\\Amp\\AdSlot\\index.tsx",
      "src\\app\\components\\Footer\\index.styles.ts",
      "src\\app\\components\\Footer\\List\\index.styles.ts",
      "src\\app\\components\\MostRead\\Canonical\\List\\index.styles.ts",
      "src\\app\\components\\MostRead\\Canonical\\Rank\\index.styles.ts",
      "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx",
      "src\\app\\lib\\styles.const\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../utilities/pixelsToRem",
        "resolvedPath": "src\\app\\utilities\\pixelsToRem\\index.ts"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\palette.ts": {
    "incomingDependencies": [
      "src\\app\\components\\BulletedList\\index.stories.tsx",
      "src\\app\\components\\BulletedList\\index.tsx",
      "src\\app\\components\\Curation\\index.tsx",
      "src\\app\\components\\Image\\index.test.tsx",
      "src\\app\\components\\MostRead\\index.tsx",
      "src\\app\\components\\MostRead\\Label\\index.tsx",
      "src\\app\\components\\ThemeProvider\\themes\\afaanoromoo.ts",
      "src\\app\\components\\ThemeProvider\\themes\\afrique.ts",
      "src\\app\\components\\ThemeProvider\\themes\\amharic.ts",
      "src\\app\\components\\ThemeProvider\\themes\\arabic.ts",
      "src\\app\\components\\ThemeProvider\\themes\\archive.ts",
      "src\\app\\components\\ThemeProvider\\themes\\azeri.ts",
      "src\\app\\components\\ThemeProvider\\themes\\bengali.ts",
      "src\\app\\components\\ThemeProvider\\themes\\burmese.ts",
      "src\\app\\components\\ThemeProvider\\themes\\cymrufyw.ts",
      "src\\app\\components\\ThemeProvider\\themes\\gahuza.ts",
      "src\\app\\components\\ThemeProvider\\themes\\gujarati.ts",
      "src\\app\\components\\ThemeProvider\\themes\\hausa.ts",
      "src\\app\\components\\ThemeProvider\\themes\\hindi.ts",
      "src\\app\\components\\ThemeProvider\\themes\\igbo.ts",
      "src\\app\\components\\ThemeProvider\\themes\\indonesia.ts",
      "src\\app\\components\\ThemeProvider\\themes\\japanese.ts",
      "src\\app\\components\\ThemeProvider\\themes\\korean.ts",
      "src\\app\\components\\ThemeProvider\\themes\\kyrgyz.ts",
      "src\\app\\components\\ThemeProvider\\themes\\marathi.ts",
      "src\\app\\components\\ThemeProvider\\themes\\mundo.ts",
      "src\\app\\components\\ThemeProvider\\themes\\naidheachdan.ts",
      "src\\app\\components\\ThemeProvider\\themes\\nepali.ts",
      "src\\app\\components\\ThemeProvider\\themes\\news.ts",
      "src\\app\\components\\ThemeProvider\\themes\\newsround.ts",
      "src\\app\\components\\ThemeProvider\\themes\\pashto.ts",
      "src\\app\\components\\ThemeProvider\\themes\\persian.ts",
      "src\\app\\components\\ThemeProvider\\themes\\pidgin.ts",
      "src\\app\\components\\ThemeProvider\\themes\\portuguese.ts",
      "src\\app\\components\\ThemeProvider\\themes\\punjabi.ts",
      "src\\app\\components\\ThemeProvider\\themes\\russian.ts",
      "src\\app\\components\\ThemeProvider\\themes\\scotland.ts",
      "src\\app\\components\\ThemeProvider\\themes\\serbian\\base.ts",
      "src\\app\\components\\ThemeProvider\\themes\\sinhala.ts",
      "src\\app\\components\\ThemeProvider\\themes\\somali.ts",
      "src\\app\\components\\ThemeProvider\\themes\\sport.ts",
      "src\\app\\components\\ThemeProvider\\themes\\swahili.ts",
      "src\\app\\components\\ThemeProvider\\themes\\tamil.ts",
      "src\\app\\components\\ThemeProvider\\themes\\telugu.ts",
      "src\\app\\components\\ThemeProvider\\themes\\thai.ts",
      "src\\app\\components\\ThemeProvider\\themes\\tigrinya.ts",
      "src\\app\\components\\ThemeProvider\\themes\\turkce.ts",
      "src\\app\\components\\ThemeProvider\\themes\\ukchina\\base.ts",
      "src\\app\\components\\ThemeProvider\\themes\\ukrainian.ts",
      "src\\app\\components\\ThemeProvider\\themes\\urdu.ts",
      "src\\app\\components\\ThemeProvider\\themes\\uzbek\\base.ts",
      "src\\app\\components\\ThemeProvider\\themes\\vietnamese.ts",
      "src\\app\\components\\ThemeProvider\\themes\\ws.ts",
      "src\\app\\components\\ThemeProvider\\themes\\yoruba.ts",
      "src\\app\\components\\ThemeProvider\\themes\\zhongwen\\base.ts",
      "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx",
      "src\\app\\legacy\\components\\RadioSchedule\\utilities\\index.js",
      "src\\app\\legacy\\containers\\CpsOnwardJourney\\index.jsx",
      "src\\app\\legacy\\containers\\CpsOnwardJourney\\index.test.jsx",
      "src\\app\\legacy\\containers\\ImageWithPlaceholder\\index.test.jsx",
      "src\\app\\legacy\\containers\\SocialEmbed\\index.stories.jsx",
      "src\\app\\legacy\\psammead\\psammead-brand\\src\\index.stories.jsx",
      "src\\app\\legacy\\psammead\\psammead-brand\\src\\index.test.jsx",
      "src\\app\\legacy\\psammead\\psammead-inline-link\\src\\index.stories.jsx",
      "src\\app\\legacy\\psammead\\psammead-social-embed\\src\\CaptionWrapper\\index.jsx",
      "src\\app\\legacy\\psammead\\psammead-story-promo-list\\src\\index.jsx",
      "src\\app\\pages\\FrontPage\\FrontPage.jsx"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\components\\ThemeProvider\\spacings.ts": {
    "incomingDependencies": [
      "src\\app\\components\\Caption\\index.style.tsx",
      "src\\app\\components\\Footer\\index.styles.ts",
      "src\\app\\components\\MostRead\\utilities\\rankMinWidth.ts",
      "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx",
      "src\\app\\lib\\styles.const\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../utilities/pixelsToRem",
        "resolvedPath": "src\\app\\utilities\\pixelsToRem\\index.ts"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\afaanoromoo.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "../fontScripts/latin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts"
      },
      {
        "source": "../fontVariants/helmet",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontVariants\\helmet.ts"
      },
      {
        "source": "../withThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
      },
      {
        "source": "../chameleonLogos/afaanoromoo",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\afaanoromoo.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\afrique.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "../fontScripts/latin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts"
      },
      {
        "source": "../fontVariants/helmet",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontVariants\\helmet.ts"
      },
      {
        "source": "../withThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
      },
      {
        "source": "../chameleonLogos/afrique",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\afrique.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\amharic.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "../fontScripts/noAscOrDesc",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\noAscOrDesc.ts"
      },
      {
        "source": "../fontFaces",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontFaces.ts"
      },
      {
        "source": "../fontVariants/amharic",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontVariants\\amharic.ts"
      },
      {
        "source": "../withThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
      },
      {
        "source": "../chameleonLogos/amharic",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\amharic.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\arabic.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "../fontScripts/arabic",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\arabic.ts"
      },
      {
        "source": "../fontFaces",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontFaces.ts"
      },
      {
        "source": "../fontVariants/reithQalam",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontVariants\\reithQalam.ts"
      },
      {
        "source": "../withThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
      },
      {
        "source": "../chameleonLogos/arabic",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\arabic.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\archive.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "../fontScripts/latin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts"
      },
      {
        "source": "../fontFaces",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontFaces.ts"
      },
      {
        "source": "../fontVariants/reith",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontVariants\\reith.ts"
      },
      {
        "source": "../withThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
      },
      {
        "source": "../../../legacy/psammead/psammead-assets/src/svgs/archive",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\archive.jsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\azeri.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "../fontScripts/latinWithDiacritics",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latinWithDiacritics.ts"
      },
      {
        "source": "../fontVariants/helmet",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontVariants\\helmet.ts"
      },
      {
        "source": "../withThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
      },
      {
        "source": "../chameleonLogos/azeri",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\azeri.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\bengali.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "../fontScripts/bengali",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\bengali.ts"
      },
      {
        "source": "../fontFaces",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontFaces.ts"
      },
      {
        "source": "../fontVariants/bengali",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontVariants\\bengali.ts"
      },
      {
        "source": "../withThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
      },
      {
        "source": "../chameleonLogos/bangla",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\bangla.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\burmese.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "../fontScripts/burmese",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\burmese.ts"
      },
      {
        "source": "../fontFaces",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontFaces.ts"
      },
      {
        "source": "../fontVariants/burmese",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontVariants\\burmese.ts"
      },
      {
        "source": "../withThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
      },
      {
        "source": "../chameleonLogos/burmese",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\burmese.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\cymrufyw.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "../fontScripts/latinWithDiacritics",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latinWithDiacritics.ts"
      },
      {
        "source": "../fontFaces",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontFaces.ts"
      },
      {
        "source": "../fontVariants/reith",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontVariants\\reith.ts"
      },
      {
        "source": "../withThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
      },
      {
        "source": "../../../legacy/psammead/psammead-assets/src/svgs/cymrufyw",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\cymrufyw.jsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\gahuza.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "../fontScripts/latin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts"
      },
      {
        "source": "../fontVariants/helmet",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontVariants\\helmet.ts"
      },
      {
        "source": "../withThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
      },
      {
        "source": "../chameleonLogos/gahuza",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\gahuza.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\gujarati.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "../fontScripts/devanagari",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\devanagari.ts"
      },
      {
        "source": "../fontFaces",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontFaces.ts"
      },
      {
        "source": "../fontVariants/gujarati",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontVariants\\gujarati.ts"
      },
      {
        "source": "../withThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
      },
      {
        "source": "../chameleonLogos/gujarati",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\gujarati.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\hausa.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "../fontScripts/latin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts"
      },
      {
        "source": "../fontVariants/helmet",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontVariants\\helmet.ts"
      },
      {
        "source": "../withThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
      },
      {
        "source": "../chameleonLogos/hausa",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\hausa.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\hindi.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "../fontScripts/devanagari",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\devanagari.ts"
      },
      {
        "source": "../fontVariants/hindi",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontVariants\\hindi.ts"
      },
      {
        "source": "../withThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
      },
      {
        "source": "../chameleonLogos/hindi",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\hindi.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\igbo.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "../fontScripts/latin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts"
      },
      {
        "source": "../fontVariants/helmet",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontVariants\\helmet.ts"
      },
      {
        "source": "../withThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
      },
      {
        "source": "../chameleonLogos/igbo",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\igbo.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\indonesia.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "../fontScripts/latin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts"
      },
      {
        "source": "../fontVariants/helmet",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontVariants\\helmet.ts"
      },
      {
        "source": "../withThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
      },
      {
        "source": "../chameleonLogos/indonesian",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\indonesian.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\japanese.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "../fontScripts/noAscOrDesc",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\noAscOrDesc.ts"
      },
      {
        "source": "../fontVariants/japanese",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontVariants\\japanese.ts"
      },
      {
        "source": "../withThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
      },
      {
        "source": "../chameleonLogos/japanese",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\japanese.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\korean.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "../fontScripts/noAscOrDesc",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\noAscOrDesc.ts"
      },
      {
        "source": "../fontVariants/korean",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontVariants\\korean.ts"
      },
      {
        "source": "../withThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
      },
      {
        "source": "../chameleonLogos/korean",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\korean.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\kyrgyz.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "../fontScripts/cyrillic",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\cyrillic.ts"
      },
      {
        "source": "../fontVariants/helmet",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontVariants\\helmet.ts"
      },
      {
        "source": "../withThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
      },
      {
        "source": "../chameleonLogos/kyrgyz",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\kyrgyz.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\loadableConfig.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@loadable/component",
        "resolvedPath": "@loadable/component"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\marathi.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "../fontScripts/devanagari",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\devanagari.ts"
      },
      {
        "source": "../fontVariants/marathi",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontVariants\\marathi.ts"
      },
      {
        "source": "../withThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
      },
      {
        "source": "../chameleonLogos/marathi",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\marathi.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\mundo.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "../fontScripts/latinWithDiacritics",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latinWithDiacritics.ts"
      },
      {
        "source": "../fontFaces",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontFaces.ts"
      },
      {
        "source": "../withThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
      },
      {
        "source": "../fontVariants/reith",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontVariants\\reith.ts"
      },
      {
        "source": "../chameleonLogos/mundo",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\mundo.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\naidheachdan.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "../fontScripts/latinWithDiacritics",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latinWithDiacritics.ts"
      },
      {
        "source": "../fontFaces",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontFaces.ts"
      },
      {
        "source": "../fontVariants/reith",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontVariants\\reith.ts"
      },
      {
        "source": "../withThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
      },
      {
        "source": "../../../legacy/psammead/psammead-assets/src/svgs/naidheachdan",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\naidheachdan.jsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\nepali.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "../fontScripts/devanagari",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\devanagari.ts"
      },
      {
        "source": "../fontVariants/nepali",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontVariants\\nepali.ts"
      },
      {
        "source": "../withThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
      },
      {
        "source": "../chameleonLogos/nepali",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\nepali.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\news.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\index.tsx",
      "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "../fontScripts/latin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts"
      },
      {
        "source": "../fontFaces",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontFaces.ts"
      },
      {
        "source": "../fontVariants/reith",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontVariants\\reith.ts"
      },
      {
        "source": "../withThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
      },
      {
        "source": "../chameleonLogos/news",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\news.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\newsround.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "../fontScripts/latin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts"
      },
      {
        "source": "../fontFaces",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontFaces.ts"
      },
      {
        "source": "../fontVariants/reith",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontVariants\\reith.ts"
      },
      {
        "source": "../withThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
      },
      {
        "source": "../../../legacy/psammead/psammead-assets/src/svgs/newsround",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\newsround.jsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\pashto.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "../fontScripts/arabic",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\arabic.ts"
      },
      {
        "source": "../fontFaces",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontFaces.ts"
      },
      {
        "source": "../fontVariants/reithQalam",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontVariants\\reithQalam.ts"
      },
      {
        "source": "../withThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
      },
      {
        "source": "../chameleonLogos/pashto",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\pashto.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\persian.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "../fontScripts/arabic",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\arabic.ts"
      },
      {
        "source": "../fontFaces",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontFaces.ts"
      },
      {
        "source": "../fontVariants/reithQalam",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontVariants\\reithQalam.ts"
      },
      {
        "source": "../withThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
      },
      {
        "source": "../chameleonLogos/persian",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\persian.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\pidgin.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "../fontScripts/latin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts"
      },
      {
        "source": "../fontVariants/helmet",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontVariants\\helmet.ts"
      },
      {
        "source": "../withThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
      },
      {
        "source": "../chameleonLogos/pidgin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\pidgin.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\portuguese.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "../fontScripts/latinWithDiacritics",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latinWithDiacritics.ts"
      },
      {
        "source": "../fontFaces",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontFaces.ts"
      },
      {
        "source": "../fontVariants/reith",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontVariants\\reith.ts"
      },
      {
        "source": "../withThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
      },
      {
        "source": "../chameleonLogos/portuguese",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\portuguese.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\punjabi.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "../fontScripts/gurmukhi",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\gurmukhi.ts"
      },
      {
        "source": "../fontVariants/punjabi",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontVariants\\punjabi.ts"
      },
      {
        "source": "../withThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
      },
      {
        "source": "../chameleonLogos/punjabi",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\punjabi.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\russian.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "../fontScripts/cyrillic",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\cyrillic.ts"
      },
      {
        "source": "../fontFaces",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontFaces.ts"
      },
      {
        "source": "../fontVariants/reith",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontVariants\\reith.ts"
      },
      {
        "source": "../withThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
      },
      {
        "source": "../chameleonLogos/russian",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\russian.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\scotland.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "../fontScripts/latin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts"
      },
      {
        "source": "../fontFaces",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontFaces.ts"
      },
      {
        "source": "../fontVariants/reith",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontVariants\\reith.ts"
      },
      {
        "source": "../withThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
      },
      {
        "source": "../../../legacy/psammead/psammead-assets/src/svgs/scotland",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\scotland.jsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\serbian\\base.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\serbian\\cyr.ts",
      "src\\app\\components\\ThemeProvider\\themes\\serbian\\lat.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "../../fontVariants/helmet",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontVariants\\helmet.ts"
      },
      {
        "source": "../../chameleonLogos/serbian",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\serbian.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\serbian\\cyr.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "ramda",
        "resolvedPath": "ramda"
      },
      {
        "source": "../../fontScripts/cyrillic",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\cyrillic.ts"
      },
      {
        "source": "../../withThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
      },
      {
        "source": "./base",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\serbian\\base.ts"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\serbian\\lat.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "ramda",
        "resolvedPath": "ramda"
      },
      {
        "source": "../../fontScripts/latinWithDiacritics",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latinWithDiacritics.ts"
      },
      {
        "source": "../../withThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
      },
      {
        "source": "./base",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\serbian\\base.ts"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\sinhala.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "../fontScripts/sinhalese",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\sinhalese.ts"
      },
      {
        "source": "../fontFaces",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontFaces.ts"
      },
      {
        "source": "../fontVariants/sinhala",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontVariants\\sinhala.ts"
      },
      {
        "source": "../withThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
      },
      {
        "source": "../chameleonLogos/sinhala",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\sinhala.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\somali.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "../fontScripts/latin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts"
      },
      {
        "source": "../fontVariants/helmet",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontVariants\\helmet.ts"
      },
      {
        "source": "../withThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
      },
      {
        "source": "../chameleonLogos/somali",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\somali.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\sport.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "../fontScripts/latin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts"
      },
      {
        "source": "../fontFaces",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontFaces.ts"
      },
      {
        "source": "../fontVariants/reith",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontVariants\\reith.ts"
      },
      {
        "source": "../withThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
      },
      {
        "source": "../chameleonLogos/sport",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\sport.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\swahili.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "../fontScripts/latin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts"
      },
      {
        "source": "../fontVariants/helmet",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontVariants\\helmet.ts"
      },
      {
        "source": "../withThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
      },
      {
        "source": "../chameleonLogos/swahili",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\swahili.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\tamil.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "../fontScripts/tamil",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\tamil.ts"
      },
      {
        "source": "../fontFaces",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontFaces.ts"
      },
      {
        "source": "../fontVariants/tamil",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontVariants\\tamil.ts"
      },
      {
        "source": "../withThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
      },
      {
        "source": "../chameleonLogos/tamil",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\tamil.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\telugu.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "../fontScripts/devanagari",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\devanagari.ts"
      },
      {
        "source": "../fontFaces",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontFaces.ts"
      },
      {
        "source": "../fontVariants/telugu",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontVariants\\telugu.ts"
      },
      {
        "source": "../withThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
      },
      {
        "source": "../chameleonLogos/telugu",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\telugu.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\thai.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "../fontScripts/thai",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\thai.ts"
      },
      {
        "source": "../fontVariants/thai",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontVariants\\thai.ts"
      },
      {
        "source": "../withThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
      },
      {
        "source": "../chameleonLogos/thai",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\thai.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\tigrinya.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "../fontScripts/noAscOrDesc",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\noAscOrDesc.ts"
      },
      {
        "source": "../fontFaces",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontFaces.ts"
      },
      {
        "source": "../fontVariants/tigrinya",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontVariants\\tigrinya.ts"
      },
      {
        "source": "../withThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
      },
      {
        "source": "../chameleonLogos/tigrinya",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\tigrinya.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\turkce.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "../fontScripts/latinWithDiacritics",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latinWithDiacritics.ts"
      },
      {
        "source": "../fontFaces",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontFaces.ts"
      },
      {
        "source": "../fontVariants/reith",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontVariants\\reith.ts"
      },
      {
        "source": "../withThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
      },
      {
        "source": "../chameleonLogos/turkish",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\turkish.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\ukchina\\base.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\ukchina\\simp.ts",
      "src\\app\\components\\ThemeProvider\\themes\\ukchina\\trad.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "../../fontScripts/noAscOrDesc",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\noAscOrDesc.ts"
      },
      {
        "source": "../../fontVariants/chinese",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontVariants\\chinese.ts"
      },
      {
        "source": "../../chameleonLogos/zhongwen",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\zhongwen.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\ukchina\\simp.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../../withThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
      },
      {
        "source": "./base",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\ukchina\\base.ts"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\ukchina\\trad.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../../withThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
      },
      {
        "source": "./base",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\ukchina\\base.ts"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\ukrainian.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "../fontScripts/cyrillic",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\cyrillic.ts"
      },
      {
        "source": "../fontVariants/helmet",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontVariants\\helmet.ts"
      },
      {
        "source": "../withThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
      },
      {
        "source": "../chameleonLogos/ukrainian",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\ukrainian.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\urdu.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "../fontScripts/arabic",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\arabic.ts"
      },
      {
        "source": "../fontFaces",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontFaces.ts"
      },
      {
        "source": "../fontVariants/reithQalam",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontVariants\\reithQalam.ts"
      },
      {
        "source": "../withThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
      },
      {
        "source": "../chameleonLogos/urdu",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\urdu.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\uzbek\\base.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\uzbek\\cyr.ts",
      "src\\app\\components\\ThemeProvider\\themes\\uzbek\\lat.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "../../fontVariants/helmet",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontVariants\\helmet.ts"
      },
      {
        "source": "../../chameleonLogos/uzbek",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\uzbek.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\uzbek\\cyr.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "ramda",
        "resolvedPath": "ramda"
      },
      {
        "source": "../../fontScripts/cyrillic",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\cyrillic.ts"
      },
      {
        "source": "../../withThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
      },
      {
        "source": "./base",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\uzbek\\base.ts"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\uzbek\\lat.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "ramda",
        "resolvedPath": "ramda"
      },
      {
        "source": "../../fontScripts/latinWithDiacritics",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latinWithDiacritics.ts"
      },
      {
        "source": "../../withThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
      },
      {
        "source": "./base",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\uzbek\\base.ts"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\vietnamese.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "../fontScripts/latinWithDiacritics",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latinWithDiacritics.ts"
      },
      {
        "source": "../fontVariants/helmet",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontVariants\\helmet.ts"
      },
      {
        "source": "../withThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
      },
      {
        "source": "../chameleonLogos/vietnamese",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\vietnamese.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\ws.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "../fontScripts/latin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts"
      },
      {
        "source": "../fontFaces",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontFaces.ts"
      },
      {
        "source": "../fontVariants/reith",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontVariants\\reith.ts"
      },
      {
        "source": "../withThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
      },
      {
        "source": "../chameleonLogos/news",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\news.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\yoruba.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "../fontScripts/latin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts"
      },
      {
        "source": "../fontVariants/helmet",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontVariants\\helmet.ts"
      },
      {
        "source": "../withThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
      },
      {
        "source": "../chameleonLogos/yoruba",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\yoruba.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\zhongwen\\base.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\zhongwen\\simp.ts",
      "src\\app\\components\\ThemeProvider\\themes\\zhongwen\\trad.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "../../fontScripts/noAscOrDesc",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\noAscOrDesc.ts"
      },
      {
        "source": "../../fontVariants/chinese",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontVariants\\chinese.ts"
      },
      {
        "source": "../../chameleonLogos/zhongwen",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\zhongwen.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\zhongwen\\simp.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../../withThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
      },
      {
        "source": "./base",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\zhongwen\\base.ts"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\zhongwen\\trad.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../../withThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
      },
      {
        "source": "./base",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\zhongwen\\base.ts"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\afaanoromoo.ts",
      "src\\app\\components\\ThemeProvider\\themes\\afrique.ts",
      "src\\app\\components\\ThemeProvider\\themes\\amharic.ts",
      "src\\app\\components\\ThemeProvider\\themes\\arabic.ts",
      "src\\app\\components\\ThemeProvider\\themes\\archive.ts",
      "src\\app\\components\\ThemeProvider\\themes\\azeri.ts",
      "src\\app\\components\\ThemeProvider\\themes\\bengali.ts",
      "src\\app\\components\\ThemeProvider\\themes\\burmese.ts",
      "src\\app\\components\\ThemeProvider\\themes\\cymrufyw.ts",
      "src\\app\\components\\ThemeProvider\\themes\\gahuza.ts",
      "src\\app\\components\\ThemeProvider\\themes\\gujarati.ts",
      "src\\app\\components\\ThemeProvider\\themes\\hausa.ts",
      "src\\app\\components\\ThemeProvider\\themes\\hindi.ts",
      "src\\app\\components\\ThemeProvider\\themes\\igbo.ts",
      "src\\app\\components\\ThemeProvider\\themes\\indonesia.ts",
      "src\\app\\components\\ThemeProvider\\themes\\japanese.ts",
      "src\\app\\components\\ThemeProvider\\themes\\korean.ts",
      "src\\app\\components\\ThemeProvider\\themes\\kyrgyz.ts",
      "src\\app\\components\\ThemeProvider\\themes\\marathi.ts",
      "src\\app\\components\\ThemeProvider\\themes\\mundo.ts",
      "src\\app\\components\\ThemeProvider\\themes\\naidheachdan.ts",
      "src\\app\\components\\ThemeProvider\\themes\\nepali.ts",
      "src\\app\\components\\ThemeProvider\\themes\\news.ts",
      "src\\app\\components\\ThemeProvider\\themes\\newsround.ts",
      "src\\app\\components\\ThemeProvider\\themes\\pashto.ts",
      "src\\app\\components\\ThemeProvider\\themes\\persian.ts",
      "src\\app\\components\\ThemeProvider\\themes\\pidgin.ts",
      "src\\app\\components\\ThemeProvider\\themes\\portuguese.ts",
      "src\\app\\components\\ThemeProvider\\themes\\punjabi.ts",
      "src\\app\\components\\ThemeProvider\\themes\\russian.ts",
      "src\\app\\components\\ThemeProvider\\themes\\scotland.ts",
      "src\\app\\components\\ThemeProvider\\themes\\serbian\\cyr.ts",
      "src\\app\\components\\ThemeProvider\\themes\\serbian\\lat.ts",
      "src\\app\\components\\ThemeProvider\\themes\\sinhala.ts",
      "src\\app\\components\\ThemeProvider\\themes\\somali.ts",
      "src\\app\\components\\ThemeProvider\\themes\\sport.ts",
      "src\\app\\components\\ThemeProvider\\themes\\swahili.ts",
      "src\\app\\components\\ThemeProvider\\themes\\tamil.ts",
      "src\\app\\components\\ThemeProvider\\themes\\telugu.ts",
      "src\\app\\components\\ThemeProvider\\themes\\thai.ts",
      "src\\app\\components\\ThemeProvider\\themes\\tigrinya.ts",
      "src\\app\\components\\ThemeProvider\\themes\\turkce.ts",
      "src\\app\\components\\ThemeProvider\\themes\\ukchina\\simp.ts",
      "src\\app\\components\\ThemeProvider\\themes\\ukchina\\trad.ts",
      "src\\app\\components\\ThemeProvider\\themes\\ukrainian.ts",
      "src\\app\\components\\ThemeProvider\\themes\\urdu.ts",
      "src\\app\\components\\ThemeProvider\\themes\\uzbek\\cyr.ts",
      "src\\app\\components\\ThemeProvider\\themes\\uzbek\\lat.ts",
      "src\\app\\components\\ThemeProvider\\themes\\vietnamese.ts",
      "src\\app\\components\\ThemeProvider\\themes\\ws.ts",
      "src\\app\\components\\ThemeProvider\\themes\\yoruba.ts",
      "src\\app\\components\\ThemeProvider\\themes\\zhongwen\\simp.ts",
      "src\\app\\components\\ThemeProvider\\themes\\zhongwen\\trad.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "./focusIndicator",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\focusIndicator.ts"
      },
      {
        "source": "../../contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext\\index.tsx"
      },
      {
        "source": "./palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "./mediaQueries",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\mediaQueries.ts"
      },
      {
        "source": "./spacings",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\spacings.ts"
      },
      {
        "source": "./fontSizes",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontSizes.ts"
      },
      {
        "source": "./fontVariants",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontVariants\\index.tsx"
      },
      {
        "source": "./fontMediaQueries",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontMediaQueries.ts"
      },
      {
        "source": "./gridWidths",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\gridWidths.ts"
      },
      {
        "source": "../../routes/utils/pageTypes",
        "resolvedPath": "src\\app\\routes\\utils\\pageTypes.ts"
      },
      {
        "source": "../../models/types/theming",
        "resolvedPath": "src\\app\\models\\types\\theming.ts"
      },
      {
        "source": "../../models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global.ts"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../../../models/types/storybook",
        "resolvedPath": "src\\app\\models\\types\\storybook.ts"
      },
      {
        "source": "../defaultServiceVariants",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\defaultServiceVariants.ts"
      },
      {
        "source": "../themes/afaanoromoo",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\afaanoromoo.ts"
      },
      {
        "source": "../themes/afrique",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\afrique.ts"
      },
      {
        "source": "../themes/amharic",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\amharic.ts"
      },
      {
        "source": "../themes/arabic",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\arabic.ts"
      },
      {
        "source": "../themes/archive",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\archive.ts"
      },
      {
        "source": "../themes/azeri",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\azeri.ts"
      },
      {
        "source": "../themes/bengali",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\bengali.ts"
      },
      {
        "source": "../themes/burmese",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\burmese.ts"
      },
      {
        "source": "../themes/cymrufyw",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\cymrufyw.ts"
      },
      {
        "source": "../themes/gahuza",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\gahuza.ts"
      },
      {
        "source": "../themes/gujarati",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\gujarati.ts"
      },
      {
        "source": "../themes/hausa",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\hausa.ts"
      },
      {
        "source": "../themes/hindi",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\hindi.ts"
      },
      {
        "source": "../themes/igbo",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\igbo.ts"
      },
      {
        "source": "../themes/indonesia",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\indonesia.ts"
      },
      {
        "source": "../themes/japanese",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\japanese.ts"
      },
      {
        "source": "../themes/korean",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\korean.ts"
      },
      {
        "source": "../themes/kyrgyz",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\kyrgyz.ts"
      },
      {
        "source": "../themes/marathi",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\marathi.ts"
      },
      {
        "source": "../themes/mundo",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\mundo.ts"
      },
      {
        "source": "../themes/naidheachdan",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\naidheachdan.ts"
      },
      {
        "source": "../themes/nepali",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\nepali.ts"
      },
      {
        "source": "../themes/news",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\news.ts"
      },
      {
        "source": "../themes/newsround",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\newsround.ts"
      },
      {
        "source": "../themes/pashto",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\pashto.ts"
      },
      {
        "source": "../themes/persian",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\persian.ts"
      },
      {
        "source": "../themes/pidgin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\pidgin.ts"
      },
      {
        "source": "../themes/portuguese",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\portuguese.ts"
      },
      {
        "source": "../themes/punjabi",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\punjabi.ts"
      },
      {
        "source": "../themes/russian",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\russian.ts"
      },
      {
        "source": "../themes/scotland",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\scotland.ts"
      },
      {
        "source": "../themes/serbian/cyr",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\serbian\\cyr.ts"
      },
      {
        "source": "../themes/serbian/lat",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\serbian\\lat.ts"
      },
      {
        "source": "../themes/sinhala",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\sinhala.ts"
      },
      {
        "source": "../themes/somali",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\somali.ts"
      },
      {
        "source": "../themes/sport",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\sport.ts"
      },
      {
        "source": "../themes/swahili",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\swahili.ts"
      },
      {
        "source": "../themes/tamil",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\tamil.ts"
      },
      {
        "source": "../themes/telugu",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\telugu.ts"
      },
      {
        "source": "../themes/thai",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\thai.ts"
      },
      {
        "source": "../themes/tigrinya",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\tigrinya.ts"
      },
      {
        "source": "../themes/turkce",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\turkce.ts"
      },
      {
        "source": "../themes/ukchina/simp",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\ukchina\\simp.ts"
      },
      {
        "source": "../themes/ukchina/trad",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\ukchina\\trad.ts"
      },
      {
        "source": "../themes/ukrainian",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\ukrainian.ts"
      },
      {
        "source": "../themes/urdu",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\urdu.ts"
      },
      {
        "source": "../themes/uzbek/cyr",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\uzbek\\cyr.ts"
      },
      {
        "source": "../themes/uzbek/lat",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\uzbek\\lat.ts"
      },
      {
        "source": "../themes/vietnamese",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\vietnamese.ts"
      },
      {
        "source": "../themes/yoruba",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\yoruba.ts"
      },
      {
        "source": "../themes/zhongwen/simp",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\zhongwen\\simp.ts"
      },
      {
        "source": "../themes/zhongwen/trad",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\zhongwen\\trad.ts"
      }
    ]
  },
  "src\\app\\components\\VisuallyHiddenText\\index.stories.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#app/models/types/storybook",
        "resolvedPath": "#app/models/types/storybook"
      },
      {
        "source": "../../models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global.ts"
      },
      {
        "source": "./README.md",
        "resolvedPath": "..\\EXIM\\Work\\iterate-ai\\dep-graph\\README.md"
      },
      {
        "source": "./index",
        "resolvedPath": "src\\app\\components\\VisuallyHiddenText\\index.tsx"
      },
      {
        "source": "./metadata.json",
        "resolvedPath": "..\\EXIM\\Work\\iterate-ai\\dep-graph\\metadata.json"
      }
    ]
  },
  "src\\app\\components\\VisuallyHiddenText\\index.styles.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\VisuallyHiddenText\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      }
    ]
  },
  "src\\app\\components\\VisuallyHiddenText\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "./index",
        "resolvedPath": "src\\app\\components\\VisuallyHiddenText\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\VisuallyHiddenText\\index.tsx": {
    "incomingDependencies": [
      ".storybook\\DocsDecorator\\HealthFactors\\SingleDoc\\index.tsx",
      ".storybook\\SidebarLabel\\HealthFactorsSidebarLabel\\index.tsx",
      "src\\app\\components\\Byline\\index.tsx",
      "src\\app\\components\\Caption\\index.tsx",
      "src\\app\\components\\Copyright\\index.tsx",
      "src\\app\\components\\Curation\\CurationPromo\\index.tsx",
      "src\\app\\components\\Curation\\HierarchicalGrid\\index.tsx",
      "src\\app\\components\\Curation\\index.tsx",
      "src\\app\\components\\LiveLabel\\Text\\index.tsx",
      "src\\app\\components\\LiveRegion\\index.tsx",
      "src\\app\\components\\MediaLoader\\Placeholder\\PlayButton\\index.tsx",
      "src\\app\\components\\Pagination\\index.tsx",
      "src\\app\\components\\VisuallyHiddenText\\index.stories.tsx",
      "src\\app\\components\\VisuallyHiddenText\\index.test.tsx",
      "src\\app\\legacy\\components\\OptimoPromos\\Content\\index.jsx",
      "src\\app\\legacy\\components\\RadioSchedule\\ScheduleItemHeader\\index.jsx",
      "src\\app\\legacy\\containers\\EpisodeList\\RecentAudioEpisodes\\index.jsx",
      "src\\app\\legacy\\containers\\EpisodeList\\RecentVideoEpisodes\\index.jsx",
      "src\\app\\legacy\\containers\\OnDemandHeading\\index.jsx",
      "src\\app\\legacy\\containers\\PodcastExternalLinks\\index.jsx",
      "src\\app\\legacy\\containers\\StoryPromo\\LinkContents\\index.jsx",
      "src\\app\\legacy\\containers\\VisuallyHiddenHeadline\\index.jsx",
      "src\\app\\legacy\\psammead\\psammead-brand\\src\\index.jsx",
      "src\\app\\legacy\\psammead\\psammead-bulletin\\src\\index.jsx",
      "src\\app\\legacy\\psammead\\psammead-navigation\\src\\DropdownNavigation\\index.jsx",
      "src\\app\\legacy\\psammead\\psammead-navigation\\src\\index.jsx",
      "src\\app\\legacy\\psammead\\psammead-story-promo\\src\\index.stories.jsx",
      "src\\app\\legacy\\psammead\\psammead-story-promo\\src\\IndexAlsos\\index.jsx",
      "src\\app\\pages\\FrontPage\\FrontPage.jsx",
      "src\\app\\pages\\OnDemandTvPage\\OnDemandTvPage.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\components\\VisuallyHiddenText\\index.styles.tsx"
      }
    ]
  },
  "src\\app\\contexts\\EventTrackingContext\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../../components/react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "../../routes/utils/pageTypes",
        "resolvedPath": "src\\app\\routes\\utils\\pageTypes.ts"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\contexts\\EventTrackingContext\\index.tsx"
      },
      {
        "source": "./fixtureData.json",
        "resolvedPath": "..\\EXIM\\Work\\iterate-ai\\dep-graph\\fixtureData.json"
      }
    ]
  },
  "src\\app\\contexts\\EventTrackingContext\\index.tsx": {
    "incomingDependencies": [
      ".storybook\\preview.tsx",
      "src\\app\\components\\react-testing-library-with-providers.tsx",
      "src\\app\\contexts\\EventTrackingContext\\index.test.tsx",
      "src\\app\\hooks\\useClickTrackerHandler\\index.jsx",
      "src\\app\\hooks\\useViewTracker\\index.jsx",
      "src\\app\\legacy\\containers\\PageHandlers\\withContexts.jsx",
      "src\\app\\legacy\\containers\\PageHandlers\\withContexts.test.jsx",
      "ws-nextjs-app\\pages\\_app.page.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext\\index.tsx"
      },
      {
        "source": "../../hooks/useToggle",
        "resolvedPath": "src\\app\\hooks\\useToggle\\index.js"
      },
      {
        "source": "../../routes/utils/pageTypes",
        "resolvedPath": "src\\app\\routes\\utils\\pageTypes.ts"
      },
      {
        "source": "../../models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global.ts"
      },
      {
        "source": "../../components/ATIAnalytics/params",
        "resolvedPath": "src\\app\\components\\ATIAnalytics\\params\\index.ts"
      },
      {
        "source": "../ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../../components/ATIAnalytics/types",
        "resolvedPath": "src\\app\\components\\ATIAnalytics\\types.ts"
      }
    ]
  },
  "src\\app\\contexts\\RequestContext\\getEnv\\index.test.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "#testHelpers/config",
        "resolvedPath": "#testHelpers/config"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\contexts\\RequestContext\\getEnv\\index.ts"
      }
    ]
  },
  "src\\app\\contexts\\RequestContext\\getEnv\\index.ts": {
    "incomingDependencies": [
      "src\\app\\contexts\\RequestContext\\getEnv\\index.test.ts",
      "src\\app\\contexts\\RequestContext\\index.test.tsx",
      "src\\app\\contexts\\RequestContext\\index.tsx"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\contexts\\RequestContext\\getMetaUrls\\index.test.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": ".",
        "resolvedPath": "src\\app\\contexts\\RequestContext\\getMetaUrls\\index.ts"
      }
    ]
  },
  "src\\app\\contexts\\RequestContext\\getMetaUrls\\index.ts": {
    "incomingDependencies": [
      "src\\app\\contexts\\RequestContext\\getMetaUrls\\index.test.ts",
      "src\\app\\contexts\\RequestContext\\index.test.tsx",
      "src\\app\\contexts\\RequestContext\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../lib/regex.const",
        "resolvedPath": "src\\app\\lib\\regex.const.js"
      }
    ]
  },
  "src\\app\\contexts\\RequestContext\\getOriginContext\\index.test.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "#psammead/psammead-test-helpers/src",
        "resolvedPath": "#psammead/psammead-test-helpers/src"
      }
    ]
  },
  "src\\app\\contexts\\RequestContext\\getOriginContext\\index.ts": {
    "incomingDependencies": [
      "src\\app\\contexts\\RequestContext\\index.test.tsx",
      "src\\app\\contexts\\RequestContext\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../lib/utilities/getEnvConfig",
        "resolvedPath": "src\\app\\lib\\utilities\\getEnvConfig\\index.ts"
      }
    ]
  },
  "src\\app\\contexts\\RequestContext\\getStatsDestination\\index.test.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "#app/models/types/global",
        "resolvedPath": "#app/models/types/global"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\contexts\\RequestContext\\getStatsDestination\\index.ts"
      }
    ]
  },
  "src\\app\\contexts\\RequestContext\\getStatsDestination\\index.ts": {
    "incomingDependencies": [
      "src\\app\\contexts\\RequestContext\\getStatsDestination\\index.test.ts",
      "src\\app\\contexts\\RequestContext\\index.test.tsx",
      "src\\app\\contexts\\RequestContext\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "#app/models/types/global",
        "resolvedPath": "#app/models/types/global"
      }
    ]
  },
  "src\\app\\contexts\\RequestContext\\getStatsPageIdentifier\\index.test.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "#app/models/types/global",
        "resolvedPath": "#app/models/types/global"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\contexts\\RequestContext\\getStatsPageIdentifier\\index.ts"
      }
    ]
  },
  "src\\app\\contexts\\RequestContext\\getStatsPageIdentifier\\index.ts": {
    "incomingDependencies": [
      "src\\app\\contexts\\RequestContext\\getStatsPageIdentifier\\index.test.ts",
      "src\\app\\contexts\\RequestContext\\index.test.tsx",
      "src\\app\\contexts\\RequestContext\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "#app/models/types/global",
        "resolvedPath": "#app/models/types/global"
      },
      {
        "source": "../../../routes/utils/pageTypes",
        "resolvedPath": "src\\app\\routes\\utils\\pageTypes.ts"
      }
    ]
  },
  "src\\app\\contexts\\RequestContext\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@testing-library/react",
        "resolvedPath": "@testing-library/react"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": "./getStatsDestination",
        "resolvedPath": "src\\app\\contexts\\RequestContext\\getStatsDestination\\index.ts"
      },
      {
        "source": "./getStatsPageIdentifier",
        "resolvedPath": "src\\app\\contexts\\RequestContext\\getStatsPageIdentifier\\index.ts"
      },
      {
        "source": "./getOriginContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext\\getOriginContext\\index.ts"
      },
      {
        "source": "./getEnv",
        "resolvedPath": "src\\app\\contexts\\RequestContext\\getEnv\\index.ts"
      },
      {
        "source": "./getMetaUrls",
        "resolvedPath": "src\\app\\contexts\\RequestContext\\getMetaUrls\\index.ts"
      }
    ]
  },
  "src\\app\\contexts\\RequestContext\\index.tsx": {
    "incomingDependencies": [
      ".storybook\\preview.tsx",
      "src\\app\\components\\ATIAnalytics\\params\\genericPage\\buildParams.test.ts",
      "src\\app\\components\\ATIAnalytics\\params\\index.test.ts",
      "src\\app\\components\\ATIAnalytics\\params\\index.ts",
      "src\\app\\components\\ATIAnalytics\\params\\indexPage\\buildParams.test.ts",
      "src\\app\\components\\ATIAnalytics\\params\\indexPage\\buildParams.ts",
      "src\\app\\components\\ATIAnalytics\\params\\topicPage\\buildParams.test.ts",
      "src\\app\\components\\ATIAnalytics\\params\\topicPage\\buildParams.ts",
      "src\\app\\components\\ATIAnalytics\\params\\tvRadioPage\\buildParams.test.ts",
      "src\\app\\components\\ATIAnalytics\\params\\tvRadioPage\\buildParams.ts",
      "src\\app\\components\\ATIAnalytics\\types.ts",
      "src\\app\\components\\ChartbeatAnalytics\\index.test.tsx",
      "src\\app\\components\\ChartbeatAnalytics\\index.tsx",
      "src\\app\\components\\Curation\\CurationPromo\\index.tsx",
      "src\\app\\components\\Curation\\HierarchicalGrid\\index.tsx",
      "src\\app\\components\\Disclaimer\\index.tsx",
      "src\\app\\components\\Embeds\\AmpIframeEmbed\\index.stories.tsx",
      "src\\app\\components\\Embeds\\OEmbed\\index.test.tsx",
      "src\\app\\components\\Embeds\\OEmbed\\index.tsx",
      "src\\app\\components\\Embeds\\UnsupportedEmbed\\index.tsx",
      "src\\app\\components\\FrostedGlassPromo\\index.test.tsx",
      "src\\app\\components\\FrostedGlassPromo\\index.tsx",
      "src\\app\\components\\FrostedGlassPromo\\withData.tsx",
      "src\\app\\components\\Header\\ScriptLink\\index.tsx",
      "src\\app\\components\\Image\\index.tsx",
      "src\\app\\components\\ImageWithCaption\\index.tsx",
      "src\\app\\components\\MostRead\\index.test.tsx",
      "src\\app\\components\\PageLayoutWrapper\\index.tsx",
      "src\\app\\components\\react-testing-library-with-providers.tsx",
      "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx",
      "src\\app\\contexts\\EventTrackingContext\\index.tsx",
      "src\\app\\contexts\\UserContext\\Chartbeat\\index.tsx",
      "src\\app\\legacy\\containers\\ConsentBanner\\index.canonical.jsx",
      "src\\app\\legacy\\containers\\CpsRecommendations\\ErrorBoundary.tsx",
      "src\\app\\legacy\\containers\\CpsRecommendations\\RecommendationsPromo\\index.jsx",
      "src\\app\\legacy\\containers\\Footer\\index.stories.tsx",
      "src\\app\\legacy\\containers\\PageHandlers\\withContexts.jsx",
      "src\\app\\legacy\\containers\\PageHandlers\\withContexts.test.jsx",
      "src\\app\\legacy\\containers\\PageHandlers\\withData\\index.jsx",
      "src\\app\\legacy\\psammead\\psammead-image\\src\\index.jsx",
      "src\\app\\pages\\MediaArticlePage\\index.stories.tsx",
      "src\\app\\pages\\MediaArticlePage\\index.test.tsx",
      "ws-nextjs-app\\pages\\_app.page.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#app/models/types/global",
        "resolvedPath": "#app/models/types/global"
      },
      {
        "source": "./getStatsDestination",
        "resolvedPath": "src\\app\\contexts\\RequestContext\\getStatsDestination\\index.ts"
      },
      {
        "source": "./getStatsPageIdentifier",
        "resolvedPath": "src\\app\\contexts\\RequestContext\\getStatsPageIdentifier\\index.ts"
      },
      {
        "source": "./getOriginContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext\\getOriginContext\\index.ts"
      },
      {
        "source": "./getEnv",
        "resolvedPath": "src\\app\\contexts\\RequestContext\\getEnv\\index.ts"
      },
      {
        "source": "./getMetaUrls",
        "resolvedPath": "src\\app\\contexts\\RequestContext\\getMetaUrls\\index.ts"
      }
    ]
  },
  "src\\app\\contexts\\ServiceContext\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@testing-library/react",
        "resolvedPath": "@testing-library/react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../../../server/utilities/serviceConfigs",
        "resolvedPath": "src\\server\\utilities\\serviceConfigs\\index.ts"
      },
      {
        "source": "../../models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global.ts"
      },
      {
        "source": "../../models/types/translations",
        "resolvedPath": "src\\app\\models\\types\\translations.ts"
      }
    ]
  },
  "src\\app\\contexts\\ServiceContext\\index.tsx": {
    "incomingDependencies": [
      ".storybook\\preview.tsx",
      "src\\app\\components\\Ad\\Amp\\index.test.tsx",
      "src\\app\\components\\Ad\\Amp\\index.tsx",
      "src\\app\\components\\Ad\\Canonical\\index.tsx",
      "src\\app\\components\\Ad\\index.test.tsx",
      "src\\app\\components\\ATIAnalytics\\index.tsx",
      "src\\app\\components\\Byline\\index.tsx",
      "src\\app\\components\\ChartbeatAnalytics\\index.test.tsx",
      "src\\app\\components\\ChartbeatAnalytics\\index.tsx",
      "src\\app\\components\\Copyright\\index.stories.tsx",
      "src\\app\\components\\Copyright\\index.test.tsx",
      "src\\app\\components\\Copyright\\index.tsx",
      "src\\app\\components\\Curation\\CurationPromo\\index.tsx",
      "src\\app\\components\\Curation\\HierarchicalGrid\\index.tsx",
      "src\\app\\components\\Curation\\Subhead\\index.stories.tsx",
      "src\\app\\components\\Curation\\Subhead\\index.test.tsx",
      "src\\app\\components\\Curation\\Subhead\\index.tsx",
      "src\\app\\components\\Disclaimer\\index.stories.tsx",
      "src\\app\\components\\Disclaimer\\index.tsx",
      "src\\app\\components\\EmbedConsentBanner\\ConsentBanner.tsx",
      "src\\app\\components\\Embeds\\AmpIframeEmbed\\index.stories.tsx",
      "src\\app\\components\\Embeds\\OEmbed\\index.test.tsx",
      "src\\app\\components\\Embeds\\OEmbed\\index.tsx",
      "src\\app\\components\\Embeds\\UnsupportedEmbed\\index.tsx",
      "src\\app\\components\\Embeds\\Uploader\\index.tsx",
      "src\\app\\components\\FrostedGlassPromo\\index.test.tsx",
      "src\\app\\components\\Header\\ScriptLink\\index.test.tsx",
      "src\\app\\components\\Header\\ScriptLink\\index.tsx",
      "src\\app\\components\\InlineLink\\index.tsx",
      "src\\app\\components\\LinkedData\\index.test.tsx",
      "src\\app\\components\\LinkedData\\index.tsx",
      "src\\app\\components\\LiveLabel\\Text\\index.tsx",
      "src\\app\\components\\MessageBanner\\index.tsx",
      "src\\app\\components\\Metadata\\index.test.tsx",
      "src\\app\\components\\Metadata\\index.tsx",
      "src\\app\\components\\MostRead\\Amp\\index.test.tsx",
      "src\\app\\components\\MostRead\\Amp\\index.tsx",
      "src\\app\\components\\MostRead\\Canonical\\index.test.tsx",
      "src\\app\\components\\MostRead\\Canonical\\List\\index.tsx",
      "src\\app\\components\\MostRead\\index.test.tsx",
      "src\\app\\components\\MostRead\\index.tsx",
      "src\\app\\components\\MostRead\\Label\\index.test.tsx",
      "src\\app\\components\\MostRead\\Label\\index.tsx",
      "src\\app\\components\\MostRead\\utilities\\testHelpers.tsx",
      "src\\app\\components\\OptimizelyRecommendations\\index.test.tsx",
      "src\\app\\components\\PageLayoutWrapper\\index.tsx",
      "src\\app\\components\\Pagination\\index.tsx",
      "src\\app\\components\\react-testing-library-with-providers.tsx",
      "src\\app\\components\\RelatedContentSection\\index.test.tsx",
      "src\\app\\components\\RelatedContentSection\\index.tsx",
      "src\\app\\components\\RelatedContentSection\\RelatedContentItem\\index.test.tsx",
      "src\\app\\components\\ServiceWorker\\index.test.tsx",
      "src\\app\\components\\ServiceWorker\\index.tsx",
      "src\\app\\contexts\\EventTrackingContext\\index.tsx",
      "src\\app\\contexts\\ServiceContext\\index.test.tsx",
      "src\\app\\hooks\\useClickTrackerHandler\\index.jsx",
      "src\\app\\hooks\\useViewTracker\\index.jsx",
      "src\\app\\hooks\\useViewTracker\\index.test.jsx",
      "src\\app\\legacy\\components\\Grid\\index.jsx",
      "src\\app\\legacy\\components\\OptimoPromos\\Content\\index.jsx",
      "src\\app\\legacy\\components\\OptimoPromos\\Content\\index.test.jsx",
      "src\\app\\legacy\\components\\OptimoPromos\\index.jsx",
      "src\\app\\legacy\\components\\Promo\\index.jsx",
      "src\\app\\legacy\\components\\Promo\\timestamp.jsx",
      "src\\app\\legacy\\components\\RadioSchedule\\index.jsx",
      "src\\app\\legacy\\components\\RadioSchedule\\ProgramCard\\index.jsx",
      "src\\app\\legacy\\components\\RadioSchedule\\ScheduleItemHeader\\index.jsx",
      "src\\app\\legacy\\components\\RadioSchedule\\ScheduleItemHeader\\index.test.jsx",
      "src\\app\\legacy\\components\\RadioSchedule\\StartTime\\index.jsx",
      "src\\app\\legacy\\components\\RadioSchedule\\StartTime\\index.stories.jsx",
      "src\\app\\legacy\\components\\RadioSchedule\\testHelpers\\helper.jsx",
      "src\\app\\legacy\\components\\ScrollablePromo\\index.jsx",
      "src\\app\\legacy\\components\\ScrollablePromo\\Promo\\index.jsx",
      "src\\app\\legacy\\components\\ScrollablePromo\\Promo\\index.test.jsx",
      "src\\app\\legacy\\components\\ScrollablePromo\\PromoList\\index.jsx",
      "src\\app\\legacy\\containers\\ArticleMetadata\\index.jsx",
      "src\\app\\legacy\\containers\\ArticleTimestamp\\index.jsx",
      "src\\app\\legacy\\containers\\ArticleTimestamp\\index.test.jsx",
      "src\\app\\legacy\\containers\\Brand\\index.jsx",
      "src\\app\\legacy\\containers\\BulletedList\\index.test.jsx",
      "src\\app\\legacy\\containers\\Bulletin\\index.jsx",
      "src\\app\\legacy\\containers\\ComscoreAnalytics\\index.test.jsx",
      "src\\app\\legacy\\containers\\ConsentBanner\\a11y.test.jsx",
      "src\\app\\legacy\\containers\\ConsentBanner\\Banner\\index.amp.jsx",
      "src\\app\\legacy\\containers\\ConsentBanner\\Banner\\index.canonical.jsx",
      "src\\app\\legacy\\containers\\ConsentBanner\\Banner\\Text.jsx",
      "src\\app\\legacy\\containers\\ConsentBanner\\Banner\\Text.test.jsx",
      "src\\app\\legacy\\containers\\ConsentBanner\\index.canonical.test.jsx",
      "src\\app\\legacy\\containers\\ConsentBanner\\index.stories.jsx",
      "src\\app\\legacy\\containers\\CpsFeaturesAnalysis\\index.jsx",
      "src\\app\\legacy\\containers\\CpsFeaturesAnalysis\\index.stories.jsx",
      "src\\app\\legacy\\containers\\CpsFeaturesAnalysis\\index.test.jsx",
      "src\\app\\legacy\\containers\\CpsOnwardJourney\\index.jsx",
      "src\\app\\legacy\\containers\\CpsOnwardJourney\\index.test.jsx",
      "src\\app\\legacy\\containers\\CpsRecommendations\\index.jsx",
      "src\\app\\legacy\\containers\\CpsRecommendations\\index.stories.jsx",
      "src\\app\\legacy\\containers\\CpsRecommendations\\index.test.jsx",
      "src\\app\\legacy\\containers\\CpsRecommendations\\RecommendationsPromo\\index.jsx",
      "src\\app\\legacy\\containers\\CpsRecommendations\\RecommendationsPromo\\index.test.jsx",
      "src\\app\\legacy\\containers\\CpsRecommendations\\RecommendationsPromoList\\index.jsx",
      "src\\app\\legacy\\containers\\CpsRecommendations\\RecommendationsPromoList\\index.test.jsx",
      "src\\app\\legacy\\containers\\EpisodeList\\RecentAudioEpisodes\\index.jsx",
      "src\\app\\legacy\\containers\\EpisodeList\\RecentAudioEpisodes\\index.test.jsx",
      "src\\app\\legacy\\containers\\EpisodeList\\RecentVideoEpisodes\\index.jsx",
      "src\\app\\legacy\\containers\\EpisodeList\\RecentVideoEpisodes\\index.test.jsx",
      "src\\app\\legacy\\containers\\FauxHeadline\\index.jsx",
      "src\\app\\legacy\\containers\\FauxHeadline\\index.stories.jsx",
      "src\\app\\legacy\\containers\\FauxHeadline\\index.test.jsx",
      "src\\app\\legacy\\containers\\Footer\\index.jsx",
      "src\\app\\legacy\\containers\\Footer\\index.stories.tsx",
      "src\\app\\legacy\\containers\\Fragment\\index.jsx",
      "src\\app\\legacy\\containers\\Fragment\\index.test.jsx",
      "src\\app\\legacy\\containers\\FrontPageStoryRows\\index.test.jsx",
      "src\\app\\legacy\\containers\\Gist\\index.jsx",
      "src\\app\\legacy\\containers\\Gist\\index.test.jsx",
      "src\\app\\legacy\\containers\\Header\\index.jsx",
      "src\\app\\legacy\\containers\\Headings\\index.jsx",
      "src\\app\\legacy\\containers\\Headings\\index.test.jsx",
      "src\\app\\legacy\\containers\\ImageWithPlaceholder\\fixtureData.jsx",
      "src\\app\\legacy\\containers\\IndexHeading\\index.jsx",
      "src\\app\\legacy\\containers\\IndexHeading\\index.test.jsx",
      "src\\app\\legacy\\containers\\IndexPageSection\\index.jsx",
      "src\\app\\legacy\\containers\\IndexPageSection\\index.test.jsx",
      "src\\app\\legacy\\containers\\InlineContainer\\index.jsx",
      "src\\app\\legacy\\containers\\InlineContainer\\index.test.jsx",
      "src\\app\\legacy\\containers\\InlineLink\\index.jsx",
      "src\\app\\legacy\\containers\\InlineLink\\index.stories.jsx",
      "src\\app\\legacy\\containers\\Manifest\\index.jsx",
      "src\\app\\legacy\\containers\\Manifest\\index.test.jsx",
      "src\\app\\legacy\\containers\\Navigation\\index.jsx",
      "src\\app\\legacy\\containers\\Navigation\\index.test.jsx",
      "src\\app\\legacy\\containers\\NielsenAnalytics\\index.test.jsx",
      "src\\app\\legacy\\containers\\OnDemandFooterTimestamp\\index.jsx",
      "src\\app\\legacy\\containers\\OnDemandFooterTimestamp\\index.test.jsx",
      "src\\app\\legacy\\containers\\OnDemandHeading\\index.jsx",
      "src\\app\\legacy\\containers\\OnDemandHeading\\index.test.jsx",
      "src\\app\\legacy\\containers\\OnDemandImage\\index.jsx",
      "src\\app\\legacy\\containers\\OnDemandImage\\index.test.jsx",
      "src\\app\\legacy\\containers\\OnDemandParagraph\\index.jsx",
      "src\\app\\legacy\\containers\\OnDemandParagraph\\index.test.jsx",
      "src\\app\\legacy\\containers\\PageHandlers\\withContexts.jsx",
      "src\\app\\legacy\\containers\\PageHandlers\\withContexts.test.jsx",
      "src\\app\\legacy\\containers\\PageHandlers\\withData\\index.jsx",
      "src\\app\\legacy\\containers\\PageHandlers\\withOptimizelyProvider\\index.jsx",
      "src\\app\\legacy\\containers\\PageHandlers\\withOptimizelyProvider\\index.test.jsx",
      "src\\app\\legacy\\containers\\PageHandlers\\withPageWrapper\\index.test.jsx",
      "src\\app\\legacy\\containers\\Paragraph\\index.jsx",
      "src\\app\\legacy\\containers\\Paragraph\\index.test.jsx",
      "src\\app\\legacy\\containers\\PodcastExternalLinks\\index.jsx",
      "src\\app\\legacy\\containers\\PodcastExternalLinks\\index.test.jsx",
      "src\\app\\legacy\\containers\\PodcastPromo\\index.stories.jsx",
      "src\\app\\legacy\\containers\\PodcastPromo\\index.test.jsx",
      "src\\app\\legacy\\containers\\PodcastPromo\\Inline.jsx",
      "src\\app\\legacy\\containers\\PodcastPromo\\SecondaryColumn.jsx",
      "src\\app\\legacy\\containers\\RadioSchedule\\Canonical\\index.jsx",
      "src\\app\\legacy\\containers\\RadioSchedule\\Canonical\\index.test.jsx",
      "src\\app\\legacy\\containers\\RadioSchedule\\index.jsx",
      "src\\app\\legacy\\containers\\RadioSchedule\\utilities\\testHelpers.jsx",
      "src\\app\\legacy\\containers\\RelatedTopics\\index.jsx",
      "src\\app\\legacy\\containers\\RelatedTopics\\index.test.jsx",
      "src\\app\\legacy\\containers\\SocialEmbed\\common\\testHelper.jsx",
      "src\\app\\legacy\\containers\\SocialEmbed\\index.jsx",
      "src\\app\\legacy\\containers\\StoryPromo\\index.jsx",
      "src\\app\\legacy\\containers\\StoryPromo\\index.stories.jsx",
      "src\\app\\legacy\\containers\\StoryPromo\\index.test.jsx",
      "src\\app\\legacy\\containers\\StoryPromo\\IndexAlsos\\index.jsx",
      "src\\app\\legacy\\containers\\StoryPromo\\IndexAlsos\\index.test.jsx",
      "src\\app\\legacy\\containers\\StoryPromo\\LinkContents\\index.jsx",
      "src\\app\\legacy\\containers\\StoryPromo\\LinkContents\\index.test.jsx",
      "src\\app\\legacy\\containers\\Text\\index.test.jsx",
      "src\\app\\lib\\utilities\\episodeAvailability\\ErrorMessage\\index.jsx",
      "src\\app\\lib\\utilities\\episodeAvailability\\ErrorMessage\\index.test.jsx",
      "src\\app\\pages\\ArticlePage\\ArticlePage.tsx",
      "src\\app\\pages\\ArticlePage\\index.test.tsx",
      "src\\app\\pages\\ArticlePage\\PagePromoSections\\TopStoriesSection\\index.test.tsx",
      "src\\app\\pages\\ArticlePage\\PagePromoSections\\TopStoriesSection\\index.tsx",
      "src\\app\\pages\\ArticlePage\\PagePromoSections\\TopStoriesSection\\TopStoriesItem\\index.test.tsx",
      "src\\app\\pages\\ErrorPage\\ErrorPage.jsx",
      "src\\app\\pages\\ErrorPage\\index.stories.jsx",
      "src\\app\\pages\\FeatureIdxPage\\FeatureIdxPage.jsx",
      "src\\app\\pages\\FeatureIdxPage\\index.test.jsx",
      "src\\app\\pages\\FrontPage\\FrontPage.jsx",
      "src\\app\\pages\\FrontPage\\index.test.jsx",
      "src\\app\\pages\\HomePage\\HomePage.tsx",
      "src\\app\\pages\\LiveRadioPage\\index.test.tsx",
      "src\\app\\pages\\LiveRadioPage\\LiveRadioPage.tsx",
      "src\\app\\pages\\MediaArticlePage\\index.stories.tsx",
      "src\\app\\pages\\MediaArticlePage\\index.test.tsx",
      "src\\app\\pages\\MediaArticlePage\\MediaArticlePage.tsx",
      "src\\app\\pages\\MediaArticlePage\\PagePromoSections\\LatestMediaSection\\index.tsx",
      "src\\app\\pages\\MostReadPage\\index.test.jsx",
      "src\\app\\pages\\MostReadPage\\MostReadPage.jsx",
      "src\\app\\pages\\OnDemandAudioPage\\OnDemandAudioPage.tsx",
      "src\\app\\pages\\OnDemandTvPage\\OnDemandTvPage.tsx",
      "src\\app\\pages\\TopicPage\\index.stories.jsx",
      "src\\app\\pages\\TopicPage\\TopicDescription\\index.jsx",
      "src\\app\\pages\\TopicPage\\TopicPage.jsx",
      "src\\app\\pages\\TopicPage\\TopicTitle\\index.jsx",
      "ws-nextjs-app\\pages\\_app.page.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../../lib/config/services/loadableConfig",
        "resolvedPath": "src\\app\\lib\\config\\services\\loadableConfig.ts"
      },
      {
        "source": "../../lib/utilities/variantHandler",
        "resolvedPath": "src\\app\\lib\\utilities\\variantHandler\\index.js"
      },
      {
        "source": "../../lib/utilities/langHandler",
        "resolvedPath": "src\\app\\lib\\utilities\\langHandler\\index.js"
      },
      {
        "source": "../../models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global.ts"
      },
      {
        "source": "../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      }
    ]
  },
  "src\\app\\contexts\\ServiceContext\\__mocks__\\index.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../../../lib/utilities/langHandler",
        "resolvedPath": "src\\app\\lib\\utilities\\langHandler\\index.js"
      },
      {
        "source": "../../../lib/utilities/variantHandler",
        "resolvedPath": "src\\app\\lib\\utilities\\variantHandler\\index.js"
      },
      {
        "source": "../../../../server/utilities/serviceConfigs",
        "resolvedPath": "src\\server\\utilities\\serviceConfigs\\index.ts"
      },
      {
        "source": "../../../models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global.ts"
      }
    ]
  },
  "src\\app\\contexts\\ToggleContext\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@testing-library/react",
        "resolvedPath": "@testing-library/react"
      },
      {
        "source": "@testing-library/dom",
        "resolvedPath": "@testing-library/dom"
      },
      {
        "source": "../../models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global.ts"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\contexts\\ToggleContext\\index.tsx"
      }
    ]
  },
  "src\\app\\contexts\\ToggleContext\\index.tsx": {
    "incomingDependencies": [
      ".storybook\\preview.tsx",
      "src\\app\\components\\ChartbeatAnalytics\\index.test.tsx",
      "src\\app\\components\\Disclaimer\\index.stories.tsx",
      "src\\app\\components\\FrostedGlassPromo\\index.test.tsx",
      "src\\app\\components\\MostRead\\Canonical\\index.test.tsx",
      "src\\app\\components\\MostRead\\index.test.tsx",
      "src\\app\\components\\react-testing-library-with-providers.tsx",
      "src\\app\\contexts\\ToggleContext\\index.test.tsx",
      "src\\app\\legacy\\containers\\PageHandlers\\withContexts.jsx",
      "src\\app\\legacy\\containers\\SocialEmbed\\common\\testHelper.jsx",
      "src\\app\\pages\\MediaArticlePage\\index.stories.tsx",
      "src\\app\\pages\\MediaArticlePage\\index.test.tsx",
      "ws-nextjs-app\\pages\\_app.page.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#lib/config/toggles",
        "resolvedPath": "#lib/config/toggles"
      },
      {
        "source": "#app/models/types/global",
        "resolvedPath": "#app/models/types/global"
      },
      {
        "source": "#app/lib/utilities/getEnvConfig",
        "resolvedPath": "#app/lib/utilities/getEnvConfig"
      },
      {
        "source": "./reducer",
        "resolvedPath": "src\\app\\contexts\\ToggleContext\\reducer.tsx"
      }
    ]
  },
  "src\\app\\contexts\\ToggleContext\\reducer.tsx": {
    "incomingDependencies": [
      "src\\app\\contexts\\ToggleContext\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "#app/models/types/global",
        "resolvedPath": "#app/models/types/global"
      },
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      }
    ]
  },
  "src\\app\\contexts\\ToggleContext\\utils\\constructTogglesEndpoint\\index.test.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "./index",
        "resolvedPath": "src\\app\\contexts\\ToggleContext\\utils\\constructTogglesEndpoint\\index.ts"
      }
    ]
  },
  "src\\app\\contexts\\ToggleContext\\utils\\constructTogglesEndpoint\\index.ts": {
    "incomingDependencies": [
      "src\\app\\contexts\\ToggleContext\\utils\\constructTogglesEndpoint\\index.test.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "#app/lib/utilities/getEnvConfig",
        "resolvedPath": "#app/lib/utilities/getEnvConfig"
      },
      {
        "source": "#app/models/types/global",
        "resolvedPath": "#app/models/types/global"
      }
    ]
  },
  "src\\app\\contexts\\UserContext\\Chartbeat\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\contexts\\UserContext\\index.test.tsx",
      "src\\app\\contexts\\UserContext\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../../../hooks/useToggle",
        "resolvedPath": "src\\app\\hooks\\useToggle\\index.js"
      },
      {
        "source": "../../../components/ChartbeatAnalytics/canonical",
        "resolvedPath": "src\\app\\components\\ChartbeatAnalytics\\canonical\\index.tsx"
      },
      {
        "source": "../../RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext\\index.tsx"
      },
      {
        "source": "../../../components/ChartbeatAnalytics/types",
        "resolvedPath": "src\\app\\components\\ChartbeatAnalytics\\types.ts"
      }
    ]
  },
  "src\\app\\contexts\\UserContext\\cookies\\index.test.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "js-cookie",
        "resolvedPath": "js-cookie"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\contexts\\UserContext\\cookies\\index.ts"
      }
    ]
  },
  "src\\app\\contexts\\UserContext\\cookies\\index.ts": {
    "incomingDependencies": [
      "src\\app\\contexts\\UserContext\\cookies\\index.test.ts",
      "src\\app\\contexts\\UserContext\\index.test.tsx",
      "src\\app\\contexts\\UserContext\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "js-cookie",
        "resolvedPath": "js-cookie"
      }
    ]
  },
  "src\\app\\contexts\\UserContext\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@testing-library/react",
        "resolvedPath": "@testing-library/react"
      },
      {
        "source": "js-cookie",
        "resolvedPath": "js-cookie"
      },
      {
        "source": "#app/lib/utilities/onClient",
        "resolvedPath": "#app/lib/utilities/onClient"
      },
      {
        "source": "#app/lib/utilities/isOperaProxy",
        "resolvedPath": "#app/lib/utilities/isOperaProxy"
      },
      {
        "source": "#app/lib/utilities/setCookie",
        "resolvedPath": "#app/lib/utilities/setCookie"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\contexts\\UserContext\\index.tsx"
      },
      {
        "source": "./cookies",
        "resolvedPath": "src\\app\\contexts\\UserContext\\cookies\\index.ts"
      },
      {
        "source": "./Chartbeat",
        "resolvedPath": "src\\app\\contexts\\UserContext\\Chartbeat\\index.tsx"
      }
    ]
  },
  "src\\app\\contexts\\UserContext\\index.tsx": {
    "incomingDependencies": [
      ".storybook\\preview.tsx",
      "src\\app\\components\\ChartbeatAnalytics\\index.test.tsx",
      "src\\app\\components\\ChartbeatAnalytics\\index.tsx",
      "src\\app\\components\\react-testing-library-with-providers.tsx",
      "src\\app\\contexts\\UserContext\\index.test.tsx",
      "src\\app\\legacy\\containers\\PageHandlers\\withContexts.jsx",
      "src\\app\\pages\\MediaArticlePage\\index.stories.tsx",
      "ws-nextjs-app\\pages\\_app.page.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "uuid",
        "resolvedPath": "uuid"
      },
      {
        "source": "js-cookie",
        "resolvedPath": "js-cookie"
      },
      {
        "source": "#app/lib/utilities/onClient",
        "resolvedPath": "#app/lib/utilities/onClient"
      },
      {
        "source": "#app/lib/utilities/isOperaProxy",
        "resolvedPath": "#app/lib/utilities/isOperaProxy"
      },
      {
        "source": "#app/lib/utilities/setCookie",
        "resolvedPath": "#app/lib/utilities/setCookie"
      },
      {
        "source": "./cookies",
        "resolvedPath": "src\\app\\contexts\\UserContext\\cookies\\index.ts"
      },
      {
        "source": "./Chartbeat",
        "resolvedPath": "src\\app\\contexts\\UserContext\\Chartbeat\\index.tsx"
      }
    ]
  },
  "src\\app\\contexts\\utils\\withContext\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\contexts\\utils\\withContext\\index.test.jsx",
      "src\\app\\lib\\config\\services\\afaanoromoo.ts",
      "src\\app\\lib\\config\\services\\afrique.ts",
      "src\\app\\lib\\config\\services\\amharic.ts",
      "src\\app\\lib\\config\\services\\arabic.ts",
      "src\\app\\lib\\config\\services\\archive.ts",
      "src\\app\\lib\\config\\services\\azeri.ts",
      "src\\app\\lib\\config\\services\\bengali.ts",
      "src\\app\\lib\\config\\services\\burmese.ts",
      "src\\app\\lib\\config\\services\\cymrufyw.ts",
      "src\\app\\lib\\config\\services\\gahuza.ts",
      "src\\app\\lib\\config\\services\\gujarati.ts",
      "src\\app\\lib\\config\\services\\hausa.ts",
      "src\\app\\lib\\config\\services\\hindi.ts",
      "src\\app\\lib\\config\\services\\igbo.ts",
      "src\\app\\lib\\config\\services\\indonesia.ts",
      "src\\app\\lib\\config\\services\\japanese.ts",
      "src\\app\\lib\\config\\services\\korean.ts",
      "src\\app\\lib\\config\\services\\kyrgyz.ts",
      "src\\app\\lib\\config\\services\\marathi.ts",
      "src\\app\\lib\\config\\services\\mundo.ts",
      "src\\app\\lib\\config\\services\\naidheachdan.ts",
      "src\\app\\lib\\config\\services\\nepali.ts",
      "src\\app\\lib\\config\\services\\news.ts",
      "src\\app\\lib\\config\\services\\newsround.ts",
      "src\\app\\lib\\config\\services\\pashto.ts",
      "src\\app\\lib\\config\\services\\persian.ts",
      "src\\app\\lib\\config\\services\\pidgin.ts",
      "src\\app\\lib\\config\\services\\portuguese.ts",
      "src\\app\\lib\\config\\services\\punjabi.ts",
      "src\\app\\lib\\config\\services\\russian.ts",
      "src\\app\\lib\\config\\services\\scotland.ts",
      "src\\app\\lib\\config\\services\\serbian.ts",
      "src\\app\\lib\\config\\services\\sinhala.ts",
      "src\\app\\lib\\config\\services\\somali.ts",
      "src\\app\\lib\\config\\services\\sport.ts",
      "src\\app\\lib\\config\\services\\swahili.ts",
      "src\\app\\lib\\config\\services\\tamil.ts",
      "src\\app\\lib\\config\\services\\telugu.ts",
      "src\\app\\lib\\config\\services\\thai.ts",
      "src\\app\\lib\\config\\services\\tigrinya.ts",
      "src\\app\\lib\\config\\services\\turkce.ts",
      "src\\app\\lib\\config\\services\\ukchina.ts",
      "src\\app\\lib\\config\\services\\ukrainian.ts",
      "src\\app\\lib\\config\\services\\urdu.ts",
      "src\\app\\lib\\config\\services\\uzbek.ts",
      "src\\app\\lib\\config\\services\\vietnamese.ts",
      "src\\app\\lib\\config\\services\\ws.ts",
      "src\\app\\lib\\config\\services\\yoruba.ts",
      "src\\app\\lib\\config\\services\\zhongwen.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      }
    ]
  },
  "src\\app\\contexts\\utils\\withContext\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@testing-library/react",
        "resolvedPath": "@testing-library/react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\contexts\\utils\\withContext\\index.jsx"
      }
    ]
  },
  "src\\app\\hooks\\useAdroidDetection\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "@testing-library/react",
        "resolvedPath": "@testing-library/react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\hooks\\useAdroidDetection\\index.tsx"
      }
    ]
  },
  "src\\app\\hooks\\useAdroidDetection\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\hooks\\useAdroidDetection\\index.test.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      }
    ]
  },
  "src\\app\\hooks\\useClickTrackerHandler\\clickTypes.js": {
    "incomingDependencies": [
      "src\\app\\hooks\\useClickTrackerHandler\\clickTypes.test.js",
      "src\\app\\hooks\\useClickTrackerHandler\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "ramda/src/pathSatisfies",
        "resolvedPath": "ramda/src/pathSatisfies"
      },
      {
        "source": "ramda/src/startsWith",
        "resolvedPath": "ramda/src/startsWith"
      }
    ]
  },
  "src\\app\\hooks\\useClickTrackerHandler\\clickTypes.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "./clickTypes",
        "resolvedPath": "src\\app\\hooks\\useClickTrackerHandler\\clickTypes.js"
      }
    ]
  },
  "src\\app\\hooks\\useClickTrackerHandler\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\components\\Billboard\\index.test.tsx",
      "src\\app\\components\\EmbedConsentBanner\\index.test.tsx",
      "src\\app\\components\\EmbedConsentBanner\\index.tsx",
      "src\\app\\components\\FrostedGlassPromo\\index.test.tsx",
      "src\\app\\components\\FrostedGlassPromo\\index.tsx",
      "src\\app\\components\\MessageBanner\\index.test.tsx",
      "src\\app\\components\\MostRead\\Canonical\\index.test.tsx",
      "src\\app\\hooks\\useClickTrackerHandler\\index.test.jsx",
      "src\\app\\legacy\\components\\RadioSchedule\\index.test.jsx",
      "src\\app\\legacy\\containers\\Navigation\\index.test.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "ramda/src/path",
        "resolvedPath": "ramda/src/path"
      },
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "../../contexts/EventTrackingContext",
        "resolvedPath": "src\\app\\contexts\\EventTrackingContext\\index.tsx"
      },
      {
        "source": "../useTrackingToggle",
        "resolvedPath": "src\\app\\hooks\\useTrackingToggle\\index.jsx"
      },
      {
        "source": "../../lib/config/optimizely",
        "resolvedPath": "src\\app\\lib\\config\\optimizely\\index.js"
      },
      {
        "source": "../../components/ATIAnalytics/beacon/index",
        "resolvedPath": "src\\app\\components\\ATIAnalytics\\beacon\\index.ts"
      },
      {
        "source": "../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "./clickTypes",
        "resolvedPath": "src\\app\\hooks\\useClickTrackerHandler\\clickTypes.js"
      }
    ]
  },
  "src\\app\\hooks\\useClickTrackerHandler\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@testing-library/user-event",
        "resolvedPath": "@testing-library/user-event"
      },
      {
        "source": "@testing-library/dom",
        "resolvedPath": "@testing-library/dom"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": "#hooks/useTrackingToggle",
        "resolvedPath": "#hooks/useTrackingToggle"
      },
      {
        "source": "#lib/config/optimizely",
        "resolvedPath": "#lib/config/optimizely"
      },
      {
        "source": "../../components/react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "./fixtureData/tori-51745682.json",
        "resolvedPath": "..\\EXIM\\Work\\iterate-ai\\dep-graph\\fixtureData\\tori-51745682.json"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\hooks\\useClickTrackerHandler\\index.jsx"
      }
    ]
  },
  "src\\app\\hooks\\useImageColour\\colorthief.js": {
    "incomingDependencies": [
      "src\\app\\hooks\\useImageColour\\index.js"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\hooks\\useImageColour\\index.js": {
    "incomingDependencies": [
      "src\\app\\components\\FrostedGlassPromo\\FrostedGlassPanel.tsx",
      "src\\app\\hooks\\useImageColour\\index.stories.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "./colorthief",
        "resolvedPath": "src\\app\\hooks\\useImageColour\\colorthief.js"
      },
      {
        "source": "./utils",
        "resolvedPath": "src\\app\\hooks\\useImageColour\\utils.js"
      }
    ]
  },
  "src\\app\\hooks\\useImageColour\\index.stories.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\hooks\\useImageColour\\index.js"
      }
    ]
  },
  "src\\app\\hooks\\useImageColour\\index.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "./utils",
        "resolvedPath": "src\\app\\hooks\\useImageColour\\utils.js"
      }
    ]
  },
  "src\\app\\hooks\\useImageColour\\utils.js": {
    "incomingDependencies": [
      "src\\app\\hooks\\useImageColour\\index.js",
      "src\\app\\hooks\\useImageColour\\index.test.js"
    ],
    "outgoingDependencies": [
      {
        "source": "ramda/src/is",
        "resolvedPath": "ramda/src/is"
      }
    ]
  },
  "src\\app\\hooks\\useLocation\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "#app/components/react-testing-library-with-providers",
        "resolvedPath": "#app/components/react-testing-library-with-providers"
      },
      {
        "source": "@testing-library/react",
        "resolvedPath": "@testing-library/react"
      },
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\hooks\\useLocation\\index.tsx"
      }
    ]
  },
  "src\\app\\hooks\\useLocation\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\hooks\\useLocation\\index.test.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      }
    ]
  },
  "src\\app\\hooks\\useMediaQuery\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\hooks\\useMediaQuery\\index.test.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      }
    ]
  },
  "src\\app\\hooks\\useMediaQuery\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "#app/components/react-testing-library-with-providers",
        "resolvedPath": "#app/components/react-testing-library-with-providers"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\hooks\\useMediaQuery\\index.jsx"
      }
    ]
  },
  "src\\app\\hooks\\useOperaMiniDetection\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\components\\Ad\\Canonical\\index.tsx",
      "src\\app\\hooks\\useOperaMiniDetection\\index.test.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      }
    ]
  },
  "src\\app\\hooks\\useOperaMiniDetection\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "#app/components/react-testing-library-with-providers",
        "resolvedPath": "#app/components/react-testing-library-with-providers"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\hooks\\useOperaMiniDetection\\index.jsx"
      }
    ]
  },
  "src\\app\\hooks\\useOptimizelyMvtVariation\\activateExperiment\\index.js": {
    "incomingDependencies": [
      "src\\app\\hooks\\useOptimizelyMvtVariation\\activateExperiment\\index.test.js",
      "src\\app\\hooks\\useOptimizelyMvtVariation\\index.jsx",
      "src\\app\\hooks\\useOptimizelyMvtVariation\\index.test.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "#lib/utilities/onClient",
        "resolvedPath": "#lib/utilities/onClient"
      }
    ]
  },
  "src\\app\\hooks\\useOptimizelyMvtVariation\\activateExperiment\\index.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "#lib/utilities/onClient",
        "resolvedPath": "#lib/utilities/onClient"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\hooks\\useOptimizelyMvtVariation\\activateExperiment\\index.js"
      }
    ]
  },
  "src\\app\\hooks\\useOptimizelyMvtVariation\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\hooks\\useOptimizelyMvtVariation\\index.test.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@optimizely/react-sdk",
        "resolvedPath": "@optimizely/react-sdk"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "#contexts/RequestContext"
      },
      {
        "source": "./activateExperiment",
        "resolvedPath": "src\\app\\hooks\\useOptimizelyMvtVariation\\activateExperiment\\index.js"
      }
    ]
  },
  "src\\app\\hooks\\useOptimizelyMvtVariation\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#app/components/react-testing-library-with-providers",
        "resolvedPath": "#app/components/react-testing-library-with-providers"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "#contexts/RequestContext"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\hooks\\useOptimizelyMvtVariation\\index.jsx"
      },
      {
        "source": "./activateExperiment",
        "resolvedPath": "src\\app\\hooks\\useOptimizelyMvtVariation\\activateExperiment\\index.js"
      }
    ]
  },
  "src\\app\\hooks\\useOptimizelyScrollDepth\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\hooks\\useOptimizelyScrollDepth\\index.test.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@optimizely/react-sdk",
        "resolvedPath": "@optimizely/react-sdk"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "#contexts/RequestContext"
      },
      {
        "source": "#hooks/useOptimizelyVariation",
        "resolvedPath": "#hooks/useOptimizelyVariation"
      },
      {
        "source": "#lib/config/optimizely",
        "resolvedPath": "#lib/config/optimizely"
      }
    ]
  },
  "src\\app\\hooks\\useOptimizelyScrollDepth\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#app/components/react-testing-library-with-providers",
        "resolvedPath": "#app/components/react-testing-library-with-providers"
      },
      {
        "source": "@optimizely/react-sdk",
        "resolvedPath": "@optimizely/react-sdk"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "#contexts/RequestContext"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": "#hooks/useOptimizelyVariation",
        "resolvedPath": "#hooks/useOptimizelyVariation"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\hooks\\useOptimizelyScrollDepth\\index.jsx"
      }
    ]
  },
  "src\\app\\hooks\\useOptimizelyVariation\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\hooks\\useOptimizelyVariation\\index.test.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@optimizely/react-sdk",
        "resolvedPath": "@optimizely/react-sdk"
      }
    ]
  },
  "src\\app\\hooks\\useOptimizelyVariation\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "@optimizely/react-sdk",
        "resolvedPath": "@optimizely/react-sdk"
      },
      {
        "source": "#app/components/react-testing-library-with-providers",
        "resolvedPath": "#app/components/react-testing-library-with-providers"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\hooks\\useOptimizelyVariation\\index.jsx"
      }
    ]
  },
  "src\\app\\hooks\\useToggle\\index.js": {
    "incomingDependencies": [
      "src\\app\\components\\ChartbeatAnalytics\\index.tsx",
      "src\\app\\components\\Disclaimer\\index.tsx",
      "src\\app\\contexts\\EventTrackingContext\\index.tsx",
      "src\\app\\contexts\\UserContext\\Chartbeat\\index.tsx",
      "src\\app\\hooks\\useToggle\\index.test.jsx",
      "src\\app\\pages\\MediaArticlePage\\MediaArticlePage.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#contexts/ToggleContext",
        "resolvedPath": "#contexts/ToggleContext"
      }
    ]
  },
  "src\\app\\hooks\\useToggle\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#app/components/react-testing-library-with-providers",
        "resolvedPath": "#app/components/react-testing-library-with-providers"
      },
      {
        "source": "#contexts/ToggleContext",
        "resolvedPath": "#contexts/ToggleContext"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\hooks\\useToggle\\index.js"
      }
    ]
  },
  "src\\app\\hooks\\useTrackingToggle\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\hooks\\useClickTrackerHandler\\index.jsx",
      "src\\app\\hooks\\useViewTracker\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "#hooks/useToggle",
        "resolvedPath": "#hooks/useToggle"
      }
    ]
  },
  "src\\app\\hooks\\useTrackingToggle\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#app/components/react-testing-library-with-providers",
        "resolvedPath": "#app/components/react-testing-library-with-providers"
      },
      {
        "source": "#contexts/ToggleContext",
        "resolvedPath": "#contexts/ToggleContext"
      },
      {
        "source": "#hooks/useTrackingToggle",
        "resolvedPath": "#hooks/useTrackingToggle"
      }
    ]
  },
  "src\\app\\hooks\\useViewTracker\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\components\\Billboard\\index.test.tsx",
      "src\\app\\components\\EmbedConsentBanner\\ConsentBanner.test.tsx",
      "src\\app\\components\\EmbedConsentBanner\\ConsentBanner.tsx",
      "src\\app\\components\\MessageBanner\\index.test.tsx",
      "src\\app\\components\\MostRead\\Canonical\\index.test.tsx",
      "src\\app\\components\\MostRead\\Canonical\\index.tsx",
      "src\\app\\hooks\\useViewTracker\\index.test.jsx",
      "src\\app\\legacy\\components\\RadioSchedule\\index.test.jsx",
      "src\\app\\legacy\\containers\\Navigation\\index.test.jsx",
      "src\\app\\pages\\MediaArticlePage\\PagePromoSections\\LatestMediaSection\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "ramda/src/path",
        "resolvedPath": "ramda/src/path"
      },
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "ramda/src/prop",
        "resolvedPath": "ramda/src/prop"
      },
      {
        "source": "../../components/ATIAnalytics/beacon",
        "resolvedPath": "src\\app\\components\\ATIAnalytics\\beacon\\index.ts"
      },
      {
        "source": "../../contexts/EventTrackingContext",
        "resolvedPath": "src\\app\\contexts\\EventTrackingContext\\index.tsx"
      },
      {
        "source": "../useTrackingToggle",
        "resolvedPath": "src\\app\\hooks\\useTrackingToggle\\index.jsx"
      },
      {
        "source": "../../lib/config/optimizely",
        "resolvedPath": "src\\app\\lib\\config\\optimizely\\index.js"
      },
      {
        "source": "../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      }
    ]
  },
  "src\\app\\hooks\\useViewTracker\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#app/components/react-testing-library-with-providers",
        "resolvedPath": "#app/components/react-testing-library-with-providers"
      },
      {
        "source": "#contexts/EventTrackingContext",
        "resolvedPath": "#contexts/EventTrackingContext"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "#contexts/RequestContext"
      },
      {
        "source": "#contexts/ToggleContext",
        "resolvedPath": "#contexts/ToggleContext"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": "#lib/config/optimizely",
        "resolvedPath": "#lib/config/optimizely"
      },
      {
        "source": "../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\hooks\\useViewTracker\\index.jsx"
      },
      {
        "source": "./fixtureData.json",
        "resolvedPath": "..\\EXIM\\Work\\iterate-ai\\dep-graph\\fixtureData.json"
      }
    ]
  },
  "src\\app\\legacy\\components\\AmpGeo\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\components\\AmpGeo\\index.test.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#app/lib/utilities/cookieCountries",
        "resolvedPath": "#app/lib/utilities/cookieCountries"
      }
    ]
  },
  "src\\app\\legacy\\components\\AmpGeo\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#psammead/psammead-test-helpers/src",
        "resolvedPath": "#psammead/psammead-test-helpers/src"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\components\\AmpGeo\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\components\\ErrorMain\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\components\\ErrorMain\\index.test.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/psammead-inline-link/src",
        "resolvedPath": "#psammead/psammead-inline-link/src"
      },
      {
        "source": "#psammead/psammead-paragraph/src",
        "resolvedPath": "#psammead/psammead-paragraph/src"
      },
      {
        "source": "#psammead/psammead-styles/src/font-styles",
        "resolvedPath": "#psammead/psammead-styles/src/font-styles"
      },
      {
        "source": "#psammead/gel-foundations/src/typography",
        "resolvedPath": "#psammead/gel-foundations/src/typography"
      },
      {
        "source": "#lib/utilities/idSanitiser",
        "resolvedPath": "#lib/utilities/idSanitiser"
      },
      {
        "source": "#components/Grid",
        "resolvedPath": "#components/Grid"
      }
    ]
  },
  "src\\app\\legacy\\components\\ErrorMain\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../../../components/ThemeProvider/fontScripts/latin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts"
      },
      {
        "source": "../../../components/ThemeProvider/fontScripts/arabic",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\arabic.ts"
      },
      {
        "source": "../../../components/react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "./index",
        "resolvedPath": "src\\app\\legacy\\components\\ErrorMain\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\components\\FrontPageSection\\index.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "#psammead/gel-foundations/src/breakpoints"
      }
    ]
  },
  "src\\app\\legacy\\components\\Grid\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\components\\Disclaimer\\index.tsx",
      "src\\app\\components\\MostRead\\Canonical\\Item\\index.tsx",
      "src\\app\\legacy\\components\\Grid\\index.stories.jsx",
      "src\\app\\legacy\\components\\Grid\\index.test.jsx",
      "src\\app\\legacy\\containers\\CpsRecommendations\\RecommendationsPromo\\index.jsx",
      "src\\app\\legacy\\containers\\CpsRecommendations\\RecommendationsPromoList\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/psammead-grid/src",
        "resolvedPath": "#psammead/psammead-grid/src"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "#psammead/gel-foundations/src/breakpoints"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "#psammead/gel-foundations/src/spacings"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      }
    ]
  },
  "src\\app\\legacy\\components\\Grid\\index.stories.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\components\\Grid\\index.jsx"
      },
      {
        "source": "./README.md",
        "resolvedPath": "..\\EXIM\\Work\\iterate-ai\\dep-graph\\README.md"
      }
    ]
  },
  "src\\app\\legacy\\components\\Grid\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#psammead/psammead-test-helpers/src",
        "resolvedPath": "#psammead/psammead-test-helpers/src"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\components\\Grid\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\components\\IfAboveIE9Comment\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\components\\IfAboveIE9Comment\\index.test.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      }
    ]
  },
  "src\\app\\legacy\\components\\IfAboveIE9Comment\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#psammead/psammead-test-helpers/src",
        "resolvedPath": "#psammead/psammead-test-helpers/src"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\components\\IfAboveIE9Comment\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\components\\InlineSpan\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\components\\InlineSpan\\index.test.jsx",
      "src\\app\\legacy\\containers\\InlineContainer\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "#psammead/gel-foundations/src/spacings"
      }
    ]
  },
  "src\\app\\legacy\\components\\InlineSpan\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#psammead/psammead-test-helpers/src",
        "resolvedPath": "#psammead/psammead-test-helpers/src"
      },
      {
        "source": "../../../components/ThemeProvider/fontScripts/latin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts"
      },
      {
        "source": "../../../components/ThemeProvider/fontScripts/arabic",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\arabic.ts"
      },
      {
        "source": "./index",
        "resolvedPath": "src\\app\\legacy\\components\\InlineSpan\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\components\\OptimoPromos\\Content\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\components\\OptimoPromos\\Content\\index.test.jsx",
      "src\\app\\legacy\\components\\OptimoPromos\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "moment",
        "resolvedPath": "moment"
      },
      {
        "source": "#app/lib/utilities/formatDuration",
        "resolvedPath": "#app/lib/utilities/formatDuration"
      },
      {
        "source": "../../../../components/VisuallyHiddenText",
        "resolvedPath": "src\\app\\components\\VisuallyHiddenText\\index.tsx"
      },
      {
        "source": "../../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../PromoContext",
        "resolvedPath": "src\\app\\legacy\\components\\OptimoPromos\\PromoContext.jsx"
      }
    ]
  },
  "src\\app\\legacy\\components\\OptimoPromos\\Content\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@testing-library/react",
        "resolvedPath": "@testing-library/react"
      },
      {
        "source": "../../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\components\\OptimoPromos\\Content\\index.jsx"
      },
      {
        "source": "../PromoContext",
        "resolvedPath": "src\\app\\legacy\\components\\OptimoPromos\\PromoContext.jsx"
      }
    ]
  },
  "src\\app\\legacy\\components\\OptimoPromos\\Image\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\components\\OptimoPromos\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "#contexts/RequestContext"
      },
      {
        "source": "../../../../components/Image",
        "resolvedPath": "src\\app\\components\\Image\\index.tsx"
      }
    ]
  },
  "src\\app\\legacy\\components\\OptimoPromos\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\pages\\MediaArticlePage\\PagePromoSections\\LatestMediaSection\\LatestMediaIndicator\\index.tsx",
      "src\\app\\pages\\MediaArticlePage\\PagePromoSections\\LatestMediaSection\\LatestMediaItem\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#components/Promo/timestamp",
        "resolvedPath": "#components/Promo/timestamp"
      },
      {
        "source": "#app/components/LiveLabel",
        "resolvedPath": "#app/components/LiveLabel"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "./Title",
        "resolvedPath": "src\\app\\legacy\\components\\OptimoPromos\\Title\\index.jsx"
      },
      {
        "source": "./Link",
        "resolvedPath": "src\\app\\legacy\\components\\OptimoPromos\\Link\\index.jsx"
      },
      {
        "source": "./MediaIndicator",
        "resolvedPath": "src\\app\\legacy\\components\\OptimoPromos\\MediaIndicator\\index.jsx"
      },
      {
        "source": "./Content",
        "resolvedPath": "src\\app\\legacy\\components\\OptimoPromos\\Content\\index.jsx"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\legacy\\components\\OptimoPromos\\index.styles.jsx"
      },
      {
        "source": "./Image",
        "resolvedPath": "src\\app\\legacy\\components\\OptimoPromos\\Image\\index.jsx"
      },
      {
        "source": "./PromoContext",
        "resolvedPath": "src\\app\\legacy\\components\\OptimoPromos\\PromoContext.jsx"
      }
    ]
  },
  "src\\app\\legacy\\components\\OptimoPromos\\index.styles.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\components\\OptimoPromos\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "#psammead/gel-foundations/src/breakpoints"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "#psammead/gel-foundations/src/spacings"
      }
    ]
  },
  "src\\app\\legacy\\components\\OptimoPromos\\Link\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\components\\OptimoPromos\\index.jsx",
      "src\\app\\legacy\\components\\OptimoPromos\\Link\\index.test.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#containers/StoryPromo/useCombinedClickTrackerHandler",
        "resolvedPath": "#containers/StoryPromo/useCombinedClickTrackerHandler"
      },
      {
        "source": "../../../../lib/utilities/makeRelativeUrlPath",
        "resolvedPath": "src\\app\\lib\\utilities\\makeRelativeUrlPath\\index.js"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\legacy\\components\\OptimoPromos\\Link\\index.styles.jsx"
      },
      {
        "source": "../PromoContext",
        "resolvedPath": "src\\app\\legacy\\components\\OptimoPromos\\PromoContext.jsx"
      }
    ]
  },
  "src\\app\\legacy\\components\\OptimoPromos\\Link\\index.styles.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\components\\OptimoPromos\\Link\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      }
    ]
  },
  "src\\app\\legacy\\components\\OptimoPromos\\Link\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../../../../components/react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "../PromoContext",
        "resolvedPath": "src\\app\\legacy\\components\\OptimoPromos\\PromoContext.jsx"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\components\\OptimoPromos\\Link\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\components\\OptimoPromos\\MediaIndicator\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\components\\OptimoPromos\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#psammead/psammead-assets/src/svgs",
        "resolvedPath": "#psammead/psammead-assets/src/svgs"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\legacy\\components\\OptimoPromos\\MediaIndicator\\index.styles.jsx"
      },
      {
        "source": "../PromoContext",
        "resolvedPath": "src\\app\\legacy\\components\\OptimoPromos\\PromoContext.jsx"
      }
    ]
  },
  "src\\app\\legacy\\components\\OptimoPromos\\MediaIndicator\\index.styles.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\components\\OptimoPromos\\MediaIndicator\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "#psammead/gel-foundations/src/spacings"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      }
    ]
  },
  "src\\app\\legacy\\components\\OptimoPromos\\PromoContext.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\components\\OptimoPromos\\Content\\index.jsx",
      "src\\app\\legacy\\components\\OptimoPromos\\Content\\index.test.jsx",
      "src\\app\\legacy\\components\\OptimoPromos\\index.jsx",
      "src\\app\\legacy\\components\\OptimoPromos\\Link\\index.jsx",
      "src\\app\\legacy\\components\\OptimoPromos\\Link\\index.test.jsx",
      "src\\app\\legacy\\components\\OptimoPromos\\MediaIndicator\\index.jsx",
      "src\\app\\legacy\\components\\OptimoPromos\\Title\\index.jsx",
      "src\\app\\pages\\MediaArticlePage\\PagePromoSections\\LatestMediaSection\\LatestMediaIndicator\\index.test.tsx",
      "src\\app\\pages\\MediaArticlePage\\PagePromoSections\\LatestMediaSection\\LatestMediaItem\\index.test.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      }
    ]
  },
  "src\\app\\legacy\\components\\OptimoPromos\\PromoItem\\index.styles.jsx": {
    "incomingDependencies": [
      "src\\app\\components\\RelatedContentSection\\index.tsx",
      "src\\app\\pages\\MediaArticlePage\\PagePromoSections\\LatestMediaSection\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "#psammead/gel-foundations/src/spacings"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      }
    ]
  },
  "src\\app\\legacy\\components\\OptimoPromos\\PromoList\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\components\\RelatedContentSection\\index.tsx",
      "src\\app\\pages\\MediaArticlePage\\PagePromoSections\\LatestMediaSection\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\legacy\\components\\OptimoPromos\\PromoList\\index.styles.jsx"
      }
    ]
  },
  "src\\app\\legacy\\components\\OptimoPromos\\PromoList\\index.styles.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\components\\OptimoPromos\\PromoList\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      }
    ]
  },
  "src\\app\\legacy\\components\\OptimoPromos\\Title\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\components\\OptimoPromos\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\legacy\\components\\OptimoPromos\\Title\\index.styles.jsx"
      },
      {
        "source": "../PromoContext",
        "resolvedPath": "src\\app\\legacy\\components\\OptimoPromos\\PromoContext.jsx"
      }
    ]
  },
  "src\\app\\legacy\\components\\OptimoPromos\\Title\\index.styles.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\components\\OptimoPromos\\Title\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "#psammead/psammead-styles/src/font-styles",
        "resolvedPath": "#psammead/psammead-styles/src/font-styles"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      }
    ]
  },
  "src\\app\\legacy\\components\\PageLayout\\IndexMarginStyles.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\components\\PageLayout\\IndexPageContainer.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "#psammead/gel-foundations/src/spacings"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "#psammead/gel-foundations/src/breakpoints"
      }
    ]
  },
  "src\\app\\legacy\\components\\PageLayout\\IndexPageContainer.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "#psammead/gel-foundations/src/breakpoints"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "#psammead/gel-foundations/src/spacings"
      },
      {
        "source": "./IndexMarginStyles",
        "resolvedPath": "src\\app\\legacy\\components\\PageLayout\\IndexMarginStyles.jsx"
      }
    ]
  },
  "src\\app\\legacy\\components\\Promo\\a.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\components\\Promo\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      }
    ]
  },
  "src\\app\\legacy\\components\\Promo\\body.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\components\\Promo\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/psammead-styles/src/font-styles",
        "resolvedPath": "#psammead/psammead-styles/src/font-styles"
      },
      {
        "source": "#psammead/gel-foundations/src/typography",
        "resolvedPath": "#psammead/gel-foundations/src/typography"
      }
    ]
  },
  "src\\app\\legacy\\components\\Promo\\footer.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\components\\Promo\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/psammead-styles/src/font-styles",
        "resolvedPath": "#psammead/psammead-styles/src/font-styles"
      },
      {
        "source": "#psammead/gel-foundations/src/typography",
        "resolvedPath": "#psammead/gel-foundations/src/typography"
      }
    ]
  },
  "src\\app\\legacy\\components\\Promo\\heading.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\components\\Promo\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      }
    ]
  },
  "src\\app\\legacy\\components\\Promo\\image.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\components\\Promo\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "#psammead/gel-foundations/src/spacings"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "#psammead/gel-foundations/src/breakpoints"
      },
      {
        "source": "../../../components/Image",
        "resolvedPath": "src\\app\\components\\Image\\index.tsx"
      }
    ]
  },
  "src\\app\\legacy\\components\\Promo\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\components\\Curation\\HierarchicalGrid\\index.tsx",
      "src\\app\\legacy\\components\\Promo\\index.test.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "ramda/src/partition",
        "resolvedPath": "ramda/src/partition"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "./image",
        "resolvedPath": "src\\app\\legacy\\components\\Promo\\image.jsx"
      },
      {
        "source": "./media-icon",
        "resolvedPath": "src\\app\\legacy\\components\\Promo\\media-icon.jsx"
      },
      {
        "source": "./heading",
        "resolvedPath": "src\\app\\legacy\\components\\Promo\\heading.jsx"
      },
      {
        "source": "./body",
        "resolvedPath": "src\\app\\legacy\\components\\Promo\\body.jsx"
      },
      {
        "source": "./footer",
        "resolvedPath": "src\\app\\legacy\\components\\Promo\\footer.jsx"
      },
      {
        "source": "./a",
        "resolvedPath": "src\\app\\legacy\\components\\Promo\\a.jsx"
      },
      {
        "source": "./timestamp",
        "resolvedPath": "src\\app\\legacy\\components\\Promo\\timestamp.jsx"
      }
    ]
  },
  "src\\app\\legacy\\components\\Promo\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "moment",
        "resolvedPath": "moment"
      },
      {
        "source": "../../../components/react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\components\\Promo\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\components\\Promo\\media-icon.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\components\\Promo\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "moment-timezone",
        "resolvedPath": "moment-timezone"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "#psammead/gel-foundations/src/spacings"
      },
      {
        "source": "#psammead/gel-foundations/src/typography",
        "resolvedPath": "#psammead/gel-foundations/src/typography"
      },
      {
        "source": "#psammead/psammead-styles/src/font-styles",
        "resolvedPath": "#psammead/psammead-styles/src/font-styles"
      },
      {
        "source": "#psammead/psammead-assets/src/svgs",
        "resolvedPath": "#psammead/psammead-assets/src/svgs"
      },
      {
        "source": "#lib/utilities/formatDuration",
        "resolvedPath": "#lib/utilities/formatDuration"
      }
    ]
  },
  "src\\app\\legacy\\components\\Promo\\timestamp.jsx": {
    "incomingDependencies": [
      "src\\app\\components\\FrostedGlassPromo\\withData.tsx",
      "src\\app\\legacy\\components\\Promo\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#psammead/psammead-timestamp-container/src",
        "resolvedPath": "#psammead/psammead-timestamp-container/src"
      },
      {
        "source": "#lib/utilities/isTenHoursAgo",
        "resolvedPath": "#lib/utilities/isTenHoursAgo"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      }
    ]
  },
  "src\\app\\legacy\\components\\RadioSchedule\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\components\\RadioSchedule\\testHelpers\\helper.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "#psammead/gel-foundations/src/breakpoints"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "#psammead/gel-foundations/src/spacings"
      },
      {
        "source": "#psammead/psammead-styles/src/detection",
        "resolvedPath": "#psammead/psammead-styles/src/detection"
      },
      {
        "source": "#psammead/psammead-grid/src",
        "resolvedPath": "#psammead/psammead-grid/src"
      },
      {
        "source": "#app/hooks/useViewTracker",
        "resolvedPath": "#app/hooks/useViewTracker"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "./ProgramCard",
        "resolvedPath": "src\\app\\legacy\\components\\RadioSchedule\\ProgramCard\\index.jsx"
      },
      {
        "source": "./StartTime",
        "resolvedPath": "src\\app\\legacy\\components\\RadioSchedule\\StartTime\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\components\\RadioSchedule\\index.stories.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "./testHelpers/helper",
        "resolvedPath": "src\\app\\legacy\\components\\RadioSchedule\\testHelpers\\helper.jsx"
      }
    ]
  },
  "src\\app\\legacy\\components\\RadioSchedule\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../../../components/react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "../../../components/ThemeProvider/fontScripts/arabic",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\arabic.ts"
      },
      {
        "source": "../../../components/ThemeProvider/fontScripts/latin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts"
      },
      {
        "source": "./testHelpers/helper",
        "resolvedPath": "src\\app\\legacy\\components\\RadioSchedule\\testHelpers\\helper.jsx"
      },
      {
        "source": "../../../hooks/useViewTracker",
        "resolvedPath": "src\\app\\hooks\\useViewTracker\\index.jsx"
      },
      {
        "source": "../../../hooks/useClickTrackerHandler",
        "resolvedPath": "src\\app\\hooks\\useClickTrackerHandler\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\components\\RadioSchedule\\ProgramCard\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\components\\RadioSchedule\\index.jsx",
      "src\\app\\legacy\\components\\RadioSchedule\\testHelpers\\helper.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/psammead-assets/src/svgs",
        "resolvedPath": "#psammead/psammead-assets/src/svgs"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "#psammead/gel-foundations/src/spacings"
      },
      {
        "source": "#psammead/psammead-styles/src/font-styles",
        "resolvedPath": "#psammead/psammead-styles/src/font-styles"
      },
      {
        "source": "#psammead/gel-foundations/src/typography",
        "resolvedPath": "#psammead/gel-foundations/src/typography"
      },
      {
        "source": "#psammead/psammead-timestamp-container/src/utilities",
        "resolvedPath": "#psammead/psammead-timestamp-container/src/utilities"
      },
      {
        "source": "../../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../ScheduleItemHeader",
        "resolvedPath": "src\\app\\legacy\\components\\RadioSchedule\\ScheduleItemHeader\\index.jsx"
      },
      {
        "source": "../utilities",
        "resolvedPath": "src\\app\\legacy\\components\\RadioSchedule\\utilities\\index.js"
      }
    ]
  },
  "src\\app\\legacy\\components\\RadioSchedule\\ProgramCard\\index.stories.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../testHelpers/helper",
        "resolvedPath": "src\\app\\legacy\\components\\RadioSchedule\\testHelpers\\helper.jsx"
      }
    ]
  },
  "src\\app\\legacy\\components\\RadioSchedule\\ProgramCard\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "#psammead/psammead-test-helpers/src",
        "resolvedPath": "#psammead/psammead-test-helpers/src"
      },
      {
        "source": "../../../../components/react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "../testHelpers/helper",
        "resolvedPath": "src\\app\\legacy\\components\\RadioSchedule\\testHelpers\\helper.jsx"
      }
    ]
  },
  "src\\app\\legacy\\components\\RadioSchedule\\ScheduleItemHeader\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\components\\RadioSchedule\\ProgramCard\\index.jsx",
      "src\\app\\legacy\\components\\RadioSchedule\\ScheduleItemHeader\\index.test.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "#psammead/psammead-timestamp-container/src/utilities",
        "resolvedPath": "#psammead/psammead-timestamp-container/src/utilities"
      },
      {
        "source": "#psammead/psammead-detokeniser/src",
        "resolvedPath": "#psammead/psammead-detokeniser/src"
      },
      {
        "source": "#app/components/LiveLabel",
        "resolvedPath": "#app/components/LiveLabel"
      },
      {
        "source": "#psammead/psammead-story-promo/src",
        "resolvedPath": "#psammead/psammead-story-promo/src"
      },
      {
        "source": "#psammead/psammead-styles/src/font-styles",
        "resolvedPath": "#psammead/psammead-styles/src/font-styles"
      },
      {
        "source": "#psammead/gel-foundations/src/typography",
        "resolvedPath": "#psammead/gel-foundations/src/typography"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "#psammead/gel-foundations/src/spacings"
      },
      {
        "source": "#app/hooks/useClickTrackerHandler",
        "resolvedPath": "#app/hooks/useClickTrackerHandler"
      },
      {
        "source": "../../../../components/VisuallyHiddenText",
        "resolvedPath": "src\\app\\components\\VisuallyHiddenText\\index.tsx"
      },
      {
        "source": "../../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../utilities",
        "resolvedPath": "src\\app\\legacy\\components\\RadioSchedule\\utilities\\index.js"
      }
    ]
  },
  "src\\app\\legacy\\components\\RadioSchedule\\ScheduleItemHeader\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../../../../components/react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "../../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../../../../components/ThemeProvider/fontScripts/arabic",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\arabic.ts"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\components\\RadioSchedule\\ScheduleItemHeader\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\components\\RadioSchedule\\StartTime\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\components\\RadioSchedule\\index.jsx",
      "src\\app\\legacy\\components\\RadioSchedule\\StartTime\\index.stories.jsx",
      "src\\app\\legacy\\components\\RadioSchedule\\StartTime\\index.test.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "#psammead/gel-foundations/src/spacings"
      },
      {
        "source": "#psammead/gel-foundations/src/typography",
        "resolvedPath": "#psammead/gel-foundations/src/typography"
      },
      {
        "source": "#psammead/psammead-styles/src/font-styles",
        "resolvedPath": "#psammead/psammead-styles/src/font-styles"
      },
      {
        "source": "#psammead/psammead-assets/src/svgs",
        "resolvedPath": "#psammead/psammead-assets/src/svgs"
      },
      {
        "source": "#psammead/psammead-timestamp-container/src",
        "resolvedPath": "#psammead/psammead-timestamp-container/src"
      },
      {
        "source": "../../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      }
    ]
  },
  "src\\app\\legacy\\components\\RadioSchedule\\StartTime\\index.stories.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\components\\RadioSchedule\\StartTime\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\components\\RadioSchedule\\StartTime\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../../../../components/react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "../../../../components/ThemeProvider/fontScripts/latin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts"
      },
      {
        "source": "../../../../components/ThemeProvider/fontScripts/arabic",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\arabic.ts"
      },
      {
        "source": "./index",
        "resolvedPath": "src\\app\\legacy\\components\\RadioSchedule\\StartTime\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\components\\RadioSchedule\\testHelpers\\helper.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\components\\RadioSchedule\\index.stories.jsx",
      "src\\app\\legacy\\components\\RadioSchedule\\index.test.jsx",
      "src\\app\\legacy\\components\\RadioSchedule\\ProgramCard\\index.stories.jsx",
      "src\\app\\legacy\\components\\RadioSchedule\\ProgramCard\\index.test.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#storybook/withServicesDecorator/text-variants",
        "resolvedPath": "#storybook/withServicesDecorator/text-variants"
      },
      {
        "source": "../../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../../../../components/ThemeProvider/fontScripts/latin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts"
      },
      {
        "source": "../../../../components/ThemeProvider/fontScripts/arabic",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\arabic.ts"
      },
      {
        "source": "../ProgramCard",
        "resolvedPath": "src\\app\\legacy\\components\\RadioSchedule\\ProgramCard\\index.jsx"
      },
      {
        "source": "../index",
        "resolvedPath": "src\\app\\legacy\\components\\RadioSchedule\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\components\\RadioSchedule\\utilities\\index.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\components\\RadioSchedule\\ProgramCard\\index.jsx",
      "src\\app\\legacy\\components\\RadioSchedule\\ScheduleItemHeader\\index.jsx",
      "src\\app\\legacy\\components\\RadioSchedule\\utilities\\index.test.js"
    ],
    "outgoingDependencies": [
      {
        "source": "#psammead/psammead-timestamp-container/src/utilities",
        "resolvedPath": "#psammead/psammead-timestamp-container/src/utilities"
      },
      {
        "source": "../../../../components/ThemeProvider/palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      }
    ]
  },
  "src\\app\\legacy\\components\\RadioSchedule\\utilities\\index.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "#psammead/psammead-detokeniser/src",
        "resolvedPath": "#psammead/psammead-detokeniser/src"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\components\\RadioSchedule\\utilities\\index.js"
      }
    ]
  },
  "src\\app\\legacy\\components\\ScrollablePromo\\fixtures.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\components\\ScrollablePromo\\index.test.jsx"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\components\\ScrollablePromo\\helpers\\fixtureData.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\components\\ScrollablePromo\\index.stories.jsx",
      "src\\app\\legacy\\components\\ScrollablePromo\\index.test.jsx",
      "src\\app\\legacy\\components\\ScrollablePromo\\Promo\\index.test.jsx"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\components\\ScrollablePromo\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\components\\ScrollablePromo\\index.stories.jsx",
      "src\\app\\legacy\\components\\ScrollablePromo\\index.test.jsx",
      "src\\app\\pages\\MediaArticlePage\\MediaArticlePage.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "#psammead/gel-foundations/src/spacings"
      },
      {
        "source": "#psammead/gel-foundations/src/typography",
        "resolvedPath": "#psammead/gel-foundations/src/typography"
      },
      {
        "source": "#psammead/psammead-styles/src/font-styles",
        "resolvedPath": "#psammead/psammead-styles/src/font-styles"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "ramda/src/path",
        "resolvedPath": "ramda/src/path"
      },
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "ramda/src/isEmpty",
        "resolvedPath": "ramda/src/isEmpty"
      },
      {
        "source": "ramda/src/tail",
        "resolvedPath": "ramda/src/tail"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "#psammead/gel-foundations/src/breakpoints"
      },
      {
        "source": "#components/Grid",
        "resolvedPath": "#components/Grid"
      },
      {
        "source": "#hooks/useViewTracker",
        "resolvedPath": "#hooks/useViewTracker"
      },
      {
        "source": "#hooks/useClickTrackerHandler",
        "resolvedPath": "#hooks/useClickTrackerHandler"
      },
      {
        "source": "#lib/utilities/idSanitiser",
        "resolvedPath": "#lib/utilities/idSanitiser"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "./Promo",
        "resolvedPath": "src\\app\\legacy\\components\\ScrollablePromo\\Promo\\index.jsx"
      },
      {
        "source": "./PromoList",
        "resolvedPath": "src\\app\\legacy\\components\\ScrollablePromo\\PromoList\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\components\\ScrollablePromo\\index.stories.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#contexts/ServiceContext",
        "resolvedPath": "#contexts/ServiceContext"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\components\\ScrollablePromo\\index.jsx"
      },
      {
        "source": "./helpers/fixtureData",
        "resolvedPath": "src\\app\\legacy\\components\\ScrollablePromo\\helpers\\fixtureData.js"
      }
    ]
  },
  "src\\app\\legacy\\components\\ScrollablePromo\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#hooks/useViewTracker",
        "resolvedPath": "#hooks/useViewTracker"
      },
      {
        "source": "#hooks/useClickTrackerHandler",
        "resolvedPath": "#hooks/useClickTrackerHandler"
      },
      {
        "source": "../../../components/react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "./helpers/fixtureData",
        "resolvedPath": "src\\app\\legacy\\components\\ScrollablePromo\\helpers\\fixtureData.js"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\components\\ScrollablePromo\\index.jsx"
      },
      {
        "source": "./fixtures",
        "resolvedPath": "src\\app\\legacy\\components\\ScrollablePromo\\fixtures.js"
      },
      {
        "source": "../../../routes/utils/pageTypes",
        "resolvedPath": "src\\app\\routes\\utils\\pageTypes.ts"
      }
    ]
  },
  "src\\app\\legacy\\components\\ScrollablePromo\\Promo\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\components\\ScrollablePromo\\index.jsx",
      "src\\app\\legacy\\components\\ScrollablePromo\\Promo\\index.test.jsx",
      "src\\app\\legacy\\components\\ScrollablePromo\\PromoList\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "ramda/src/path",
        "resolvedPath": "ramda/src/path"
      },
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "#psammead/gel-foundations/src/typography",
        "resolvedPath": "#psammead/gel-foundations/src/typography"
      },
      {
        "source": "#psammead/psammead-styles/src/font-styles",
        "resolvedPath": "#psammead/psammead-styles/src/font-styles"
      },
      {
        "source": "#psammead/psammead-story-promo/src",
        "resolvedPath": "#psammead/psammead-story-promo/src"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "#psammead/gel-foundations/src/spacings"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "#psammead/gel-foundations/src/breakpoints"
      },
      {
        "source": "#lib/utilities/blockHandlers",
        "resolvedPath": "#lib/utilities/blockHandlers"
      },
      {
        "source": "#hooks/useOperaMiniDetection",
        "resolvedPath": "#hooks/useOperaMiniDetection"
      },
      {
        "source": "#components/Promo/timestamp",
        "resolvedPath": "#components/Promo/timestamp"
      },
      {
        "source": "../../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      }
    ]
  },
  "src\\app\\legacy\\components\\ScrollablePromo\\Promo\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../../../../components/react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "../helpers/fixtureData",
        "resolvedPath": "src\\app\\legacy\\components\\ScrollablePromo\\helpers\\fixtureData.js"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\components\\ScrollablePromo\\Promo\\index.jsx"
      },
      {
        "source": "../../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      }
    ]
  },
  "src\\app\\legacy\\components\\ScrollablePromo\\PromoList\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\components\\ScrollablePromo\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "#psammead/gel-foundations/src/spacings"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "#psammead/gel-foundations/src/breakpoints"
      },
      {
        "source": "#hooks/useOperaMiniDetection",
        "resolvedPath": "#hooks/useOperaMiniDetection"
      },
      {
        "source": "../../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../Promo",
        "resolvedPath": "src\\app\\legacy\\components\\ScrollablePromo\\Promo\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\components\\SkipLinkWrapper\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\components\\SkipLinkWrapper\\index.test.jsx",
      "src\\app\\legacy\\containers\\CpsOnwardJourney\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/psammead-detokeniser/src",
        "resolvedPath": "#psammead/psammead-detokeniser/src"
      },
      {
        "source": "#psammead/psammead-styles/src/font-styles",
        "resolvedPath": "#psammead/psammead-styles/src/font-styles"
      },
      {
        "source": "#psammead/gel-foundations/src/typography",
        "resolvedPath": "#psammead/gel-foundations/src/typography"
      },
      {
        "source": "../../../lib/styles.const",
        "resolvedPath": "src\\app\\lib\\styles.const\\index.ts"
      }
    ]
  },
  "src\\app\\legacy\\components\\SkipLinkWrapper\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../../../components/react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\components\\SkipLinkWrapper\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\App\\App.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\App\\App.test.jsx",
      "src\\app\\legacy\\containers\\App\\index.jsx",
      "src\\app\\legacy\\containers\\App\\index.test.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react-router-config",
        "resolvedPath": "react-router-config"
      },
      {
        "source": "ramda/src/pick",
        "resolvedPath": "ramda/src/pick"
      },
      {
        "source": "ramda/src/mergeAll",
        "resolvedPath": "ramda/src/mergeAll"
      },
      {
        "source": "ramda/src/path",
        "resolvedPath": "ramda/src/path"
      },
      {
        "source": "#app/routes/utils/fetchPageData/utils/getRouteProps",
        "resolvedPath": "#app/routes/utils/fetchPageData/utils/getRouteProps"
      },
      {
        "source": "#app/routes",
        "resolvedPath": "#app/routes"
      }
    ]
  },
  "src\\app\\legacy\\containers\\App\\App.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "react-router-config",
        "resolvedPath": "react-router-config"
      },
      {
        "source": "@testing-library/react",
        "resolvedPath": "@testing-library/react"
      },
      {
        "source": "#app/lib/utilities/getToggles",
        "resolvedPath": "#app/lib/utilities/getToggles"
      },
      {
        "source": "#app/routes",
        "resolvedPath": "#app/routes"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": "./App",
        "resolvedPath": "src\\app\\legacy\\containers\\App\\App.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\App\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\App\\index.test.jsx",
      "src\\client.js",
      "src\\server\\Document\\index.test.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "react-router-dom",
        "resolvedPath": "react-router-dom"
      },
      {
        "source": "./App",
        "resolvedPath": "src\\app\\legacy\\containers\\App\\App.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\App\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@testing-library/react",
        "resolvedPath": "@testing-library/react"
      },
      {
        "source": "react-router-dom",
        "resolvedPath": "react-router-dom"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\containers\\App\\index.jsx"
      },
      {
        "source": "./App",
        "resolvedPath": "src\\app\\legacy\\containers\\App\\App.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\ArticleMetadata\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\ArticleMetadata\\index.test.jsx",
      "src\\app\\pages\\MediaArticlePage\\MediaArticlePage.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#lib/utilities/getBrandedImage",
        "resolvedPath": "#lib/utilities/getBrandedImage"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../../../components/Metadata",
        "resolvedPath": "src\\app\\components\\Metadata\\index.tsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\ArticleMetadata\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#pages/ArticlePage/fixtureData",
        "resolvedPath": "#pages/ArticlePage/fixtureData"
      },
      {
        "source": "../../../components/Byline/utilities",
        "resolvedPath": "src\\app\\components\\Byline\\utilities\\index.ts"
      },
      {
        "source": "../../../components/react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "./index",
        "resolvedPath": "src\\app\\legacy\\containers\\ArticleMetadata\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\ArticleTimestamp\\helpers.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\ArticleTimestamp\\helpers.test.js",
      "src\\app\\legacy\\containers\\ArticleTimestamp\\index.jsx",
      "src\\app\\legacy\\containers\\ArticleTimestamp\\shouldDisplayLastUpdatedTimestamp.js"
    ],
    "outgoingDependencies": [
      {
        "source": "moment-timezone",
        "resolvedPath": "moment-timezone"
      },
      {
        "source": "#lib/utilities/isTenHoursAgo",
        "resolvedPath": "#lib/utilities/isTenHoursAgo"
      },
      {
        "source": "./timeFormats",
        "resolvedPath": "src\\app\\legacy\\containers\\ArticleTimestamp\\timeFormats.js"
      }
    ]
  },
  "src\\app\\legacy\\containers\\ArticleTimestamp\\helpers.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "./helpers",
        "resolvedPath": "src\\app\\legacy\\containers\\ArticleTimestamp\\helpers.js"
      },
      {
        "source": "./testHelpers",
        "resolvedPath": "src\\app\\legacy\\containers\\ArticleTimestamp\\testHelpers.js"
      }
    ]
  },
  "src\\app\\legacy\\containers\\ArticleTimestamp\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\components\\Byline\\index.stories.tsx",
      "src\\app\\components\\Byline\\index.test.tsx",
      "src\\app\\legacy\\containers\\ArticleTimestamp\\index.stories.jsx",
      "src\\app\\legacy\\containers\\ArticleTimestamp\\index.test.jsx",
      "src\\app\\pages\\MediaArticlePage\\MediaArticlePage.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#psammead/psammead-timestamp-container/src",
        "resolvedPath": "#psammead/psammead-timestamp-container/src"
      },
      {
        "source": "#components/Grid",
        "resolvedPath": "#components/Grid"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "./timeFormats",
        "resolvedPath": "src\\app\\legacy\\containers\\ArticleTimestamp\\timeFormats.js"
      },
      {
        "source": "./helpers",
        "resolvedPath": "src\\app\\legacy\\containers\\ArticleTimestamp\\helpers.js"
      },
      {
        "source": "./shouldDisplayLastUpdatedTimestamp",
        "resolvedPath": "src\\app\\legacy\\containers\\ArticleTimestamp\\shouldDisplayLastUpdatedTimestamp.js"
      }
    ]
  },
  "src\\app\\legacy\\containers\\ArticleTimestamp\\index.stories.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../../../../testHelpers/withTimeMachine",
        "resolvedPath": "src\\testHelpers\\withTimeMachine.jsx"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\containers\\ArticleTimestamp\\index.jsx"
      },
      {
        "source": "./testHelpers",
        "resolvedPath": "src\\app\\legacy\\containers\\ArticleTimestamp\\testHelpers.js"
      }
    ]
  },
  "src\\app\\legacy\\containers\\ArticleTimestamp\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#psammead/psammead-test-helpers/src",
        "resolvedPath": "#psammead/psammead-test-helpers/src"
      },
      {
        "source": "../../../components/react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\containers\\ArticleTimestamp\\index.jsx"
      },
      {
        "source": "./testHelpers",
        "resolvedPath": "src\\app\\legacy\\containers\\ArticleTimestamp\\testHelpers.js"
      }
    ]
  },
  "src\\app\\legacy\\containers\\ArticleTimestamp\\shouldDisplayLastUpdatedTimestamp.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\ArticleTimestamp\\index.jsx",
      "src\\app\\legacy\\containers\\ArticleTimestamp\\shouldDisplayLastUpdatedTimestamp.test.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "./helpers",
        "resolvedPath": "src\\app\\legacy\\containers\\ArticleTimestamp\\helpers.js"
      }
    ]
  },
  "src\\app\\legacy\\containers\\ArticleTimestamp\\shouldDisplayLastUpdatedTimestamp.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "./shouldDisplayLastUpdatedTimestamp",
        "resolvedPath": "src\\app\\legacy\\containers\\ArticleTimestamp\\shouldDisplayLastUpdatedTimestamp.js"
      },
      {
        "source": "./testHelpers",
        "resolvedPath": "src\\app\\legacy\\containers\\ArticleTimestamp\\testHelpers.js"
      }
    ]
  },
  "src\\app\\legacy\\containers\\ArticleTimestamp\\testHelpers.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\ArticleTimestamp\\helpers.test.js",
      "src\\app\\legacy\\containers\\ArticleTimestamp\\index.stories.jsx",
      "src\\app\\legacy\\containers\\ArticleTimestamp\\index.test.jsx",
      "src\\app\\legacy\\containers\\ArticleTimestamp\\shouldDisplayLastUpdatedTimestamp.test.jsx",
      "src\\app\\legacy\\containers\\ArticleTimestamp\\timeFormatTests\\testUtils.js"
    ],
    "outgoingDependencies": [
      {
        "source": "moment-timezone",
        "resolvedPath": "moment-timezone"
      }
    ]
  },
  "src\\app\\legacy\\containers\\ArticleTimestamp\\timeFormats.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\ArticleTimestamp\\helpers.js",
      "src\\app\\legacy\\containers\\ArticleTimestamp\\index.jsx",
      "src\\app\\legacy\\containers\\ArticleTimestamp\\timeFormatTests\\testUtils.js"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\containers\\ArticleTimestamp\\timeFormatTests\\generateTimeFormats.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "fs",
        "resolvedPath": "fs"
      },
      {
        "source": "path",
        "resolvedPath": "path"
      },
      {
        "source": "./testUtils",
        "resolvedPath": "src\\app\\legacy\\containers\\ArticleTimestamp\\timeFormatTests\\testUtils.js"
      },
      {
        "source": "../../../../../server/utilities/serviceConfigs",
        "resolvedPath": "src\\server\\utilities\\serviceConfigs\\index.ts"
      }
    ]
  },
  "src\\app\\legacy\\containers\\ArticleTimestamp\\timeFormatTests\\generateTimeFormats.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "fs",
        "resolvedPath": "fs"
      }
    ]
  },
  "src\\app\\legacy\\containers\\ArticleTimestamp\\timeFormatTests\\testUtils.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\ArticleTimestamp\\timeFormatTests\\generateTimeFormats.js",
      "src\\app\\legacy\\containers\\ArticleTimestamp\\timeFormatTests\\timeFormat.test.js"
    ],
    "outgoingDependencies": [
      {
        "source": "moment-timezone",
        "resolvedPath": "moment-timezone"
      },
      {
        "source": "../testHelpers",
        "resolvedPath": "src\\app\\legacy\\containers\\ArticleTimestamp\\testHelpers.js"
      },
      {
        "source": "../timeFormats",
        "resolvedPath": "src\\app\\legacy\\containers\\ArticleTimestamp\\timeFormats.js"
      }
    ]
  },
  "src\\app\\legacy\\containers\\ArticleTimestamp\\timeFormatTests\\timeFormat.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../../../../../server/utilities/serviceConfigs",
        "resolvedPath": "src\\server\\utilities\\serviceConfigs\\index.ts"
      },
      {
        "source": "./expectedFormats.json",
        "resolvedPath": "..\\EXIM\\Work\\iterate-ai\\dep-graph\\expectedFormats.json"
      },
      {
        "source": "./testUtils",
        "resolvedPath": "src\\app\\legacy\\containers\\ArticleTimestamp\\timeFormatTests\\testUtils.js"
      }
    ]
  },
  "src\\app\\legacy\\containers\\Blocks\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\Blocks\\index.test.jsx",
      "src\\app\\legacy\\containers\\BulletedList\\index.jsx",
      "src\\app\\legacy\\containers\\BulletedListItem\\index.jsx",
      "src\\app\\legacy\\containers\\FauxHeadline\\index.jsx",
      "src\\app\\legacy\\containers\\Headings\\index.jsx",
      "src\\app\\legacy\\containers\\InlineContainer\\index.jsx",
      "src\\app\\legacy\\containers\\InlineLink\\index.jsx",
      "src\\app\\legacy\\containers\\Paragraph\\index.jsx",
      "src\\app\\legacy\\containers\\Text\\index.jsx",
      "src\\app\\pages\\MediaArticlePage\\MediaArticlePage.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "ramda/src/path",
        "resolvedPath": "ramda/src/path"
      }
    ]
  },
  "src\\app\\legacy\\containers\\Blocks\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#models/blocks",
        "resolvedPath": "#models/blocks"
      },
      {
        "source": "#psammead/psammead-test-helpers/src",
        "resolvedPath": "#psammead/psammead-test-helpers/src"
      },
      {
        "source": "./index",
        "resolvedPath": "src\\app\\legacy\\containers\\Blocks\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\Brand\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\Brand\\index.stories.jsx",
      "src\\app\\legacy\\containers\\Brand\\index.test.jsx",
      "src\\app\\legacy\\containers\\Footer\\index.jsx",
      "src\\app\\legacy\\containers\\Header\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/psammead-brand/src",
        "resolvedPath": "#psammead/psammead-brand/src"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\Brand\\index.stories.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\containers\\Brand\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\Brand\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../../../components/react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "../../psammead/psammead-test-helpers/src",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-test-helpers\\src\\index.js"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\containers\\Brand\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\BulletedList\\fixtures.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\BulletedList\\index.test.jsx",
      "src\\app\\legacy\\containers\\BulletedListItem\\index.test.jsx"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\containers\\BulletedList\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\BulletedList\\index.test.jsx",
      "src\\app\\legacy\\containers\\Gist\\index.jsx",
      "src\\app\\legacy\\containers\\Text\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "ramda/src/pick",
        "resolvedPath": "ramda/src/pick"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "#psammead/gel-foundations/src/spacings"
      },
      {
        "source": "#components/Grid",
        "resolvedPath": "#components/Grid"
      },
      {
        "source": "#hooks/useViewTracker",
        "resolvedPath": "#hooks/useViewTracker"
      },
      {
        "source": "#hooks/useClickTrackerHandler",
        "resolvedPath": "#hooks/useClickTrackerHandler"
      },
      {
        "source": "../../../components/BulletedList",
        "resolvedPath": "src\\app\\components\\BulletedList\\index.tsx"
      },
      {
        "source": "../Blocks",
        "resolvedPath": "src\\app\\legacy\\containers\\Blocks\\index.jsx"
      },
      {
        "source": "../BulletedListItem",
        "resolvedPath": "src\\app\\legacy\\containers\\BulletedListItem\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\BulletedList\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#hooks/useViewTracker",
        "resolvedPath": "#hooks/useViewTracker"
      },
      {
        "source": "#hooks/useClickTrackerHandler",
        "resolvedPath": "#hooks/useClickTrackerHandler"
      },
      {
        "source": "#contexts/ToggleContext",
        "resolvedPath": "#contexts/ToggleContext"
      },
      {
        "source": "#psammead/psammead-test-helpers/src",
        "resolvedPath": "#psammead/psammead-test-helpers/src"
      },
      {
        "source": "../../../components/react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "./index",
        "resolvedPath": "src\\app\\legacy\\containers\\BulletedList\\index.jsx"
      },
      {
        "source": "./fixtures",
        "resolvedPath": "src\\app\\legacy\\containers\\BulletedList\\fixtures.js"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../../../components/ThemeProvider/fontScripts/arabic",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\arabic.ts"
      }
    ]
  },
  "src\\app\\legacy\\containers\\BulletedListItem\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\BulletedList\\index.jsx",
      "src\\app\\legacy\\containers\\BulletedListItem\\index.test.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../../../components/BulletedList",
        "resolvedPath": "src\\app\\components\\BulletedList\\index.tsx"
      },
      {
        "source": "../Blocks",
        "resolvedPath": "src\\app\\legacy\\containers\\Blocks\\index.jsx"
      },
      {
        "source": "../Fragment",
        "resolvedPath": "src\\app\\legacy\\containers\\Fragment\\index.jsx"
      },
      {
        "source": "../InlineLink",
        "resolvedPath": "src\\app\\legacy\\containers\\InlineLink\\index.jsx"
      },
      {
        "source": "../InlineContainer",
        "resolvedPath": "src\\app\\legacy\\containers\\InlineContainer\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\BulletedListItem\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../../../components/react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "./index",
        "resolvedPath": "src\\app\\legacy\\containers\\BulletedListItem\\index.jsx"
      },
      {
        "source": "../BulletedList/fixtures",
        "resolvedPath": "src\\app\\legacy\\containers\\BulletedList\\fixtures.js"
      }
    ]
  },
  "src\\app\\legacy\\containers\\Bulletin\\fixtureData.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\Bulletin\\index.stories.jsx",
      "src\\app\\legacy\\containers\\Bulletin\\index.test.jsx"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\containers\\Bulletin\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\Bulletin\\index.stories.jsx",
      "src\\app\\legacy\\containers\\Bulletin\\index.test.jsx",
      "src\\app\\legacy\\containers\\FrontPageStoryRows\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "#psammead/psammead-bulletin/src",
        "resolvedPath": "#psammead/psammead-bulletin/src"
      },
      {
        "source": "#lib/utilities/srcSet",
        "resolvedPath": "#lib/utilities/srcSet"
      },
      {
        "source": "#lib/utilities/ichefURL",
        "resolvedPath": "#lib/utilities/ichefURL"
      },
      {
        "source": "#lib/utilities/imageSrcHelpers/originCode",
        "resolvedPath": "#lib/utilities/imageSrcHelpers/originCode"
      },
      {
        "source": "#lib/utilities/imageSrcHelpers/locator",
        "resolvedPath": "#lib/utilities/imageSrcHelpers/locator"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../ImageWithPlaceholder",
        "resolvedPath": "src\\app\\legacy\\containers\\ImageWithPlaceholder\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\Bulletin\\index.stories.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "#contexts/RequestContext"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\containers\\Bulletin\\index.jsx"
      },
      {
        "source": "../../../../../.storybook/helpers/ampDecorator",
        "resolvedPath": ".storybook\\helpers\\ampDecorator\\index.jsx"
      },
      {
        "source": "./fixtureData",
        "resolvedPath": "src\\app\\legacy\\containers\\Bulletin\\fixtureData.js"
      },
      {
        "source": "ramda",
        "resolvedPath": "ramda"
      }
    ]
  },
  "src\\app\\legacy\\containers\\Bulletin\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../../../components/react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\containers\\Bulletin\\index.jsx"
      },
      {
        "source": "./fixtureData",
        "resolvedPath": "src\\app\\legacy\\containers\\Bulletin\\fixtureData.js"
      }
    ]
  },
  "src\\app\\legacy\\containers\\ComscoreAnalytics\\Amp\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\ComscoreAnalytics\\Amp\\index.test.jsx",
      "src\\app\\legacy\\containers\\ComscoreAnalytics\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      }
    ]
  },
  "src\\app\\legacy\\containers\\ComscoreAnalytics\\Amp\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@testing-library/react",
        "resolvedPath": "@testing-library/react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\containers\\ComscoreAnalytics\\Amp\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\ComscoreAnalytics\\Canonical\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\ComscoreAnalytics\\Canonical\\index.test.jsx",
      "src\\app\\legacy\\containers\\ComscoreAnalytics\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "react-helmet",
        "resolvedPath": "react-helmet"
      },
      {
        "source": "#contexts/UserContext",
        "resolvedPath": "#contexts/UserContext"
      },
      {
        "source": "#app/lib/utilities/getEnvConfig",
        "resolvedPath": "#app/lib/utilities/getEnvConfig"
      }
    ]
  },
  "src\\app\\legacy\\containers\\ComscoreAnalytics\\Canonical\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@testing-library/react",
        "resolvedPath": "@testing-library/react"
      },
      {
        "source": "#contexts/UserContext",
        "resolvedPath": "#contexts/UserContext"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\containers\\ComscoreAnalytics\\Canonical\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\ComscoreAnalytics\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\ComscoreAnalytics\\index.test.jsx",
      "src\\app\\pages\\MediaArticlePage\\MediaArticlePage.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "#contexts/RequestContext"
      },
      {
        "source": "#hooks/useToggle",
        "resolvedPath": "#hooks/useToggle"
      },
      {
        "source": "./Amp",
        "resolvedPath": "src\\app\\legacy\\containers\\ComscoreAnalytics\\Amp\\index.jsx"
      },
      {
        "source": "./Canonical",
        "resolvedPath": "src\\app\\legacy\\containers\\ComscoreAnalytics\\Canonical\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\ComscoreAnalytics\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@testing-library/react",
        "resolvedPath": "@testing-library/react"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "#contexts/RequestContext"
      },
      {
        "source": "#contexts/ToggleContext",
        "resolvedPath": "#contexts/ToggleContext"
      },
      {
        "source": "#contexts/UserContext",
        "resolvedPath": "#contexts/UserContext"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": "#psammead/psammead-test-helpers/src",
        "resolvedPath": "#psammead/psammead-test-helpers/src"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\containers\\ComscoreAnalytics\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\ConsentBanner\\a11y.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#contexts/UserContext",
        "resolvedPath": "#contexts/UserContext"
      },
      {
        "source": "#contexts/ToggleContext",
        "resolvedPath": "#contexts/ToggleContext"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "#contexts/RequestContext"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": "js-cookie",
        "resolvedPath": "js-cookie"
      },
      {
        "source": "../../../components/react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../../../lib/config/services/pidgin",
        "resolvedPath": "src\\app\\lib\\config\\services\\pidgin.ts"
      },
      {
        "source": "./index",
        "resolvedPath": "src\\app\\legacy\\containers\\ConsentBanner\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\ConsentBanner\\Banner\\cookie.amp.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\ConsentBanner\\Banner\\index.amp.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "react-helmet",
        "resolvedPath": "react-helmet"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/typography",
        "resolvedPath": "#psammead/gel-foundations/src/typography"
      },
      {
        "source": "#psammead/psammead-styles/src/font-styles",
        "resolvedPath": "#psammead/psammead-styles/src/font-styles"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "#psammead/gel-foundations/src/breakpoints"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "#psammead/gel-foundations/src/spacings"
      },
      {
        "source": "../../../../components/ThemeProvider/focusIndicator",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\focusIndicator.ts"
      }
    ]
  },
  "src\\app\\legacy\\containers\\ConsentBanner\\Banner\\getDataAttribute.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\ConsentBanner\\Banner\\getDataAttribute.test.js",
      "src\\app\\legacy\\containers\\ConsentBanner\\Banner\\index.amp.jsx",
      "src\\app\\legacy\\containers\\ConsentBanner\\Banner\\index.canonical.jsx"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\containers\\ConsentBanner\\Banner\\getDataAttribute.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "./getDataAttribute",
        "resolvedPath": "src\\app\\legacy\\containers\\ConsentBanner\\Banner\\getDataAttribute.js"
      }
    ]
  },
  "src\\app\\legacy\\containers\\ConsentBanner\\Banner\\index.amp.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\ConsentBanner\\Banner\\index.amp.test.jsx",
      "src\\app\\legacy\\containers\\ConsentBanner\\index.amp.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#psammead/psammead-consent-banner/src",
        "resolvedPath": "#psammead/psammead-consent-banner/src"
      },
      {
        "source": "#app/legacy/psammead/psammead-assets/src/svgs",
        "resolvedPath": "#app/legacy/psammead/psammead-assets/src/svgs"
      },
      {
        "source": "#app/components/VisuallyHiddenText",
        "resolvedPath": "#app/components/VisuallyHiddenText"
      },
      {
        "source": "../../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "./cookie.amp",
        "resolvedPath": "src\\app\\legacy\\containers\\ConsentBanner\\Banner\\cookie.amp.jsx"
      },
      {
        "source": "./Text",
        "resolvedPath": "src\\app\\legacy\\containers\\ConsentBanner\\Banner\\Text.jsx"
      },
      {
        "source": "./getDataAttribute",
        "resolvedPath": "src\\app\\legacy\\containers\\ConsentBanner\\Banner\\getDataAttribute.js"
      }
    ]
  },
  "src\\app\\legacy\\containers\\ConsentBanner\\Banner\\index.amp.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../../../../components/react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "./index.amp",
        "resolvedPath": "src\\app\\legacy\\containers\\ConsentBanner\\Banner\\index.amp.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\ConsentBanner\\Banner\\index.canonical.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\ConsentBanner\\Banner\\index.canonical.test.jsx",
      "src\\app\\legacy\\containers\\ConsentBanner\\index.canonical.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/psammead-consent-banner/src",
        "resolvedPath": "#psammead/psammead-consent-banner/src"
      },
      {
        "source": "../../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "./Text",
        "resolvedPath": "src\\app\\legacy\\containers\\ConsentBanner\\Banner\\Text.jsx"
      },
      {
        "source": "./getDataAttribute",
        "resolvedPath": "src\\app\\legacy\\containers\\ConsentBanner\\Banner\\getDataAttribute.js"
      }
    ]
  },
  "src\\app\\legacy\\containers\\ConsentBanner\\Banner\\index.canonical.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../../../../components/react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "./index.canonical",
        "resolvedPath": "src\\app\\legacy\\containers\\ConsentBanner\\Banner\\index.canonical.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\ConsentBanner\\Banner\\Text.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\ConsentBanner\\Banner\\index.amp.jsx",
      "src\\app\\legacy\\containers\\ConsentBanner\\Banner\\index.canonical.jsx",
      "src\\app\\legacy\\containers\\ConsentBanner\\Banner\\Text.test.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#psammead/psammead-consent-banner/src",
        "resolvedPath": "#psammead/psammead-consent-banner/src"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "#contexts/RequestContext"
      },
      {
        "source": "../../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\ConsentBanner\\Banner\\Text.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "#contexts/RequestContext"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": "../../../../components/react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "../../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "./Text",
        "resolvedPath": "src\\app\\legacy\\containers\\ConsentBanner\\Banner\\Text.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\ConsentBanner\\index.amp.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\ConsentBanner\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#components/AmpGeo",
        "resolvedPath": "#components/AmpGeo"
      },
      {
        "source": "./Banner/index.amp",
        "resolvedPath": "src\\app\\legacy\\containers\\ConsentBanner\\Banner\\index.amp.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\ConsentBanner\\index.amp.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../../../components/react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\ConsentBanner\\index.canonical.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\ConsentBanner\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#contexts/UserContext",
        "resolvedPath": "#contexts/UserContext"
      },
      {
        "source": "./Banner/index.canonical",
        "resolvedPath": "src\\app\\legacy\\containers\\ConsentBanner\\Banner\\index.canonical.jsx"
      },
      {
        "source": "./useConsentBanners",
        "resolvedPath": "src\\app\\legacy\\containers\\ConsentBanner\\useConsentBanners\\index.js"
      },
      {
        "source": "../../../contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext\\index.tsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\ConsentBanner\\index.canonical.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "js-cookie",
        "resolvedPath": "js-cookie"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "#contexts/RequestContext"
      },
      {
        "source": "#contexts/ToggleContext",
        "resolvedPath": "#contexts/ToggleContext"
      },
      {
        "source": "#contexts/UserContext",
        "resolvedPath": "#contexts/UserContext"
      },
      {
        "source": "../../../components/react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\containers\\ConsentBanner\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\ConsentBanner\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\ConsentBanner\\a11y.test.jsx",
      "src\\app\\legacy\\containers\\ConsentBanner\\index.canonical.test.jsx",
      "src\\app\\legacy\\containers\\ConsentBanner\\index.stories.jsx",
      "src\\app\\legacy\\containers\\Header\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "#contexts/RequestContext"
      },
      {
        "source": "./index.canonical",
        "resolvedPath": "src\\app\\legacy\\containers\\ConsentBanner\\index.canonical.jsx"
      },
      {
        "source": "./index.amp",
        "resolvedPath": "src\\app\\legacy\\containers\\ConsentBanner\\index.amp.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\ConsentBanner\\index.stories.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "#contexts/RequestContext"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\containers\\ConsentBanner\\index.jsx"
      },
      {
        "source": "../../../../../.storybook/helpers/ampDecorator",
        "resolvedPath": ".storybook\\helpers\\ampDecorator\\index.jsx"
      },
      {
        "source": "../../../components/ThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\index.tsx"
      },
      {
        "source": "./metadata.json",
        "resolvedPath": "..\\EXIM\\Work\\iterate-ai\\dep-graph\\metadata.json"
      }
    ]
  },
  "src\\app\\legacy\\containers\\ConsentBanner\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "#contexts/RequestContext"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": "#psammead/psammead-test-helpers/src",
        "resolvedPath": "#psammead/psammead-test-helpers/src"
      }
    ]
  },
  "src\\app\\legacy\\containers\\ConsentBanner\\useConsentBanners\\getCookieOvenEndpoints.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\ConsentBanner\\useConsentBanners\\getCookieOvenEndpoints.test.js",
      "src\\app\\legacy\\containers\\ConsentBanner\\useConsentBanners\\setCookieOven.js"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\containers\\ConsentBanner\\useConsentBanners\\getCookieOvenEndpoints.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "#testHelpers/config",
        "resolvedPath": "#testHelpers/config"
      },
      {
        "source": "./getCookieOvenEndpoints",
        "resolvedPath": "src\\app\\legacy\\containers\\ConsentBanner\\useConsentBanners\\getCookieOvenEndpoints.js"
      }
    ]
  },
  "src\\app\\legacy\\containers\\ConsentBanner\\useConsentBanners\\index.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\ConsentBanner\\index.canonical.jsx",
      "src\\app\\legacy\\containers\\ConsentBanner\\useConsentBanners\\index.test.js"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "js-cookie",
        "resolvedPath": "js-cookie"
      },
      {
        "source": "#lib/utilities/setCookie",
        "resolvedPath": "#lib/utilities/setCookie"
      },
      {
        "source": "./setCookieOven",
        "resolvedPath": "src\\app\\legacy\\containers\\ConsentBanner\\useConsentBanners\\setCookieOven.js"
      }
    ]
  },
  "src\\app\\legacy\\containers\\ConsentBanner\\useConsentBanners\\index.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "#app/components/react-testing-library-with-providers",
        "resolvedPath": "#app/components/react-testing-library-with-providers"
      },
      {
        "source": "js-cookie",
        "resolvedPath": "js-cookie"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\containers\\ConsentBanner\\useConsentBanners\\index.js"
      }
    ]
  },
  "src\\app\\legacy\\containers\\ConsentBanner\\useConsentBanners\\setCookieOven.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\ConsentBanner\\useConsentBanners\\index.js",
      "src\\app\\legacy\\containers\\ConsentBanner\\useConsentBanners\\setCookieOven.test.js"
    ],
    "outgoingDependencies": [
      {
        "source": "isomorphic-fetch",
        "resolvedPath": "isomorphic-fetch"
      },
      {
        "source": "ramda/src/path",
        "resolvedPath": "ramda/src/path"
      },
      {
        "source": "./getCookieOvenEndpoints",
        "resolvedPath": "src\\app\\legacy\\containers\\ConsentBanner\\useConsentBanners\\getCookieOvenEndpoints.js"
      }
    ]
  },
  "src\\app\\legacy\\containers\\ConsentBanner\\useConsentBanners\\setCookieOven.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "./setCookieOven",
        "resolvedPath": "src\\app\\legacy\\containers\\ConsentBanner\\useConsentBanners\\setCookieOven.js"
      }
    ]
  },
  "src\\app\\legacy\\containers\\CpsFeaturesAnalysis\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\CpsFeaturesAnalysis\\index.stories.jsx",
      "src\\app\\legacy\\containers\\CpsFeaturesAnalysis\\index.test.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "#psammead/psammead-story-promo-list/src",
        "resolvedPath": "#psammead/psammead-story-promo-list/src"
      },
      {
        "source": "#hooks/useViewTracker",
        "resolvedPath": "#hooks/useViewTracker"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "#psammead/gel-foundations/src/breakpoints"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "#psammead/gel-foundations/src/spacings"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../CpsOnwardJourney",
        "resolvedPath": "src\\app\\legacy\\containers\\CpsOnwardJourney\\index.jsx"
      },
      {
        "source": "../../../components/FrostedGlassPromo/lazy",
        "resolvedPath": "src\\app\\components\\FrostedGlassPromo\\lazy.tsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\CpsFeaturesAnalysis\\index.stories.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "#contexts/RequestContext"
      },
      {
        "source": "#contexts/ToggleContext",
        "resolvedPath": "#contexts/ToggleContext"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": "./fixturesRtl.json",
        "resolvedPath": "..\\EXIM\\Work\\iterate-ai\\dep-graph\\fixturesRtl.json"
      },
      {
        "source": "./fixtures.json",
        "resolvedPath": "..\\EXIM\\Work\\iterate-ai\\dep-graph\\fixtures.json"
      },
      {
        "source": "../../../../../.storybook/helpers/ampDecorator",
        "resolvedPath": ".storybook\\helpers\\ampDecorator\\index.jsx"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\containers\\CpsFeaturesAnalysis\\index.jsx"
      },
      {
        "source": "../../../components/ThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\index.tsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\CpsFeaturesAnalysis\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "#contexts/RequestContext"
      },
      {
        "source": "#contexts/ToggleContext",
        "resolvedPath": "#contexts/ToggleContext"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": "#hooks/useViewTracker",
        "resolvedPath": "#hooks/useViewTracker"
      },
      {
        "source": "#hooks/useClickTrackerHandler",
        "resolvedPath": "#hooks/useClickTrackerHandler"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../../../components/react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "./fixtures.json",
        "resolvedPath": "..\\EXIM\\Work\\iterate-ai\\dep-graph\\fixtures.json"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\containers\\CpsFeaturesAnalysis\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\CpsOnwardJourney\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\CpsFeaturesAnalysis\\index.jsx",
      "src\\app\\legacy\\containers\\CpsOnwardJourney\\index.test.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#psammead/psammead-section-label/src",
        "resolvedPath": "#psammead/psammead-section-label/src"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "#psammead/gel-foundations/src/breakpoints"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "#psammead/gel-foundations/src/spacings"
      },
      {
        "source": "#components/Grid",
        "resolvedPath": "#components/Grid"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../../components/SkipLinkWrapper",
        "resolvedPath": "src\\app\\legacy\\components\\SkipLinkWrapper\\index.jsx"
      },
      {
        "source": "../../../components/ThemeProvider/palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      }
    ]
  },
  "src\\app\\legacy\\containers\\CpsOnwardJourney\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../../../components/react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\containers\\CpsOnwardJourney\\index.jsx"
      },
      {
        "source": "../../../components/ThemeProvider/palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "@testing-library/jest-dom",
        "resolvedPath": "@testing-library/jest-dom"
      }
    ]
  },
  "src\\app\\legacy\\containers\\CpsRecommendations\\ErrorBoundary.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../../psammead/psammead-test-helpers/src",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-test-helpers\\src\\index.js"
      },
      {
        "source": "../../../../../data/mundo/recommendations/index.json",
        "resolvedPath": "..\\..\\data\\mundo\\recommendations\\index.json"
      },
      {
        "source": "../../../components/react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "../../../../testHelpers/loggerMock",
        "resolvedPath": "src\\testHelpers\\loggerMock.js"
      },
      {
        "source": "../../../lib/logger.const",
        "resolvedPath": "src\\app\\lib\\logger.const.js"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\containers\\CpsRecommendations\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\CpsRecommendations\\ErrorBoundary.tsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\CpsRecommendations\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#app/models/types/optimo",
        "resolvedPath": "#app/models/types/optimo"
      },
      {
        "source": "../../../lib/logger.node",
        "resolvedPath": "src\\app\\lib\\logger.node.js"
      },
      {
        "source": "../../../lib/logger.const",
        "resolvedPath": "src\\app\\lib\\logger.const.js"
      },
      {
        "source": "../../../contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext\\index.tsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\CpsRecommendations\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\CpsRecommendations\\ErrorBoundary.test.tsx",
      "src\\app\\legacy\\containers\\CpsRecommendations\\index.stories.jsx",
      "src\\app\\legacy\\containers\\CpsRecommendations\\index.test.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "#psammead/gel-foundations/src/breakpoints"
      },
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "ramda/src/path",
        "resolvedPath": "ramda/src/path"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "#psammead/gel-foundations/src/spacings"
      },
      {
        "source": "#psammead/psammead-section-label/src",
        "resolvedPath": "#psammead/psammead-section-label/src"
      },
      {
        "source": "#components/SkipLinkWrapper",
        "resolvedPath": "#components/SkipLinkWrapper"
      },
      {
        "source": "#hooks/useToggle",
        "resolvedPath": "#hooks/useToggle"
      },
      {
        "source": "#components/Grid",
        "resolvedPath": "#components/Grid"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "./RecommendationsPromoList",
        "resolvedPath": "src\\app\\legacy\\containers\\CpsRecommendations\\RecommendationsPromoList\\index.jsx"
      },
      {
        "source": "./RecommendationsPromo",
        "resolvedPath": "src\\app\\legacy\\containers\\CpsRecommendations\\RecommendationsPromo\\index.jsx"
      },
      {
        "source": "./ErrorBoundary",
        "resolvedPath": "src\\app\\legacy\\containers\\CpsRecommendations\\ErrorBoundary.tsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\CpsRecommendations\\index.stories.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "#contexts/RequestContext"
      },
      {
        "source": "#contexts/ToggleContext",
        "resolvedPath": "#contexts/ToggleContext"
      },
      {
        "source": "#server/utilities/serviceConfigs",
        "resolvedPath": "#server/utilities/serviceConfigs"
      },
      {
        "source": "../../../../../data/mundo/recommendations/index.json",
        "resolvedPath": "..\\..\\data\\mundo\\recommendations\\index.json"
      },
      {
        "source": "./fixtures/recommendations.rtl.json",
        "resolvedPath": "..\\EXIM\\Work\\iterate-ai\\dep-graph\\fixtures\\recommendations.rtl.json"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": "./newsFixture",
        "resolvedPath": "src\\app\\legacy\\containers\\CpsRecommendations\\newsFixture.js"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\containers\\CpsRecommendations\\index.jsx"
      },
      {
        "source": "../../../components/ThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\index.tsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\CpsRecommendations\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "#contexts/RequestContext"
      },
      {
        "source": "#contexts/ToggleContext",
        "resolvedPath": "#contexts/ToggleContext"
      },
      {
        "source": "#data/mundo/recommendations/index.json",
        "resolvedPath": "#data/mundo/recommendations/index.json"
      },
      {
        "source": "#data/arabic/recommendations/index.json",
        "resolvedPath": "#data/arabic/recommendations/index.json"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": "#psammead/psammead-test-helpers/src",
        "resolvedPath": "#psammead/psammead-test-helpers/src"
      },
      {
        "source": "../../../components/react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\containers\\CpsRecommendations\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\CpsRecommendations\\newsFixture.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\CpsRecommendations\\index.stories.jsx"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\containers\\CpsRecommendations\\RecommendationsPromo\\fixture.ts": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\CpsRecommendations\\RecommendationsPromo\\index.test.jsx",
      "src\\app\\legacy\\containers\\CpsRecommendations\\RecommendationsPromo\\utility\\index.test.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../../models/types/onwardJourney",
        "resolvedPath": "src\\app\\models\\types\\onwardJourney.ts"
      }
    ]
  },
  "src\\app\\legacy\\containers\\CpsRecommendations\\RecommendationsPromo\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\CpsRecommendations\\index.jsx",
      "src\\app\\legacy\\containers\\CpsRecommendations\\RecommendationsPromo\\index.test.jsx",
      "src\\app\\legacy\\containers\\CpsRecommendations\\RecommendationsPromoList\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "#psammead/gel-foundations/src/spacings"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "#psammead/gel-foundations/src/breakpoints"
      },
      {
        "source": "#psammead/psammead-styles/src/font-styles",
        "resolvedPath": "#psammead/psammead-styles/src/font-styles"
      },
      {
        "source": "#psammead/gel-foundations/src/typography",
        "resolvedPath": "#psammead/gel-foundations/src/typography"
      },
      {
        "source": "../../../../contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext\\index.tsx"
      },
      {
        "source": "../../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../../../components/Grid",
        "resolvedPath": "src\\app\\legacy\\components\\Grid\\index.jsx"
      },
      {
        "source": "../RecommendationsPromoImage",
        "resolvedPath": "src\\app\\legacy\\containers\\CpsRecommendations\\RecommendationsPromoImage\\index.jsx"
      },
      {
        "source": "../../StoryPromo/useCombinedClickTrackerHandler",
        "resolvedPath": "src\\app\\legacy\\containers\\StoryPromo\\useCombinedClickTrackerHandler.js"
      },
      {
        "source": "./utility",
        "resolvedPath": "src\\app\\legacy\\containers\\CpsRecommendations\\RecommendationsPromo\\utility\\index.ts"
      }
    ]
  },
  "src\\app\\legacy\\containers\\CpsRecommendations\\RecommendationsPromo\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#contexts/ToggleContext",
        "resolvedPath": "#contexts/ToggleContext"
      },
      {
        "source": "./fixture",
        "resolvedPath": "src\\app\\legacy\\containers\\CpsRecommendations\\RecommendationsPromo\\fixture.ts"
      },
      {
        "source": "../../../../components/react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "../../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\containers\\CpsRecommendations\\RecommendationsPromo\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\CpsRecommendations\\RecommendationsPromo\\utility\\index.test.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\containers\\CpsRecommendations\\RecommendationsPromo\\utility\\index.ts"
      },
      {
        "source": "../fixture",
        "resolvedPath": "src\\app\\legacy\\containers\\CpsRecommendations\\RecommendationsPromo\\fixture.ts"
      }
    ]
  },
  "src\\app\\legacy\\containers\\CpsRecommendations\\RecommendationsPromo\\utility\\index.ts": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\CpsRecommendations\\RecommendationsPromo\\index.jsx",
      "src\\app\\legacy\\containers\\CpsRecommendations\\RecommendationsPromo\\utility\\index.test.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "ramda/src/path",
        "resolvedPath": "ramda/src/path"
      },
      {
        "source": "ramda/src/hasPath",
        "resolvedPath": "ramda/src/hasPath"
      },
      {
        "source": "../../../../../lib/utilities/imageSrcHelpers/originCode",
        "resolvedPath": "src\\app\\lib\\utilities\\imageSrcHelpers\\originCode.js"
      },
      {
        "source": "../../../../../lib/utilities/imageSrcHelpers/locator",
        "resolvedPath": "src\\app\\lib\\utilities\\imageSrcHelpers\\locator.js"
      },
      {
        "source": "../../../../../models/types/onwardJourney",
        "resolvedPath": "src\\app\\models\\types\\onwardJourney.ts"
      }
    ]
  },
  "src\\app\\legacy\\containers\\CpsRecommendations\\RecommendationsPromoImage\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\CpsRecommendations\\RecommendationsPromo\\index.jsx",
      "src\\app\\legacy\\containers\\CpsRecommendations\\RecommendationsPromoImage\\index.test.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#psammead/psammead-image-placeholder/src",
        "resolvedPath": "#psammead/psammead-image-placeholder/src"
      },
      {
        "source": "#lib/utilities/srcSet",
        "resolvedPath": "#lib/utilities/srcSet"
      },
      {
        "source": "#lib/utilities/ichefURL",
        "resolvedPath": "#lib/utilities/ichefURL"
      },
      {
        "source": "../../ImageWithPlaceholder",
        "resolvedPath": "src\\app\\legacy\\containers\\ImageWithPlaceholder\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\CpsRecommendations\\RecommendationsPromoImage\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../../../../components/react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\containers\\CpsRecommendations\\RecommendationsPromoImage\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\CpsRecommendations\\RecommendationsPromoList\\getEventTrackingData.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\CpsRecommendations\\RecommendationsPromoList\\getEventTrackingData.test.js",
      "src\\app\\legacy\\containers\\CpsRecommendations\\RecommendationsPromoList\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "#lib/utilities/getStoryPromoInfo",
        "resolvedPath": "#lib/utilities/getStoryPromoInfo"
      },
      {
        "source": "#app/lib/utilities/getEnvConfig",
        "resolvedPath": "#app/lib/utilities/getEnvConfig"
      }
    ]
  },
  "src\\app\\legacy\\containers\\CpsRecommendations\\RecommendationsPromoList\\getEventTrackingData.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "./getEventTrackingData",
        "resolvedPath": "src\\app\\legacy\\containers\\CpsRecommendations\\RecommendationsPromoList\\getEventTrackingData.js"
      }
    ]
  },
  "src\\app\\legacy\\containers\\CpsRecommendations\\RecommendationsPromoList\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\CpsRecommendations\\index.jsx",
      "src\\app\\legacy\\containers\\CpsRecommendations\\RecommendationsPromoList\\index.test.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#psammead/psammead-story-promo-list/src",
        "resolvedPath": "#psammead/psammead-story-promo-list/src"
      },
      {
        "source": "#hooks/useViewTracker",
        "resolvedPath": "#hooks/useViewTracker"
      },
      {
        "source": "@optimizely/react-sdk",
        "resolvedPath": "@optimizely/react-sdk"
      },
      {
        "source": "../../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../../../components/Grid",
        "resolvedPath": "src\\app\\legacy\\components\\Grid\\index.jsx"
      },
      {
        "source": "../RecommendationsPromo",
        "resolvedPath": "src\\app\\legacy\\containers\\CpsRecommendations\\RecommendationsPromo\\index.jsx"
      },
      {
        "source": "./getEventTrackingData",
        "resolvedPath": "src\\app\\legacy\\containers\\CpsRecommendations\\RecommendationsPromoList\\getEventTrackingData.js"
      }
    ]
  },
  "src\\app\\legacy\\containers\\CpsRecommendations\\RecommendationsPromoList\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "ramda/src/path",
        "resolvedPath": "ramda/src/path"
      },
      {
        "source": "#data/pidgin/cpsAssets/tori-49450859",
        "resolvedPath": "#data/pidgin/cpsAssets/tori-49450859"
      },
      {
        "source": "#contexts/ToggleContext",
        "resolvedPath": "#contexts/ToggleContext"
      },
      {
        "source": "#hooks/useClickTrackerHandler",
        "resolvedPath": "#hooks/useClickTrackerHandler"
      },
      {
        "source": "#hooks/useViewTracker",
        "resolvedPath": "#hooks/useViewTracker"
      },
      {
        "source": "#psammead/psammead-test-helpers/src",
        "resolvedPath": "#psammead/psammead-test-helpers/src"
      },
      {
        "source": "../../../../components/react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "../../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "./index",
        "resolvedPath": "src\\app\\legacy\\containers\\CpsRecommendations\\RecommendationsPromoList\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\EpisodeList\\DateTimeDuration.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\EpisodeList\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/typography",
        "resolvedPath": "#psammead/gel-foundations/src/typography"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "#psammead/gel-foundations/src/spacings"
      },
      {
        "source": "#psammead/psammead-styles/src/font-styles",
        "resolvedPath": "#psammead/psammead-styles/src/font-styles"
      },
      {
        "source": "./helpers",
        "resolvedPath": "src\\app\\legacy\\containers\\EpisodeList\\helpers.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\EpisodeList\\Description.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\EpisodeList\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/typography",
        "resolvedPath": "#psammead/gel-foundations/src/typography"
      },
      {
        "source": "#psammead/psammead-styles/src/font-styles",
        "resolvedPath": "#psammead/psammead-styles/src/font-styles"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "#psammead/gel-foundations/src/spacings"
      },
      {
        "source": "./helpers",
        "resolvedPath": "src\\app\\legacy\\containers\\EpisodeList\\helpers.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\EpisodeList\\Episode.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\EpisodeList\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "#psammead/gel-foundations/src/spacings"
      },
      {
        "source": "ramda/src/tail",
        "resolvedPath": "ramda/src/tail"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "#psammead/gel-foundations/src/breakpoints"
      },
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "./Image",
        "resolvedPath": "src\\app\\legacy\\containers\\EpisodeList\\Image.jsx"
      },
      {
        "source": "./helpers",
        "resolvedPath": "src\\app\\legacy\\containers\\EpisodeList\\helpers.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\EpisodeList\\helpers.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\EpisodeList\\DateTimeDuration.jsx",
      "src\\app\\legacy\\containers\\EpisodeList\\Description.jsx",
      "src\\app\\legacy\\containers\\EpisodeList\\Episode.jsx",
      "src\\app\\legacy\\containers\\EpisodeList\\Image.jsx",
      "src\\app\\legacy\\containers\\EpisodeList\\index.jsx",
      "src\\app\\legacy\\containers\\EpisodeList\\Link.jsx",
      "src\\app\\legacy\\containers\\EpisodeList\\Title.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      }
    ]
  },
  "src\\app\\legacy\\containers\\EpisodeList\\Image.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\EpisodeList\\Episode.jsx",
      "src\\app\\legacy\\containers\\EpisodeList\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "ramda/src/omit",
        "resolvedPath": "ramda/src/omit"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/psammead-assets/src/svgs",
        "resolvedPath": "#psammead/psammead-assets/src/svgs"
      },
      {
        "source": "#psammead/gel-foundations/src/typography",
        "resolvedPath": "#psammead/gel-foundations/src/typography"
      },
      {
        "source": "#psammead/psammead-styles/src/font-styles",
        "resolvedPath": "#psammead/psammead-styles/src/font-styles"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "#psammead/gel-foundations/src/spacings"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "#psammead/gel-foundations/src/breakpoints"
      },
      {
        "source": "#psammead/psammead-image-placeholder/src",
        "resolvedPath": "#psammead/psammead-image-placeholder/src"
      },
      {
        "source": "./helpers",
        "resolvedPath": "src\\app\\legacy\\containers\\EpisodeList\\helpers.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\EpisodeList\\index.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "#psammead/gel-foundations/src/spacings"
      },
      {
        "source": "./helpers",
        "resolvedPath": "src\\app\\legacy\\containers\\EpisodeList\\helpers.jsx"
      },
      {
        "source": "./Episode",
        "resolvedPath": "src\\app\\legacy\\containers\\EpisodeList\\Episode.jsx"
      },
      {
        "source": "./Link",
        "resolvedPath": "src\\app\\legacy\\containers\\EpisodeList\\Link.jsx"
      },
      {
        "source": "./Title",
        "resolvedPath": "src\\app\\legacy\\containers\\EpisodeList\\Title.jsx"
      },
      {
        "source": "./Description",
        "resolvedPath": "src\\app\\legacy\\containers\\EpisodeList\\Description.jsx"
      },
      {
        "source": "./DateTimeDuration",
        "resolvedPath": "src\\app\\legacy\\containers\\EpisodeList\\DateTimeDuration.jsx"
      },
      {
        "source": "./Image",
        "resolvedPath": "src\\app\\legacy\\containers\\EpisodeList\\Image.jsx"
      },
      {
        "source": "./MediaIndicator",
        "resolvedPath": "src\\app\\legacy\\containers\\EpisodeList\\MediaIndicator.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\EpisodeList\\Link.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\EpisodeList\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "./MediaIndicator",
        "resolvedPath": "src\\app\\legacy\\containers\\EpisodeList\\MediaIndicator.jsx"
      },
      {
        "source": "./helpers",
        "resolvedPath": "src\\app\\legacy\\containers\\EpisodeList\\helpers.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\EpisodeList\\MediaIndicator.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\EpisodeList\\index.jsx",
      "src\\app\\legacy\\containers\\EpisodeList\\Link.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      }
    ]
  },
  "src\\app\\legacy\\containers\\EpisodeList\\RecentAudioEpisodes\\fixtures.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\EpisodeList\\RecentAudioEpisodes\\index.stories.jsx",
      "src\\app\\legacy\\containers\\EpisodeList\\RecentAudioEpisodes\\index.test.jsx"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\containers\\EpisodeList\\RecentAudioEpisodes\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\EpisodeList\\RecentAudioEpisodes\\index.stories.jsx",
      "src\\app\\legacy\\containers\\EpisodeList\\RecentAudioEpisodes\\index.test.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "#psammead/psammead-timestamp-container/src/utilities",
        "resolvedPath": "#psammead/psammead-timestamp-container/src/utilities"
      },
      {
        "source": "#psammead/psammead-timestamp-container/src",
        "resolvedPath": "#psammead/psammead-timestamp-container/src"
      },
      {
        "source": "#psammead/psammead-section-label/src",
        "resolvedPath": "#psammead/psammead-section-label/src"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "#psammead/gel-foundations/src/spacings"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "#psammead/gel-foundations/src/breakpoints"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "#contexts/RequestContext"
      },
      {
        "source": "#containers/EpisodeList",
        "resolvedPath": "#containers/EpisodeList"
      },
      {
        "source": "#hooks/useViewTracker",
        "resolvedPath": "#hooks/useViewTracker"
      },
      {
        "source": "#hooks/useClickTrackerHandler",
        "resolvedPath": "#hooks/useClickTrackerHandler"
      },
      {
        "source": "../../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../../../../components/VisuallyHiddenText",
        "resolvedPath": "src\\app\\components\\VisuallyHiddenText\\index.tsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\EpisodeList\\RecentAudioEpisodes\\index.stories.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "#contexts/RequestContext"
      },
      {
        "source": "#contexts/ToggleContext",
        "resolvedPath": "#contexts/ToggleContext"
      },
      {
        "source": "#contexts/ServiceContext",
        "resolvedPath": "#contexts/ServiceContext"
      },
      {
        "source": "#storybook/withServicesDecorator",
        "resolvedPath": "#storybook/withServicesDecorator"
      },
      {
        "source": "./fixtures",
        "resolvedPath": "src\\app\\legacy\\containers\\EpisodeList\\RecentAudioEpisodes\\fixtures.js"
      },
      {
        "source": "./index",
        "resolvedPath": "src\\app\\legacy\\containers\\EpisodeList\\RecentAudioEpisodes\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\EpisodeList\\RecentAudioEpisodes\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "#contexts/RequestContext"
      },
      {
        "source": "#contexts/ToggleContext",
        "resolvedPath": "#contexts/ToggleContext"
      },
      {
        "source": "#hooks/useClickTrackerHandler",
        "resolvedPath": "#hooks/useClickTrackerHandler"
      },
      {
        "source": "#hooks/useViewTracker",
        "resolvedPath": "#hooks/useViewTracker"
      },
      {
        "source": "../../../../components/react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "../../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "./fixtures",
        "resolvedPath": "src\\app\\legacy\\containers\\EpisodeList\\RecentAudioEpisodes\\fixtures.js"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\containers\\EpisodeList\\RecentAudioEpisodes\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\EpisodeList\\RecentVideoEpisodes\\fixtures.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\EpisodeList\\RecentVideoEpisodes\\index.stories.jsx",
      "src\\app\\legacy\\containers\\EpisodeList\\RecentVideoEpisodes\\index.test.jsx"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\containers\\EpisodeList\\RecentVideoEpisodes\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\EpisodeList\\RecentVideoEpisodes\\index.stories.jsx",
      "src\\app\\legacy\\containers\\EpisodeList\\RecentVideoEpisodes\\index.test.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "#psammead/psammead-timestamp-container/src",
        "resolvedPath": "#psammead/psammead-timestamp-container/src"
      },
      {
        "source": "#psammead/psammead-timestamp-container/src/utilities",
        "resolvedPath": "#psammead/psammead-timestamp-container/src/utilities"
      },
      {
        "source": "#psammead/psammead-section-label/src",
        "resolvedPath": "#psammead/psammead-section-label/src"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "#psammead/gel-foundations/src/spacings"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "#psammead/gel-foundations/src/breakpoints"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "#contexts/RequestContext"
      },
      {
        "source": "#containers/EpisodeList",
        "resolvedPath": "#containers/EpisodeList"
      },
      {
        "source": "../../../../components/VisuallyHiddenText",
        "resolvedPath": "src\\app\\components\\VisuallyHiddenText\\index.tsx"
      },
      {
        "source": "../../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\EpisodeList\\RecentVideoEpisodes\\index.stories.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "#contexts/RequestContext"
      },
      {
        "source": "#contexts/ServiceContext",
        "resolvedPath": "#contexts/ServiceContext"
      },
      {
        "source": "#storybook/withServicesDecorator",
        "resolvedPath": "#storybook/withServicesDecorator"
      },
      {
        "source": "./fixtures",
        "resolvedPath": "src\\app\\legacy\\containers\\EpisodeList\\RecentVideoEpisodes\\fixtures.js"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\containers\\EpisodeList\\RecentVideoEpisodes\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\EpisodeList\\RecentVideoEpisodes\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "#contexts/RequestContext"
      },
      {
        "source": "../../../../components/react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "../../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\containers\\EpisodeList\\RecentVideoEpisodes\\index.jsx"
      },
      {
        "source": "./fixtures",
        "resolvedPath": "src\\app\\legacy\\containers\\EpisodeList\\RecentVideoEpisodes\\fixtures.js"
      }
    ]
  },
  "src\\app\\legacy\\containers\\EpisodeList\\Title.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\EpisodeList\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/typography",
        "resolvedPath": "#psammead/gel-foundations/src/typography"
      },
      {
        "source": "#psammead/psammead-styles/src/font-styles",
        "resolvedPath": "#psammead/psammead-styles/src/font-styles"
      },
      {
        "source": "./helpers",
        "resolvedPath": "src\\app\\legacy\\containers\\EpisodeList\\helpers.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\FauxHeadline\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\FauxHeadline\\index.stories.jsx",
      "src\\app\\legacy\\containers\\FauxHeadline\\index.test.jsx",
      "src\\app\\pages\\MediaArticlePage\\MediaArticlePage.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "ramda/src/path",
        "resolvedPath": "ramda/src/path"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "#psammead/gel-foundations/src/spacings"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "#psammead/gel-foundations/src/breakpoints"
      },
      {
        "source": "#psammead/psammead-headings/src",
        "resolvedPath": "#psammead/psammead-headings/src"
      },
      {
        "source": "#components/Grid",
        "resolvedPath": "#components/Grid"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../Fragment",
        "resolvedPath": "src\\app\\legacy\\containers\\Fragment\\index.jsx"
      },
      {
        "source": "../Blocks",
        "resolvedPath": "src\\app\\legacy\\containers\\Blocks\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\FauxHeadline\\index.stories.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\containers\\FauxHeadline\\index.jsx"
      },
      {
        "source": "../Headings/testHelpers",
        "resolvedPath": "src\\app\\legacy\\containers\\Headings\\testHelpers.js"
      },
      {
        "source": "../../../components/ThemeProvider/fontScripts/latin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\FauxHeadline\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#psammead/psammead-test-helpers/src",
        "resolvedPath": "#psammead/psammead-test-helpers/src"
      },
      {
        "source": "../../../components/react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "../../../models/blocks",
        "resolvedPath": "src\\app\\models\\blocks\\index.js"
      },
      {
        "source": "../../../components/ThemeProvider/fontScripts/latin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\containers\\FauxHeadline\\index.jsx"
      },
      {
        "source": "../Headings/testHelpers",
        "resolvedPath": "src\\app\\legacy\\containers\\Headings\\testHelpers.js"
      }
    ]
  },
  "src\\app\\legacy\\containers\\Footer\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\components\\PageLayoutWrapper\\index.tsx",
      "src\\app\\legacy\\containers\\Footer\\index.stories.tsx",
      "src\\app\\legacy\\containers\\Footer\\index.test.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "#psammead/gel-foundations/src/breakpoints"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "#contexts/RequestContext"
      },
      {
        "source": "#app/components/Footer",
        "resolvedPath": "#app/components/Footer"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../Brand",
        "resolvedPath": "src\\app\\legacy\\containers\\Brand\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\Footer\\index.stories.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\containers\\Footer\\index.jsx"
      },
      {
        "source": "../../../models/types/storybook",
        "resolvedPath": "src\\app\\models\\types\\storybook.ts"
      },
      {
        "source": "../../../contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext\\index.tsx"
      },
      {
        "source": "./metadata.json",
        "resolvedPath": "..\\EXIM\\Work\\iterate-ai\\dep-graph\\metadata.json"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../../../components/ThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\index.tsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\Footer\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../../../components/react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\containers\\Footer\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\Fragment\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\BulletedListItem\\index.jsx",
      "src\\app\\legacy\\containers\\FauxHeadline\\index.jsx",
      "src\\app\\legacy\\containers\\Fragment\\index.test.jsx",
      "src\\app\\legacy\\containers\\Headings\\index.jsx",
      "src\\app\\legacy\\containers\\InlineContainer\\index.jsx",
      "src\\app\\legacy\\containers\\InlineLink\\index.jsx",
      "src\\app\\legacy\\containers\\Paragraph\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#psammead/psammead-styles/src/font-styles",
        "resolvedPath": "#psammead/psammead-styles/src/font-styles"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\Fragment\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@testing-library/react",
        "resolvedPath": "@testing-library/react"
      },
      {
        "source": "#psammead/psammead-test-helpers/src",
        "resolvedPath": "#psammead/psammead-test-helpers/src"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "./index",
        "resolvedPath": "src\\app\\legacy\\containers\\Fragment\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\FrontPageStoryRows\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\FrontPageStoryRows\\index.stories.jsx",
      "src\\app\\legacy\\containers\\FrontPageStoryRows\\index.test.jsx",
      "src\\app\\legacy\\containers\\IndexPageSection\\index.jsx",
      "src\\app\\legacy\\containers\\IndexPageSection\\utilities\\rowDetails.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#psammead/psammead-story-promo-list/src",
        "resolvedPath": "#psammead/psammead-story-promo-list/src"
      },
      {
        "source": "#components/Grid",
        "resolvedPath": "#components/Grid"
      },
      {
        "source": "./storyColumns",
        "resolvedPath": "src\\app\\legacy\\containers\\FrontPageStoryRows\\storyColumns.jsx"
      },
      {
        "source": "../Bulletin",
        "resolvedPath": "src\\app\\legacy\\containers\\Bulletin\\index.jsx"
      },
      {
        "source": "../StoryPromo",
        "resolvedPath": "src\\app\\legacy\\containers\\StoryPromo\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\FrontPageStoryRows\\index.stories.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#components/Grid",
        "resolvedPath": "#components/Grid"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "#contexts/RequestContext"
      },
      {
        "source": "#contexts/ToggleContext",
        "resolvedPath": "#contexts/ToggleContext"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": "./storyColumns",
        "resolvedPath": "src\\app\\legacy\\containers\\FrontPageStoryRows\\storyColumns.jsx"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\containers\\FrontPageStoryRows\\index.jsx"
      },
      {
        "source": "./testHelpers",
        "resolvedPath": "src\\app\\legacy\\containers\\FrontPageStoryRows\\testHelpers.js"
      }
    ]
  },
  "src\\app\\legacy\\containers\\FrontPageStoryRows\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "#contexts/RequestContext"
      },
      {
        "source": "#contexts/ToggleContext",
        "resolvedPath": "#contexts/ToggleContext"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": "#psammead/psammead-test-helpers/src",
        "resolvedPath": "#psammead/psammead-test-helpers/src"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../../../components/ThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\index.tsx"
      },
      {
        "source": "./testHelpers",
        "resolvedPath": "src\\app\\legacy\\containers\\FrontPageStoryRows\\testHelpers.js"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\containers\\FrontPageStoryRows\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\FrontPageStoryRows\\storyColumns.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\FrontPageStoryRows\\index.jsx",
      "src\\app\\legacy\\containers\\FrontPageStoryRows\\index.stories.jsx"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\containers\\FrontPageStoryRows\\testHelpers.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\FrontPageStoryRows\\index.stories.jsx",
      "src\\app\\legacy\\containers\\FrontPageStoryRows\\index.test.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "ramda/src/take",
        "resolvedPath": "ramda/src/take"
      },
      {
        "source": "uuid",
        "resolvedPath": "uuid"
      },
      {
        "source": "#data/serbian/frontpage/lat",
        "resolvedPath": "#data/serbian/frontpage/lat"
      },
      {
        "source": "#data/urdu/frontpage",
        "resolvedPath": "#data/urdu/frontpage"
      }
    ]
  },
  "src\\app\\legacy\\containers\\Gist\\fixtures.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\Gist\\index.stories.jsx",
      "src\\app\\legacy\\containers\\Gist\\index.test.jsx"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\containers\\Gist\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\Gist\\index.stories.jsx",
      "src\\app\\legacy\\containers\\Gist\\index.test.jsx",
      "src\\app\\pages\\MediaArticlePage\\MediaArticlePage.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "#psammead/gel-foundations/src/spacings"
      },
      {
        "source": "#psammead/psammead-styles/src/font-styles",
        "resolvedPath": "#psammead/psammead-styles/src/font-styles"
      },
      {
        "source": "#psammead/gel-foundations/src/typography",
        "resolvedPath": "#psammead/gel-foundations/src/typography"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "#psammead/gel-foundations/src/breakpoints"
      },
      {
        "source": "#containers/Blocks",
        "resolvedPath": "#containers/Blocks"
      },
      {
        "source": "#containers/Text",
        "resolvedPath": "#containers/Text"
      },
      {
        "source": "#components/Grid",
        "resolvedPath": "#components/Grid"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../BulletedList",
        "resolvedPath": "src\\app\\legacy\\containers\\BulletedList\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\Gist\\index.stories.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#contexts/ToggleContext",
        "resolvedPath": "#contexts/ToggleContext"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\containers\\Gist\\index.jsx"
      },
      {
        "source": "./fixtures",
        "resolvedPath": "src\\app\\legacy\\containers\\Gist\\fixtures.js"
      }
    ]
  },
  "src\\app\\legacy\\containers\\Gist\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#contexts/ToggleContext",
        "resolvedPath": "#contexts/ToggleContext"
      },
      {
        "source": "../../../components/react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\containers\\Gist\\index.jsx"
      },
      {
        "source": "./fixtures",
        "resolvedPath": "src\\app\\legacy\\containers\\Gist\\fixtures.js"
      }
    ]
  },
  "src\\app\\legacy\\containers\\Header\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\components\\PageLayoutWrapper\\index.tsx",
      "src\\app\\legacy\\containers\\Header\\index.stories.jsx",
      "src\\app\\legacy\\containers\\Header\\index.test.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#psammead/psammead-brand/src/SkipLink",
        "resolvedPath": "#psammead/psammead-brand/src/SkipLink"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "#contexts/RequestContext"
      },
      {
        "source": "#hooks/useOperaMiniDetection",
        "resolvedPath": "#hooks/useOperaMiniDetection"
      },
      {
        "source": "#app/components/Header/ScriptLink",
        "resolvedPath": "#app/components/Header/ScriptLink"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../ConsentBanner",
        "resolvedPath": "src\\app\\legacy\\containers\\ConsentBanner\\index.jsx"
      },
      {
        "source": "../Navigation",
        "resolvedPath": "src\\app\\legacy\\containers\\Navigation\\index.jsx"
      },
      {
        "source": "../Brand",
        "resolvedPath": "src\\app\\legacy\\containers\\Brand\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\Header\\index.stories.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\containers\\Header\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\Header\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": "@testing-library/user-event",
        "resolvedPath": "@testing-library/user-event"
      },
      {
        "source": "js-cookie",
        "resolvedPath": "js-cookie"
      },
      {
        "source": "../../../components/react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "../../../lib/config/services/pidgin",
        "resolvedPath": "src\\app\\lib\\config\\services\\pidgin.ts"
      },
      {
        "source": "./index",
        "resolvedPath": "src\\app\\legacy\\containers\\Header\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\Headings\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\Headings\\index.stories.jsx",
      "src\\app\\legacy\\containers\\Headings\\index.test.jsx",
      "src\\app\\pages\\MediaArticlePage\\MediaArticlePage.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/psammead-headings/src",
        "resolvedPath": "#psammead/psammead-headings/src"
      },
      {
        "source": "#lib/utilities/idSanitiser",
        "resolvedPath": "#lib/utilities/idSanitiser"
      },
      {
        "source": "#components/Grid",
        "resolvedPath": "#components/Grid"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../Fragment",
        "resolvedPath": "src\\app\\legacy\\containers\\Fragment\\index.jsx"
      },
      {
        "source": "../InlineContainer",
        "resolvedPath": "src\\app\\legacy\\containers\\InlineContainer\\index.jsx"
      },
      {
        "source": "../Blocks",
        "resolvedPath": "src\\app\\legacy\\containers\\Blocks\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\Headings\\index.stories.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\containers\\Headings\\index.jsx"
      },
      {
        "source": "./testHelpers",
        "resolvedPath": "src\\app\\legacy\\containers\\Headings\\testHelpers.js"
      }
    ]
  },
  "src\\app\\legacy\\containers\\Headings\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#models/blocks",
        "resolvedPath": "#models/blocks"
      },
      {
        "source": "#psammead/psammead-test-helpers/src",
        "resolvedPath": "#psammead/psammead-test-helpers/src"
      },
      {
        "source": "../../../components/react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "../../../components/ThemeProvider/fontScripts/latin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\containers\\Headings\\index.jsx"
      },
      {
        "source": "./testHelpers",
        "resolvedPath": "src\\app\\legacy\\containers\\Headings\\testHelpers.js"
      }
    ]
  },
  "src\\app\\legacy\\containers\\Headings\\testHelpers.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\FauxHeadline\\index.stories.jsx",
      "src\\app\\legacy\\containers\\FauxHeadline\\index.test.jsx",
      "src\\app\\legacy\\containers\\Headings\\index.stories.jsx",
      "src\\app\\legacy\\containers\\Headings\\index.test.jsx",
      "src\\app\\legacy\\containers\\VisuallyHiddenHeadline\\index.stories.jsx",
      "src\\app\\legacy\\containers\\VisuallyHiddenHeadline\\index.test.jsx"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\containers\\ImageWithPlaceholder\\fixtureData.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\ImageWithPlaceholder\\index.stories.jsx",
      "src\\app\\legacy\\containers\\ImageWithPlaceholder\\index.test.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "#contexts/RequestContext"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\containers\\ImageWithPlaceholder\\index.jsx"
      },
      {
        "source": "../../../components/ThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\index.tsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\ImageWithPlaceholder\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\Bulletin\\index.jsx",
      "src\\app\\legacy\\containers\\CpsRecommendations\\RecommendationsPromoImage\\index.jsx",
      "src\\app\\legacy\\containers\\ImageWithPlaceholder\\fixtureData.jsx",
      "src\\app\\legacy\\containers\\ImageWithPlaceholder\\index.stories.jsx",
      "src\\app\\legacy\\containers\\OnDemandImage\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "react-lazyload",
        "resolvedPath": "react-lazyload"
      },
      {
        "source": "#psammead/psammead-image-placeholder/src",
        "resolvedPath": "#psammead/psammead-image-placeholder/src"
      },
      {
        "source": "#psammead/psammead-image/src",
        "resolvedPath": "#psammead/psammead-image/src"
      },
      {
        "source": "react-helmet",
        "resolvedPath": "react-helmet"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "#contexts/RequestContext"
      }
    ]
  },
  "src\\app\\legacy\\containers\\ImageWithPlaceholder\\index.stories.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "./fixtureData",
        "resolvedPath": "src\\app\\legacy\\containers\\ImageWithPlaceholder\\fixtureData.jsx"
      },
      {
        "source": "../../../../../.storybook/helpers/ampDecorator",
        "resolvedPath": ".storybook\\helpers\\ampDecorator\\index.jsx"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\containers\\ImageWithPlaceholder\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\ImageWithPlaceholder\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../../../components/ThemeProvider/palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "../../../components/react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "./fixtureData",
        "resolvedPath": "src\\app\\legacy\\containers\\ImageWithPlaceholder\\fixtureData.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\IndexHeading\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\IndexHeading\\index.stories.jsx",
      "src\\app\\legacy\\containers\\IndexHeading\\index.test.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/psammead-heading-index/src",
        "resolvedPath": "#psammead/psammead-heading-index/src"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "#psammead/gel-foundations/src/breakpoints"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "#psammead/gel-foundations/src/spacings"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\IndexHeading\\index.stories.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\containers\\IndexHeading\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\IndexHeading\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../../../components/react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\containers\\IndexHeading\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\IndexPageSection\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\IndexPageSection\\index.stories.jsx",
      "src\\app\\legacy\\containers\\IndexPageSection\\index.test.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#lib/utilities/makeRelativeUrlPath",
        "resolvedPath": "#lib/utilities/makeRelativeUrlPath"
      },
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "#psammead/gel-foundations/src/breakpoints"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "#psammead/gel-foundations/src/spacings"
      },
      {
        "source": "#psammead/psammead-section-label/src",
        "resolvedPath": "#psammead/psammead-section-label/src"
      },
      {
        "source": "#psammead/psammead-story-promo-list/src",
        "resolvedPath": "#psammead/psammead-story-promo-list/src"
      },
      {
        "source": "#components/Grid",
        "resolvedPath": "#components/Grid"
      },
      {
        "source": "#lib/utilities/idSanitiser",
        "resolvedPath": "#lib/utilities/idSanitiser"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "./UsefulLinks",
        "resolvedPath": "src\\app\\legacy\\containers\\IndexPageSection\\UsefulLinks\\index.jsx"
      },
      {
        "source": "./utilities/filterAllowedItems",
        "resolvedPath": "src\\app\\legacy\\containers\\IndexPageSection\\utilities\\filterAllowedItems.jsx"
      },
      {
        "source": "./utilities/storyRowsSplitter",
        "resolvedPath": "src\\app\\legacy\\containers\\IndexPageSection\\utilities\\storyRowsSplitter.jsx"
      },
      {
        "source": "./utilities/rowDetails",
        "resolvedPath": "src\\app\\legacy\\containers\\IndexPageSection\\utilities\\rowDetails.jsx"
      },
      {
        "source": "../FrontPageStoryRows",
        "resolvedPath": "src\\app\\legacy\\containers\\FrontPageStoryRows\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\IndexPageSection\\index.stories.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "#contexts/ToggleContext",
        "resolvedPath": "#contexts/ToggleContext"
      },
      {
        "source": "#data/serbian/frontpage/lat.json",
        "resolvedPath": "#data/serbian/frontpage/lat.json"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "#contexts/RequestContext"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": "../../../../../.storybook/helpers/ampDecorator",
        "resolvedPath": ".storybook\\helpers\\ampDecorator\\index.jsx"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\containers\\IndexPageSection\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\IndexPageSection\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@testing-library/react",
        "resolvedPath": "@testing-library/react"
      },
      {
        "source": "#contexts/ToggleContext",
        "resolvedPath": "#contexts/ToggleContext"
      },
      {
        "source": "#psammead/psammead-section-label/src",
        "resolvedPath": "#psammead/psammead-section-label/src"
      },
      {
        "source": "#psammead/psammead-test-helpers/src",
        "resolvedPath": "#psammead/psammead-test-helpers/src"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../../../components/ThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\index.tsx"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\containers\\IndexPageSection\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\IndexPageSection\\UsefulLinks\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\IndexPageSection\\index.jsx",
      "src\\app\\legacy\\containers\\IndexPageSection\\UsefulLinks\\index.test.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "#psammead/gel-foundations/src/breakpoints"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "#psammead/gel-foundations/src/spacings"
      },
      {
        "source": "#psammead/psammead-useful-links/src",
        "resolvedPath": "#psammead/psammead-useful-links/src"
      }
    ]
  },
  "src\\app\\legacy\\containers\\IndexPageSection\\UsefulLinks\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../../../../components/react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "../../../../components/ThemeProvider/fontScripts/latin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts"
      },
      {
        "source": "./usefulItems",
        "resolvedPath": "src\\app\\legacy\\containers\\IndexPageSection\\UsefulLinks\\usefulItems.js"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\containers\\IndexPageSection\\UsefulLinks\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\IndexPageSection\\UsefulLinks\\usefulItems.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\IndexPageSection\\UsefulLinks\\index.test.jsx"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\containers\\IndexPageSection\\utilities\\filterAllowedItems.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\IndexPageSection\\index.jsx",
      "src\\app\\legacy\\containers\\IndexPageSection\\utilities\\filterAllowedItems.test.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "ramda/src/dropWhile",
        "resolvedPath": "ramda/src/dropWhile"
      },
      {
        "source": "#lib/utilities/getStoryPromoInfo",
        "resolvedPath": "#lib/utilities/getStoryPromoInfo"
      }
    ]
  },
  "src\\app\\legacy\\containers\\IndexPageSection\\utilities\\filterAllowedItems.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "ramda/src/range",
        "resolvedPath": "ramda/src/range"
      },
      {
        "source": "./filterAllowedItems",
        "resolvedPath": "src\\app\\legacy\\containers\\IndexPageSection\\utilities\\filterAllowedItems.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\IndexPageSection\\utilities\\rowDetails.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\IndexPageSection\\index.jsx",
      "src\\app\\legacy\\containers\\IndexPageSection\\utilities\\rowDetails.test.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "ramda/src/flatten",
        "resolvedPath": "ramda/src/flatten"
      },
      {
        "source": "../../FrontPageStoryRows",
        "resolvedPath": "src\\app\\legacy\\containers\\FrontPageStoryRows\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\IndexPageSection\\utilities\\rowDetails.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "#containers/FrontPageStoryRows",
        "resolvedPath": "#containers/FrontPageStoryRows"
      },
      {
        "source": "./rowDetails",
        "resolvedPath": "src\\app\\legacy\\containers\\IndexPageSection\\utilities\\rowDetails.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\IndexPageSection\\utilities\\storyRowsSplitter.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\IndexPageSection\\index.jsx",
      "src\\app\\legacy\\containers\\IndexPageSection\\utilities\\storyRowsSplitter.test.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "ramda/src/splitEvery",
        "resolvedPath": "ramda/src/splitEvery"
      }
    ]
  },
  "src\\app\\legacy\\containers\\IndexPageSection\\utilities\\storyRowsSplitter.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "ramda/src/range",
        "resolvedPath": "ramda/src/range"
      },
      {
        "source": "./storyRowsSplitter",
        "resolvedPath": "src\\app\\legacy\\containers\\IndexPageSection\\utilities\\storyRowsSplitter.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\InlineContainer\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\BulletedListItem\\index.jsx",
      "src\\app\\legacy\\containers\\Headings\\index.jsx",
      "src\\app\\legacy\\containers\\InlineContainer\\index.test.jsx",
      "src\\app\\legacy\\containers\\Paragraph\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../Blocks",
        "resolvedPath": "src\\app\\legacy\\containers\\Blocks\\index.jsx"
      },
      {
        "source": "../Fragment",
        "resolvedPath": "src\\app\\legacy\\containers\\Fragment\\index.jsx"
      },
      {
        "source": "../InlineLink",
        "resolvedPath": "src\\app\\legacy\\containers\\InlineLink\\index.jsx"
      },
      {
        "source": "../../components/InlineSpan",
        "resolvedPath": "src\\app\\legacy\\components\\InlineSpan\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\InlineContainer\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../../../components/react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../../../components/ThemeProvider/fontScripts/latin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\containers\\InlineContainer\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\InlineLink\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\BulletedListItem\\index.jsx",
      "src\\app\\legacy\\containers\\InlineContainer\\index.jsx",
      "src\\app\\legacy\\containers\\InlineLink\\index.stories.jsx",
      "src\\app\\legacy\\containers\\InlineLink\\index.test.jsx",
      "src\\app\\legacy\\containers\\Paragraph\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#psammead/psammead-inline-link/src",
        "resolvedPath": "#psammead/psammead-inline-link/src"
      },
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "#lib/utilities/makeRelativeUrlPath",
        "resolvedPath": "#lib/utilities/makeRelativeUrlPath"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../Blocks",
        "resolvedPath": "src\\app\\legacy\\containers\\Blocks\\index.jsx"
      },
      {
        "source": "../Fragment",
        "resolvedPath": "src\\app\\legacy\\containers\\Fragment\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\InlineLink\\index.stories.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\containers\\InlineLink\\index.jsx"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../../../components/ThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\index.tsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\InlineLink\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "react-router-dom",
        "resolvedPath": "react-router-dom"
      },
      {
        "source": "../../../components/react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "./index",
        "resolvedPath": "src\\app\\legacy\\containers\\InlineLink\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\Manifest\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\components\\PageLayoutWrapper\\index.tsx",
      "src\\app\\legacy\\containers\\Manifest\\index.test.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "react-helmet",
        "resolvedPath": "react-helmet"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\Manifest\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@testing-library/react",
        "resolvedPath": "@testing-library/react"
      },
      {
        "source": "react-helmet",
        "resolvedPath": "react-helmet"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\containers\\Manifest\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\Navigation\\index.amp.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\Navigation\\index.amp.test.jsx",
      "src\\app\\legacy\\containers\\Navigation\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#psammead/psammead-navigation/src",
        "resolvedPath": "#psammead/psammead-navigation/src"
      },
      {
        "source": "#psammead/psammead-navigation/src/ScrollableNavigation",
        "resolvedPath": "#psammead/psammead-navigation/src/ScrollableNavigation"
      },
      {
        "source": "#psammead/psammead-navigation/src/DropdownNavigation",
        "resolvedPath": "#psammead/psammead-navigation/src/DropdownNavigation"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "#psammead/gel-foundations/src/breakpoints"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      }
    ]
  },
  "src\\app\\legacy\\containers\\Navigation\\index.amp.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../../../components/ThemeProvider/fontScripts/latin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts"
      },
      {
        "source": "./index.amp",
        "resolvedPath": "src\\app\\legacy\\containers\\Navigation\\index.amp.jsx"
      },
      {
        "source": "./testHelpers",
        "resolvedPath": "src\\app\\legacy\\containers\\Navigation\\testHelpers.jsx"
      },
      {
        "source": "../../../components/react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\Navigation\\index.canonical.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\Navigation\\index.canonical.test.jsx",
      "src\\app\\legacy\\containers\\Navigation\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/psammead-navigation/src",
        "resolvedPath": "#psammead/psammead-navigation/src"
      },
      {
        "source": "#psammead/psammead-navigation/src/ScrollableNavigation",
        "resolvedPath": "#psammead/psammead-navigation/src/ScrollableNavigation"
      },
      {
        "source": "#psammead/psammead-navigation/src/DropdownNavigation",
        "resolvedPath": "#psammead/psammead-navigation/src/DropdownNavigation"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "#psammead/gel-foundations/src/breakpoints"
      },
      {
        "source": "#hooks/useMediaQuery",
        "resolvedPath": "#hooks/useMediaQuery"
      },
      {
        "source": "#app/contexts/RequestContext",
        "resolvedPath": "#app/contexts/RequestContext"
      }
    ]
  },
  "src\\app\\legacy\\containers\\Navigation\\index.canonical.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../../../components/ThemeProvider/fontScripts/latin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts"
      },
      {
        "source": "./index.canonical",
        "resolvedPath": "src\\app\\legacy\\containers\\Navigation\\index.canonical.jsx"
      },
      {
        "source": "./testHelpers",
        "resolvedPath": "src\\app\\legacy\\containers\\Navigation\\testHelpers.jsx"
      },
      {
        "source": "../../../components/react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\Navigation\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\Header\\index.jsx",
      "src\\app\\legacy\\containers\\Navigation\\index.stories.jsx",
      "src\\app\\legacy\\containers\\Navigation\\index.test.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#psammead/psammead-navigation/src",
        "resolvedPath": "#psammead/psammead-navigation/src"
      },
      {
        "source": "#psammead/psammead-navigation/src/DropdownNavigation",
        "resolvedPath": "#psammead/psammead-navigation/src/DropdownNavigation"
      },
      {
        "source": "#app/hooks/useClickTrackerHandler",
        "resolvedPath": "#app/hooks/useClickTrackerHandler"
      },
      {
        "source": "#app/hooks/useViewTracker",
        "resolvedPath": "#app/hooks/useViewTracker"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "#contexts/RequestContext"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "./index.canonical",
        "resolvedPath": "src\\app\\legacy\\containers\\Navigation\\index.canonical.jsx"
      },
      {
        "source": "./index.amp",
        "resolvedPath": "src\\app\\legacy\\containers\\Navigation\\index.amp.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\Navigation\\index.stories.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "#contexts/RequestContext"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": "../../../../../.storybook/helpers/ampDecorator",
        "resolvedPath": ".storybook\\helpers\\ampDecorator\\index.jsx"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\containers\\Navigation\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\Navigation\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@testing-library/dom",
        "resolvedPath": "@testing-library/dom"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "#contexts/RequestContext"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": "../../../components/react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../../../lib/config/services/news",
        "resolvedPath": "src\\app\\lib\\config\\services\\news.ts"
      },
      {
        "source": "./index",
        "resolvedPath": "src\\app\\legacy\\containers\\Navigation\\index.jsx"
      },
      {
        "source": "../../../hooks/useViewTracker",
        "resolvedPath": "src\\app\\hooks\\useViewTracker\\index.jsx"
      },
      {
        "source": "../../../hooks/useClickTrackerHandler",
        "resolvedPath": "src\\app\\hooks\\useClickTrackerHandler\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\Navigation\\testHelpers.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\Navigation\\index.amp.test.jsx",
      "src\\app\\legacy\\containers\\Navigation\\index.canonical.test.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      }
    ]
  },
  "src\\app\\legacy\\containers\\NielsenAnalytics\\Amp\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\NielsenAnalytics\\Amp\\index.test.jsx",
      "src\\app\\legacy\\containers\\NielsenAnalytics\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      }
    ]
  },
  "src\\app\\legacy\\containers\\NielsenAnalytics\\Amp\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@testing-library/react",
        "resolvedPath": "@testing-library/react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\containers\\NielsenAnalytics\\Amp\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\NielsenAnalytics\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\NielsenAnalytics\\index.test.jsx",
      "src\\app\\pages\\MediaArticlePage\\MediaArticlePage.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "#contexts/RequestContext"
      },
      {
        "source": "#hooks/useToggle",
        "resolvedPath": "#hooks/useToggle"
      },
      {
        "source": "./Amp",
        "resolvedPath": "src\\app\\legacy\\containers\\NielsenAnalytics\\Amp\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\NielsenAnalytics\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@testing-library/react",
        "resolvedPath": "@testing-library/react"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "#contexts/RequestContext"
      },
      {
        "source": "#contexts/ToggleContext",
        "resolvedPath": "#contexts/ToggleContext"
      },
      {
        "source": "#contexts/UserContext",
        "resolvedPath": "#contexts/UserContext"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\containers\\NielsenAnalytics\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\OnDemandFooterTimestamp\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\OnDemandFooterTimestamp\\index.test.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/typography",
        "resolvedPath": "#psammead/gel-foundations/src/typography"
      },
      {
        "source": "#psammead/psammead-styles/src/font-styles",
        "resolvedPath": "#psammead/psammead-styles/src/font-styles"
      },
      {
        "source": "#psammead/psammead-timestamp-container/src/utilities",
        "resolvedPath": "#psammead/psammead-timestamp-container/src/utilities"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "#psammead/gel-foundations/src/breakpoints"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\OnDemandFooterTimestamp\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#psammead/psammead-timestamp-container/src/utilities",
        "resolvedPath": "#psammead/psammead-timestamp-container/src/utilities"
      },
      {
        "source": "../../../components/react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\containers\\OnDemandFooterTimestamp\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\OnDemandHeading\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\OnDemandHeading\\index.test.jsx",
      "src\\app\\legacy\\containers\\OnDemandHeading\\StyledRadioHeadingContainer.jsx",
      "src\\app\\legacy\\containers\\OnDemandHeading\\StyledTvHeadingContainer.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/psammead-headings/src",
        "resolvedPath": "#psammead/psammead-headings/src"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "#psammead/gel-foundations/src/breakpoints"
      },
      {
        "source": "#psammead/psammead-timestamp-container/src/utilities",
        "resolvedPath": "#psammead/psammead-timestamp-container/src/utilities"
      },
      {
        "source": "#psammead/gel-foundations/src/typography",
        "resolvedPath": "#psammead/gel-foundations/src/typography"
      },
      {
        "source": "#psammead/psammead-styles/src/font-styles",
        "resolvedPath": "#psammead/psammead-styles/src/font-styles"
      },
      {
        "source": "../../../components/VisuallyHiddenText",
        "resolvedPath": "src\\app\\components\\VisuallyHiddenText\\index.tsx"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\OnDemandHeading\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#psammead/psammead-timestamp-container/src/utilities",
        "resolvedPath": "#psammead/psammead-timestamp-container/src/utilities"
      },
      {
        "source": "../../../components/react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\containers\\OnDemandHeading\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\OnDemandHeading\\StyledRadioHeadingContainer.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "#psammead/gel-foundations/src/spacings"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "#psammead/gel-foundations/src/breakpoints"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\containers\\OnDemandHeading\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\OnDemandHeading\\StyledTvHeadingContainer.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "#psammead/gel-foundations/src/spacings"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "#psammead/gel-foundations/src/breakpoints"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\containers\\OnDemandHeading\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\OnDemandImage\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\OnDemandImage\\index.test.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "ramda/src/is",
        "resolvedPath": "ramda/src/is"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "#psammead/gel-foundations/src/spacings"
      },
      {
        "source": "#lib/utilities/srcSet",
        "resolvedPath": "#lib/utilities/srcSet"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../ImageWithPlaceholder",
        "resolvedPath": "src\\app\\legacy\\containers\\ImageWithPlaceholder\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\OnDemandImage\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "#contexts/RequestContext"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": "../../../components/react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\containers\\OnDemandImage\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\OnDemandParagraph\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\OnDemandParagraph\\index.test.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "#psammead/gel-foundations/src/spacings"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "#psammead/gel-foundations/src/breakpoints"
      },
      {
        "source": "#psammead/psammead-paragraph/src",
        "resolvedPath": "#psammead/psammead-paragraph/src"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\OnDemandParagraph\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#psammead/psammead-test-helpers/src",
        "resolvedPath": "#psammead/psammead-test-helpers/src"
      },
      {
        "source": "../../../components/react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\containers\\OnDemandParagraph\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\OptimizelyArticleCompleteTracking\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\OptimizelyArticleCompleteTracking\\index.test.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@optimizely/react-sdk",
        "resolvedPath": "@optimizely/react-sdk"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "#contexts/RequestContext"
      },
      {
        "source": "#hooks/useOptimizelyVariation",
        "resolvedPath": "#hooks/useOptimizelyVariation"
      },
      {
        "source": "#lib/config/optimizely",
        "resolvedPath": "#lib/config/optimizely"
      }
    ]
  },
  "src\\app\\legacy\\containers\\OptimizelyArticleCompleteTracking\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@testing-library/react",
        "resolvedPath": "@testing-library/react"
      },
      {
        "source": "@optimizely/react-sdk",
        "resolvedPath": "@optimizely/react-sdk"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "#contexts/RequestContext"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": "#hooks/useOptimizelyVariation",
        "resolvedPath": "#hooks/useOptimizelyVariation"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\containers\\OptimizelyArticleCompleteTracking\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\OptimizelyPageViewTracking\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\OptimizelyPageViewTracking\\index.test.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@optimizely/react-sdk",
        "resolvedPath": "@optimizely/react-sdk"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "#contexts/RequestContext"
      },
      {
        "source": "#hooks/useOptimizelyScrollDepth",
        "resolvedPath": "#hooks/useOptimizelyScrollDepth"
      },
      {
        "source": "#hooks/useOptimizelyVariation",
        "resolvedPath": "#hooks/useOptimizelyVariation"
      },
      {
        "source": "#lib/config/optimizely",
        "resolvedPath": "#lib/config/optimizely"
      }
    ]
  },
  "src\\app\\legacy\\containers\\OptimizelyPageViewTracking\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@testing-library/react",
        "resolvedPath": "@testing-library/react"
      },
      {
        "source": "@optimizely/react-sdk",
        "resolvedPath": "@optimizely/react-sdk"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "#contexts/RequestContext"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": "#hooks/useOptimizelyVariation",
        "resolvedPath": "#hooks/useOptimizelyVariation"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\containers\\OptimizelyPageViewTracking\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\PageHandlers\\withContexts.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\PageHandlers\\withContexts.test.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../../../components/ThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\index.tsx"
      },
      {
        "source": "../../../contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext\\index.tsx"
      },
      {
        "source": "../../../contexts/ToggleContext",
        "resolvedPath": "src\\app\\contexts\\ToggleContext\\index.tsx"
      },
      {
        "source": "../../../contexts/UserContext",
        "resolvedPath": "src\\app\\contexts\\UserContext\\index.tsx"
      },
      {
        "source": "../../../contexts/EventTrackingContext",
        "resolvedPath": "src\\app\\contexts\\EventTrackingContext\\index.tsx"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\PageHandlers\\withContexts.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@testing-library/react",
        "resolvedPath": "@testing-library/react"
      },
      {
        "source": "#testHelpers/mockComponents",
        "resolvedPath": "#testHelpers/mockComponents"
      },
      {
        "source": "#contexts/RequestContext/getOriginContext",
        "resolvedPath": "#contexts/RequestContext/getOriginContext"
      },
      {
        "source": "#contexts/RequestContext/getStatsDestination",
        "resolvedPath": "#contexts/RequestContext/getStatsDestination"
      },
      {
        "source": "#contexts/RequestContext/getStatsPageIdentifier",
        "resolvedPath": "#contexts/RequestContext/getStatsPageIdentifier"
      },
      {
        "source": "#contexts/ToggleContext",
        "resolvedPath": "#contexts/ToggleContext"
      },
      {
        "source": "#contexts/UserContext",
        "resolvedPath": "#contexts/UserContext"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../../../contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext\\index.tsx"
      },
      {
        "source": "../../../contexts/EventTrackingContext",
        "resolvedPath": "src\\app\\contexts\\EventTrackingContext\\index.tsx"
      },
      {
        "source": "./withContexts",
        "resolvedPath": "src\\app\\legacy\\containers\\PageHandlers\\withContexts.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\PageHandlers\\withData\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\PageHandlers\\withData\\index.test.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#pages/ErrorPage/ErrorPage",
        "resolvedPath": "#pages/ErrorPage/ErrorPage"
      },
      {
        "source": "../../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../../../../contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext\\index.tsx"
      },
      {
        "source": "./shouldRender",
        "resolvedPath": "src\\app\\legacy\\containers\\PageHandlers\\withData\\shouldRender\\index.js"
      }
    ]
  },
  "src\\app\\legacy\\containers\\PageHandlers\\withData\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#pages/ArticlePage/fixtureData",
        "resolvedPath": "#pages/ArticlePage/fixtureData"
      },
      {
        "source": "#data/serbian/frontpage/lat.json",
        "resolvedPath": "#data/serbian/frontpage/lat.json"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\containers\\PageHandlers\\withData\\index.jsx"
      },
      {
        "source": "../../../../components/react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\PageHandlers\\withData\\shouldRender\\index.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\PageHandlers\\withData\\index.jsx",
      "src\\app\\legacy\\containers\\PageHandlers\\withData\\shouldRender\\index.test.js"
    ],
    "outgoingDependencies": [
      {
        "source": "#lib/utilities/passport",
        "resolvedPath": "#lib/utilities/passport"
      },
      {
        "source": "#lib/statusCodes.const",
        "resolvedPath": "#lib/statusCodes.const"
      },
      {
        "source": "../../../../../routes/utils/pageTypes",
        "resolvedPath": "src\\app\\routes\\utils\\pageTypes.ts"
      }
    ]
  },
  "src\\app\\legacy\\containers\\PageHandlers\\withData\\shouldRender\\index.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\containers\\PageHandlers\\withData\\shouldRender\\index.js"
      }
    ]
  },
  "src\\app\\legacy\\containers\\PageHandlers\\withError\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\PageHandlers\\withError\\index.test.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#pages/ErrorPage/ErrorPage",
        "resolvedPath": "#pages/ErrorPage/ErrorPage"
      }
    ]
  },
  "src\\app\\legacy\\containers\\PageHandlers\\withError\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#psammead/psammead-test-helpers/src",
        "resolvedPath": "#psammead/psammead-test-helpers/src"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\containers\\PageHandlers\\withError\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\PageHandlers\\withHashChangeHandler\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\PageHandlers\\withHashChangeHandler\\index.test.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "ramda/src/path",
        "resolvedPath": "ramda/src/path"
      },
      {
        "source": "ramda/src/pipe",
        "resolvedPath": "ramda/src/pipe"
      },
      {
        "source": "./isHashChangeOnSamePath",
        "resolvedPath": "src\\app\\legacy\\containers\\PageHandlers\\withHashChangeHandler\\isHashChangeOnSamePath.js"
      }
    ]
  },
  "src\\app\\legacy\\containers\\PageHandlers\\withHashChangeHandler\\index.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "./isHashChangeOnSamePath",
        "resolvedPath": "src\\app\\legacy\\containers\\PageHandlers\\withHashChangeHandler\\isHashChangeOnSamePath.js"
      }
    ]
  },
  "src\\app\\legacy\\containers\\PageHandlers\\withHashChangeHandler\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@testing-library/react",
        "resolvedPath": "@testing-library/react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\containers\\PageHandlers\\withHashChangeHandler\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\PageHandlers\\withHashChangeHandler\\isHashChangeOnSamePath.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\PageHandlers\\withHashChangeHandler\\index.jsx",
      "src\\app\\legacy\\containers\\PageHandlers\\withHashChangeHandler\\index.test.js"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\containers\\PageHandlers\\withOptimizelyProvider\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\PageHandlers\\withOptimizelyProvider\\index.test.jsx",
      "src\\app\\pages\\MediaArticlePage\\index.stories.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@optimizely/react-sdk",
        "resolvedPath": "@optimizely/react-sdk"
      },
      {
        "source": "#lib/utilities/isLive",
        "resolvedPath": "#lib/utilities/isLive"
      },
      {
        "source": "#lib/utilities/onClient",
        "resolvedPath": "#lib/utilities/onClient"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "#psammead/gel-foundations/src/breakpoints"
      },
      {
        "source": "#app/lib/utilities/getEnvConfig",
        "resolvedPath": "#app/lib/utilities/getEnvConfig"
      },
      {
        "source": "js-cookie",
        "resolvedPath": "js-cookie"
      },
      {
        "source": "#app/lib/utilities/isOperaProxy",
        "resolvedPath": "#app/lib/utilities/isOperaProxy"
      },
      {
        "source": "../../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\PageHandlers\\withOptimizelyProvider\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@optimizely/react-sdk",
        "resolvedPath": "@optimizely/react-sdk"
      },
      {
        "source": "@testing-library/react",
        "resolvedPath": "@testing-library/react"
      },
      {
        "source": "js-cookie",
        "resolvedPath": "js-cookie"
      },
      {
        "source": "../../../../components/ThemeProvider/fontScripts/latin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts"
      },
      {
        "source": "../../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\containers\\PageHandlers\\withOptimizelyProvider\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\PageHandlers\\withPageWrapper\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\PageHandlers\\withPageWrapper\\index.test.jsx",
      "src\\app\\pages\\MediaArticlePage\\index.stories.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../../../../components/PageLayoutWrapper",
        "resolvedPath": "src\\app\\components\\PageLayoutWrapper\\index.tsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\PageHandlers\\withPageWrapper\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "#contexts/RequestContext"
      },
      {
        "source": "#contexts/UserContext",
        "resolvedPath": "#contexts/UserContext"
      },
      {
        "source": "#contexts/ToggleContext",
        "resolvedPath": "#contexts/ToggleContext"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": "#psammead/psammead-test-helpers/src",
        "resolvedPath": "#psammead/psammead-test-helpers/src"
      },
      {
        "source": "../../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\containers\\PageHandlers\\withPageWrapper\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\Paragraph\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\Paragraph\\index.test.jsx",
      "src\\app\\legacy\\containers\\Text\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#psammead/psammead-paragraph/src",
        "resolvedPath": "#psammead/psammead-paragraph/src"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "#psammead/gel-foundations/src/breakpoints"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "#psammead/gel-foundations/src/spacings"
      },
      {
        "source": "#components/Grid",
        "resolvedPath": "#components/Grid"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../Blocks",
        "resolvedPath": "src\\app\\legacy\\containers\\Blocks\\index.jsx"
      },
      {
        "source": "../Fragment",
        "resolvedPath": "src\\app\\legacy\\containers\\Fragment\\index.jsx"
      },
      {
        "source": "../InlineLink",
        "resolvedPath": "src\\app\\legacy\\containers\\InlineLink\\index.jsx"
      },
      {
        "source": "../InlineContainer",
        "resolvedPath": "src\\app\\legacy\\containers\\InlineContainer\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\Paragraph\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "uuid",
        "resolvedPath": "uuid"
      },
      {
        "source": "../../../components/react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../../../components/ThemeProvider/fontScripts/latin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\containers\\Paragraph\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\PodcastExternalLinks\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\PodcastExternalLinks\\index.stories.jsx",
      "src\\app\\legacy\\containers\\PodcastExternalLinks\\index.test.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/psammead-styles/src/font-styles",
        "resolvedPath": "#psammead/psammead-styles/src/font-styles"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "#psammead/gel-foundations/src/breakpoints"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "#psammead/gel-foundations/src/spacings"
      },
      {
        "source": "#psammead/gel-foundations/src/typography",
        "resolvedPath": "#psammead/gel-foundations/src/typography"
      },
      {
        "source": "#hooks/useViewTracker",
        "resolvedPath": "#hooks/useViewTracker"
      },
      {
        "source": "#hooks/useClickTrackerHandler",
        "resolvedPath": "#hooks/useClickTrackerHandler"
      },
      {
        "source": "#app/lib/utilities/idSanitiser",
        "resolvedPath": "#app/lib/utilities/idSanitiser"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "./Link",
        "resolvedPath": "src\\app\\legacy\\containers\\PodcastExternalLinks\\Link.jsx"
      },
      {
        "source": "../../../components/VisuallyHiddenText",
        "resolvedPath": "src\\app\\components\\VisuallyHiddenText\\index.tsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\PodcastExternalLinks\\index.stories.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#contexts/ToggleContext",
        "resolvedPath": "#contexts/ToggleContext"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\containers\\PodcastExternalLinks\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\PodcastExternalLinks\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#hooks/useViewTracker",
        "resolvedPath": "#hooks/useViewTracker"
      },
      {
        "source": "#hooks/useClickTrackerHandler",
        "resolvedPath": "#hooks/useClickTrackerHandler"
      },
      {
        "source": "#app/contexts/ToggleContext",
        "resolvedPath": "#app/contexts/ToggleContext"
      },
      {
        "source": "../../../components/react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\containers\\PodcastExternalLinks\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\PodcastExternalLinks\\Link.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\PodcastExternalLinks\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/psammead-styles/src/font-styles",
        "resolvedPath": "#psammead/psammead-styles/src/font-styles"
      },
      {
        "source": "#psammead/gel-foundations/src/typography",
        "resolvedPath": "#psammead/gel-foundations/src/typography"
      }
    ]
  },
  "src\\app\\legacy\\containers\\PodcastPromo\\components\\card-content.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\PodcastPromo\\components\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "#psammead/gel-foundations/src/spacings"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "#psammead/gel-foundations/src/breakpoints"
      }
    ]
  },
  "src\\app\\legacy\\containers\\PodcastPromo\\components\\card-description.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\PodcastPromo\\components\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/typography",
        "resolvedPath": "#psammead/gel-foundations/src/typography"
      },
      {
        "source": "#psammead/psammead-styles/src/font-styles",
        "resolvedPath": "#psammead/psammead-styles/src/font-styles"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "#psammead/gel-foundations/src/spacings"
      }
    ]
  },
  "src\\app\\legacy\\containers\\PodcastPromo\\components\\card-episodes-text.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\PodcastPromo\\components\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/psammead-assets/src/svgs",
        "resolvedPath": "#psammead/psammead-assets/src/svgs"
      },
      {
        "source": "#psammead/gel-foundations/src/typography",
        "resolvedPath": "#psammead/gel-foundations/src/typography"
      },
      {
        "source": "#psammead/psammead-styles/src/font-styles",
        "resolvedPath": "#psammead/psammead-styles/src/font-styles"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "#psammead/gel-foundations/src/spacings"
      }
    ]
  },
  "src\\app\\legacy\\containers\\PodcastPromo\\components\\card-image-wrapper.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\PodcastPromo\\components\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "#psammead/gel-foundations/src/spacings"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "#psammead/gel-foundations/src/breakpoints"
      }
    ]
  },
  "src\\app\\legacy\\containers\\PodcastPromo\\components\\card-link.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\PodcastPromo\\components\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      }
    ]
  },
  "src\\app\\legacy\\containers\\PodcastPromo\\components\\card-title.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\PodcastPromo\\components\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "#psammead/gel-foundations/src/spacings"
      },
      {
        "source": "#psammead/gel-foundations/src/typography",
        "resolvedPath": "#psammead/gel-foundations/src/typography"
      },
      {
        "source": "#psammead/psammead-styles/src/font-styles",
        "resolvedPath": "#psammead/psammead-styles/src/font-styles"
      }
    ]
  },
  "src\\app\\legacy\\containers\\PodcastPromo\\components\\card.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\PodcastPromo\\components\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "#psammead/gel-foundations/src/breakpoints"
      }
    ]
  },
  "src\\app\\legacy\\containers\\PodcastPromo\\components\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\PodcastPromo\\components\\index.test.jsx",
      "src\\app\\legacy\\containers\\PodcastPromo\\Inline.jsx",
      "src\\app\\legacy\\containers\\PodcastPromo\\SecondaryColumn.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "#psammead/gel-foundations/src/spacings"
      },
      {
        "source": "./title",
        "resolvedPath": "src\\app\\legacy\\containers\\PodcastPromo\\components\\title.jsx"
      },
      {
        "source": "./card",
        "resolvedPath": "src\\app\\legacy\\containers\\PodcastPromo\\components\\card.jsx"
      },
      {
        "source": "./card-content",
        "resolvedPath": "src\\app\\legacy\\containers\\PodcastPromo\\components\\card-content.jsx"
      },
      {
        "source": "./card-link",
        "resolvedPath": "src\\app\\legacy\\containers\\PodcastPromo\\components\\card-link.jsx"
      },
      {
        "source": "./card-image-wrapper",
        "resolvedPath": "src\\app\\legacy\\containers\\PodcastPromo\\components\\card-image-wrapper.jsx"
      },
      {
        "source": "./card-title",
        "resolvedPath": "src\\app\\legacy\\containers\\PodcastPromo\\components\\card-title.jsx"
      },
      {
        "source": "./card-description",
        "resolvedPath": "src\\app\\legacy\\containers\\PodcastPromo\\components\\card-description.jsx"
      },
      {
        "source": "./card-episodes-text",
        "resolvedPath": "src\\app\\legacy\\containers\\PodcastPromo\\components\\card-episodes-text.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\PodcastPromo\\components\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../../../../components/react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "../../../../components/ThemeProvider/fontScripts/latin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\containers\\PodcastPromo\\components\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\PodcastPromo\\components\\title.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\PodcastPromo\\components\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/psammead-assets/src/svgs",
        "resolvedPath": "#psammead/psammead-assets/src/svgs"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "#psammead/gel-foundations/src/spacings"
      },
      {
        "source": "#psammead/gel-foundations/src/typography",
        "resolvedPath": "#psammead/gel-foundations/src/typography"
      },
      {
        "source": "#psammead/psammead-styles/src/font-styles",
        "resolvedPath": "#psammead/psammead-styles/src/font-styles"
      }
    ]
  },
  "src\\app\\legacy\\containers\\PodcastPromo\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\PodcastPromo\\index.test.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "./SecondaryColumn",
        "resolvedPath": "src\\app\\legacy\\containers\\PodcastPromo\\SecondaryColumn.jsx"
      },
      {
        "source": "./Inline",
        "resolvedPath": "src\\app\\legacy\\containers\\PodcastPromo\\Inline.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\PodcastPromo\\index.stories.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#contexts/ToggleContext",
        "resolvedPath": "#contexts/ToggleContext"
      },
      {
        "source": "../../../components/ThemeProvider/fontScripts/latin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "./Inline",
        "resolvedPath": "src\\app\\legacy\\containers\\PodcastPromo\\Inline.jsx"
      },
      {
        "source": "./SecondaryColumn",
        "resolvedPath": "src\\app\\legacy\\containers\\PodcastPromo\\SecondaryColumn.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\PodcastPromo\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "ramda/src/dissocPath",
        "resolvedPath": "ramda/src/dissocPath"
      },
      {
        "source": "ramda/src/identity",
        "resolvedPath": "ramda/src/identity"
      },
      {
        "source": "#contexts/ToggleContext",
        "resolvedPath": "#contexts/ToggleContext"
      },
      {
        "source": "#hooks/useViewTracker",
        "resolvedPath": "#hooks/useViewTracker"
      },
      {
        "source": "#hooks/useClickTrackerHandler",
        "resolvedPath": "#hooks/useClickTrackerHandler"
      },
      {
        "source": "../../../components/react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "../../../lib/config/services/russian",
        "resolvedPath": "src\\app\\lib\\config\\services\\russian.ts"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\containers\\PodcastPromo\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\PodcastPromo\\Inline.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\PodcastPromo\\index.jsx",
      "src\\app\\legacy\\containers\\PodcastPromo\\index.stories.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "#psammead/gel-foundations/src/spacings"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "#psammead/gel-foundations/src/breakpoints"
      },
      {
        "source": "#psammead/gel-foundations/src/typography",
        "resolvedPath": "#psammead/gel-foundations/src/typography"
      },
      {
        "source": "#psammead/psammead-styles/src/font-styles",
        "resolvedPath": "#psammead/psammead-styles/src/font-styles"
      },
      {
        "source": "#hooks/useViewTracker",
        "resolvedPath": "#hooks/useViewTracker"
      },
      {
        "source": "#hooks/useClickTrackerHandler",
        "resolvedPath": "#hooks/useClickTrackerHandler"
      },
      {
        "source": "#containers/ImageWithPlaceholder",
        "resolvedPath": "#containers/ImageWithPlaceholder"
      },
      {
        "source": "#components/SkipLinkWrapper",
        "resolvedPath": "#components/SkipLinkWrapper"
      },
      {
        "source": "#psammead/psammead-assets/src/svgs",
        "resolvedPath": "#psammead/psammead-assets/src/svgs"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": "#app/contexts/RequestContext",
        "resolvedPath": "#app/contexts/RequestContext"
      },
      {
        "source": "#app/components/ThemeProvider/mediaQueries",
        "resolvedPath": "#app/components/ThemeProvider/mediaQueries"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "./components",
        "resolvedPath": "src\\app\\legacy\\containers\\PodcastPromo\\components\\index.jsx"
      },
      {
        "source": "./shared",
        "resolvedPath": "src\\app\\legacy\\containers\\PodcastPromo\\shared.js"
      }
    ]
  },
  "src\\app\\legacy\\containers\\PodcastPromo\\SecondaryColumn.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\PodcastPromo\\index.jsx",
      "src\\app\\legacy\\containers\\PodcastPromo\\index.stories.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "#psammead/gel-foundations/src/spacings"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "#psammead/gel-foundations/src/breakpoints"
      },
      {
        "source": "#hooks/useViewTracker",
        "resolvedPath": "#hooks/useViewTracker"
      },
      {
        "source": "#hooks/useClickTrackerHandler",
        "resolvedPath": "#hooks/useClickTrackerHandler"
      },
      {
        "source": "#containers/ImageWithPlaceholder",
        "resolvedPath": "#containers/ImageWithPlaceholder"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "./components",
        "resolvedPath": "src\\app\\legacy\\containers\\PodcastPromo\\components\\index.jsx"
      },
      {
        "source": "./shared",
        "resolvedPath": "src\\app\\legacy\\containers\\PodcastPromo\\shared.js"
      }
    ]
  },
  "src\\app\\legacy\\containers\\PodcastPromo\\shared.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\PodcastPromo\\Inline.jsx",
      "src\\app\\legacy\\containers\\PodcastPromo\\SecondaryColumn.jsx",
      "src\\app\\legacy\\containers\\PodcastPromo\\shared.test.js"
    ],
    "outgoingDependencies": [
      {
        "source": "ramda/src/path",
        "resolvedPath": "ramda/src/path"
      },
      {
        "source": "#lib/utilities/makeRelativeUrlPath",
        "resolvedPath": "#lib/utilities/makeRelativeUrlPath"
      },
      {
        "source": "#lib/utilities/srcSet",
        "resolvedPath": "#lib/utilities/srcSet"
      }
    ]
  },
  "src\\app\\legacy\\containers\\PodcastPromo\\shared.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "./shared",
        "resolvedPath": "src\\app\\legacy\\containers\\PodcastPromo\\shared.js"
      }
    ]
  },
  "src\\app\\legacy\\containers\\RadioSchedule\\Canonical\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\RadioSchedule\\Canonical\\index.test.jsx",
      "src\\app\\legacy\\containers\\RadioSchedule\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "isomorphic-fetch",
        "resolvedPath": "isomorphic-fetch"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "moment",
        "resolvedPath": "moment"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "#psammead/gel-foundations/src/breakpoints"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "#psammead/gel-foundations/src/spacings"
      },
      {
        "source": "#psammead/gel-foundations/src/typography",
        "resolvedPath": "#psammead/gel-foundations/src/typography"
      },
      {
        "source": "#psammead/psammead-styles/src/font-styles",
        "resolvedPath": "#psammead/psammead-styles/src/font-styles"
      },
      {
        "source": "#psammead/psammead-section-label/src",
        "resolvedPath": "#psammead/psammead-section-label/src"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "#contexts/RequestContext"
      },
      {
        "source": "#components/RadioSchedule",
        "resolvedPath": "#components/RadioSchedule"
      },
      {
        "source": "#lib/logger.web",
        "resolvedPath": "#lib/logger.web"
      },
      {
        "source": "#lib/logger.const",
        "resolvedPath": "#lib/logger.const"
      },
      {
        "source": "../../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../utilities/processRadioSchedule",
        "resolvedPath": "src\\app\\legacy\\containers\\RadioSchedule\\utilities\\processRadioSchedule.js"
      }
    ]
  },
  "src\\app\\legacy\\containers\\RadioSchedule\\Canonical\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#data/arabic/bbc_arabic_radio/schedule.json",
        "resolvedPath": "#data/arabic/bbc_arabic_radio/schedule.json"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "#contexts/RequestContext"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": "../../../../components/react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "../../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\containers\\RadioSchedule\\Canonical\\index.jsx"
      },
      {
        "source": "../utilities/processRadioSchedule",
        "resolvedPath": "src\\app\\legacy\\containers\\RadioSchedule\\utilities\\processRadioSchedule.js"
      }
    ]
  },
  "src\\app\\legacy\\containers\\RadioSchedule\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\RadioSchedule\\index.stories.jsx",
      "src\\app\\legacy\\containers\\RadioSchedule\\utilities\\testHelpers.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "#contexts/RequestContext"
      },
      {
        "source": "#hooks/useLocation",
        "resolvedPath": "#hooks/useLocation"
      },
      {
        "source": "#hooks/useToggle",
        "resolvedPath": "#hooks/useToggle"
      },
      {
        "source": "#lib/utilities/getUrlHelpers/getRadioSchedulesUrls",
        "resolvedPath": "#lib/utilities/getUrlHelpers/getRadioSchedulesUrls"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "./Canonical",
        "resolvedPath": "src\\app\\legacy\\containers\\RadioSchedule\\Canonical\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\RadioSchedule\\index.stories.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "react-router-dom",
        "resolvedPath": "react-router-dom"
      },
      {
        "source": "moment",
        "resolvedPath": "moment"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "#contexts/RequestContext"
      },
      {
        "source": "#contexts/ToggleContext",
        "resolvedPath": "#contexts/ToggleContext"
      },
      {
        "source": "#lib/utilities/getUrlHelpers/getRadioSchedulesUrls",
        "resolvedPath": "#lib/utilities/getUrlHelpers/getRadioSchedulesUrls"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\containers\\RadioSchedule\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\RadioSchedule\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#data/arabic/bbc_arabic_radio/schedule.json",
        "resolvedPath": "#data/arabic/bbc_arabic_radio/schedule.json"
      },
      {
        "source": "../../../components/react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "./utilities/testHelpers",
        "resolvedPath": "src\\app\\legacy\\containers\\RadioSchedule\\utilities\\testHelpers.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\RadioSchedule\\utilities\\evaluateScheduleData.js": {
    "incomingDependencies": [
      "cypress\\e2e\\pages\\onDemandAudio\\tests.js",
      "src\\app\\legacy\\containers\\RadioSchedule\\utilities\\evaluateScheduleData.test.js",
      "src\\app\\legacy\\containers\\RadioSchedule\\utilities\\processRadioSchedule.js"
    ],
    "outgoingDependencies": [
      {
        "source": "ramda/src/findLastIndex",
        "resolvedPath": "ramda/src/findLastIndex"
      },
      {
        "source": "ramda/src/propSatisfies",
        "resolvedPath": "ramda/src/propSatisfies"
      },
      {
        "source": "ramda/src/path",
        "resolvedPath": "ramda/src/path"
      }
    ]
  },
  "src\\app\\legacy\\containers\\RadioSchedule\\utilities\\evaluateScheduleData.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "#data/persian/bbc_persian_radio/schedule.json",
        "resolvedPath": "#data/persian/bbc_persian_radio/schedule.json"
      },
      {
        "source": "./evaluateScheduleData",
        "resolvedPath": "src\\app\\legacy\\containers\\RadioSchedule\\utilities\\evaluateScheduleData.js"
      }
    ]
  },
  "src\\app\\legacy\\containers\\RadioSchedule\\utilities\\processRadioSchedule.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\RadioSchedule\\Canonical\\index.jsx",
      "src\\app\\legacy\\containers\\RadioSchedule\\Canonical\\index.test.jsx",
      "src\\app\\legacy\\containers\\RadioSchedule\\utilities\\processRadioSchedule.test.js"
    ],
    "outgoingDependencies": [
      {
        "source": "ramda/src/path",
        "resolvedPath": "ramda/src/path"
      },
      {
        "source": "#lib/logger.node",
        "resolvedPath": "#lib/logger.node"
      },
      {
        "source": "#lib/logger.const",
        "resolvedPath": "#lib/logger.const"
      },
      {
        "source": "./evaluateScheduleData",
        "resolvedPath": "src\\app\\legacy\\containers\\RadioSchedule\\utilities\\evaluateScheduleData.js"
      }
    ]
  },
  "src\\app\\legacy\\containers\\RadioSchedule\\utilities\\processRadioSchedule.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "#data/persian/bbc_persian_radio/schedule.json",
        "resolvedPath": "#data/persian/bbc_persian_radio/schedule.json"
      },
      {
        "source": "./processRadioSchedule",
        "resolvedPath": "src\\app\\legacy\\containers\\RadioSchedule\\utilities\\processRadioSchedule.js"
      }
    ]
  },
  "src\\app\\legacy\\containers\\RadioSchedule\\utilities\\testHelpers.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\RadioSchedule\\index.test.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "react-router-dom",
        "resolvedPath": "react-router-dom"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "#contexts/RequestContext"
      },
      {
        "source": "#contexts/ToggleContext",
        "resolvedPath": "#contexts/ToggleContext"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": "../../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "..",
        "resolvedPath": "src\\app\\legacy\\containers\\RadioSchedule\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\RelatedTopics\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\RelatedTopics\\index.stories.jsx",
      "src\\app\\pages\\MediaArticlePage\\MediaArticlePage.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#psammead/psammead-topic-tags/src",
        "resolvedPath": "#psammead/psammead-topic-tags/src"
      },
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "#psammead/psammead-section-label/src",
        "resolvedPath": "#psammead/psammead-section-label/src"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "#psammead/gel-foundations/src/spacings"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "#psammead/gel-foundations/src/breakpoints"
      },
      {
        "source": "#app/contexts/RequestContext",
        "resolvedPath": "#app/contexts/RequestContext"
      },
      {
        "source": "#hooks/useClickTrackerHandler",
        "resolvedPath": "#hooks/useClickTrackerHandler"
      },
      {
        "source": "#hooks/useViewTracker",
        "resolvedPath": "#hooks/useViewTracker"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\RelatedTopics\\index.stories.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "#contexts/RequestContext"
      },
      {
        "source": "#contexts/ToggleContext",
        "resolvedPath": "#contexts/ToggleContext"
      },
      {
        "source": "#contexts/EventTrackingContext",
        "resolvedPath": "#contexts/EventTrackingContext"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\containers\\RelatedTopics\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\RelatedTopics\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "#contexts/RequestContext"
      },
      {
        "source": "#contexts/ToggleContext",
        "resolvedPath": "#contexts/ToggleContext"
      },
      {
        "source": "#contexts/EventTrackingContext",
        "resolvedPath": "#contexts/EventTrackingContext"
      },
      {
        "source": "#containers/RelatedTopics",
        "resolvedPath": "#containers/RelatedTopics"
      },
      {
        "source": "#hooks/useClickTrackerHandler",
        "resolvedPath": "#hooks/useClickTrackerHandler"
      },
      {
        "source": "#hooks/useViewTracker",
        "resolvedPath": "#hooks/useViewTracker"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": "../../../components/react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\SocialEmbed\\common\\fixtures.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\SocialEmbed\\index.stories.jsx",
      "src\\app\\legacy\\containers\\SocialEmbed\\index.test.jsx"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\containers\\SocialEmbed\\common\\styles.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\SocialEmbed\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "#psammead/gel-foundations/src/spacings"
      }
    ]
  },
  "src\\app\\legacy\\containers\\SocialEmbed\\common\\testHelper.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\SocialEmbed\\index.stories.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "#contexts/RequestContext"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": "../../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../../../../contexts/ToggleContext",
        "resolvedPath": "src\\app\\contexts\\ToggleContext\\index.tsx"
      },
      {
        "source": "../../../../components/ThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\index.tsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\SocialEmbed\\common\\translations.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\SocialEmbed\\common\\translations.test.js",
      "src\\app\\legacy\\containers\\SocialEmbed\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      }
    ]
  },
  "src\\app\\legacy\\containers\\SocialEmbed\\common\\translations.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "./translations",
        "resolvedPath": "src\\app\\legacy\\containers\\SocialEmbed\\common\\translations.js"
      }
    ]
  },
  "src\\app\\legacy\\containers\\SocialEmbed\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\SocialEmbed\\index.stories.jsx",
      "src\\app\\legacy\\containers\\SocialEmbed\\index.test.jsx",
      "src\\app\\pages\\MediaArticlePage\\MediaArticlePage.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#psammead/psammead-social-embed/src",
        "resolvedPath": "#psammead/psammead-social-embed/src"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "#contexts/RequestContext"
      },
      {
        "source": "#components/Grid",
        "resolvedPath": "#components/Grid"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "./common/translations",
        "resolvedPath": "src\\app\\legacy\\containers\\SocialEmbed\\common\\translations.js"
      },
      {
        "source": "./common/styles",
        "resolvedPath": "src\\app\\legacy\\containers\\SocialEmbed\\common\\styles.js"
      },
      {
        "source": "./sourceHelpers",
        "resolvedPath": "src\\app\\legacy\\containers\\SocialEmbed\\sourceHelpers.js"
      }
    ]
  },
  "src\\app\\legacy\\containers\\SocialEmbed\\index.stories.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": "../../../components/ThemeProvider/palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "../../../../../.storybook/helpers/ampDecorator",
        "resolvedPath": ".storybook\\helpers\\ampDecorator\\index.jsx"
      },
      {
        "source": "./common/fixtures",
        "resolvedPath": "src\\app\\legacy\\containers\\SocialEmbed\\common\\fixtures.js"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\containers\\SocialEmbed\\index.jsx"
      },
      {
        "source": "./common/testHelper",
        "resolvedPath": "src\\app\\legacy\\containers\\SocialEmbed\\common\\testHelper.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\SocialEmbed\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#testHelpers/loggerMock",
        "resolvedPath": "#testHelpers/loggerMock"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\containers\\SocialEmbed\\index.jsx"
      },
      {
        "source": "../../../components/react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "./common/fixtures",
        "resolvedPath": "src\\app\\legacy\\containers\\SocialEmbed\\common\\fixtures.js"
      }
    ]
  },
  "src\\app\\legacy\\containers\\SocialEmbed\\sourceHelpers.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\SocialEmbed\\index.jsx",
      "src\\app\\legacy\\containers\\SocialEmbed\\sourceHelpers.test.js"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\containers\\SocialEmbed\\sourceHelpers.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "./sourceHelpers",
        "resolvedPath": "src\\app\\legacy\\containers\\SocialEmbed\\sourceHelpers.js"
      }
    ]
  },
  "src\\app\\legacy\\containers\\StoryPromo\\helpers\\fixtureData.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\StoryPromo\\index.stories.jsx",
      "src\\app\\legacy\\containers\\StoryPromo\\index.test.jsx",
      "src\\app\\legacy\\containers\\StoryPromo\\utilities\\index.test.js"
    ],
    "outgoingDependencies": [
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": "../IndexAlsos/relatedItems",
        "resolvedPath": "src\\app\\legacy\\containers\\StoryPromo\\IndexAlsos\\relatedItems.js"
      }
    ]
  },
  "src\\app\\legacy\\containers\\StoryPromo\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\FrontPageStoryRows\\index.jsx",
      "src\\app\\legacy\\containers\\StoryPromo\\index.stories.jsx",
      "src\\app\\legacy\\containers\\StoryPromo\\index.test.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/psammead-story-promo/src",
        "resolvedPath": "#psammead/psammead-story-promo/src"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "#psammead/gel-foundations/src/breakpoints"
      },
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "#app/components/LiveLabel",
        "resolvedPath": "#app/components/LiveLabel"
      },
      {
        "source": "#psammead/psammead-image-placeholder/src",
        "resolvedPath": "#psammead/psammead-image-placeholder/src"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "#contexts/RequestContext"
      },
      {
        "source": "#lib/utilities/srcSet",
        "resolvedPath": "#lib/utilities/srcSet"
      },
      {
        "source": "#lib/utilities/ichefURL",
        "resolvedPath": "#lib/utilities/ichefURL"
      },
      {
        "source": "#lib/utilities/imageSrcHelpers/originCode",
        "resolvedPath": "#lib/utilities/imageSrcHelpers/originCode"
      },
      {
        "source": "#lib/utilities/imageSrcHelpers/locator",
        "resolvedPath": "#lib/utilities/imageSrcHelpers/locator"
      },
      {
        "source": "#lib/utilities/getStoryPromoInfo",
        "resolvedPath": "#lib/utilities/getStoryPromoInfo"
      },
      {
        "source": "#lib/logger.node",
        "resolvedPath": "#lib/logger.node"
      },
      {
        "source": "#lib/logger.const",
        "resolvedPath": "#lib/logger.const"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": "#components/Promo/timestamp",
        "resolvedPath": "#components/Promo/timestamp"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "./LinkContents",
        "resolvedPath": "src\\app\\legacy\\containers\\StoryPromo\\LinkContents\\index.jsx"
      },
      {
        "source": "./MediaIndicator",
        "resolvedPath": "src\\app\\legacy\\containers\\StoryPromo\\MediaIndicator\\index.jsx"
      },
      {
        "source": "./IndexAlsos",
        "resolvedPath": "src\\app\\legacy\\containers\\StoryPromo\\IndexAlsos\\index.jsx"
      },
      {
        "source": "./utilities",
        "resolvedPath": "src\\app\\legacy\\containers\\StoryPromo\\utilities\\index.js"
      },
      {
        "source": "../../../components/Image",
        "resolvedPath": "src\\app\\components\\Image\\index.tsx"
      },
      {
        "source": "./useCombinedClickTrackerHandler",
        "resolvedPath": "src\\app\\legacy\\containers\\StoryPromo\\useCombinedClickTrackerHandler.js"
      }
    ]
  },
  "src\\app\\legacy\\containers\\StoryPromo\\index.stories.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "#contexts/RequestContext"
      },
      {
        "source": "#contexts/ToggleContext",
        "resolvedPath": "#contexts/ToggleContext"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "./helpers/storiesFixture",
        "resolvedPath": "..\\EXIM\\Work\\iterate-ai\\dep-graph\\helpers\\storiesFixture"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\containers\\StoryPromo\\index.jsx"
      },
      {
        "source": "../../../../../.storybook/helpers/ampDecorator",
        "resolvedPath": ".storybook\\helpers\\ampDecorator\\index.jsx"
      },
      {
        "source": "./helpers/fixtureData",
        "resolvedPath": "src\\app\\legacy\\containers\\StoryPromo\\helpers\\fixtureData.js"
      }
    ]
  },
  "src\\app\\legacy\\containers\\StoryPromo\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@testing-library/react",
        "resolvedPath": "@testing-library/react"
      },
      {
        "source": "ramda/src/clone",
        "resolvedPath": "ramda/src/clone"
      },
      {
        "source": "#testHelpers/loggerMock",
        "resolvedPath": "#testHelpers/loggerMock"
      },
      {
        "source": "#lib/logger.const",
        "resolvedPath": "#lib/logger.const"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "#contexts/RequestContext"
      },
      {
        "source": "#contexts/ToggleContext",
        "resolvedPath": "#contexts/ToggleContext"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": "#psammead/psammead-test-helpers/src",
        "resolvedPath": "#psammead/psammead-test-helpers/src"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../../../components/ThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\index.tsx"
      },
      {
        "source": "./helpers/fixtureData",
        "resolvedPath": "src\\app\\legacy\\containers\\StoryPromo\\helpers\\fixtureData.js"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\containers\\StoryPromo\\index.jsx"
      },
      {
        "source": "./utilities",
        "resolvedPath": "src\\app\\legacy\\containers\\StoryPromo\\utilities\\index.js"
      }
    ]
  },
  "src\\app\\legacy\\containers\\StoryPromo\\IndexAlsos\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\StoryPromo\\index.jsx",
      "src\\app\\legacy\\containers\\StoryPromo\\IndexAlsos\\index.test.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "#psammead/psammead-media-indicator/src",
        "resolvedPath": "#psammead/psammead-media-indicator/src"
      },
      {
        "source": "#psammead/psammead-story-promo/src/IndexAlsos",
        "resolvedPath": "#psammead/psammead-story-promo/src/IndexAlsos"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": "../../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\StoryPromo\\IndexAlsos\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "ramda/src/compose",
        "resolvedPath": "ramda/src/compose"
      },
      {
        "source": "#psammead/psammead-test-helpers/src",
        "resolvedPath": "#psammead/psammead-test-helpers/src"
      },
      {
        "source": "../../../../components/react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "./relatedItems",
        "resolvedPath": "src\\app\\legacy\\containers\\StoryPromo\\IndexAlsos\\relatedItems.js"
      },
      {
        "source": "../../../../components/ThemeProvider/fontScripts/latin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts"
      },
      {
        "source": "../../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\containers\\StoryPromo\\IndexAlsos\\index.jsx"
      },
      {
        "source": "../../../../components/ThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\index.tsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\StoryPromo\\IndexAlsos\\relatedItems.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\StoryPromo\\helpers\\fixtureData.js",
      "src\\app\\legacy\\containers\\StoryPromo\\IndexAlsos\\index.test.jsx"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\containers\\StoryPromo\\LinkContents\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\StoryPromo\\index.jsx",
      "src\\app\\legacy\\containers\\StoryPromo\\LinkContents\\index.test.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "moment-timezone",
        "resolvedPath": "moment-timezone"
      },
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "#lib/utilities/formatDuration",
        "resolvedPath": "#lib/utilities/formatDuration"
      },
      {
        "source": "#lib/utilities/getStoryPromoInfo",
        "resolvedPath": "#lib/utilities/getStoryPromoInfo"
      },
      {
        "source": "../../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../utilities",
        "resolvedPath": "src\\app\\legacy\\containers\\StoryPromo\\utilities\\index.js"
      },
      {
        "source": "../../../../components/VisuallyHiddenText",
        "resolvedPath": "src\\app\\components\\VisuallyHiddenText\\index.tsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\StoryPromo\\LinkContents\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "ramda/src/compose",
        "resolvedPath": "ramda/src/compose"
      },
      {
        "source": "@testing-library/react",
        "resolvedPath": "@testing-library/react"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": "#psammead/psammead-test-helpers/src",
        "resolvedPath": "#psammead/psammead-test-helpers/src"
      },
      {
        "source": "../../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\containers\\StoryPromo\\LinkContents\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\StoryPromo\\MediaIndicator\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\StoryPromo\\index.jsx",
      "src\\app\\legacy\\containers\\StoryPromo\\MediaIndicator\\index.test.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "moment-timezone",
        "resolvedPath": "moment-timezone"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/psammead-media-indicator/src",
        "resolvedPath": "#psammead/psammead-media-indicator/src"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "#psammead/gel-foundations/src/spacings"
      },
      {
        "source": "ramda/src/path",
        "resolvedPath": "ramda/src/path"
      },
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "#lib/utilities/formatDuration",
        "resolvedPath": "#lib/utilities/formatDuration"
      },
      {
        "source": "../utilities",
        "resolvedPath": "src\\app\\legacy\\containers\\StoryPromo\\utilities\\index.js"
      }
    ]
  },
  "src\\app\\legacy\\containers\\StoryPromo\\MediaIndicator\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": "#psammead/psammead-test-helpers/src",
        "resolvedPath": "#psammead/psammead-test-helpers/src"
      },
      {
        "source": "../../../../components/react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "../../../../components/ThemeProvider/fontScripts/latin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts"
      },
      {
        "source": "../../../../components/ThemeProvider/fontScripts/arabic",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\arabic.ts"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\containers\\StoryPromo\\MediaIndicator\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\StoryPromo\\useCombinedClickTrackerHandler.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\CpsRecommendations\\RecommendationsPromo\\index.jsx",
      "src\\app\\legacy\\containers\\StoryPromo\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "ramda/src/path",
        "resolvedPath": "ramda/src/path"
      },
      {
        "source": "#hooks/useClickTrackerHandler",
        "resolvedPath": "#hooks/useClickTrackerHandler"
      }
    ]
  },
  "src\\app\\legacy\\containers\\StoryPromo\\utilities\\index.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\StoryPromo\\index.jsx",
      "src\\app\\legacy\\containers\\StoryPromo\\index.test.jsx",
      "src\\app\\legacy\\containers\\StoryPromo\\LinkContents\\index.jsx",
      "src\\app\\legacy\\containers\\StoryPromo\\MediaIndicator\\index.jsx",
      "src\\app\\legacy\\containers\\StoryPromo\\utilities\\index.test.js"
    ],
    "outgoingDependencies": [
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      }
    ]
  },
  "src\\app\\legacy\\containers\\StoryPromo\\utilities\\index.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\containers\\StoryPromo\\utilities\\index.js"
      },
      {
        "source": "../helpers/fixtureData",
        "resolvedPath": "src\\app\\legacy\\containers\\StoryPromo\\helpers\\fixtureData.js"
      }
    ]
  },
  "src\\app\\legacy\\containers\\Text\\fixtures.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\Text\\index.test.jsx"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\containers\\Text\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\Text\\index.test.jsx",
      "src\\app\\pages\\MediaArticlePage\\MediaArticlePage.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../Paragraph",
        "resolvedPath": "src\\app\\legacy\\containers\\Paragraph\\index.jsx"
      },
      {
        "source": "../BulletedList",
        "resolvedPath": "src\\app\\legacy\\containers\\BulletedList\\index.jsx"
      },
      {
        "source": "../Blocks",
        "resolvedPath": "src\\app\\legacy\\containers\\Blocks\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\Text\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#contexts/ToggleContext",
        "resolvedPath": "#contexts/ToggleContext"
      },
      {
        "source": "#psammead/psammead-test-helpers/src",
        "resolvedPath": "#psammead/psammead-test-helpers/src"
      },
      {
        "source": "../../../components/react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "./index",
        "resolvedPath": "src\\app\\legacy\\containers\\Text\\index.jsx"
      },
      {
        "source": "./fixtures",
        "resolvedPath": "src\\app\\legacy\\containers\\Text\\fixtures.js"
      }
    ]
  },
  "src\\app\\legacy\\containers\\VisuallyHiddenHeadline\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\VisuallyHiddenHeadline\\index.stories.jsx",
      "src\\app\\legacy\\containers\\VisuallyHiddenHeadline\\index.test.jsx",
      "src\\app\\pages\\MediaArticlePage\\MediaArticlePage.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "ramda/src/path",
        "resolvedPath": "ramda/src/path"
      },
      {
        "source": "../../../components/VisuallyHiddenText",
        "resolvedPath": "src\\app\\components\\VisuallyHiddenText\\index.tsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\VisuallyHiddenHeadline\\index.stories.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\containers\\VisuallyHiddenHeadline\\index.jsx"
      },
      {
        "source": "../Headings/testHelpers",
        "resolvedPath": "src\\app\\legacy\\containers\\Headings\\testHelpers.js"
      }
    ]
  },
  "src\\app\\legacy\\containers\\VisuallyHiddenHeadline\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@testing-library/react",
        "resolvedPath": "@testing-library/react"
      },
      {
        "source": "#models/blocks",
        "resolvedPath": "#models/blocks"
      },
      {
        "source": "#psammead/psammead-test-helpers/src",
        "resolvedPath": "#psammead/psammead-test-helpers/src"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\containers\\VisuallyHiddenHeadline\\index.jsx"
      },
      {
        "source": "../Headings/testHelpers",
        "resolvedPath": "src\\app\\legacy\\containers\\Headings\\testHelpers.js"
      }
    ]
  },
  "src\\app\\legacy\\containers\\WebVitals\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\components\\PageLayoutWrapper\\index.tsx",
      "src\\app\\legacy\\containers\\WebVitals\\index.test.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@bbc/web-vitals",
        "resolvedPath": "@bbc/web-vitals"
      },
      {
        "source": "#hooks/useToggle",
        "resolvedPath": "#hooks/useToggle"
      },
      {
        "source": "#contexts/UserContext",
        "resolvedPath": "#contexts/UserContext"
      },
      {
        "source": "#app/lib/utilities/getEnvConfig",
        "resolvedPath": "#app/lib/utilities/getEnvConfig"
      }
    ]
  },
  "src\\app\\legacy\\containers\\WebVitals\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@testing-library/react",
        "resolvedPath": "@testing-library/react"
      },
      {
        "source": "@bbc/web-vitals",
        "resolvedPath": "@bbc/web-vitals"
      },
      {
        "source": "#contexts/ToggleContext",
        "resolvedPath": "#contexts/ToggleContext"
      },
      {
        "source": "#contexts/UserContext",
        "resolvedPath": "#contexts/UserContext"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\containers\\WebVitals\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\gel-foundations\\src\\breakpoints.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\gel-foundations\\src\\getTypeSizes.js",
      "src\\app\\legacy\\psammead\\gel-foundations\\src\\typography.js"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\gel-foundations\\src\\getTypeSizes.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\gel-foundations\\src\\typography.js",
      "src\\app\\legacy\\psammead\\gel-foundations\\tests\\getTypeSizes.test.js"
    ],
    "outgoingDependencies": [
      {
        "source": "./breakpoints",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\breakpoints.js"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\gel-foundations\\src\\spacings.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\gel-foundations\\src\\typography.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "./breakpoints",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\breakpoints.js"
      },
      {
        "source": "./getTypeSizes",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\getTypeSizes.js"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\gel-foundations\\tests\\getTypeSizes.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../src/getTypeSizes",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\getTypeSizes.js"
      },
      {
        "source": "../../../../components/ThemeProvider/fontScripts/arabic",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\arabic.ts"
      },
      {
        "source": "../../../../components/ThemeProvider/fontScripts/bengali",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\bengali.ts"
      },
      {
        "source": "../../../../components/ThemeProvider/fontScripts/burmese",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\burmese.ts"
      },
      {
        "source": "../../../../components/ThemeProvider/fontScripts/cyrillic",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\cyrillic.ts"
      },
      {
        "source": "../../../../components/ThemeProvider/fontScripts/devanagari",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\devanagari.ts"
      },
      {
        "source": "../../../../components/ThemeProvider/fontScripts/gurmukhi",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\gurmukhi.ts"
      },
      {
        "source": "../../../../components/ThemeProvider/fontScripts/latin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts"
      },
      {
        "source": "../../../../components/ThemeProvider/fontScripts/latinWithDiacritics",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latinWithDiacritics.ts"
      },
      {
        "source": "../../../../components/ThemeProvider/fontScripts/noAscOrDesc",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\noAscOrDesc.ts"
      },
      {
        "source": "../../../../components/ThemeProvider/fontScripts/sinhalese",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\sinhalese.ts"
      },
      {
        "source": "../../../../components/ThemeProvider/fontScripts/tamil",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\tamil.ts"
      },
      {
        "source": "../../../../components/ThemeProvider/fontScripts/thai",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\thai.ts"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\moment-timezone-include\\src\\index.js": {
    "incomingDependencies": [
      "cypress.config.ts",
      "src\\app\\legacy\\psammead\\moment-timezone-include\\src\\index.test.js"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\moment-timezone-include\\src\\index.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "webpack",
        "resolvedPath": "webpack"
      },
      {
        "source": "./writeNewTimezoneData",
        "resolvedPath": "src\\app\\legacy\\psammead\\moment-timezone-include\\src\\writeNewTimezoneData\\index.js"
      },
      {
        "source": "./replaceOriginalTimezoneData",
        "resolvedPath": "src\\app\\legacy\\psammead\\moment-timezone-include\\src\\replaceOriginalTimezoneData\\index.js"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\psammead\\moment-timezone-include\\src\\index.js"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\moment-timezone-include\\src\\postInstall\\index.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\moment-timezone-include\\src\\postInstall\\index.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../writeNewTimezoneData",
        "resolvedPath": "src\\app\\legacy\\psammead\\moment-timezone-include\\src\\writeNewTimezoneData\\index.js"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\moment-timezone-include\\src\\replaceOriginalTimezoneData\\index.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\moment-timezone-include\\src\\index.test.js",
      "src\\app\\legacy\\psammead\\moment-timezone-include\\src\\replaceOriginalTimezoneData\\index.test.js"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\moment-timezone-include\\src\\replaceOriginalTimezoneData\\index.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../writeToNestedFile",
        "resolvedPath": "src\\app\\legacy\\psammead\\moment-timezone-include\\src\\writeToNestedFile\\index.js"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\psammead\\moment-timezone-include\\src\\replaceOriginalTimezoneData\\index.js"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\moment-timezone-include\\src\\writeNewTimezoneData\\index.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\moment-timezone-include\\src\\index.test.js",
      "src\\app\\legacy\\psammead\\moment-timezone-include\\src\\postInstall\\index.test.js",
      "src\\app\\legacy\\psammead\\moment-timezone-include\\src\\writeNewTimezoneData\\index.test.js"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\moment-timezone-include\\src\\writeNewTimezoneData\\index.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../writeToNestedFile",
        "resolvedPath": "src\\app\\legacy\\psammead\\moment-timezone-include\\src\\writeToNestedFile\\index.js"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\psammead\\moment-timezone-include\\src\\writeNewTimezoneData\\index.js"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\moment-timezone-include\\src\\writeToNestedFile\\index.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\moment-timezone-include\\src\\replaceOriginalTimezoneData\\index.test.js",
      "src\\app\\legacy\\psammead\\moment-timezone-include\\src\\writeNewTimezoneData\\index.test.js",
      "src\\app\\legacy\\psammead\\moment-timezone-include\\src\\writeToNestedFile\\index.test.js"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\moment-timezone-include\\src\\writeToNestedFile\\index.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "fs",
        "resolvedPath": "fs"
      },
      {
        "source": "path",
        "resolvedPath": "path"
      },
      {
        "source": "mkdirp",
        "resolvedPath": "mkdirp"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\psammead\\moment-timezone-include\\src\\writeToNestedFile\\index.js"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\amp-boilerplate.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\psammead-assets\\src\\amp-boilerplate.test.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\amp-boilerplate.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "#psammead/psammead-test-helpers/src",
        "resolvedPath": "#psammead/psammead-test-helpers/src"
      },
      {
        "source": "./amp-boilerplate",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-assets\\src\\amp-boilerplate.jsx"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\afaanoromoo.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\afrique.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\amharic.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\arabic.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\archive.jsx": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\archive.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\azeri.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\bbcBlocks.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\bbcBlocksDarkMode.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\bengali.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\burmese.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\coreIcons.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "#psammead/gel-foundations/src/spacings"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\cymrufyw.jsx": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\cymrufyw.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\gahuza.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\gujarati.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\hausa.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\hindi.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\igbo.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\indonesia.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\japanese.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\korean.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\kyrgyz.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\learningenglish.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\marathi.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\mediaIcons.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "#psammead/gel-foundations/src/spacings"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\mundo.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\naidheachdan.jsx": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\naidheachdan.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\navigationIcons.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\nepali.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\news.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\newsround.jsx": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\newsround.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\pashto.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\persian.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\pidgin.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\portuguese.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\punjabi.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\russian.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\scotland.jsx": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\scotland.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\serbian.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\sinhala.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\somali.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\sport.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\swahili.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\tamil.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\telugu.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\thai.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\tigrinya.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\turkce.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\ukchina.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\ukrainian.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\urdu.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\uzbek.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\vietnamese.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\weather.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\yoruba.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\zhongwen.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs.stories.jsx",
      "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs.test.jsx"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs.stories.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "@storybook/react",
        "resolvedPath": "@storybook/react"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "#psammead/gel-foundations/src/spacings"
      },
      {
        "source": "../README.md",
        "resolvedPath": "..\\EXIM\\Work\\iterate-ai\\README.md"
      },
      {
        "source": "./svgs",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs.jsx"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#psammead/psammead-test-helpers/src",
        "resolvedPath": "#psammead/psammead-test-helpers/src"
      },
      {
        "source": "./svgs",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs.jsx"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-brand\\src\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\psammead-brand\\src\\index.stories.jsx",
      "src\\app\\legacy\\psammead\\psammead-brand\\src\\index.test.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "#psammead/gel-foundations/src/breakpoints"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "#psammead/gel-foundations/src/spacings"
      },
      {
        "source": "../../../../components/ThemeProvider/focusIndicator",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\focusIndicator.ts"
      },
      {
        "source": "../../../../components/VisuallyHiddenText",
        "resolvedPath": "src\\app\\components\\VisuallyHiddenText\\index.tsx"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-brand\\src\\index.stories.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@storybook/addon-knobs",
        "resolvedPath": "@storybook/addon-knobs"
      },
      {
        "source": "@storybook/react",
        "resolvedPath": "@storybook/react"
      },
      {
        "source": "#psammead/psammead-assets/src/svgs",
        "resolvedPath": "#psammead/psammead-assets/src/svgs"
      },
      {
        "source": "../../../../components/ThemeProvider/palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "#psammead/psammead-storybook-helpers/src",
        "resolvedPath": "#psammead/psammead-storybook-helpers/src"
      },
      {
        "source": "../../../../components/Header/ScriptLink",
        "resolvedPath": "src\\app\\components\\Header\\ScriptLink\\index.tsx"
      },
      {
        "source": "./index",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-brand\\src\\index.jsx"
      },
      {
        "source": "./SkipLink",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-brand\\src\\SkipLink\\index.jsx"
      },
      {
        "source": "../README.md",
        "resolvedPath": "..\\EXIM\\Work\\iterate-ai\\README.md"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-brand\\src\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#psammead/psammead-test-helpers/src",
        "resolvedPath": "#psammead/psammead-test-helpers/src"
      },
      {
        "source": "../../../../components/ThemeProvider/palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "../../../../components/react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-brand\\src\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-brand\\src\\SkipLink\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\psammead-brand\\src\\index.stories.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "#psammead/gel-foundations/src/breakpoints"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "#psammead/gel-foundations/src/spacings"
      },
      {
        "source": "#psammead/gel-foundations/src/typography",
        "resolvedPath": "#psammead/gel-foundations/src/typography"
      },
      {
        "source": "#psammead/psammead-styles/src/font-styles",
        "resolvedPath": "#psammead/psammead-styles/src/font-styles"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-bulletin\\src\\ImageStyles.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\psammead-bulletin\\src\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "#psammead/gel-foundations/src/breakpoints"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "#psammead/gel-foundations/src/spacings"
      },
      {
        "source": "#psammead/psammead-styles/src/detection",
        "resolvedPath": "#psammead/psammead-styles/src/detection"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-bulletin\\src\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\psammead-bulletin\\src\\index.stories.jsx",
      "src\\app\\legacy\\psammead\\psammead-bulletin\\src\\index.test.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "#psammead/gel-foundations/src/breakpoints"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "#psammead/gel-foundations/src/spacings"
      },
      {
        "source": "#psammead/psammead-styles/src/font-styles",
        "resolvedPath": "#psammead/psammead-styles/src/font-styles"
      },
      {
        "source": "#psammead/gel-foundations/src/typography",
        "resolvedPath": "#psammead/gel-foundations/src/typography"
      },
      {
        "source": "#psammead/psammead-assets/src/svgs",
        "resolvedPath": "#psammead/psammead-assets/src/svgs"
      },
      {
        "source": "#app/components/LiveLabel",
        "resolvedPath": "#app/components/LiveLabel"
      },
      {
        "source": "#psammead/psammead-story-promo/src",
        "resolvedPath": "#psammead/psammead-story-promo/src"
      },
      {
        "source": "../../../../components/VisuallyHiddenText",
        "resolvedPath": "src\\app\\components\\VisuallyHiddenText\\index.tsx"
      },
      {
        "source": "./ImageStyles",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-bulletin\\src\\ImageStyles.jsx"
      },
      {
        "source": "./TextStyles",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-bulletin\\src\\TextStyles.jsx"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-bulletin\\src\\index.stories.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@storybook/addon-knobs",
        "resolvedPath": "@storybook/addon-knobs"
      },
      {
        "source": "@storybook/react",
        "resolvedPath": "@storybook/react"
      },
      {
        "source": "#psammead/psammead-storybook-helpers/src",
        "resolvedPath": "#psammead/psammead-storybook-helpers/src"
      },
      {
        "source": "#psammead/psammead-image/src",
        "resolvedPath": "#psammead/psammead-image/src"
      },
      {
        "source": "../README.md",
        "resolvedPath": "..\\EXIM\\Work\\iterate-ai\\README.md"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-bulletin\\src\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-bulletin\\src\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#psammead/psammead-test-helpers/src",
        "resolvedPath": "#psammead/psammead-test-helpers/src"
      },
      {
        "source": "#psammead/psammead-image/src",
        "resolvedPath": "#psammead/psammead-image/src"
      },
      {
        "source": "../../../../components/react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "../../../../components/ThemeProvider/fontScripts/arabic",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\arabic.ts"
      },
      {
        "source": "../../../../components/ThemeProvider/fontScripts/latin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-bulletin\\src\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-bulletin\\src\\TextStyles.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\psammead-bulletin\\src\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "#psammead/gel-foundations/src/breakpoints"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "#psammead/gel-foundations/src/spacings"
      },
      {
        "source": "#psammead/psammead-styles/src/detection",
        "resolvedPath": "#psammead/psammead-styles/src/detection"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-calendars\\src\\calendars\\jalaali.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\psammead-calendars\\src\\calendars\\jalaali.test.js",
      "src\\app\\legacy\\psammead\\psammead-calendars\\src\\index.js"
    ],
    "outgoingDependencies": [
      {
        "source": "jalaali-js",
        "resolvedPath": "jalaali-js"
      },
      {
        "source": "#psammead/psammead-locales/src/numerals",
        "resolvedPath": "#psammead/psammead-locales/src/numerals"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-calendars\\src\\calendars\\jalaali.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "moment",
        "resolvedPath": "moment"
      },
      {
        "source": "./jalaali",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-calendars\\src\\calendars\\jalaali.js"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-calendars\\src\\calendars.stories.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@storybook/react",
        "resolvedPath": "@storybook/react"
      },
      {
        "source": "moment",
        "resolvedPath": "moment"
      },
      {
        "source": "./index",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-calendars\\src\\index.js"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-calendars\\src\\index.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\psammead-calendars\\src\\calendars.stories.jsx",
      "src\\app\\lib\\config\\services\\pashto.ts",
      "src\\app\\lib\\config\\services\\persian.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "./calendars/jalaali",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-calendars\\src\\calendars\\jalaali.js"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-consent-banner\\src\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\psammead-consent-banner\\src\\index.stories.jsx",
      "src\\app\\legacy\\psammead\\psammead-consent-banner\\src\\index.test.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/typography",
        "resolvedPath": "#psammead/gel-foundations/src/typography"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "#psammead/gel-foundations/src/breakpoints"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "#psammead/gel-foundations/src/spacings"
      },
      {
        "source": "#psammead/psammead-styles/src/font-styles",
        "resolvedPath": "#psammead/psammead-styles/src/font-styles"
      },
      {
        "source": "../../../../components/ThemeProvider/focusIndicator",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\focusIndicator.ts"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-consent-banner\\src\\index.stories.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@storybook/react",
        "resolvedPath": "@storybook/react"
      },
      {
        "source": "@storybook/addon-knobs",
        "resolvedPath": "@storybook/addon-knobs"
      },
      {
        "source": "#psammead/psammead-storybook-helpers/src",
        "resolvedPath": "#psammead/psammead-storybook-helpers/src"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-consent-banner\\src\\index.jsx"
      },
      {
        "source": "../README.md",
        "resolvedPath": "..\\EXIM\\Work\\iterate-ai\\README.md"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-consent-banner\\src\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../../../../components/react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "../../../../components/ThemeProvider/fontScripts/arabic",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\arabic.ts"
      },
      {
        "source": "../../../../components/ThemeProvider/fontScripts/latin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-consent-banner\\src\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-detokeniser\\src\\index.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\psammead-detokeniser\\src\\index.test.js"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\psammead-detokeniser\\src\\index.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-detokeniser\\src\\index.js"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-grid\\src\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\components\\MostRead\\Canonical\\List\\index.tsx",
      "src\\app\\legacy\\psammead\\psammead-grid\\src\\index.stories.jsx",
      "src\\app\\legacy\\psammead\\psammead-grid\\src\\index.test.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "#psammead/gel-foundations/src/spacings"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "#psammead/gel-foundations/src/breakpoints"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-grid\\src\\index.stories.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@storybook/react",
        "resolvedPath": "@storybook/react"
      },
      {
        "source": "@storybook/addon-knobs",
        "resolvedPath": "@storybook/addon-knobs"
      },
      {
        "source": "#psammead/psammead-storybook-helpers/src",
        "resolvedPath": "#psammead/psammead-storybook-helpers/src"
      },
      {
        "source": "#psammead/psammead-story-promo/src",
        "resolvedPath": "#psammead/psammead-story-promo/src"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-grid\\src\\index.jsx"
      },
      {
        "source": "./testHelpers",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-grid\\src\\testHelpers.jsx"
      },
      {
        "source": "../README.md",
        "resolvedPath": "..\\EXIM\\Work\\iterate-ai\\README.md"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-grid\\src\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../../../../components/react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-grid\\src\\index.jsx"
      },
      {
        "source": "./testHelpers",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-grid\\src\\testHelpers.jsx"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-grid\\src\\testHelpers.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\psammead-grid\\src\\index.stories.jsx",
      "src\\app\\legacy\\psammead\\psammead-grid\\src\\index.test.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/psammead-paragraph/src",
        "resolvedPath": "#psammead/psammead-paragraph/src"
      },
      {
        "source": "#psammead/psammead-image/src",
        "resolvedPath": "#psammead/psammead-image/src"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "#psammead/gel-foundations/src/spacings"
      },
      {
        "source": "#psammead/psammead-media-indicator/src",
        "resolvedPath": "#psammead/psammead-media-indicator/src"
      },
      {
        "source": "../../../../components/ThemeProvider/fontScripts/latin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-heading-index\\src\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\psammead-heading-index\\src\\index.stories.jsx",
      "src\\app\\legacy\\psammead\\psammead-heading-index\\src\\index.test.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/typography",
        "resolvedPath": "#psammead/gel-foundations/src/typography"
      },
      {
        "source": "#psammead/psammead-styles/src/font-styles",
        "resolvedPath": "#psammead/psammead-styles/src/font-styles"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-heading-index\\src\\index.stories.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@storybook/react",
        "resolvedPath": "@storybook/react"
      },
      {
        "source": "@storybook/addon-knobs",
        "resolvedPath": "@storybook/addon-knobs"
      },
      {
        "source": "#psammead/psammead-storybook-helpers/src",
        "resolvedPath": "#psammead/psammead-storybook-helpers/src"
      },
      {
        "source": "../README.md",
        "resolvedPath": "..\\EXIM\\Work\\iterate-ai\\README.md"
      },
      {
        "source": "./index",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-heading-index\\src\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-heading-index\\src\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../../../../components/react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "../../../../components/ThemeProvider/fontScripts/latin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts"
      },
      {
        "source": "../../../../components/ThemeProvider/fontScripts/arabic",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\arabic.ts"
      },
      {
        "source": "./index",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-heading-index\\src\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-headings\\src\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\psammead-headings\\src\\index.stories.jsx",
      "src\\app\\legacy\\psammead\\psammead-headings\\src\\index.test.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "#psammead/gel-foundations/src/spacings"
      },
      {
        "source": "#psammead/gel-foundations/src/typography",
        "resolvedPath": "#psammead/gel-foundations/src/typography"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "#psammead/gel-foundations/src/breakpoints"
      },
      {
        "source": "#psammead/psammead-styles/src/font-styles",
        "resolvedPath": "#psammead/psammead-styles/src/font-styles"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-headings\\src\\index.stories.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@storybook/react",
        "resolvedPath": "@storybook/react"
      },
      {
        "source": "@storybook/addon-knobs",
        "resolvedPath": "@storybook/addon-knobs"
      },
      {
        "source": "#psammead/psammead-storybook-helpers/src",
        "resolvedPath": "#psammead/psammead-storybook-helpers/src"
      },
      {
        "source": "../README.md",
        "resolvedPath": "..\\EXIM\\Work\\iterate-ai\\README.md"
      },
      {
        "source": "./index",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-headings\\src\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-headings\\src\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../../../../components/react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "../../../../components/ThemeProvider/fontScripts/latin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts"
      },
      {
        "source": "../../../../components/ThemeProvider/fontScripts/arabic",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\arabic.ts"
      },
      {
        "source": "./index",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-headings\\src\\index.jsx"
      },
      {
        "source": "../../../../routes/utils/pageTypes",
        "resolvedPath": "src\\app\\routes\\utils\\pageTypes.ts"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-image\\src\\index.amp.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\psammead-image\\src\\index.amp.stories.jsx",
      "src\\app\\legacy\\psammead\\psammead-image\\src\\index.amp.test.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "ramda/src/omit",
        "resolvedPath": "ramda/src/omit"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-image\\src\\index.amp.stories.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "./index.amp",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-image\\src\\index.amp.jsx"
      },
      {
        "source": "./testHelpers/stories",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-image\\src\\testHelpers\\stories.jsx"
      },
      {
        "source": "../../../../../../.storybook/preview",
        "resolvedPath": ".storybook\\preview.tsx"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-image\\src\\index.amp.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "./index.amp",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-image\\src\\index.amp.jsx"
      },
      {
        "source": "./testHelpers/snapshotTests",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-image\\src\\testHelpers\\snapshotTests.jsx"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-image\\src\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\psammead-image\\src\\index.stories.jsx",
      "src\\app\\legacy\\psammead\\psammead-image\\src\\index.test.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "../../../../contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext\\index.tsx"
      },
      {
        "source": "../../../../routes/utils/pageTypes",
        "resolvedPath": "src\\app\\routes\\utils\\pageTypes.ts"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-image\\src\\index.stories.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "@storybook/addon-knobs",
        "resolvedPath": "@storybook/addon-knobs"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-image\\src\\index.jsx"
      },
      {
        "source": "./testHelpers/stories",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-image\\src\\testHelpers\\stories.jsx"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-image\\src\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#psammead/psammead-test-helpers/src",
        "resolvedPath": "#psammead/psammead-test-helpers/src"
      },
      {
        "source": "./testHelpers/snapshotTests",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-image\\src\\testHelpers\\snapshotTests.jsx"
      },
      {
        "source": "./testHelpers/fixtureData",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-image\\src\\testHelpers\\fixtureData.js"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-image\\src\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-image\\src\\testHelpers\\fixtureData.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\psammead-image\\src\\index.test.jsx",
      "src\\app\\legacy\\psammead\\psammead-image\\src\\testHelpers\\snapshotTests.jsx",
      "src\\app\\legacy\\psammead\\psammead-image\\src\\testHelpers\\stories.jsx"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\psammead-image\\src\\testHelpers\\snapshotTests.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\psammead-image\\src\\index.amp.test.jsx",
      "src\\app\\legacy\\psammead\\psammead-image\\src\\index.test.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#psammead/psammead-test-helpers/src",
        "resolvedPath": "#psammead/psammead-test-helpers/src"
      },
      {
        "source": "./fixtureData",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-image\\src\\testHelpers\\fixtureData.js"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-image\\src\\testHelpers\\stories.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\psammead-image\\src\\index.amp.stories.jsx",
      "src\\app\\legacy\\psammead\\psammead-image\\src\\index.stories.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@storybook/react",
        "resolvedPath": "@storybook/react"
      },
      {
        "source": "../../README.md",
        "resolvedPath": "..\\EXIM\\Work\\README.md"
      },
      {
        "source": "./fixtureData",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-image\\src\\testHelpers\\fixtureData.js"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-image-placeholder\\src\\index.amp.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\psammead-image-placeholder\\src\\index.amp.stories.jsx",
      "src\\app\\legacy\\psammead\\psammead-image-placeholder\\src\\index.amp.test.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#psammead/psammead-assets/src/svgs",
        "resolvedPath": "#psammead/psammead-assets/src/svgs"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "#psammead/gel-foundations/src/breakpoints"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-image-placeholder\\src\\index.amp.stories.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@storybook/react",
        "resolvedPath": "@storybook/react"
      },
      {
        "source": "../README.md",
        "resolvedPath": "..\\EXIM\\Work\\iterate-ai\\README.md"
      },
      {
        "source": "./index.amp",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-image-placeholder\\src\\index.amp.jsx"
      },
      {
        "source": "../../../../../../.storybook/preview",
        "resolvedPath": ".storybook\\preview.tsx"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-image-placeholder\\src\\index.amp.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../../../../components/react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "./index.amp",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-image-placeholder\\src\\index.amp.jsx"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-image-placeholder\\src\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\psammead-image-placeholder\\src\\index.stories.jsx",
      "src\\app\\legacy\\psammead\\psammead-image-placeholder\\src\\index.test.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/psammead-assets/src/svgs",
        "resolvedPath": "#psammead/psammead-assets/src/svgs"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "#psammead/gel-foundations/src/breakpoints"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-image-placeholder\\src\\index.stories.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@storybook/react",
        "resolvedPath": "@storybook/react"
      },
      {
        "source": "../README.md",
        "resolvedPath": "..\\EXIM\\Work\\iterate-ai\\README.md"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-image-placeholder\\src\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-image-placeholder\\src\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../../../../components/react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-image-placeholder\\src\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-inline-link\\src\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\psammead-inline-link\\src\\index.stories.jsx",
      "src\\app\\legacy\\psammead\\psammead-inline-link\\src\\index.test.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-inline-link\\src\\index.stories.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "@storybook/react",
        "resolvedPath": "@storybook/react"
      },
      {
        "source": "@storybook/addon-knobs",
        "resolvedPath": "@storybook/addon-knobs"
      },
      {
        "source": "#psammead/psammead-storybook-helpers/src",
        "resolvedPath": "#psammead/psammead-storybook-helpers/src"
      },
      {
        "source": "#psammead/gel-foundations/src/typography",
        "resolvedPath": "#psammead/gel-foundations/src/typography"
      },
      {
        "source": "#psammead/psammead-styles/src/font-styles",
        "resolvedPath": "#psammead/psammead-styles/src/font-styles"
      },
      {
        "source": "../README.md",
        "resolvedPath": "..\\EXIM\\Work\\iterate-ai\\README.md"
      },
      {
        "source": "./index",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-inline-link\\src\\index.jsx"
      },
      {
        "source": "../../../../components/ThemeProvider/palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-inline-link\\src\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../../../../components/react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "./index",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-inline-link\\src\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-locales\\moment\\am.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\psammead-locales\\moment\\am.test.js",
      "src\\app\\legacy\\psammead\\psammead-locales\\moment\\index.stories.jsx"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\psammead-locales\\moment\\am.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "moment",
        "resolvedPath": "moment"
      },
      {
        "source": "./am",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-locales\\moment\\am.js"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-locales\\moment\\ar.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\psammead-locales\\moment\\ar.test.js",
      "src\\app\\legacy\\psammead\\psammead-locales\\moment\\index.stories.jsx"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\psammead-locales\\moment\\ar.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "moment",
        "resolvedPath": "moment"
      },
      {
        "source": "./ar",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-locales\\moment\\ar.js"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-locales\\moment\\az.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\psammead-locales\\moment\\az.test.js",
      "src\\app\\legacy\\psammead\\psammead-locales\\moment\\index.stories.jsx"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\psammead-locales\\moment\\az.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "moment",
        "resolvedPath": "moment"
      },
      {
        "source": "./az",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-locales\\moment\\az.js"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-locales\\moment\\bn.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\psammead-locales\\moment\\bn.test.js",
      "src\\app\\legacy\\psammead\\psammead-locales\\moment\\index.stories.jsx"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\psammead-locales\\moment\\bn.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "moment",
        "resolvedPath": "moment"
      },
      {
        "source": "./bn",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-locales\\moment\\bn.js"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-locales\\moment\\en-gb.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\psammead-locales\\moment\\en-gb.test.js",
      "src\\app\\legacy\\psammead\\psammead-locales\\moment\\index.stories.jsx"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\psammead-locales\\moment\\en-gb.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "moment",
        "resolvedPath": "moment"
      },
      {
        "source": "./en-gb",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-locales\\moment\\en-gb.js"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-locales\\moment\\es.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\psammead-locales\\moment\\es.test.js",
      "src\\app\\legacy\\psammead\\psammead-locales\\moment\\index.stories.jsx"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\psammead-locales\\moment\\es.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "moment",
        "resolvedPath": "moment"
      },
      {
        "source": "./es",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-locales\\moment\\es.js"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-locales\\moment\\gu.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\psammead-locales\\moment\\gu.test.js",
      "src\\app\\legacy\\psammead\\psammead-locales\\moment\\index.stories.jsx"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\psammead-locales\\moment\\gu.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "moment",
        "resolvedPath": "moment"
      },
      {
        "source": "./gu",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-locales\\moment\\gu.js"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-locales\\moment\\ha.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\psammead-locales\\moment\\ha.test.js",
      "src\\app\\legacy\\psammead\\psammead-locales\\moment\\index.stories.jsx"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\psammead-locales\\moment\\ha.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "moment",
        "resolvedPath": "moment"
      },
      {
        "source": "./ha",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-locales\\moment\\ha.js"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-locales\\moment\\hi.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\psammead-locales\\moment\\hi.test.js",
      "src\\app\\legacy\\psammead\\psammead-locales\\moment\\index.stories.jsx"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\psammead-locales\\moment\\hi.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "moment",
        "resolvedPath": "moment"
      },
      {
        "source": "./hi",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-locales\\moment\\hi.js"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-locales\\moment\\ig.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\psammead-locales\\moment\\ig.test.js",
      "src\\app\\legacy\\psammead\\psammead-locales\\moment\\index.stories.jsx"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\psammead-locales\\moment\\ig.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "moment",
        "resolvedPath": "moment"
      },
      {
        "source": "./ig",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-locales\\moment\\ig.js"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-locales\\moment\\index.stories.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "moment",
        "resolvedPath": "moment"
      },
      {
        "source": "@storybook/react",
        "resolvedPath": "@storybook/react"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "#psammead/gel-foundations/src/spacings"
      },
      {
        "source": "#psammead/gel-foundations/src/typography",
        "resolvedPath": "#psammead/gel-foundations/src/typography"
      },
      {
        "source": "../README.md",
        "resolvedPath": "..\\EXIM\\Work\\iterate-ai\\README.md"
      },
      {
        "source": "./am",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-locales\\moment\\am.js"
      },
      {
        "source": "./ar",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-locales\\moment\\ar.js"
      },
      {
        "source": "./az",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-locales\\moment\\az.js"
      },
      {
        "source": "./bn",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-locales\\moment\\bn.js"
      },
      {
        "source": "./en-gb",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-locales\\moment\\en-gb.js"
      },
      {
        "source": "./es",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-locales\\moment\\es.js"
      },
      {
        "source": "./gu",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-locales\\moment\\gu.js"
      },
      {
        "source": "./ha",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-locales\\moment\\ha.js"
      },
      {
        "source": "./hi",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-locales\\moment\\hi.js"
      },
      {
        "source": "./ig",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-locales\\moment\\ig.js"
      },
      {
        "source": "./ky",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-locales\\moment\\ky.js"
      },
      {
        "source": "./mr",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-locales\\moment\\mr.js"
      },
      {
        "source": "./ne",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-locales\\moment\\ne.js"
      },
      {
        "source": "./om",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-locales\\moment\\om.js"
      },
      {
        "source": "./pa-in",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-locales\\moment\\pa-in.js"
      },
      {
        "source": "./pcm",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-locales\\moment\\pcm.js"
      },
      {
        "source": "./ps",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-locales\\moment\\ps.js"
      },
      {
        "source": "./pt-br",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-locales\\moment\\pt-br.js"
      },
      {
        "source": "./ru",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-locales\\moment\\ru.js"
      },
      {
        "source": "./rw",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-locales\\moment\\rw.js"
      },
      {
        "source": "./si",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-locales\\moment\\si.js"
      },
      {
        "source": "./so",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-locales\\moment\\so.js"
      },
      {
        "source": "./sr",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-locales\\moment\\sr.js"
      },
      {
        "source": "./sr-cyrl",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-locales\\moment\\sr-cyrl.js"
      },
      {
        "source": "./sw",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-locales\\moment\\sw.js"
      },
      {
        "source": "./ta",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-locales\\moment\\ta.js"
      },
      {
        "source": "./th",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-locales\\moment\\th.js"
      },
      {
        "source": "./ti",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-locales\\moment\\ti.js"
      },
      {
        "source": "./uk",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-locales\\moment\\uk.js"
      },
      {
        "source": "./ur",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-locales\\moment\\ur.js"
      },
      {
        "source": "./uz",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-locales\\moment\\uz.js"
      },
      {
        "source": "./yo",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-locales\\moment\\yo.js"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-locales\\moment\\ky.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\psammead-locales\\moment\\index.stories.jsx",
      "src\\app\\legacy\\psammead\\psammead-locales\\moment\\ky.test.js"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\psammead-locales\\moment\\ky.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "moment",
        "resolvedPath": "moment"
      },
      {
        "source": "./ky",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-locales\\moment\\ky.js"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-locales\\moment\\mr.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\psammead-locales\\moment\\index.stories.jsx",
      "src\\app\\legacy\\psammead\\psammead-locales\\moment\\mr.test.js"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\psammead-locales\\moment\\mr.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "moment",
        "resolvedPath": "moment"
      },
      {
        "source": "./mr",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-locales\\moment\\mr.js"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-locales\\moment\\ne.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\psammead-locales\\moment\\index.stories.jsx",
      "src\\app\\legacy\\psammead\\psammead-locales\\moment\\ne.test.js"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\psammead-locales\\moment\\ne.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "moment",
        "resolvedPath": "moment"
      },
      {
        "source": "./ne",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-locales\\moment\\ne.js"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-locales\\moment\\om.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\psammead-locales\\moment\\index.stories.jsx",
      "src\\app\\legacy\\psammead\\psammead-locales\\moment\\om.test.js"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\psammead-locales\\moment\\om.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "moment",
        "resolvedPath": "moment"
      },
      {
        "source": "./om",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-locales\\moment\\om.js"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-locales\\moment\\pa-in.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\psammead-locales\\moment\\index.stories.jsx",
      "src\\app\\legacy\\psammead\\psammead-locales\\moment\\pa-in.test.js"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\psammead-locales\\moment\\pa-in.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "moment",
        "resolvedPath": "moment"
      },
      {
        "source": "./pa-in",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-locales\\moment\\pa-in.js"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-locales\\moment\\pcm.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\psammead-locales\\moment\\index.stories.jsx",
      "src\\app\\legacy\\psammead\\psammead-locales\\moment\\pcm.test.js"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\psammead-locales\\moment\\pcm.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "moment",
        "resolvedPath": "moment"
      },
      {
        "source": "./pcm",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-locales\\moment\\pcm.js"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-locales\\moment\\ps.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\psammead-locales\\moment\\index.stories.jsx",
      "src\\app\\legacy\\psammead\\psammead-locales\\moment\\ps.test.js"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\psammead-locales\\moment\\ps.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "moment",
        "resolvedPath": "moment"
      },
      {
        "source": "./ps",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-locales\\moment\\ps.js"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-locales\\moment\\pt-br.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\psammead-locales\\moment\\index.stories.jsx",
      "src\\app\\legacy\\psammead\\psammead-locales\\moment\\pt-br.test.js"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\psammead-locales\\moment\\pt-br.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "moment",
        "resolvedPath": "moment"
      },
      {
        "source": "./pt-br",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-locales\\moment\\pt-br.js"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-locales\\moment\\ru.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\psammead-locales\\moment\\index.stories.jsx",
      "src\\app\\legacy\\psammead\\psammead-locales\\moment\\ru.test.js"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\psammead-locales\\moment\\ru.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "moment",
        "resolvedPath": "moment"
      },
      {
        "source": "./ru",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-locales\\moment\\ru.js"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-locales\\moment\\rw.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\psammead-locales\\moment\\index.stories.jsx",
      "src\\app\\legacy\\psammead\\psammead-locales\\moment\\rw.test.js"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\psammead-locales\\moment\\rw.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "moment",
        "resolvedPath": "moment"
      },
      {
        "source": "./rw",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-locales\\moment\\rw.js"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-locales\\moment\\si.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\psammead-locales\\moment\\index.stories.jsx",
      "src\\app\\legacy\\psammead\\psammead-locales\\moment\\si.test.js"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\psammead-locales\\moment\\si.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "moment",
        "resolvedPath": "moment"
      },
      {
        "source": "./si",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-locales\\moment\\si.js"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-locales\\moment\\so.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\psammead-locales\\moment\\index.stories.jsx",
      "src\\app\\legacy\\psammead\\psammead-locales\\moment\\so.test.js"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\psammead-locales\\moment\\so.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "moment",
        "resolvedPath": "moment"
      },
      {
        "source": "./so",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-locales\\moment\\so.js"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-locales\\moment\\sr-cyrl.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\psammead-locales\\moment\\index.stories.jsx",
      "src\\app\\legacy\\psammead\\psammead-locales\\moment\\sr-cyrl.test.js"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\psammead-locales\\moment\\sr-cyrl.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "moment",
        "resolvedPath": "moment"
      },
      {
        "source": "./sr-cyrl",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-locales\\moment\\sr-cyrl.js"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-locales\\moment\\sr.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\psammead-locales\\moment\\index.stories.jsx",
      "src\\app\\legacy\\psammead\\psammead-locales\\moment\\sr.test.js"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\psammead-locales\\moment\\sr.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "moment",
        "resolvedPath": "moment"
      },
      {
        "source": "./sr",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-locales\\moment\\sr.js"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-locales\\moment\\sw.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\psammead-locales\\moment\\index.stories.jsx",
      "src\\app\\legacy\\psammead\\psammead-locales\\moment\\sw.test.js"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\psammead-locales\\moment\\sw.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "moment",
        "resolvedPath": "moment"
      },
      {
        "source": "./sw",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-locales\\moment\\sw.js"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-locales\\moment\\ta.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\psammead-locales\\moment\\index.stories.jsx",
      "src\\app\\legacy\\psammead\\psammead-locales\\moment\\ta.test.js"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\psammead-locales\\moment\\ta.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "moment",
        "resolvedPath": "moment"
      },
      {
        "source": "./ta",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-locales\\moment\\ta.js"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-locales\\moment\\th.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\psammead-locales\\moment\\index.stories.jsx",
      "src\\app\\legacy\\psammead\\psammead-locales\\moment\\th.test.js"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\psammead-locales\\moment\\th.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "moment",
        "resolvedPath": "moment"
      },
      {
        "source": "./th",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-locales\\moment\\th.js"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-locales\\moment\\ti.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\psammead-locales\\moment\\index.stories.jsx",
      "src\\app\\legacy\\psammead\\psammead-locales\\moment\\ti.test.js"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\psammead-locales\\moment\\ti.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "moment",
        "resolvedPath": "moment"
      },
      {
        "source": "./ti",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-locales\\moment\\ti.js"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-locales\\moment\\uk.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\psammead-locales\\moment\\index.stories.jsx",
      "src\\app\\legacy\\psammead\\psammead-locales\\moment\\uk.test.js"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\psammead-locales\\moment\\uk.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "moment",
        "resolvedPath": "moment"
      },
      {
        "source": "./uk",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-locales\\moment\\uk.js"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-locales\\moment\\ur.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\psammead-locales\\moment\\index.stories.jsx",
      "src\\app\\legacy\\psammead\\psammead-locales\\moment\\ur.test.js"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\psammead-locales\\moment\\ur.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "moment",
        "resolvedPath": "moment"
      },
      {
        "source": "./ur",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-locales\\moment\\ur.js"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-locales\\moment\\uz.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\psammead-locales\\moment\\index.stories.jsx",
      "src\\app\\legacy\\psammead\\psammead-locales\\moment\\uz.test.js"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\psammead-locales\\moment\\uz.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "moment",
        "resolvedPath": "moment"
      },
      {
        "source": "./uz",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-locales\\moment\\uz.js"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-locales\\moment\\yo.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\psammead-locales\\moment\\index.stories.jsx",
      "src\\app\\legacy\\psammead\\psammead-locales\\moment\\yo.test.js"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\psammead-locales\\moment\\yo.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "moment",
        "resolvedPath": "moment"
      },
      {
        "source": "./yo",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-locales\\moment\\yo.js"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-locales\\numerals\\index.stories.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@storybook/react",
        "resolvedPath": "@storybook/react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "#psammead/gel-foundations/src/spacings"
      },
      {
        "source": "../src/numerals",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-locales\\src\\numerals\\index.js"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-locales\\src\\numerals\\index.js": {
    "incomingDependencies": [
      "src\\app\\components\\MostRead\\Amp\\getRemoteDataScript\\index.test.ts",
      "src\\app\\components\\MostRead\\Canonical\\Rank\\index.tsx",
      "src\\app\\legacy\\psammead\\psammead-locales\\numerals\\index.stories.jsx",
      "src\\app\\legacy\\psammead\\psammead-locales\\src\\numerals\\index.test.js"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\psammead-locales\\src\\numerals\\index.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-locales\\src\\numerals\\index.js"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-media-indicator\\src\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\psammead-media-indicator\\src\\index.stories.jsx",
      "src\\app\\legacy\\psammead\\psammead-media-indicator\\src\\index.test.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "#psammead/gel-foundations/src/spacings"
      },
      {
        "source": "#psammead/gel-foundations/src/typography",
        "resolvedPath": "#psammead/gel-foundations/src/typography"
      },
      {
        "source": "#psammead/psammead-styles/src/font-styles",
        "resolvedPath": "#psammead/psammead-styles/src/font-styles"
      },
      {
        "source": "#psammead/psammead-assets/src/svgs",
        "resolvedPath": "#psammead/psammead-assets/src/svgs"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-media-indicator\\src\\index.stories.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@storybook/react",
        "resolvedPath": "@storybook/react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "@storybook/addon-knobs",
        "resolvedPath": "@storybook/addon-knobs"
      },
      {
        "source": "#psammead/psammead-storybook-helpers/src",
        "resolvedPath": "#psammead/psammead-storybook-helpers/src"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "#psammead/gel-foundations/src/spacings"
      },
      {
        "source": "#psammead/psammead-story-promo/src",
        "resolvedPath": "#psammead/psammead-story-promo/src"
      },
      {
        "source": "../README.md",
        "resolvedPath": "..\\EXIM\\Work\\iterate-ai\\README.md"
      },
      {
        "source": "./index",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-media-indicator\\src\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-media-indicator\\src\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#psammead/psammead-test-helpers/src",
        "resolvedPath": "#psammead/psammead-test-helpers/src"
      },
      {
        "source": "../../../../components/react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "../../../../components/ThemeProvider/fontScripts/latin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts"
      },
      {
        "source": "../../../../components/ThemeProvider/fontScripts/arabic",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\arabic.ts"
      },
      {
        "source": "./index",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-media-indicator\\src\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-navigation\\src\\DropdownNavigation\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\psammead-navigation\\src\\DropdownNavigation\\index.test.jsx",
      "src\\app\\legacy\\psammead\\psammead-navigation\\src\\index.jsx",
      "src\\app\\legacy\\psammead\\psammead-navigation\\src\\index.stories.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/psammead-assets/src/svgs",
        "resolvedPath": "#psammead/psammead-assets/src/svgs"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "#psammead/gel-foundations/src/spacings"
      },
      {
        "source": "react-helmet",
        "resolvedPath": "react-helmet"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "#psammead/gel-foundations/src/breakpoints"
      },
      {
        "source": "#psammead/gel-foundations/src/typography",
        "resolvedPath": "#psammead/gel-foundations/src/typography"
      },
      {
        "source": "#psammead/psammead-styles/src/font-styles",
        "resolvedPath": "#psammead/psammead-styles/src/font-styles"
      },
      {
        "source": "../../../../../components/VisuallyHiddenText",
        "resolvedPath": "src\\app\\components\\VisuallyHiddenText\\index.tsx"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-navigation\\src\\DropdownNavigation\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../../../../../components/react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "../../../../../components/ThemeProvider/fontScripts/latin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts"
      },
      {
        "source": "../../../../../components/ThemeProvider/fontScripts/arabic",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\arabic.ts"
      },
      {
        "source": "./index",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-navigation\\src\\DropdownNavigation\\index.jsx"
      },
      {
        "source": "../../testHelpers/pidgin",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-navigation\\testHelpers\\pidgin.js"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-navigation\\src\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\psammead-navigation\\src\\index.stories.jsx",
      "src\\app\\legacy\\psammead\\psammead-navigation\\src\\index.test.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "#psammead/gel-foundations/src/spacings"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "#psammead/gel-foundations/src/breakpoints"
      },
      {
        "source": "#psammead/gel-foundations/src/typography",
        "resolvedPath": "#psammead/gel-foundations/src/typography"
      },
      {
        "source": "#psammead/psammead-styles/src/font-styles",
        "resolvedPath": "#psammead/psammead-styles/src/font-styles"
      },
      {
        "source": "./DropdownNavigation",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-navigation\\src\\DropdownNavigation\\index.jsx"
      },
      {
        "source": "../../../../components/ThemeProvider/focusIndicator",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\focusIndicator.ts"
      },
      {
        "source": "../../../../components/VisuallyHiddenText",
        "resolvedPath": "src\\app\\components\\VisuallyHiddenText\\index.tsx"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-navigation\\src\\index.stories.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@storybook/react",
        "resolvedPath": "@storybook/react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "@storybook/addon-knobs",
        "resolvedPath": "@storybook/addon-knobs"
      },
      {
        "source": "#psammead/psammead-storybook-helpers/src",
        "resolvedPath": "#psammead/psammead-storybook-helpers/src"
      },
      {
        "source": "#psammead/psammead-assets/src/svgs",
        "resolvedPath": "#psammead/psammead-assets/src/svgs"
      },
      {
        "source": "#psammead/psammead-brand/src",
        "resolvedPath": "#psammead/psammead-brand/src"
      },
      {
        "source": "../../../../../../.storybook/preview",
        "resolvedPath": ".storybook\\preview.tsx"
      },
      {
        "source": "./index",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-navigation\\src\\index.jsx"
      },
      {
        "source": "./DropdownNavigation",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-navigation\\src\\DropdownNavigation\\index.jsx"
      },
      {
        "source": "./ScrollableNavigation",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-navigation\\src\\ScrollableNavigation\\index.jsx"
      },
      {
        "source": "../testHelpers/news",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-navigation\\testHelpers\\news.js"
      },
      {
        "source": "../testHelpers/igbo",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-navigation\\testHelpers\\igbo.js"
      },
      {
        "source": "../testHelpers/pidgin",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-navigation\\testHelpers\\pidgin.js"
      },
      {
        "source": "../testHelpers/yoruba",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-navigation\\testHelpers\\yoruba.js"
      },
      {
        "source": "../testHelpers/arabic",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-navigation\\testHelpers\\arabic.js"
      },
      {
        "source": "../README.md",
        "resolvedPath": "..\\EXIM\\Work\\iterate-ai\\README.md"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-navigation\\src\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../../../../components/react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "../../../../components/ThemeProvider/fontScripts/latin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts"
      },
      {
        "source": "./ScrollableNavigation",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-navigation\\src\\ScrollableNavigation\\index.jsx"
      },
      {
        "source": "./index",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-navigation\\src\\index.jsx"
      },
      {
        "source": "../testHelpers/igbo",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-navigation\\testHelpers\\igbo.js"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-navigation\\src\\ScrollableNavigation\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\psammead-navigation\\src\\index.stories.jsx",
      "src\\app\\legacy\\psammead\\psammead-navigation\\src\\index.test.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "#psammead/gel-foundations/src/spacings"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "#psammead/gel-foundations/src/breakpoints"
      },
      {
        "source": "../../../../../components/ThemeProvider/focusIndicator",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\focusIndicator.ts"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-navigation\\testHelpers\\arabic.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\psammead-navigation\\src\\index.stories.jsx"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\psammead-navigation\\testHelpers\\igbo.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\psammead-navigation\\src\\index.stories.jsx",
      "src\\app\\legacy\\psammead\\psammead-navigation\\src\\index.test.jsx"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\psammead-navigation\\testHelpers\\news.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\psammead-navigation\\src\\index.stories.jsx"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\psammead-navigation\\testHelpers\\pidgin.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\psammead-navigation\\src\\DropdownNavigation\\index.test.jsx",
      "src\\app\\legacy\\psammead\\psammead-navigation\\src\\index.stories.jsx"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\psammead-navigation\\testHelpers\\yoruba.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\psammead-navigation\\src\\index.stories.jsx"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\psammead-paragraph\\src\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\psammead-paragraph\\src\\index.stories.jsx",
      "src\\app\\legacy\\psammead\\psammead-paragraph\\src\\index.test.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "#psammead/gel-foundations/src/spacings"
      },
      {
        "source": "#psammead/gel-foundations/src/typography",
        "resolvedPath": "#psammead/gel-foundations/src/typography"
      },
      {
        "source": "#psammead/psammead-styles/src/font-styles",
        "resolvedPath": "#psammead/psammead-styles/src/font-styles"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-paragraph\\src\\index.stories.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@storybook/react",
        "resolvedPath": "@storybook/react"
      },
      {
        "source": "@storybook/addon-knobs",
        "resolvedPath": "@storybook/addon-knobs"
      },
      {
        "source": "#psammead/psammead-inline-link/src",
        "resolvedPath": "#psammead/psammead-inline-link/src"
      },
      {
        "source": "#psammead/psammead-storybook-helpers/src",
        "resolvedPath": "#psammead/psammead-storybook-helpers/src"
      },
      {
        "source": "../README.md",
        "resolvedPath": "..\\EXIM\\Work\\iterate-ai\\README.md"
      },
      {
        "source": "./index",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-paragraph\\src\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-paragraph\\src\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../../../../components/react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "../../../../components/ThemeProvider/fontScripts/latin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts"
      },
      {
        "source": "../../../../components/ThemeProvider/fontScripts/arabic",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\arabic.ts"
      },
      {
        "source": "./index",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-paragraph\\src\\index.jsx"
      },
      {
        "source": "../../../../routes/utils/pageTypes",
        "resolvedPath": "src\\app\\routes\\utils\\pageTypes.ts"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-section-label\\src\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\components\\MostRead\\Label\\index.tsx",
      "src\\app\\legacy\\psammead\\psammead-section-label\\src\\index.stories.jsx",
      "src\\app\\legacy\\psammead\\psammead-section-label\\src\\index.test.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "#psammead/gel-foundations/src/breakpoints"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "#psammead/gel-foundations/src/spacings"
      },
      {
        "source": "#app/components/ThemeProvider/palette",
        "resolvedPath": "#app/components/ThemeProvider/palette"
      },
      {
        "source": "./titles",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-section-label\\src\\titles.jsx"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-section-label\\src\\index.stories.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@storybook/react",
        "resolvedPath": "@storybook/react"
      },
      {
        "source": "@storybook/addon-knobs",
        "resolvedPath": "@storybook/addon-knobs"
      },
      {
        "source": "#psammead/psammead-storybook-helpers/src",
        "resolvedPath": "#psammead/psammead-storybook-helpers/src"
      },
      {
        "source": "../README.md",
        "resolvedPath": "..\\EXIM\\Work\\iterate-ai\\README.md"
      },
      {
        "source": "./index",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-section-label\\src\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-section-label\\src\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../../../../components/react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "../../../../components/ThemeProvider/fontScripts/latin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts"
      },
      {
        "source": "../../../../components/ThemeProvider/fontScripts/arabic",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\arabic.ts"
      },
      {
        "source": "./index",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-section-label\\src\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-section-label\\src\\titles.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\psammead-section-label\\src\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "#psammead/gel-foundations/src/breakpoints"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "#psammead/gel-foundations/src/spacings"
      },
      {
        "source": "#psammead/gel-foundations/src/typography",
        "resolvedPath": "#psammead/gel-foundations/src/typography"
      },
      {
        "source": "#psammead/psammead-styles/src/font-styles",
        "resolvedPath": "#psammead/psammead-styles/src/font-styles"
      },
      {
        "source": "#app/components/ThemeProvider/palette",
        "resolvedPath": "#app/components/ThemeProvider/palette"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-social-embed\\src\\Amp\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\psammead-social-embed\\src\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "react-helmet",
        "resolvedPath": "react-helmet"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-social-embed\\src\\Canonical\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\psammead-social-embed\\src\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#app/contexts/RequestContext",
        "resolvedPath": "#app/contexts/RequestContext"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": "./useScript",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-social-embed\\src\\Canonical\\useScript.js"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-social-embed\\src\\Canonical\\useScript.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\psammead-social-embed\\src\\Canonical\\index.jsx",
      "src\\app\\legacy\\psammead\\psammead-social-embed\\src\\index.test.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-social-embed\\src\\CaptionWrapper\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\psammead-social-embed\\src\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/psammead-styles/src/font-styles",
        "resolvedPath": "#psammead/psammead-styles/src/font-styles"
      },
      {
        "source": "#psammead/gel-foundations/src/typography",
        "resolvedPath": "#psammead/gel-foundations/src/typography"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "#psammead/gel-foundations/src/spacings"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "#contexts/RequestContext"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": "../../../../../lib/styles.const",
        "resolvedPath": "src\\app\\lib\\styles.const\\index.ts"
      },
      {
        "source": "../../../../../components/ThemeProvider/palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-social-embed\\src\\fixtures\\index.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\psammead-social-embed\\src\\index.stories.jsx",
      "src\\app\\legacy\\psammead\\psammead-social-embed\\src\\index.test.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "./instagram.json",
        "resolvedPath": "..\\EXIM\\Work\\iterate-ai\\dep-graph\\instagram.json"
      },
      {
        "source": "./twitter.json",
        "resolvedPath": "..\\EXIM\\Work\\iterate-ai\\dep-graph\\twitter.json"
      },
      {
        "source": "./youtube.json",
        "resolvedPath": "..\\EXIM\\Work\\iterate-ai\\dep-graph\\youtube.json"
      },
      {
        "source": "./facebook.json",
        "resolvedPath": "..\\EXIM\\Work\\iterate-ai\\dep-graph\\facebook.json"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-social-embed\\src\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\psammead-social-embed\\src\\index.stories.jsx",
      "src\\app\\legacy\\psammead\\psammead-social-embed\\src\\index.test.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "#contexts/RequestContext"
      },
      {
        "source": "../../../../components/EmbedConsentBanner",
        "resolvedPath": "src\\app\\components\\EmbedConsentBanner\\index.tsx"
      },
      {
        "source": "./SkipLinkWrapper",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-social-embed\\src\\SkipLinkWrapper\\index.jsx"
      },
      {
        "source": "./CaptionWrapper",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-social-embed\\src\\CaptionWrapper\\index.jsx"
      },
      {
        "source": "./Notice",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-social-embed\\src\\Notice\\index.jsx"
      },
      {
        "source": "./Canonical",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-social-embed\\src\\Canonical\\index.jsx"
      },
      {
        "source": "./Amp",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-social-embed\\src\\Amp\\index.jsx"
      },
      {
        "source": "./utilities",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-social-embed\\src\\utilities\\index.js"
      },
      {
        "source": "../../../../routes/utils/pageTypes",
        "resolvedPath": "src\\app\\routes\\utils\\pageTypes.ts"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-social-embed\\src\\index.stories.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "react-helmet",
        "resolvedPath": "react-helmet"
      },
      {
        "source": "@storybook/react",
        "resolvedPath": "@storybook/react"
      },
      {
        "source": "@storybook/addon-knobs",
        "resolvedPath": "@storybook/addon-knobs"
      },
      {
        "source": "#psammead/psammead-storybook-helpers/src",
        "resolvedPath": "#psammead/psammead-storybook-helpers/src"
      },
      {
        "source": "../README.md",
        "resolvedPath": "..\\EXIM\\Work\\iterate-ai\\README.md"
      },
      {
        "source": "./index",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-social-embed\\src\\index.jsx"
      },
      {
        "source": "./fixtures",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-social-embed\\src\\fixtures\\index.js"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-social-embed\\src\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#psammead/psammead-test-helpers/src",
        "resolvedPath": "#psammead/psammead-test-helpers/src"
      },
      {
        "source": "../../../../components/react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "../../../../routes/utils/pageTypes",
        "resolvedPath": "src\\app\\routes\\utils\\pageTypes.ts"
      },
      {
        "source": "./index",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-social-embed\\src\\index.jsx"
      },
      {
        "source": "./fixtures",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-social-embed\\src\\fixtures\\index.js"
      },
      {
        "source": "./Canonical/useScript",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-social-embed\\src\\Canonical\\useScript.js"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-social-embed\\src\\Notice\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\psammead-social-embed\\src\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/psammead-styles/src/font-styles",
        "resolvedPath": "#psammead/psammead-styles/src/font-styles"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "#psammead/gel-foundations/src/spacings"
      },
      {
        "source": "#psammead/gel-foundations/src/typography",
        "resolvedPath": "#psammead/gel-foundations/src/typography"
      },
      {
        "source": "../utilities",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-social-embed\\src\\utilities\\index.js"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-social-embed\\src\\SkipLinkWrapper\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\psammead-social-embed\\src\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/psammead-styles/src/font-styles",
        "resolvedPath": "#psammead/psammead-styles/src/font-styles"
      },
      {
        "source": "#psammead/gel-foundations/src/typography",
        "resolvedPath": "#psammead/gel-foundations/src/typography"
      },
      {
        "source": "../utilities",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-social-embed\\src\\utilities\\index.js"
      },
      {
        "source": "../../../../../lib/styles.const",
        "resolvedPath": "src\\app\\lib\\styles.const\\index.ts"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-social-embed\\src\\utilities\\index.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\psammead-social-embed\\src\\index.jsx",
      "src\\app\\legacy\\psammead\\psammead-social-embed\\src\\Notice\\index.jsx",
      "src\\app\\legacy\\psammead\\psammead-social-embed\\src\\SkipLinkWrapper\\index.jsx",
      "src\\app\\legacy\\psammead\\psammead-social-embed\\src\\utilities\\index.test.js"
    ],
    "outgoingDependencies": [
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-social-embed\\src\\utilities\\index.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "./index",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-social-embed\\src\\utilities\\index.js"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-story-promo\\src\\ImageStyles.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\psammead-story-promo\\src\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "#psammead/gel-foundations/src/spacings"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "#psammead/gel-foundations/src/breakpoints"
      },
      {
        "source": "#psammead/psammead-styles/src/detection",
        "resolvedPath": "#psammead/psammead-styles/src/detection"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-story-promo\\src\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\psammead-story-promo\\src\\index.stories.jsx",
      "src\\app\\legacy\\psammead\\psammead-story-promo\\src\\index.test.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "#psammead/gel-foundations/src/spacings"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "#psammead/gel-foundations/src/breakpoints"
      },
      {
        "source": "#psammead/gel-foundations/src/typography",
        "resolvedPath": "#psammead/gel-foundations/src/typography"
      },
      {
        "source": "#psammead/psammead-styles/src/font-styles",
        "resolvedPath": "#psammead/psammead-styles/src/font-styles"
      },
      {
        "source": "#psammead/psammead-styles/src/detection",
        "resolvedPath": "#psammead/psammead-styles/src/detection"
      },
      {
        "source": "./ImageStyles",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-story-promo\\src\\ImageStyles.jsx"
      },
      {
        "source": "./TextStyles",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-story-promo\\src\\TextStyles.jsx"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-story-promo\\src\\index.stories.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@storybook/react",
        "resolvedPath": "@storybook/react"
      },
      {
        "source": "@storybook/addon-knobs",
        "resolvedPath": "@storybook/addon-knobs"
      },
      {
        "source": "#psammead/psammead-image/src",
        "resolvedPath": "#psammead/psammead-image/src"
      },
      {
        "source": "#psammead/psammead-media-indicator/src",
        "resolvedPath": "#psammead/psammead-media-indicator/src"
      },
      {
        "source": "#psammead/psammead-live-label/src",
        "resolvedPath": "#psammead/psammead-live-label/src"
      },
      {
        "source": "../../../../components/VisuallyHiddenText",
        "resolvedPath": "src\\app\\components\\VisuallyHiddenText\\index.tsx"
      },
      {
        "source": "#psammead/psammead-storybook-helpers/src",
        "resolvedPath": "#psammead/psammead-storybook-helpers/src"
      },
      {
        "source": "#psammead/psammead-grid/src",
        "resolvedPath": "#psammead/psammead-grid/src"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "#psammead/gel-foundations/src/spacings"
      },
      {
        "source": "./index",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-story-promo\\src\\index.jsx"
      },
      {
        "source": "../testHelpers/relatedItems",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-story-promo\\testHelpers\\relatedItems.js"
      },
      {
        "source": "../testHelpers/IndexAlsosContainer",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-story-promo\\testHelpers\\IndexAlsosContainer.jsx"
      },
      {
        "source": "../README.md",
        "resolvedPath": "..\\EXIM\\Work\\iterate-ai\\README.md"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-story-promo\\src\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#psammead/psammead-media-indicator/src",
        "resolvedPath": "#psammead/psammead-media-indicator/src"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "#psammead/gel-foundations/src/spacings"
      },
      {
        "source": "../../../../components/react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "../../../../components/ThemeProvider/fontScripts/latin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts"
      },
      {
        "source": "../../../../components/LiveLabel",
        "resolvedPath": "src\\app\\components\\LiveLabel\\index.tsx"
      },
      {
        "source": "./index",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-story-promo\\src\\index.jsx"
      },
      {
        "source": "../testHelpers/relatedItems",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-story-promo\\testHelpers\\relatedItems.js"
      },
      {
        "source": "../testHelpers/IndexAlsosContainer",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-story-promo\\testHelpers\\IndexAlsosContainer.jsx"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-story-promo\\src\\IndexAlsos\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\psammead-story-promo\\testHelpers\\IndexAlsosContainer.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "#psammead/gel-foundations/src/spacings"
      },
      {
        "source": "#psammead/gel-foundations/src/typography",
        "resolvedPath": "#psammead/gel-foundations/src/typography"
      },
      {
        "source": "#psammead/psammead-styles/src/font-styles",
        "resolvedPath": "#psammead/psammead-styles/src/font-styles"
      },
      {
        "source": "../../../../../components/VisuallyHiddenText",
        "resolvedPath": "src\\app\\components\\VisuallyHiddenText\\index.tsx"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-story-promo\\src\\IndexAlsos\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../../../../../components/react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "../../testHelpers/relatedItems",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-story-promo\\testHelpers\\relatedItems.js"
      },
      {
        "source": "../../testHelpers/IndexAlsosContainer",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-story-promo\\testHelpers\\IndexAlsosContainer.jsx"
      },
      {
        "source": "../../../../../components/ThemeProvider/fontScripts/latin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-story-promo\\src\\TextStyles.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\psammead-story-promo\\src\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "#psammead/gel-foundations/src/spacings"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "#psammead/gel-foundations/src/breakpoints"
      },
      {
        "source": "#psammead/psammead-styles/src/detection",
        "resolvedPath": "#psammead/psammead-styles/src/detection"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-story-promo\\testHelpers\\IndexAlsosContainer.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\psammead-story-promo\\src\\index.stories.jsx",
      "src\\app\\legacy\\psammead\\psammead-story-promo\\src\\index.test.jsx",
      "src\\app\\legacy\\psammead\\psammead-story-promo\\src\\IndexAlsos\\index.test.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#psammead/psammead-media-indicator/src",
        "resolvedPath": "#psammead/psammead-media-indicator/src"
      },
      {
        "source": "../src/IndexAlsos/index",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-story-promo\\src\\IndexAlsos\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-story-promo\\testHelpers\\relatedItems.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\psammead-story-promo\\src\\index.stories.jsx",
      "src\\app\\legacy\\psammead\\psammead-story-promo\\src\\index.test.jsx",
      "src\\app\\legacy\\psammead\\psammead-story-promo\\src\\IndexAlsos\\index.test.jsx"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\psammead-story-promo-list\\src\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\psammead-story-promo-list\\src\\index.stories.jsx",
      "src\\app\\legacy\\psammead\\psammead-story-promo-list\\src\\index.test.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "#psammead/gel-foundations/src/spacings"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "#psammead/gel-foundations/src/breakpoints"
      },
      {
        "source": "../../../../components/ThemeProvider/palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-story-promo-list\\src\\index.stories.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@storybook/react",
        "resolvedPath": "@storybook/react"
      },
      {
        "source": "@storybook/addon-knobs",
        "resolvedPath": "@storybook/addon-knobs"
      },
      {
        "source": "#psammead/psammead-timestamp/src",
        "resolvedPath": "#psammead/psammead-timestamp/src"
      },
      {
        "source": "#psammead/psammead-image/src",
        "resolvedPath": "#psammead/psammead-image/src"
      },
      {
        "source": "../../../components/ThemeProvider/fontScripts/latin",
        "resolvedPath": "..\\EXIM\\components\\ThemeProvider\\fontScripts\\latin"
      },
      {
        "source": "#psammead/psammead-story-promo/src",
        "resolvedPath": "#psammead/psammead-story-promo/src"
      },
      {
        "source": "#psammead/psammead-grid/src",
        "resolvedPath": "#psammead/psammead-grid/src"
      },
      {
        "source": "./index",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-story-promo-list\\src\\index.jsx"
      },
      {
        "source": "../testHelpers/fixtureData",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-story-promo-list\\testHelpers\\fixtureData.js"
      },
      {
        "source": "../README.md",
        "resolvedPath": "..\\EXIM\\Work\\iterate-ai\\README.md"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-story-promo-list\\src\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#psammead/psammead-story-promo/src",
        "resolvedPath": "#psammead/psammead-story-promo/src"
      },
      {
        "source": "../../../../components/react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "../../../../components/ThemeProvider/fontScripts/latin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts"
      },
      {
        "source": "./index",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-story-promo-list\\src\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-story-promo-list\\testHelpers\\fixtureData.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\psammead-story-promo-list\\src\\index.stories.jsx"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\psammead-styles\\src\\detection.js": {
    "incomingDependencies": [
      "src\\app\\components\\MostRead\\Canonical\\Item\\index.styles.ts",
      "src\\app\\components\\MostRead\\Canonical\\Rank\\index.styles.ts",
      "src\\app\\legacy\\psammead\\psammead-styles\\src\\index.stories.jsx"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\psammead-styles\\src\\font-families.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\psammead-styles\\src\\font-families.test.js",
      "src\\app\\legacy\\psammead\\psammead-styles\\src\\font-styles.js",
      "src\\app\\legacy\\psammead\\psammead-styles\\src\\font-styles.test.js"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\psammead-styles\\src\\font-families.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "./font-families",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-styles\\src\\font-families.js"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-styles\\src\\font-styles.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\psammead-styles\\src\\font-styles.test.js"
    ],
    "outgoingDependencies": [
      {
        "source": "./font-families",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-styles\\src\\font-families.js"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-styles\\src\\font-styles.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "./font-styles",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-styles\\src\\font-styles.js"
      },
      {
        "source": "./font-families",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-styles\\src\\font-families.js"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-styles\\src\\global-styles.jsx": {
    "incomingDependencies": [
      ".storybook\\preview.tsx",
      "src\\app\\legacy\\psammead\\psammead-styles\\src\\global-styles.test.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-styles\\src\\global-styles.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@testing-library/react",
        "resolvedPath": "@testing-library/react"
      },
      {
        "source": "./global-styles",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-styles\\src\\global-styles.jsx"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-styles\\src\\index.stories.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "@storybook/react",
        "resolvedPath": "@storybook/react"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "#psammead/gel-foundations/src/spacings"
      },
      {
        "source": "#psammead/gel-foundations/src/typography",
        "resolvedPath": "#psammead/gel-foundations/src/typography"
      },
      {
        "source": "../../../components/ThemeProvider/fontScripts/latin",
        "resolvedPath": "..\\EXIM\\components\\ThemeProvider\\fontScripts\\latin"
      },
      {
        "source": "@storybook/addon-knobs",
        "resolvedPath": "@storybook/addon-knobs"
      },
      {
        "source": "#psammead/psammead-storybook-helpers/src/withServicesKnob",
        "resolvedPath": "#psammead/psammead-storybook-helpers/src/withServicesKnob"
      },
      {
        "source": "#psammead/psammead-styles/src/font-styles",
        "resolvedPath": "#psammead/psammead-styles/src/font-styles"
      },
      {
        "source": "../README.md",
        "resolvedPath": "..\\EXIM\\Work\\iterate-ai\\README.md"
      },
      {
        "source": "./colours",
        "resolvedPath": "..\\EXIM\\Work\\iterate-ai\\dep-graph\\colours"
      },
      {
        "source": "./detection",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-styles\\src\\detection.js"
      },
      {
        "source": "./fonts",
        "resolvedPath": "..\\EXIM\\Work\\iterate-ai\\dep-graph\\fonts"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-styles\\src\\typography.stories.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@storybook/react",
        "resolvedPath": "@storybook/react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/typography",
        "resolvedPath": "#psammead/gel-foundations/src/typography"
      },
      {
        "source": "../README.md",
        "resolvedPath": "..\\EXIM\\Work\\iterate-ai\\README.md"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-test-helpers\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "./src/index",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-test-helpers\\src\\index.js"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-test-helpers\\src\\index.js": {
    "incomingDependencies": [
      "src\\app\\components\\Curation\\HierarchicalGrid\\index.test.tsx",
      "src\\app\\components\\OptimizelyRecommendations\\index.test.tsx",
      "src\\app\\legacy\\containers\\Brand\\index.test.jsx",
      "src\\app\\legacy\\containers\\CpsRecommendations\\ErrorBoundary.test.tsx",
      "src\\app\\legacy\\psammead\\psammead-test-helpers\\index.test.jsx",
      "src\\app\\pages\\HomePage\\index.test.tsx",
      "src\\app\\routes\\index.test.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@testing-library/react",
        "resolvedPath": "@testing-library/react"
      },
      {
        "source": "ramda/src/clone",
        "resolvedPath": "ramda/src/clone"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-timestamp\\src\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\components\\MostRead\\utilities\\testHelpers.tsx",
      "src\\app\\legacy\\psammead\\psammead-timestamp\\src\\index.stories.jsx",
      "src\\app\\legacy\\psammead\\psammead-timestamp\\src\\index.test.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "#psammead/gel-foundations/src/spacings"
      },
      {
        "source": "#psammead/gel-foundations/src/typography",
        "resolvedPath": "#psammead/gel-foundations/src/typography"
      },
      {
        "source": "#psammead/psammead-styles/src/font-styles",
        "resolvedPath": "#psammead/psammead-styles/src/font-styles"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-timestamp\\src\\index.stories.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@storybook/react",
        "resolvedPath": "@storybook/react"
      },
      {
        "source": "@storybook/addon-knobs",
        "resolvedPath": "@storybook/addon-knobs"
      },
      {
        "source": "#psammead/gel-foundations/src/typography",
        "resolvedPath": "#psammead/gel-foundations/src/typography"
      },
      {
        "source": "#psammead/psammead-storybook-helpers/src",
        "resolvedPath": "#psammead/psammead-storybook-helpers/src"
      },
      {
        "source": "../../../components/ThemeProvider/fontScripts/latin",
        "resolvedPath": "..\\EXIM\\components\\ThemeProvider\\fontScripts\\latin"
      },
      {
        "source": "../README.md",
        "resolvedPath": "..\\EXIM\\Work\\iterate-ai\\README.md"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-timestamp\\src\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-timestamp\\src\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#psammead/gel-foundations/src/typography",
        "resolvedPath": "#psammead/gel-foundations/src/typography"
      },
      {
        "source": "../../../../components/react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "../../../../components/ThemeProvider/fontScripts/latin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-timestamp\\src\\index.jsx"
      },
      {
        "source": "../../../../routes/utils/pageTypes",
        "resolvedPath": "src\\app\\routes\\utils\\pageTypes.ts"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-timestamp-container\\src\\helpers\\testHelpers.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\psammead-timestamp-container\\src\\utilities\\index.test.js"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\psammead-timestamp-container\\src\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\components\\MostRead\\Canonical\\LastUpdated\\index.tsx",
      "src\\app\\legacy\\psammead\\psammead-timestamp-container\\src\\index.stories.jsx",
      "src\\app\\legacy\\psammead\\psammead-timestamp-container\\src\\index.test.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#psammead/psammead-timestamp/src",
        "resolvedPath": "#psammead/psammead-timestamp/src"
      },
      {
        "source": "./utilities",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-timestamp-container\\src\\utilities\\index.js"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-timestamp-container\\src\\index.stories.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@storybook/react",
        "resolvedPath": "@storybook/react"
      },
      {
        "source": "#psammead/psammead-storybook-helpers/src",
        "resolvedPath": "#psammead/psammead-storybook-helpers/src"
      },
      {
        "source": "@storybook/addon-knobs",
        "resolvedPath": "@storybook/addon-knobs"
      },
      {
        "source": "moment",
        "resolvedPath": "moment"
      },
      {
        "source": "#psammead/psammead-calendars/src",
        "resolvedPath": "#psammead/psammead-calendars/src"
      },
      {
        "source": "../README.md",
        "resolvedPath": "..\\EXIM\\Work\\iterate-ai\\README.md"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-timestamp-container\\src\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-timestamp-container\\src\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#psammead/psammead-test-helpers/src",
        "resolvedPath": "#psammead/psammead-test-helpers/src"
      },
      {
        "source": "moment",
        "resolvedPath": "moment"
      },
      {
        "source": "../../../../components/react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "../../../../components/ThemeProvider/fontScripts/latin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts"
      },
      {
        "source": "#psammead/psammead-locales/moment/ha",
        "resolvedPath": "#psammead/psammead-locales/moment/ha"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-timestamp-container\\src\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-timestamp-container\\src\\utilities\\index.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\psammead-timestamp-container\\src\\index.jsx",
      "src\\app\\legacy\\psammead\\psammead-timestamp-container\\src\\utilities\\index.test.js"
    ],
    "outgoingDependencies": [
      {
        "source": "moment-timezone",
        "resolvedPath": "moment-timezone"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-timestamp-container\\src\\utilities\\index.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "moment-timezone",
        "resolvedPath": "moment-timezone"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-timestamp-container\\src\\utilities\\index.js"
      },
      {
        "source": "../helpers/testHelpers",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-timestamp-container\\src\\helpers\\testHelpers.js"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-topic-tags\\src\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\psammead-topic-tags\\src\\index.stories.jsx",
      "src\\app\\legacy\\psammead\\psammead-topic-tags\\src\\index.test.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#app/components/ThemeProvider/palette",
        "resolvedPath": "#app/components/ThemeProvider/palette"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "#psammead/gel-foundations/src/spacings"
      },
      {
        "source": "#psammead/psammead-styles/src/font-styles",
        "resolvedPath": "#psammead/psammead-styles/src/font-styles"
      },
      {
        "source": "#psammead/gel-foundations/src/typography",
        "resolvedPath": "#psammead/gel-foundations/src/typography"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-topic-tags\\src\\index.stories.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@storybook/react",
        "resolvedPath": "@storybook/react"
      },
      {
        "source": "@storybook/addon-knobs",
        "resolvedPath": "@storybook/addon-knobs"
      },
      {
        "source": "#psammead/psammead-storybook-helpers/src",
        "resolvedPath": "#psammead/psammead-storybook-helpers/src"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-topic-tags\\src\\index.jsx"
      },
      {
        "source": "../README.md",
        "resolvedPath": "..\\EXIM\\Work\\iterate-ai\\README.md"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-topic-tags\\src\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../../../../components/react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "../../../../components/ThemeProvider/fontScripts/latin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts"
      },
      {
        "source": "../../../../components/ThemeProvider/fontScripts/burmese",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\burmese.ts"
      },
      {
        "source": "../../../../components/ThemeProvider/fontScripts/arabic",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\arabic.ts"
      },
      {
        "source": "./index",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-topic-tags\\src\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-useful-links\\src\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\psammead-useful-links\\src\\index.stories.jsx",
      "src\\app\\legacy\\psammead\\psammead-useful-links\\src\\index.test.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/psammead-styles/src/font-styles",
        "resolvedPath": "#psammead/psammead-styles/src/font-styles"
      },
      {
        "source": "#psammead/psammead-styles/src/detection",
        "resolvedPath": "#psammead/psammead-styles/src/detection"
      },
      {
        "source": "#psammead/gel-foundations/src/typography",
        "resolvedPath": "#psammead/gel-foundations/src/typography"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "#psammead/gel-foundations/src/spacings"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "#psammead/gel-foundations/src/breakpoints"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-useful-links\\src\\index.stories.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@storybook/react",
        "resolvedPath": "@storybook/react"
      },
      {
        "source": "@storybook/addon-knobs",
        "resolvedPath": "@storybook/addon-knobs"
      },
      {
        "source": "#psammead/psammead-storybook-helpers/src",
        "resolvedPath": "#psammead/psammead-storybook-helpers/src"
      },
      {
        "source": "./index",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-useful-links\\src\\index.jsx"
      },
      {
        "source": "../README.md",
        "resolvedPath": "..\\EXIM\\Work\\iterate-ai\\README.md"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-useful-links\\src\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../../../../components/react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "../../../../components/ThemeProvider/fontScripts/latin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts"
      },
      {
        "source": "./index",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-useful-links\\src\\index.jsx"
      }
    ]
  },
  "src\\app\\lib\\analyticsUtils\\analytics.const.js": {
    "incomingDependencies": [
      "src\\app\\lib\\analyticsUtils\\index.js"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\lib\\analyticsUtils\\getAmpDestination\\index.js": {
    "incomingDependencies": [
      "src\\app\\lib\\analyticsUtils\\getAmpDestination\\index.test.js",
      "src\\app\\lib\\analyticsUtils\\index.js"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\lib\\analyticsUtils\\getAmpDestination\\index.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "./index",
        "resolvedPath": "src\\app\\lib\\analyticsUtils\\getAmpDestination\\index.js"
      }
    ]
  },
  "src\\app\\lib\\analyticsUtils\\index.js": {
    "incomingDependencies": [
      "src\\app\\components\\ATIAnalytics\\atiUrl\\index.test.ts",
      "src\\app\\components\\ATIAnalytics\\atiUrl\\index.ts",
      "src\\app\\components\\ATIAnalytics\\beacon\\index.test.ts",
      "src\\app\\components\\ATIAnalytics\\params\\genericPage\\buildParams.ts",
      "src\\app\\components\\ATIAnalytics\\params\\index.test.ts",
      "src\\app\\components\\ATIAnalytics\\params\\indexPage\\buildParams.ts",
      "src\\app\\components\\ATIAnalytics\\params\\topicPage\\buildParams.ts",
      "src\\app\\components\\ATIAnalytics\\params\\tvRadioPage\\buildParams.ts",
      "src\\app\\components\\ChartbeatAnalytics\\utils\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "js-cookie",
        "resolvedPath": "js-cookie"
      },
      {
        "source": "uuid",
        "resolvedPath": "uuid"
      },
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "ramda/src/path",
        "resolvedPath": "ramda/src/path"
      },
      {
        "source": "url-parse",
        "resolvedPath": "url-parse"
      },
      {
        "source": "../utilities/onClient",
        "resolvedPath": "src\\app\\lib\\utilities\\onClient\\index.js"
      },
      {
        "source": "../utilities/isOperaProxy",
        "resolvedPath": "src\\app\\lib\\utilities\\isOperaProxy\\index.js"
      },
      {
        "source": "./analytics.const",
        "resolvedPath": "src\\app\\lib\\analyticsUtils\\analytics.const.js"
      },
      {
        "source": "./getAmpDestination",
        "resolvedPath": "src\\app\\lib\\analyticsUtils\\getAmpDestination\\index.js"
      }
    ]
  },
  "src\\app\\lib\\analyticsUtils\\index.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "js-cookie",
        "resolvedPath": "js-cookie"
      },
      {
        "source": "#psammead/psammead-test-helpers/src",
        "resolvedPath": "#psammead/psammead-test-helpers/src"
      },
      {
        "source": "../utilities/onClient",
        "resolvedPath": "src\\app\\lib\\utilities\\onClient\\index.js"
      }
    ]
  },
  "src\\app\\lib\\analyticsUtils\\indexPage\\index.js": {
    "incomingDependencies": [
      "src\\app\\components\\ATIAnalytics\\params\\indexPage\\buildParams.ts",
      "src\\app\\lib\\analyticsUtils\\indexPage\\index.test.js"
    ],
    "outgoingDependencies": [
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      }
    ]
  },
  "src\\app\\lib\\analyticsUtils\\indexPage\\index.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\lib\\analyticsUtils\\indexPage\\index.js"
      }
    ]
  },
  "src\\app\\lib\\analyticsUtils\\sendBeacon\\index.js": {
    "incomingDependencies": [
      "src\\app\\components\\ATIAnalytics\\beacon\\index.test.ts",
      "src\\app\\components\\ATIAnalytics\\beacon\\index.ts",
      "src\\app\\components\\ATIAnalytics\\canonical\\index.test.tsx",
      "src\\app\\components\\ATIAnalytics\\canonical\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../../utilities/onClient",
        "resolvedPath": "src\\app\\lib\\utilities\\onClient\\index.js"
      },
      {
        "source": "../../logger.node",
        "resolvedPath": "src\\app\\lib\\logger.node.js"
      },
      {
        "source": "../../logger.const",
        "resolvedPath": "src\\app\\lib\\logger.const.js"
      },
      {
        "source": "isomorphic-fetch",
        "resolvedPath": "isomorphic-fetch"
      }
    ]
  },
  "src\\app\\lib\\analyticsUtils\\sendBeacon\\index.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "#testHelpers/loggerMock",
        "resolvedPath": "#testHelpers/loggerMock"
      },
      {
        "source": "#app/lib/logger.const",
        "resolvedPath": "#app/lib/logger.const"
      }
    ]
  },
  "src\\app\\lib\\config\\optimizely\\index.js": {
    "incomingDependencies": [
      "src\\app\\hooks\\useClickTrackerHandler\\index.jsx",
      "src\\app\\hooks\\useViewTracker\\index.jsx"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\lib\\config\\services\\afaanoromoo.ts": {
    "incomingDependencies": [
      "src\\server\\utilities\\serviceConfigs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../components/ThemeProvider/fontScripts/latin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts"
      },
      {
        "source": "#psammead/moment-timezone-include/tz/Africa/Addis_Ababa",
        "resolvedPath": "#psammead/moment-timezone-include/tz/Africa/Addis_Ababa"
      },
      {
        "source": "#psammead/psammead-locales/moment/om",
        "resolvedPath": "#psammead/psammead-locales/moment/om"
      },
      {
        "source": "../../../contexts/utils/withContext",
        "resolvedPath": "src\\app\\contexts\\utils\\withContext\\index.jsx"
      },
      {
        "source": "../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      }
    ]
  },
  "src\\app\\lib\\config\\services\\afrique.ts": {
    "incomingDependencies": [
      "src\\server\\utilities\\serviceConfigs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../components/ThemeProvider/fontScripts/latinWithDiacritics",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latinWithDiacritics.ts"
      },
      {
        "source": "#psammead/moment-timezone-include/tz/GMT",
        "resolvedPath": "#psammead/moment-timezone-include/tz/GMT"
      },
      {
        "source": "../../../contexts/utils/withContext",
        "resolvedPath": "src\\app\\contexts\\utils\\withContext\\index.jsx"
      },
      {
        "source": "moment/locale/fr",
        "resolvedPath": "moment/locale/fr"
      },
      {
        "source": "../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      }
    ]
  },
  "src\\app\\lib\\config\\services\\amharic.ts": {
    "incomingDependencies": [
      "src\\server\\utilities\\serviceConfigs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../components/ThemeProvider/fontScripts/noAscOrDesc",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\noAscOrDesc.ts"
      },
      {
        "source": "#psammead/moment-timezone-include/tz/Africa/Addis_Ababa",
        "resolvedPath": "#psammead/moment-timezone-include/tz/Africa/Addis_Ababa"
      },
      {
        "source": "#psammead/psammead-locales/moment/am",
        "resolvedPath": "#psammead/psammead-locales/moment/am"
      },
      {
        "source": "../../../contexts/utils/withContext",
        "resolvedPath": "src\\app\\contexts\\utils\\withContext\\index.jsx"
      },
      {
        "source": "../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      }
    ]
  },
  "src\\app\\lib\\config\\services\\arabic.ts": {
    "incomingDependencies": [
      "src\\server\\utilities\\serviceConfigs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../components/ThemeProvider/fontScripts/arabic",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\arabic.ts"
      },
      {
        "source": "#psammead/psammead-locales/moment/ar",
        "resolvedPath": "#psammead/psammead-locales/moment/ar"
      },
      {
        "source": "#psammead/moment-timezone-include/tz/GMT",
        "resolvedPath": "#psammead/moment-timezone-include/tz/GMT"
      },
      {
        "source": "../../../contexts/utils/withContext",
        "resolvedPath": "src\\app\\contexts\\utils\\withContext\\index.jsx"
      },
      {
        "source": "../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      }
    ]
  },
  "src\\app\\lib\\config\\services\\archive.ts": {
    "incomingDependencies": [
      "src\\server\\utilities\\serviceConfigs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../components/ThemeProvider/fontScripts/latin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts"
      },
      {
        "source": "#psammead/psammead-locales/moment/en-gb",
        "resolvedPath": "#psammead/psammead-locales/moment/en-gb"
      },
      {
        "source": "#psammead/moment-timezone-include/tz/Europe/London",
        "resolvedPath": "#psammead/moment-timezone-include/tz/Europe/London"
      },
      {
        "source": "../../../contexts/utils/withContext",
        "resolvedPath": "src\\app\\contexts\\utils\\withContext\\index.jsx"
      },
      {
        "source": "../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      }
    ]
  },
  "src\\app\\lib\\config\\services\\azeri.ts": {
    "incomingDependencies": [
      "src\\server\\utilities\\serviceConfigs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "#psammead/moment-timezone-include/tz/Asia/Baku",
        "resolvedPath": "#psammead/moment-timezone-include/tz/Asia/Baku"
      },
      {
        "source": "#psammead/psammead-locales/moment/az",
        "resolvedPath": "#psammead/psammead-locales/moment/az"
      },
      {
        "source": "../../../components/ThemeProvider/fontScripts/latinWithDiacritics",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latinWithDiacritics.ts"
      },
      {
        "source": "../../../contexts/utils/withContext",
        "resolvedPath": "src\\app\\contexts\\utils\\withContext\\index.jsx"
      },
      {
        "source": "../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      }
    ]
  },
  "src\\app\\lib\\config\\services\\bengali.ts": {
    "incomingDependencies": [
      "src\\server\\utilities\\serviceConfigs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../components/ThemeProvider/fontScripts/bengali",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\bengali.ts"
      },
      {
        "source": "#psammead/moment-timezone-include/tz/Asia/Dhaka",
        "resolvedPath": "#psammead/moment-timezone-include/tz/Asia/Dhaka"
      },
      {
        "source": "#psammead/psammead-locales/moment/bn",
        "resolvedPath": "#psammead/psammead-locales/moment/bn"
      },
      {
        "source": "../../../contexts/utils/withContext",
        "resolvedPath": "src\\app\\contexts\\utils\\withContext\\index.jsx"
      },
      {
        "source": "../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      }
    ]
  },
  "src\\app\\lib\\config\\services\\burmese.ts": {
    "incomingDependencies": [
      "src\\server\\utilities\\serviceConfigs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../components/ThemeProvider/fontScripts/burmese",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\burmese.ts"
      },
      {
        "source": "#psammead/moment-timezone-include/tz/GMT",
        "resolvedPath": "#psammead/moment-timezone-include/tz/GMT"
      },
      {
        "source": "../../../contexts/utils/withContext",
        "resolvedPath": "src\\app\\contexts\\utils\\withContext\\index.jsx"
      },
      {
        "source": "moment/locale/my",
        "resolvedPath": "moment/locale/my"
      },
      {
        "source": "../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      }
    ]
  },
  "src\\app\\lib\\config\\services\\cymrufyw.ts": {
    "incomingDependencies": [
      "src\\server\\utilities\\serviceConfigs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "#psammead/moment-timezone-include/tz/Europe/London",
        "resolvedPath": "#psammead/moment-timezone-include/tz/Europe/London"
      },
      {
        "source": "../../../components/ThemeProvider/fontScripts/latinWithDiacritics",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latinWithDiacritics.ts"
      },
      {
        "source": "../../../contexts/utils/withContext",
        "resolvedPath": "src\\app\\contexts\\utils\\withContext\\index.jsx"
      },
      {
        "source": "moment/locale/cy",
        "resolvedPath": "moment/locale/cy"
      },
      {
        "source": "../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      }
    ]
  },
  "src\\app\\lib\\config\\services\\gahuza.ts": {
    "incomingDependencies": [
      "src\\server\\utilities\\serviceConfigs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../components/ThemeProvider/fontScripts/latin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts"
      },
      {
        "source": "#psammead/moment-timezone-include/tz/GMT",
        "resolvedPath": "#psammead/moment-timezone-include/tz/GMT"
      },
      {
        "source": "#psammead/psammead-locales/moment/rw",
        "resolvedPath": "#psammead/psammead-locales/moment/rw"
      },
      {
        "source": "../../../contexts/utils/withContext",
        "resolvedPath": "src\\app\\contexts\\utils\\withContext\\index.jsx"
      },
      {
        "source": "../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      }
    ]
  },
  "src\\app\\lib\\config\\services\\gujarati.ts": {
    "incomingDependencies": [
      "src\\server\\utilities\\serviceConfigs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../components/ThemeProvider/fontScripts/devanagari",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\devanagari.ts"
      },
      {
        "source": "#psammead/moment-timezone-include/tz/Asia/Kolkata",
        "resolvedPath": "#psammead/moment-timezone-include/tz/Asia/Kolkata"
      },
      {
        "source": "#psammead/psammead-locales/moment/gu",
        "resolvedPath": "#psammead/psammead-locales/moment/gu"
      },
      {
        "source": "../../../contexts/utils/withContext",
        "resolvedPath": "src\\app\\contexts\\utils\\withContext\\index.jsx"
      },
      {
        "source": "../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      }
    ]
  },
  "src\\app\\lib\\config\\services\\hausa.ts": {
    "incomingDependencies": [
      "src\\server\\utilities\\serviceConfigs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../components/ThemeProvider/fontScripts/latin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts"
      },
      {
        "source": "#psammead/moment-timezone-include/tz/GMT",
        "resolvedPath": "#psammead/moment-timezone-include/tz/GMT"
      },
      {
        "source": "#psammead/psammead-locales/moment/ha",
        "resolvedPath": "#psammead/psammead-locales/moment/ha"
      },
      {
        "source": "../../../contexts/utils/withContext",
        "resolvedPath": "src\\app\\contexts\\utils\\withContext\\index.jsx"
      },
      {
        "source": "../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      }
    ]
  },
  "src\\app\\lib\\config\\services\\hindi.ts": {
    "incomingDependencies": [
      "src\\server\\utilities\\serviceConfigs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../components/ThemeProvider/fontScripts/devanagari",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\devanagari.ts"
      },
      {
        "source": "#psammead/moment-timezone-include/tz/Asia/Kolkata",
        "resolvedPath": "#psammead/moment-timezone-include/tz/Asia/Kolkata"
      },
      {
        "source": "#psammead/psammead-locales/moment/hi",
        "resolvedPath": "#psammead/psammead-locales/moment/hi"
      },
      {
        "source": "../../../contexts/utils/withContext",
        "resolvedPath": "src\\app\\contexts\\utils\\withContext\\index.jsx"
      },
      {
        "source": "../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      }
    ]
  },
  "src\\app\\lib\\config\\services\\igbo.ts": {
    "incomingDependencies": [
      "src\\server\\utilities\\serviceConfigs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../components/ThemeProvider/fontScripts/latin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts"
      },
      {
        "source": "#psammead/psammead-locales/moment/ig",
        "resolvedPath": "#psammead/psammead-locales/moment/ig"
      },
      {
        "source": "#psammead/moment-timezone-include/tz/Africa/Lagos",
        "resolvedPath": "#psammead/moment-timezone-include/tz/Africa/Lagos"
      },
      {
        "source": "../../../contexts/utils/withContext",
        "resolvedPath": "src\\app\\contexts\\utils\\withContext\\index.jsx"
      },
      {
        "source": "../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      }
    ]
  },
  "src\\app\\lib\\config\\services\\indonesia.ts": {
    "incomingDependencies": [
      "src\\server\\utilities\\serviceConfigs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../components/ThemeProvider/fontScripts/latin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts"
      },
      {
        "source": "#psammead/moment-timezone-include/tz/Asia/Jakarta",
        "resolvedPath": "#psammead/moment-timezone-include/tz/Asia/Jakarta"
      },
      {
        "source": "moment/locale/id",
        "resolvedPath": "moment/locale/id"
      },
      {
        "source": "../../../contexts/utils/withContext",
        "resolvedPath": "src\\app\\contexts\\utils\\withContext\\index.jsx"
      },
      {
        "source": "../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      }
    ]
  },
  "src\\app\\lib\\config\\services\\japanese.ts": {
    "incomingDependencies": [
      "src\\server\\utilities\\serviceConfigs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../components/ThemeProvider/fontScripts/noAscOrDesc",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\noAscOrDesc.ts"
      },
      {
        "source": "#psammead/moment-timezone-include/tz/Asia/Tokyo",
        "resolvedPath": "#psammead/moment-timezone-include/tz/Asia/Tokyo"
      },
      {
        "source": "moment/locale/ja",
        "resolvedPath": "moment/locale/ja"
      },
      {
        "source": "../../../contexts/utils/withContext",
        "resolvedPath": "src\\app\\contexts\\utils\\withContext\\index.jsx"
      },
      {
        "source": "../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      }
    ]
  },
  "src\\app\\lib\\config\\services\\korean.ts": {
    "incomingDependencies": [
      "src\\server\\utilities\\serviceConfigs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../components/ThemeProvider/fontScripts/noAscOrDesc",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\noAscOrDesc.ts"
      },
      {
        "source": "#psammead/moment-timezone-include/tz/Asia/Seoul",
        "resolvedPath": "#psammead/moment-timezone-include/tz/Asia/Seoul"
      },
      {
        "source": "../../../contexts/utils/withContext",
        "resolvedPath": "src\\app\\contexts\\utils\\withContext\\index.jsx"
      },
      {
        "source": "moment/locale/ko",
        "resolvedPath": "moment/locale/ko"
      },
      {
        "source": "../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      }
    ]
  },
  "src\\app\\lib\\config\\services\\kyrgyz.ts": {
    "incomingDependencies": [
      "src\\server\\utilities\\serviceConfigs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../components/ThemeProvider/fontScripts/cyrillic",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\cyrillic.ts"
      },
      {
        "source": "#psammead/moment-timezone-include/tz/GMT",
        "resolvedPath": "#psammead/moment-timezone-include/tz/GMT"
      },
      {
        "source": "#psammead/psammead-locales/moment/ky",
        "resolvedPath": "#psammead/psammead-locales/moment/ky"
      },
      {
        "source": "../../../contexts/utils/withContext",
        "resolvedPath": "src\\app\\contexts\\utils\\withContext\\index.jsx"
      },
      {
        "source": "../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      }
    ]
  },
  "src\\app\\lib\\config\\services\\loadableConfig.ts": {
    "incomingDependencies": [
      "src\\app\\contexts\\ServiceContext\\index.tsx",
      "src\\app\\routes\\utils\\fetchPageData\\utils\\getRouteProps\\fallbackServiceParam\\index.js",
      "src\\app\\routes\\utils\\regex\\index.js",
      "src\\app\\routes\\utils\\regex\\index.test.js",
      "src\\app\\routes\\utils\\regex\\utils\\index.test.js"
    ],
    "outgoingDependencies": [
      {
        "source": "@loadable/component",
        "resolvedPath": "@loadable/component"
      }
    ]
  },
  "src\\app\\lib\\config\\services\\marathi.ts": {
    "incomingDependencies": [
      "src\\server\\utilities\\serviceConfigs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../components/ThemeProvider/fontScripts/devanagari",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\devanagari.ts"
      },
      {
        "source": "#psammead/moment-timezone-include/tz/Asia/Kolkata",
        "resolvedPath": "#psammead/moment-timezone-include/tz/Asia/Kolkata"
      },
      {
        "source": "#psammead/psammead-locales/moment/mr",
        "resolvedPath": "#psammead/psammead-locales/moment/mr"
      },
      {
        "source": "../../../contexts/utils/withContext",
        "resolvedPath": "src\\app\\contexts\\utils\\withContext\\index.jsx"
      },
      {
        "source": "../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      }
    ]
  },
  "src\\app\\lib\\config\\services\\mundo.ts": {
    "incomingDependencies": [
      "src\\server\\utilities\\serviceConfigs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../components/ThemeProvider/fontScripts/latinWithDiacritics",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latinWithDiacritics.ts"
      },
      {
        "source": "#psammead/moment-timezone-include/tz/GMT",
        "resolvedPath": "#psammead/moment-timezone-include/tz/GMT"
      },
      {
        "source": "#psammead/psammead-locales/moment/es",
        "resolvedPath": "#psammead/psammead-locales/moment/es"
      },
      {
        "source": "../../../contexts/utils/withContext",
        "resolvedPath": "src\\app\\contexts\\utils\\withContext\\index.jsx"
      },
      {
        "source": "../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      }
    ]
  },
  "src\\app\\lib\\config\\services\\naidheachdan.ts": {
    "incomingDependencies": [
      "src\\server\\utilities\\serviceConfigs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../components/ThemeProvider/fontScripts/latinWithDiacritics",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latinWithDiacritics.ts"
      },
      {
        "source": "#psammead/moment-timezone-include/tz/Europe/London",
        "resolvedPath": "#psammead/moment-timezone-include/tz/Europe/London"
      },
      {
        "source": "../../../contexts/utils/withContext",
        "resolvedPath": "src\\app\\contexts\\utils\\withContext\\index.jsx"
      },
      {
        "source": "moment/locale/gd",
        "resolvedPath": "moment/locale/gd"
      },
      {
        "source": "../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      }
    ]
  },
  "src\\app\\lib\\config\\services\\nepali.ts": {
    "incomingDependencies": [
      "src\\server\\utilities\\serviceConfigs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../components/ThemeProvider/fontScripts/devanagari",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\devanagari.ts"
      },
      {
        "source": "#psammead/moment-timezone-include/tz/Asia/Kathmandu",
        "resolvedPath": "#psammead/moment-timezone-include/tz/Asia/Kathmandu"
      },
      {
        "source": "#psammead/psammead-locales/moment/ne",
        "resolvedPath": "#psammead/psammead-locales/moment/ne"
      },
      {
        "source": "../../../contexts/utils/withContext",
        "resolvedPath": "src\\app\\contexts\\utils\\withContext\\index.jsx"
      },
      {
        "source": "../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      }
    ]
  },
  "src\\app\\lib\\config\\services\\news.ts": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\Navigation\\index.test.jsx",
      "src\\app\\pages\\FrontPage\\index.stories.jsx",
      "src\\server\\utilities\\serviceConfigs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../components/ThemeProvider/fontScripts/latin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts"
      },
      {
        "source": "#psammead/psammead-locales/moment/en-gb",
        "resolvedPath": "#psammead/psammead-locales/moment/en-gb"
      },
      {
        "source": "#psammead/moment-timezone-include/tz/Europe/London",
        "resolvedPath": "#psammead/moment-timezone-include/tz/Europe/London"
      },
      {
        "source": "../../../contexts/utils/withContext",
        "resolvedPath": "src\\app\\contexts\\utils\\withContext\\index.jsx"
      },
      {
        "source": "../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      }
    ]
  },
  "src\\app\\lib\\config\\services\\newsround.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../../../components/ThemeProvider/fontScripts/latin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts"
      },
      {
        "source": "#psammead/psammead-locales/moment/en-gb",
        "resolvedPath": "#psammead/psammead-locales/moment/en-gb"
      },
      {
        "source": "#psammead/moment-timezone-include/tz/Europe/London",
        "resolvedPath": "#psammead/moment-timezone-include/tz/Europe/London"
      },
      {
        "source": "../../../contexts/utils/withContext",
        "resolvedPath": "src\\app\\contexts\\utils\\withContext\\index.jsx"
      },
      {
        "source": "../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      },
      {
        "source": "../../../models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global.ts"
      }
    ]
  },
  "src\\app\\lib\\config\\services\\pashto.ts": {
    "incomingDependencies": [
      "src\\server\\utilities\\serviceConfigs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../components/ThemeProvider/fontScripts/arabic",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\arabic.ts"
      },
      {
        "source": "#psammead/psammead-locales/moment/ps",
        "resolvedPath": "#psammead/psammead-locales/moment/ps"
      },
      {
        "source": "#psammead/moment-timezone-include/tz/GMT",
        "resolvedPath": "#psammead/moment-timezone-include/tz/GMT"
      },
      {
        "source": "../../../legacy/psammead/psammead-calendars/src",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-calendars\\src\\index.js"
      },
      {
        "source": "../../../contexts/utils/withContext",
        "resolvedPath": "src\\app\\contexts\\utils\\withContext\\index.jsx"
      },
      {
        "source": "../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      }
    ]
  },
  "src\\app\\lib\\config\\services\\persian.ts": {
    "incomingDependencies": [
      "src\\server\\utilities\\serviceConfigs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../components/ThemeProvider/fontScripts/arabic",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\arabic.ts"
      },
      {
        "source": "moment/locale/fa",
        "resolvedPath": "moment/locale/fa"
      },
      {
        "source": "#psammead/moment-timezone-include/tz/GMT",
        "resolvedPath": "#psammead/moment-timezone-include/tz/GMT"
      },
      {
        "source": "../../../legacy/psammead/psammead-calendars/src",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-calendars\\src\\index.js"
      },
      {
        "source": "../../../contexts/utils/withContext",
        "resolvedPath": "src\\app\\contexts\\utils\\withContext\\index.jsx"
      },
      {
        "source": "../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      }
    ]
  },
  "src\\app\\lib\\config\\services\\pidgin.ts": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\ConsentBanner\\a11y.test.jsx",
      "src\\app\\legacy\\containers\\Header\\index.test.jsx",
      "src\\app\\routes\\utils\\getConfig\\index.test.js",
      "src\\server\\utilities\\serviceConfigs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../components/ThemeProvider/fontScripts/latin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts"
      },
      {
        "source": "#psammead/psammead-locales/moment/pcm",
        "resolvedPath": "#psammead/psammead-locales/moment/pcm"
      },
      {
        "source": "#psammead/moment-timezone-include/tz/Africa/Lagos",
        "resolvedPath": "#psammead/moment-timezone-include/tz/Africa/Lagos"
      },
      {
        "source": "../../../contexts/utils/withContext",
        "resolvedPath": "src\\app\\contexts\\utils\\withContext\\index.jsx"
      },
      {
        "source": "../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      }
    ]
  },
  "src\\app\\lib\\config\\services\\portuguese.ts": {
    "incomingDependencies": [
      "src\\server\\utilities\\serviceConfigs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../components/ThemeProvider/fontScripts/latinWithDiacritics",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latinWithDiacritics.ts"
      },
      {
        "source": "#psammead/moment-timezone-include/tz/America/Sao_Paulo",
        "resolvedPath": "#psammead/moment-timezone-include/tz/America/Sao_Paulo"
      },
      {
        "source": "#psammead/psammead-locales/moment/pt-br",
        "resolvedPath": "#psammead/psammead-locales/moment/pt-br"
      },
      {
        "source": "../../../contexts/utils/withContext",
        "resolvedPath": "src\\app\\contexts\\utils\\withContext\\index.jsx"
      },
      {
        "source": "../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      }
    ]
  },
  "src\\app\\lib\\config\\services\\punjabi.ts": {
    "incomingDependencies": [
      "src\\server\\utilities\\serviceConfigs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../components/ThemeProvider/fontScripts/gurmukhi",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\gurmukhi.ts"
      },
      {
        "source": "#psammead/psammead-locales/moment/pa-in",
        "resolvedPath": "#psammead/psammead-locales/moment/pa-in"
      },
      {
        "source": "#psammead/moment-timezone-include/tz/Asia/Kolkata",
        "resolvedPath": "#psammead/moment-timezone-include/tz/Asia/Kolkata"
      },
      {
        "source": "../../../contexts/utils/withContext",
        "resolvedPath": "src\\app\\contexts\\utils\\withContext\\index.jsx"
      },
      {
        "source": "../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      }
    ]
  },
  "src\\app\\lib\\config\\services\\russian.ts": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\PodcastPromo\\index.test.jsx",
      "src\\app\\lib\\config\\services\\ukrainian.ts",
      "src\\server\\utilities\\serviceConfigs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../components/ThemeProvider/fontScripts/latin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts"
      },
      {
        "source": "#psammead/moment-timezone-include/tz/GMT",
        "resolvedPath": "#psammead/moment-timezone-include/tz/GMT"
      },
      {
        "source": "#psammead/psammead-locales/moment/ru",
        "resolvedPath": "#psammead/psammead-locales/moment/ru"
      },
      {
        "source": "../../../contexts/utils/withContext",
        "resolvedPath": "src\\app\\contexts\\utils\\withContext\\index.jsx"
      },
      {
        "source": "../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      }
    ]
  },
  "src\\app\\lib\\config\\services\\scotland.ts": {
    "incomingDependencies": [
      "src\\server\\utilities\\serviceConfigs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../components/ThemeProvider/fontScripts/latin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts"
      },
      {
        "source": "#psammead/psammead-locales/moment/en-gb",
        "resolvedPath": "#psammead/psammead-locales/moment/en-gb"
      },
      {
        "source": "#psammead/moment-timezone-include/tz/Europe/London",
        "resolvedPath": "#psammead/moment-timezone-include/tz/Europe/London"
      },
      {
        "source": "../../../contexts/utils/withContext",
        "resolvedPath": "src\\app\\contexts\\utils\\withContext\\index.jsx"
      },
      {
        "source": "../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      }
    ]
  },
  "src\\app\\lib\\config\\services\\serbian.ts": {
    "incomingDependencies": [
      "src\\app\\components\\Header\\ScriptLink\\index.test.tsx",
      "src\\app\\pages\\FrontPage\\index.stories.jsx",
      "src\\app\\routes\\utils\\getConfig\\index.test.js",
      "src\\server\\utilities\\serviceConfigs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../components/ThemeProvider/fontScripts/latinWithDiacritics",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latinWithDiacritics.ts"
      },
      {
        "source": "../../../components/ThemeProvider/fontScripts/cyrillic",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\cyrillic.ts"
      },
      {
        "source": "#psammead/moment-timezone-include/tz/GMT",
        "resolvedPath": "#psammead/moment-timezone-include/tz/GMT"
      },
      {
        "source": "#psammead/psammead-locales/moment/sr-cyrl",
        "resolvedPath": "#psammead/psammead-locales/moment/sr-cyrl"
      },
      {
        "source": "#psammead/psammead-locales/moment/sr",
        "resolvedPath": "#psammead/psammead-locales/moment/sr"
      },
      {
        "source": "../../../contexts/utils/withContext",
        "resolvedPath": "src\\app\\contexts\\utils\\withContext\\index.jsx"
      },
      {
        "source": "../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      },
      {
        "source": "../../../models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global.ts"
      }
    ]
  },
  "src\\app\\lib\\config\\services\\sinhala.ts": {
    "incomingDependencies": [
      "src\\server\\utilities\\serviceConfigs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../components/ThemeProvider/fontScripts/sinhalese",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\sinhalese.ts"
      },
      {
        "source": "#psammead/moment-timezone-include/tz/GMT",
        "resolvedPath": "#psammead/moment-timezone-include/tz/GMT"
      },
      {
        "source": "#psammead/psammead-locales/moment/si",
        "resolvedPath": "#psammead/psammead-locales/moment/si"
      },
      {
        "source": "../../../contexts/utils/withContext",
        "resolvedPath": "src\\app\\contexts\\utils\\withContext\\index.jsx"
      },
      {
        "source": "../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      }
    ]
  },
  "src\\app\\lib\\config\\services\\somali.ts": {
    "incomingDependencies": [
      "src\\server\\utilities\\serviceConfigs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../components/ThemeProvider/fontScripts/latin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts"
      },
      {
        "source": "#psammead/moment-timezone-include/tz/Africa/Mogadishu",
        "resolvedPath": "#psammead/moment-timezone-include/tz/Africa/Mogadishu"
      },
      {
        "source": "#psammead/psammead-locales/moment/so",
        "resolvedPath": "#psammead/psammead-locales/moment/so"
      },
      {
        "source": "../../../contexts/utils/withContext",
        "resolvedPath": "src\\app\\contexts\\utils\\withContext\\index.jsx"
      },
      {
        "source": "../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      }
    ]
  },
  "src\\app\\lib\\config\\services\\sport.ts": {
    "incomingDependencies": [
      "src\\server\\utilities\\serviceConfigs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../components/ThemeProvider/fontScripts/latin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts"
      },
      {
        "source": "#psammead/psammead-locales/moment/en-gb",
        "resolvedPath": "#psammead/psammead-locales/moment/en-gb"
      },
      {
        "source": "#psammead/moment-timezone-include/tz/Europe/London",
        "resolvedPath": "#psammead/moment-timezone-include/tz/Europe/London"
      },
      {
        "source": "../../../contexts/utils/withContext",
        "resolvedPath": "src\\app\\contexts\\utils\\withContext\\index.jsx"
      },
      {
        "source": "../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      }
    ]
  },
  "src\\app\\lib\\config\\services\\swahili.ts": {
    "incomingDependencies": [
      "src\\server\\utilities\\serviceConfigs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../components/ThemeProvider/fontScripts/latin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts"
      },
      {
        "source": "#psammead/moment-timezone-include/tz/Africa/Nairobi",
        "resolvedPath": "#psammead/moment-timezone-include/tz/Africa/Nairobi"
      },
      {
        "source": "#psammead/psammead-locales/moment/sw",
        "resolvedPath": "#psammead/psammead-locales/moment/sw"
      },
      {
        "source": "../../../contexts/utils/withContext",
        "resolvedPath": "src\\app\\contexts\\utils\\withContext\\index.jsx"
      },
      {
        "source": "../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      }
    ]
  },
  "src\\app\\lib\\config\\services\\tamil.ts": {
    "incomingDependencies": [
      "src\\server\\utilities\\serviceConfigs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../components/ThemeProvider/fontScripts/tamil",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\tamil.ts"
      },
      {
        "source": "#psammead/moment-timezone-include/tz/GMT",
        "resolvedPath": "#psammead/moment-timezone-include/tz/GMT"
      },
      {
        "source": "#psammead/psammead-locales/moment/ta",
        "resolvedPath": "#psammead/psammead-locales/moment/ta"
      },
      {
        "source": "../../../contexts/utils/withContext",
        "resolvedPath": "src\\app\\contexts\\utils\\withContext\\index.jsx"
      },
      {
        "source": "../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      }
    ]
  },
  "src\\app\\lib\\config\\services\\telugu.ts": {
    "incomingDependencies": [
      "src\\server\\utilities\\serviceConfigs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../components/ThemeProvider/fontScripts/devanagari",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\devanagari.ts"
      },
      {
        "source": "#psammead/moment-timezone-include/tz/Asia/Kolkata",
        "resolvedPath": "#psammead/moment-timezone-include/tz/Asia/Kolkata"
      },
      {
        "source": "../../../contexts/utils/withContext",
        "resolvedPath": "src\\app\\contexts\\utils\\withContext\\index.jsx"
      },
      {
        "source": "moment/locale/te",
        "resolvedPath": "moment/locale/te"
      },
      {
        "source": "../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      }
    ]
  },
  "src\\app\\lib\\config\\services\\thai.ts": {
    "incomingDependencies": [
      "src\\server\\utilities\\serviceConfigs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../components/ThemeProvider/fontScripts/thai",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\thai.ts"
      },
      {
        "source": "#psammead/moment-timezone-include/tz/Asia/Bangkok",
        "resolvedPath": "#psammead/moment-timezone-include/tz/Asia/Bangkok"
      },
      {
        "source": "#psammead/psammead-locales/moment/th",
        "resolvedPath": "#psammead/psammead-locales/moment/th"
      },
      {
        "source": "../../../contexts/utils/withContext",
        "resolvedPath": "src\\app\\contexts\\utils\\withContext\\index.jsx"
      },
      {
        "source": "../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      }
    ]
  },
  "src\\app\\lib\\config\\services\\tigrinya.ts": {
    "incomingDependencies": [
      "src\\server\\utilities\\serviceConfigs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../components/ThemeProvider/fontScripts/noAscOrDesc",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\noAscOrDesc.ts"
      },
      {
        "source": "#psammead/moment-timezone-include/tz/Africa/Addis_Ababa",
        "resolvedPath": "#psammead/moment-timezone-include/tz/Africa/Addis_Ababa"
      },
      {
        "source": "#psammead/psammead-locales/moment/ti",
        "resolvedPath": "#psammead/psammead-locales/moment/ti"
      },
      {
        "source": "../../../contexts/utils/withContext",
        "resolvedPath": "src\\app\\contexts\\utils\\withContext\\index.jsx"
      },
      {
        "source": "../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      }
    ]
  },
  "src\\app\\lib\\config\\services\\turkce.ts": {
    "incomingDependencies": [
      "src\\server\\utilities\\serviceConfigs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../components/ThemeProvider/fontScripts/latinWithDiacritics",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latinWithDiacritics.ts"
      },
      {
        "source": "#psammead/moment-timezone-include/tz/Asia/Istanbul",
        "resolvedPath": "#psammead/moment-timezone-include/tz/Asia/Istanbul"
      },
      {
        "source": "../../../contexts/utils/withContext",
        "resolvedPath": "src\\app\\contexts\\utils\\withContext\\index.jsx"
      },
      {
        "source": "moment/locale/tr",
        "resolvedPath": "moment/locale/tr"
      },
      {
        "source": "../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      }
    ]
  },
  "src\\app\\lib\\config\\services\\ukchina.ts": {
    "incomingDependencies": [
      "src\\app\\components\\Header\\ScriptLink\\index.test.tsx",
      "src\\server\\utilities\\serviceConfigs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../components/ThemeProvider/fontScripts/noAscOrDesc",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\noAscOrDesc.ts"
      },
      {
        "source": "#psammead/moment-timezone-include/tz/GMT",
        "resolvedPath": "#psammead/moment-timezone-include/tz/GMT"
      },
      {
        "source": "moment/locale/zh-cn",
        "resolvedPath": "moment/locale/zh-cn"
      },
      {
        "source": "../../../contexts/utils/withContext",
        "resolvedPath": "src\\app\\contexts\\utils\\withContext\\index.jsx"
      },
      {
        "source": "../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      },
      {
        "source": "../../../models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global.ts"
      }
    ]
  },
  "src\\app\\lib\\config\\services\\ukrainian.ts": {
    "incomingDependencies": [
      "src\\server\\utilities\\serviceConfigs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../components/ThemeProvider/fontScripts/cyrillic",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\cyrillic.ts"
      },
      {
        "source": "#psammead/moment-timezone-include/tz/GMT",
        "resolvedPath": "#psammead/moment-timezone-include/tz/GMT"
      },
      {
        "source": "#psammead/psammead-locales/moment/uk",
        "resolvedPath": "#psammead/psammead-locales/moment/uk"
      },
      {
        "source": "../../../contexts/utils/withContext",
        "resolvedPath": "src\\app\\contexts\\utils\\withContext\\index.jsx"
      },
      {
        "source": "./russian",
        "resolvedPath": "src\\app\\lib\\config\\services\\russian.ts"
      },
      {
        "source": "../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      },
      {
        "source": "../../../models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global.ts"
      }
    ]
  },
  "src\\app\\lib\\config\\services\\urdu.ts": {
    "incomingDependencies": [
      "src\\app\\pages\\FrontPage\\index.stories.jsx",
      "src\\server\\utilities\\serviceConfigs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../components/ThemeProvider/fontScripts/arabic",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\arabic.ts"
      },
      {
        "source": "#psammead/moment-timezone-include/tz/Asia/Karachi",
        "resolvedPath": "#psammead/moment-timezone-include/tz/Asia/Karachi"
      },
      {
        "source": "#psammead/psammead-locales/moment/ur",
        "resolvedPath": "#psammead/psammead-locales/moment/ur"
      },
      {
        "source": "../../../contexts/utils/withContext",
        "resolvedPath": "src\\app\\contexts\\utils\\withContext\\index.jsx"
      },
      {
        "source": "../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      }
    ]
  },
  "src\\app\\lib\\config\\services\\uzbek.ts": {
    "incomingDependencies": [
      "src\\app\\routes\\utils\\getConfig\\index.test.js",
      "src\\server\\utilities\\serviceConfigs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../components/ThemeProvider/fontScripts/latinWithDiacritics",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latinWithDiacritics.ts"
      },
      {
        "source": "../../../components/ThemeProvider/fontScripts/cyrillic",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\cyrillic.ts"
      },
      {
        "source": "#psammead/moment-timezone-include/tz/GMT",
        "resolvedPath": "#psammead/moment-timezone-include/tz/GMT"
      },
      {
        "source": "#psammead/psammead-locales/moment/uz",
        "resolvedPath": "#psammead/psammead-locales/moment/uz"
      },
      {
        "source": "../../../contexts/utils/withContext",
        "resolvedPath": "src\\app\\contexts\\utils\\withContext\\index.jsx"
      },
      {
        "source": "../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      },
      {
        "source": "../../../models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global.ts"
      }
    ]
  },
  "src\\app\\lib\\config\\services\\vietnamese.ts": {
    "incomingDependencies": [
      "src\\server\\utilities\\serviceConfigs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../components/ThemeProvider/fontScripts/latinWithDiacritics",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latinWithDiacritics.ts"
      },
      {
        "source": "#psammead/moment-timezone-include/tz/Asia/Ho_Chi_Minh",
        "resolvedPath": "#psammead/moment-timezone-include/tz/Asia/Ho_Chi_Minh"
      },
      {
        "source": "moment/locale/vi",
        "resolvedPath": "moment/locale/vi"
      },
      {
        "source": "../../../contexts/utils/withContext",
        "resolvedPath": "src\\app\\contexts\\utils\\withContext\\index.jsx"
      },
      {
        "source": "../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      }
    ]
  },
  "src\\app\\lib\\config\\services\\ws.ts": {
    "incomingDependencies": [
      "src\\server\\utilities\\serviceConfigs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../components/ThemeProvider/fontScripts/latin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts"
      },
      {
        "source": "#psammead/psammead-locales/moment/en-gb",
        "resolvedPath": "#psammead/psammead-locales/moment/en-gb"
      },
      {
        "source": "#psammead/moment-timezone-include/tz/Europe/London",
        "resolvedPath": "#psammead/moment-timezone-include/tz/Europe/London"
      },
      {
        "source": "../../../contexts/utils/withContext",
        "resolvedPath": "src\\app\\contexts\\utils\\withContext\\index.jsx"
      },
      {
        "source": "../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      }
    ]
  },
  "src\\app\\lib\\config\\services\\yoruba.ts": {
    "incomingDependencies": [
      "src\\server\\utilities\\serviceConfigs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../components/ThemeProvider/fontScripts/latin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts"
      },
      {
        "source": "#psammead/psammead-locales/moment/yo",
        "resolvedPath": "#psammead/psammead-locales/moment/yo"
      },
      {
        "source": "#psammead/moment-timezone-include/tz/Africa/Lagos",
        "resolvedPath": "#psammead/moment-timezone-include/tz/Africa/Lagos"
      },
      {
        "source": "../../../contexts/utils/withContext",
        "resolvedPath": "src\\app\\contexts\\utils\\withContext\\index.jsx"
      },
      {
        "source": "../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      }
    ]
  },
  "src\\app\\lib\\config\\services\\zhongwen.ts": {
    "incomingDependencies": [
      "src\\server\\utilities\\serviceConfigs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../components/ThemeProvider/fontScripts/noAscOrDesc",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\noAscOrDesc.ts"
      },
      {
        "source": "#psammead/moment-timezone-include/tz/GMT",
        "resolvedPath": "#psammead/moment-timezone-include/tz/GMT"
      },
      {
        "source": "moment/locale/zh-cn",
        "resolvedPath": "moment/locale/zh-cn"
      },
      {
        "source": "../../../contexts/utils/withContext",
        "resolvedPath": "src\\app\\contexts\\utils\\withContext\\index.jsx"
      },
      {
        "source": "../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      },
      {
        "source": "../../../models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global.ts"
      }
    ]
  },
  "src\\app\\lib\\config\\toggles\\const.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\lib\\config\\toggles\\index.js": {
    "incomingDependencies": [
      "cypress\\support\\helpers\\useAppToggles.js",
      "src\\app\\lib\\config\\toggles\\index.test.js"
    ],
    "outgoingDependencies": [
      {
        "source": "./localConfig",
        "resolvedPath": "src\\app\\lib\\config\\toggles\\localConfig.js"
      },
      {
        "source": "./testConfig",
        "resolvedPath": "src\\app\\lib\\config\\toggles\\testConfig.js"
      },
      {
        "source": "./liveConfig",
        "resolvedPath": "src\\app\\lib\\config\\toggles\\liveConfig.js"
      }
    ]
  },
  "src\\app\\lib\\config\\toggles\\index.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": ".",
        "resolvedPath": "src\\app\\lib\\config\\toggles\\index.js"
      }
    ]
  },
  "src\\app\\lib\\config\\toggles\\liveConfig.js": {
    "incomingDependencies": [
      "src\\app\\lib\\config\\toggles\\index.js"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\lib\\config\\toggles\\localConfig.js": {
    "incomingDependencies": [
      "src\\app\\lib\\config\\toggles\\index.js"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\lib\\config\\toggles\\testConfig.js": {
    "incomingDependencies": [
      "src\\app\\lib\\config\\toggles\\index.js"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\lib\\joinUsTemplate.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\lib\\logger.const.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\CpsRecommendations\\ErrorBoundary.test.tsx",
      "src\\app\\legacy\\containers\\CpsRecommendations\\ErrorBoundary.tsx",
      "src\\app\\lib\\analyticsUtils\\sendBeacon\\index.js",
      "src\\app\\routes\\article\\getInitialData\\index.test.ts",
      "src\\app\\routes\\article\\getInitialData\\index.ts",
      "src\\app\\routes\\frontPage\\getInitialData\\index.js",
      "src\\app\\routes\\frontPage\\getInitialData\\index.test.js",
      "src\\app\\routes\\homePage\\getInitialData\\index.ts",
      "src\\app\\routes\\mostRead\\getInitialData\\index.js",
      "src\\app\\routes\\topic\\getInitialData\\index.js",
      "src\\app\\routes\\utils\\fetchDataFromBFF\\index.ts"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\lib\\logger.node.js": {
    "incomingDependencies": [
      "src\\app\\components\\MediaLoader\\index.tsx",
      "src\\app\\legacy\\containers\\CpsRecommendations\\ErrorBoundary.tsx",
      "src\\app\\lib\\analyticsUtils\\sendBeacon\\index.js",
      "src\\app\\routes\\article\\getInitialData\\index.ts",
      "src\\app\\routes\\article\\utils\\getOnwardsData.ts",
      "src\\app\\routes\\frontPage\\getInitialData\\index.js",
      "src\\app\\routes\\homePage\\getInitialData\\index.ts",
      "src\\app\\routes\\mostRead\\getInitialData\\index.js",
      "src\\app\\routes\\topic\\getInitialData\\index.js",
      "src\\app\\routes\\utils\\fetchDataFromBFF\\index.ts",
      "src\\testHelpers\\loggerMock.js"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\lib\\logger.node.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\lib\\logger.web.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\lib\\logger.web.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\lib\\noJs.const.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\lib\\regex.const.js": {
    "incomingDependencies": [
      "src\\app\\contexts\\RequestContext\\getMetaUrls\\index.ts"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\lib\\seoUtils\\getItemList\\index.test.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": ".",
        "resolvedPath": "src\\app\\lib\\seoUtils\\getItemList\\index.ts"
      },
      {
        "source": "../testHelpers",
        "resolvedPath": "src\\app\\lib\\seoUtils\\testHelpers.ts"
      }
    ]
  },
  "src\\app\\lib\\seoUtils\\getItemList\\index.ts": {
    "incomingDependencies": [
      "src\\app\\lib\\seoUtils\\getItemList\\index.test.ts",
      "src\\app\\pages\\HomePage\\HomePage.tsx",
      "src\\app\\pages\\TopicPage\\TopicPage.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../models/types/curationData",
        "resolvedPath": "src\\app\\models\\types\\curationData.ts"
      }
    ]
  },
  "src\\app\\lib\\seoUtils\\getLiveBlogPostingSchema\\fixtures.ts": {
    "incomingDependencies": [
      "src\\app\\lib\\seoUtils\\getLiveBlogPostingSchema\\index.test.ts"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\lib\\seoUtils\\getLiveBlogPostingSchema\\index.test.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../../../../../ws-nextjs-app/pages/[service]/live/[id]/Post/types",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\live\\[id]\\Post\\types.ts"
      },
      {
        "source": "./fixtures",
        "resolvedPath": "src\\app\\lib\\seoUtils\\getLiveBlogPostingSchema\\fixtures.ts"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\lib\\seoUtils\\getLiveBlogPostingSchema\\index.ts"
      }
    ]
  },
  "src\\app\\lib\\seoUtils\\getLiveBlogPostingSchema\\index.ts": {
    "incomingDependencies": [
      "src\\app\\lib\\seoUtils\\getLiveBlogPostingSchema\\index.test.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "#app/lib/utilities/ichefURL",
        "resolvedPath": "#app/lib/utilities/ichefURL"
      },
      {
        "source": "#app/models/types/optimo",
        "resolvedPath": "#app/models/types/optimo"
      },
      {
        "source": "../../../../../ws-nextjs-app/pages/[service]/live/[id]/Post/types",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\live\\[id]\\Post\\types.ts"
      }
    ]
  },
  "src\\app\\lib\\seoUtils\\testHelpers.ts": {
    "incomingDependencies": [
      "src\\app\\lib\\seoUtils\\getItemList\\index.test.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../models/types/curationData",
        "resolvedPath": "src\\app\\models\\types\\curationData.ts"
      }
    ]
  },
  "src\\app\\lib\\statusCodes.const.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\lib\\styles.const\\index.test.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": ".",
        "resolvedPath": "src\\app\\lib\\styles.const\\index.ts"
      }
    ]
  },
  "src\\app\\lib\\styles.const\\index.ts": {
    "incomingDependencies": [
      "src\\app\\components\\Ad\\MPU\\index.tsx",
      "src\\app\\legacy\\components\\SkipLinkWrapper\\index.jsx",
      "src\\app\\legacy\\psammead\\psammead-social-embed\\src\\CaptionWrapper\\index.jsx",
      "src\\app\\legacy\\psammead\\psammead-social-embed\\src\\SkipLinkWrapper\\index.jsx",
      "src\\app\\lib\\styles.const\\index.test.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "../../components/ThemeProvider/mediaQueries",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\mediaQueries.ts"
      },
      {
        "source": "../../components/ThemeProvider/spacings",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\spacings.ts"
      }
    ]
  },
  "src\\app\\lib\\utilities\\blockHandlers\\index.js": {
    "incomingDependencies": [
      "src\\app\\components\\ImageWithCaption\\index.tsx",
      "src\\app\\pages\\MediaArticlePage\\MediaArticlePage.tsx"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\lib\\utilities\\cookieCountries\\index.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\lib\\utilities\\episodeAvailability\\ErrorMessage\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\lib\\utilities\\episodeAvailability\\ErrorMessage\\index.test.jsx",
      "src\\app\\lib\\utilities\\episodeAvailability\\withMediaError\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "#psammead/gel-foundations/src/spacings"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "#psammead/gel-foundations/src/breakpoints"
      },
      {
        "source": "#app/components/MediaLoader/Message",
        "resolvedPath": "#app/components/MediaLoader/Message"
      },
      {
        "source": "..",
        "resolvedPath": "src\\app\\lib\\utilities\\episodeAvailability\\index.js"
      },
      {
        "source": "../../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      }
    ]
  },
  "src\\app\\lib\\utilities\\episodeAvailability\\ErrorMessage\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../../../../components/react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "../../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "..",
        "resolvedPath": "src\\app\\lib\\utilities\\episodeAvailability\\index.js"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\lib\\utilities\\episodeAvailability\\ErrorMessage\\index.jsx"
      }
    ]
  },
  "src\\app\\lib\\utilities\\episodeAvailability\\index.js": {
    "incomingDependencies": [
      "src\\app\\lib\\utilities\\episodeAvailability\\ErrorMessage\\index.jsx",
      "src\\app\\lib\\utilities\\episodeAvailability\\ErrorMessage\\index.test.jsx",
      "src\\app\\lib\\utilities\\episodeAvailability\\index.test.js",
      "src\\app\\lib\\utilities\\episodeAvailability\\withMediaError\\index.jsx",
      "src\\app\\lib\\utilities\\episodeAvailability\\withMediaError\\index.test.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "ramda/src/path",
        "resolvedPath": "ramda/src/path"
      },
      {
        "source": "#lib/logger.node",
        "resolvedPath": "#lib/logger.node"
      },
      {
        "source": "#lib/logger.const",
        "resolvedPath": "#lib/logger.const"
      }
    ]
  },
  "src\\app\\lib\\utilities\\episodeAvailability\\index.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "ramda/src/assocPath",
        "resolvedPath": "ramda/src/assocPath"
      },
      {
        "source": "ramda/src/pipe",
        "resolvedPath": "ramda/src/pipe"
      },
      {
        "source": "#testHelpers/loggerMock",
        "resolvedPath": "#testHelpers/loggerMock"
      },
      {
        "source": "#lib/logger.const",
        "resolvedPath": "#lib/logger.const"
      },
      {
        "source": "#data/pashto/bbc_pashto_radio/w3ct0lz1",
        "resolvedPath": "#data/pashto/bbc_pashto_radio/w3ct0lz1"
      },
      {
        "source": "#data/indonesia/bbc_indonesian_radio/w13xtt0s",
        "resolvedPath": "#data/indonesia/bbc_indonesian_radio/w13xtt0s"
      },
      {
        "source": "#data/afrique/bbc_afrique_tv/tv/w3ct05mp",
        "resolvedPath": "#data/afrique/bbc_afrique_tv/tv/w3ct05mp"
      },
      {
        "source": "#data/somali/bbc_somali_tv/tv_programmes/w13xttqt",
        "resolvedPath": "#data/somali/bbc_somali_tv/tv_programmes/w13xttqt"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\lib\\utilities\\episodeAvailability\\index.js"
      }
    ]
  },
  "src\\app\\lib\\utilities\\episodeAvailability\\withMediaError\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\lib\\utilities\\episodeAvailability\\withMediaError\\index.test.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "..",
        "resolvedPath": "src\\app\\lib\\utilities\\episodeAvailability\\index.js"
      },
      {
        "source": "../ErrorMessage",
        "resolvedPath": "src\\app\\lib\\utilities\\episodeAvailability\\ErrorMessage\\index.jsx"
      }
    ]
  },
  "src\\app\\lib\\utilities\\episodeAvailability\\withMediaError\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@testing-library/react",
        "resolvedPath": "@testing-library/react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\lib\\utilities\\episodeAvailability\\withMediaError\\index.jsx"
      },
      {
        "source": "..",
        "resolvedPath": "src\\app\\lib\\utilities\\episodeAvailability\\index.js"
      }
    ]
  },
  "src\\app\\lib\\utilities\\filterPopularStaleData\\index.js": {
    "incomingDependencies": [
      "src\\app\\lib\\utilities\\filterPopularStaleData\\index.test.js"
    ],
    "outgoingDependencies": [
      {
        "source": "#lib/logger.node",
        "resolvedPath": "#lib/logger.node"
      },
      {
        "source": "#lib/logger.const",
        "resolvedPath": "#lib/logger.const"
      },
      {
        "source": "./isDataStale",
        "resolvedPath": "src\\app\\lib\\utilities\\filterPopularStaleData\\isDataStale.js"
      },
      {
        "source": "../isLive",
        "resolvedPath": "src\\app\\lib\\utilities\\isLive\\index.js"
      }
    ]
  },
  "src\\app\\lib\\utilities\\filterPopularStaleData\\index.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "#testHelpers/loggerMock",
        "resolvedPath": "#testHelpers/loggerMock"
      },
      {
        "source": "#lib/logger.const",
        "resolvedPath": "#lib/logger.const"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\lib\\utilities\\filterPopularStaleData\\index.js"
      },
      {
        "source": "../isLive",
        "resolvedPath": "src\\app\\lib\\utilities\\isLive\\index.js"
      }
    ]
  },
  "src\\app\\lib\\utilities\\filterPopularStaleData\\isDataStale.js": {
    "incomingDependencies": [
      "src\\app\\lib\\utilities\\filterPopularStaleData\\index.js",
      "src\\app\\lib\\utilities\\filterPopularStaleData\\isDataStale.test.js"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\lib\\utilities\\filterPopularStaleData\\isDataStale.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "./isDataStale",
        "resolvedPath": "src\\app\\lib\\utilities\\filterPopularStaleData\\isDataStale.js"
      }
    ]
  },
  "src\\app\\lib\\utilities\\findNClosestIndicies\\index.js": {
    "incomingDependencies": [
      "src\\app\\lib\\utilities\\findNClosestIndicies\\index.test.js"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\lib\\utilities\\findNClosestIndicies\\index.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": ".",
        "resolvedPath": "src\\app\\lib\\utilities\\findNClosestIndicies\\index.js"
      }
    ]
  },
  "src\\app\\lib\\utilities\\findNthIndex\\index.js": {
    "incomingDependencies": [
      "src\\app\\lib\\utilities\\findNthIndex\\index.test.js"
    ],
    "outgoingDependencies": [
      {
        "source": "ramda/src/is",
        "resolvedPath": "ramda/src/is"
      }
    ]
  },
  "src\\app\\lib\\utilities\\findNthIndex\\index.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": ".",
        "resolvedPath": "src\\app\\lib\\utilities\\findNthIndex\\index.js"
      }
    ]
  },
  "src\\app\\lib\\utilities\\formatDuration\\index.js": {
    "incomingDependencies": [
      "src\\app\\components\\Curation\\HierarchicalGrid\\index.tsx",
      "src\\app\\lib\\utilities\\formatDuration\\index.test.js",
      "src\\app\\pages\\MediaArticlePage\\PagePromoSections\\LatestMediaSection\\LatestMediaIndicator\\index.tsx"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\lib\\utilities\\formatDuration\\index.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "moment",
        "resolvedPath": "moment"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\lib\\utilities\\formatDuration\\index.js"
      }
    ]
  },
  "src\\app\\lib\\utilities\\generatePromoId\\index.test.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": ".",
        "resolvedPath": "src\\app\\lib\\utilities\\generatePromoId\\index.ts"
      }
    ]
  },
  "src\\app\\lib\\utilities\\generatePromoId\\index.ts": {
    "incomingDependencies": [
      "src\\app\\components\\RelatedContentSection\\index.tsx",
      "src\\app\\lib\\utilities\\generatePromoId\\index.test.ts",
      "src\\app\\pages\\ArticlePage\\PagePromoSections\\TopStoriesSection\\index.tsx",
      "src\\app\\pages\\MediaArticlePage\\PagePromoSections\\LatestMediaSection\\index.tsx"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\lib\\utilities\\getBrandedImage\\index.js": {
    "incomingDependencies": [
      "src\\app\\lib\\utilities\\getBrandedImage\\index.test.js"
    ],
    "outgoingDependencies": [
      {
        "source": "../getEnvConfig",
        "resolvedPath": "src\\app\\lib\\utilities\\getEnvConfig\\index.ts"
      }
    ]
  },
  "src\\app\\lib\\utilities\\getBrandedImage\\index.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": ".",
        "resolvedPath": "src\\app\\lib\\utilities\\getBrandedImage\\index.js"
      }
    ]
  },
  "src\\app\\lib\\utilities\\getEnvConfig\\index.test.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": ".",
        "resolvedPath": "src\\app\\lib\\utilities\\getEnvConfig\\index.ts"
      }
    ]
  },
  "src\\app\\lib\\utilities\\getEnvConfig\\index.ts": {
    "incomingDependencies": [
      "src\\app\\contexts\\RequestContext\\getOriginContext\\index.ts",
      "src\\app\\lib\\utilities\\getBrandedImage\\index.js",
      "src\\app\\lib\\utilities\\getEnvConfig\\index.test.ts",
      "src\\app\\lib\\utilities\\getToggles\\index.js",
      "src\\app\\lib\\utilities\\getToggles\\withCache.js",
      "src\\app\\lib\\utilities\\ichefURL\\index.js",
      "src\\app\\lib\\utilities\\isLive\\index.js",
      "src\\app\\lib\\utilities\\isLocal\\index.js",
      "src\\app\\lib\\utilities\\isTest\\index.js"
    ],
    "outgoingDependencies": [
      {
        "source": "#app/models/types/global",
        "resolvedPath": "#app/models/types/global"
      },
      {
        "source": "../onClient",
        "resolvedPath": "src\\app\\lib\\utilities\\onClient\\index.js"
      }
    ]
  },
  "src\\app\\lib\\utilities\\getFetchTimeouts\\index.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\lib\\utilities\\getMasterbrand\\index.js": {
    "incomingDependencies": [
      "src\\app\\lib\\utilities\\getMasterbrand\\index.test.js"
    ],
    "outgoingDependencies": [
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      }
    ]
  },
  "src\\app\\lib\\utilities\\getMasterbrand\\index.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": ".",
        "resolvedPath": "src\\app\\lib\\utilities\\getMasterbrand\\index.js"
      }
    ]
  },
  "src\\app\\lib\\utilities\\getMediaId\\index.js": {
    "incomingDependencies": [
      "src\\app\\lib\\utilities\\getMediaId\\index.test.js"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\lib\\utilities\\getMediaId\\index.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": ".",
        "resolvedPath": "src\\app\\lib\\utilities\\getMediaId\\index.js"
      }
    ]
  },
  "src\\app\\lib\\utilities\\getStoryPromoInfo\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\lib\\utilities\\getStoryPromoInfo\\index.test.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "../makeRelativeUrlPath",
        "resolvedPath": "src\\app\\lib\\utilities\\makeRelativeUrlPath\\index.js"
      }
    ]
  },
  "src\\app\\lib\\utilities\\getStoryPromoInfo\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": ".",
        "resolvedPath": "src\\app\\lib\\utilities\\getStoryPromoInfo\\index.jsx"
      }
    ]
  },
  "src\\app\\lib\\utilities\\getToggles\\index.js": {
    "incomingDependencies": [
      "src\\app\\lib\\utilities\\getToggles\\withCache.js",
      "src\\app\\lib\\utilities\\getToggles\\withCache.test.js"
    ],
    "outgoingDependencies": [
      {
        "source": "#lib/config/toggles",
        "resolvedPath": "#lib/config/toggles"
      },
      {
        "source": "#contexts/ToggleContext/utils/constructTogglesEndpoint",
        "resolvedPath": "#contexts/ToggleContext/utils/constructTogglesEndpoint"
      },
      {
        "source": "#lib/logger.node",
        "resolvedPath": "#lib/logger.node"
      },
      {
        "source": "#lib/logger.const",
        "resolvedPath": "#lib/logger.const"
      },
      {
        "source": "#contexts/RequestContext/getOriginContext",
        "resolvedPath": "#contexts/RequestContext/getOriginContext"
      },
      {
        "source": "../getEnvConfig",
        "resolvedPath": "src\\app\\lib\\utilities\\getEnvConfig\\index.ts"
      }
    ]
  },
  "src\\app\\lib\\utilities\\getToggles\\index.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\lib\\utilities\\getToggles\\withCache.js": {
    "incomingDependencies": [
      "src\\app\\lib\\utilities\\getToggles\\withCache.test.js"
    ],
    "outgoingDependencies": [
      {
        "source": "lru-cache",
        "resolvedPath": "lru-cache"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\lib\\utilities\\getToggles\\index.js"
      },
      {
        "source": "../getEnvConfig",
        "resolvedPath": "src\\app\\lib\\utilities\\getEnvConfig\\index.ts"
      }
    ]
  },
  "src\\app\\lib\\utilities\\getToggles\\withCache.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "lru-cache",
        "resolvedPath": "lru-cache"
      },
      {
        "source": "./withCache",
        "resolvedPath": "src\\app\\lib\\utilities\\getToggles\\withCache.js"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\lib\\utilities\\getToggles\\index.js"
      }
    ]
  },
  "src\\app\\lib\\utilities\\getUrlHelpers\\getMostReadUrls\\index.js": {
    "incomingDependencies": [
      "cypress\\e2e\\pages\\mostReadPage\\mostReadAssertions.js",
      "src\\app\\lib\\utilities\\getUrlHelpers\\getMostReadUrls\\index.test.js",
      "src\\app\\lib\\utilities\\getUrlHelpers\\index.js"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\lib\\utilities\\getUrlHelpers\\getMostReadUrls\\index.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": ".",
        "resolvedPath": "src\\app\\lib\\utilities\\getUrlHelpers\\getMostReadUrls\\index.js"
      }
    ]
  },
  "src\\app\\lib\\utilities\\getUrlHelpers\\getRadioSchedulesUrls\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\lib\\utilities\\getUrlHelpers\\getRadioSchedulesUrls\\index.test.jsx",
      "src\\app\\lib\\utilities\\getUrlHelpers\\index.js"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\lib\\utilities\\getUrlHelpers\\getRadioSchedulesUrls\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": ".",
        "resolvedPath": "src\\app\\lib\\utilities\\getUrlHelpers\\getRadioSchedulesUrls\\index.jsx"
      }
    ]
  },
  "src\\app\\lib\\utilities\\getUrlHelpers\\getRecommendationsUrl\\index.js": {
    "incomingDependencies": [
      "src\\app\\lib\\utilities\\getUrlHelpers\\getRecommendationsUrl\\index.test.js"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\lib\\utilities\\getUrlHelpers\\getRecommendationsUrl\\index.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": ".",
        "resolvedPath": "src\\app\\lib\\utilities\\getUrlHelpers\\getRecommendationsUrl\\index.js"
      }
    ]
  },
  "src\\app\\lib\\utilities\\getUrlHelpers\\getSecondaryColumnUrl\\index.js": {
    "incomingDependencies": [
      "src\\app\\lib\\utilities\\getUrlHelpers\\getSecondaryColumnUrl\\index.test.js",
      "src\\app\\lib\\utilities\\getUrlHelpers\\index.js"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\lib\\utilities\\getUrlHelpers\\getSecondaryColumnUrl\\index.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": ".",
        "resolvedPath": "src\\app\\lib\\utilities\\getUrlHelpers\\getSecondaryColumnUrl\\index.js"
      }
    ]
  },
  "src\\app\\lib\\utilities\\getUrlHelpers\\index.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "./getMostReadUrls",
        "resolvedPath": "src\\app\\lib\\utilities\\getUrlHelpers\\getMostReadUrls\\index.js"
      },
      {
        "source": "./getRadioSchedulesUrls",
        "resolvedPath": "src\\app\\lib\\utilities\\getUrlHelpers\\getRadioSchedulesUrls\\index.jsx"
      },
      {
        "source": "./getSecondaryColumnUrl",
        "resolvedPath": "src\\app\\lib\\utilities\\getUrlHelpers\\getSecondaryColumnUrl\\index.js"
      }
    ]
  },
  "src\\app\\lib\\utilities\\ichefURL\\index.js": {
    "incomingDependencies": [
      "src\\app\\components\\Byline\\utilities\\bylineExtractor\\index.tsx",
      "src\\app\\components\\FrostedGlassPromo\\withData.tsx",
      "src\\app\\components\\ImageWithCaption\\index.tsx",
      "src\\app\\lib\\utilities\\ichefURL\\index.test.js"
    ],
    "outgoingDependencies": [
      {
        "source": "../getEnvConfig",
        "resolvedPath": "src\\app\\lib\\utilities\\getEnvConfig\\index.ts"
      }
    ]
  },
  "src\\app\\lib\\utilities\\ichefURL\\index.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": ".",
        "resolvedPath": "src\\app\\lib\\utilities\\ichefURL\\index.js"
      }
    ]
  },
  "src\\app\\lib\\utilities\\idSanitiser\\index.js": {
    "incomingDependencies": [
      ".storybook\\DocsDecorator\\HealthFactors\\SingleDoc\\index.tsx",
      "cypress\\e2e\\pages\\topicPage\\tests.js",
      "src\\app\\components\\Embeds\\Uploader\\index.tsx",
      "src\\app\\lib\\utilities\\idSanitiser\\index.test.js"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\lib\\utilities\\idSanitiser\\index.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": ".",
        "resolvedPath": "src\\app\\lib\\utilities\\idSanitiser\\index.js"
      }
    ]
  },
  "src\\app\\lib\\utilities\\imageSrcHelpers\\locator.js": {
    "incomingDependencies": [
      "src\\app\\components\\FrostedGlassPromo\\withData.tsx",
      "src\\app\\legacy\\containers\\CpsRecommendations\\RecommendationsPromo\\utility\\index.ts",
      "src\\app\\lib\\utilities\\imageSrcHelpers\\locator.test.js"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\lib\\utilities\\imageSrcHelpers\\locator.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "./locator",
        "resolvedPath": "src\\app\\lib\\utilities\\imageSrcHelpers\\locator.js"
      }
    ]
  },
  "src\\app\\lib\\utilities\\imageSrcHelpers\\originCode.js": {
    "incomingDependencies": [
      "src\\app\\components\\FrostedGlassPromo\\withData.tsx",
      "src\\app\\legacy\\containers\\CpsRecommendations\\RecommendationsPromo\\utility\\index.ts",
      "src\\app\\lib\\utilities\\imageSrcHelpers\\originCode.test.js"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\lib\\utilities\\imageSrcHelpers\\originCode.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "./originCode",
        "resolvedPath": "src\\app\\lib\\utilities\\imageSrcHelpers\\originCode.js"
      }
    ]
  },
  "src\\app\\lib\\utilities\\isLive\\index.js": {
    "incomingDependencies": [
      "src\\app\\components\\Ad\\Canonical\\index.tsx",
      "src\\app\\lib\\utilities\\filterPopularStaleData\\index.js",
      "src\\app\\lib\\utilities\\filterPopularStaleData\\index.test.js",
      "src\\app\\lib\\utilities\\isLive\\index.test.js"
    ],
    "outgoingDependencies": [
      {
        "source": "../getEnvConfig",
        "resolvedPath": "src\\app\\lib\\utilities\\getEnvConfig\\index.ts"
      }
    ]
  },
  "src\\app\\lib\\utilities\\isLive\\index.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": ".",
        "resolvedPath": "src\\app\\lib\\utilities\\isLive\\index.js"
      }
    ]
  },
  "src\\app\\lib\\utilities\\isLocal\\index.js": {
    "incomingDependencies": [
      "src\\app\\components\\MostRead\\index.test.tsx",
      "src\\app\\components\\MostRead\\index.tsx",
      "src\\app\\lib\\utilities\\isLocal\\index.test.js"
    ],
    "outgoingDependencies": [
      {
        "source": "../getEnvConfig",
        "resolvedPath": "src\\app\\lib\\utilities\\getEnvConfig\\index.ts"
      }
    ]
  },
  "src\\app\\lib\\utilities\\isLocal\\index.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": ".",
        "resolvedPath": "src\\app\\lib\\utilities\\isLocal\\index.js"
      }
    ]
  },
  "src\\app\\lib\\utilities\\isOperaProxy\\index.js": {
    "incomingDependencies": [
      "src\\app\\lib\\analyticsUtils\\index.js",
      "src\\app\\lib\\utilities\\isOperaProxy\\index.test.js"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\lib\\utilities\\isOperaProxy\\index.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": ".",
        "resolvedPath": "src\\app\\lib\\utilities\\isOperaProxy\\index.js"
      }
    ]
  },
  "src\\app\\lib\\utilities\\isTenHoursAgo\\index.js": {
    "incomingDependencies": [
      "src\\app\\lib\\utilities\\isTenHoursAgo\\index.test.js"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\lib\\utilities\\isTenHoursAgo\\index.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": ".",
        "resolvedPath": "src\\app\\lib\\utilities\\isTenHoursAgo\\index.js"
      }
    ]
  },
  "src\\app\\lib\\utilities\\isTest\\index.js": {
    "incomingDependencies": [
      "src\\app\\lib\\utilities\\isTest\\index.test.js",
      "src\\app\\routes\\topic\\getInitialData\\index.js"
    ],
    "outgoingDependencies": [
      {
        "source": "../getEnvConfig",
        "resolvedPath": "src\\app\\lib\\utilities\\getEnvConfig\\index.ts"
      }
    ]
  },
  "src\\app\\lib\\utilities\\isTest\\index.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": ".",
        "resolvedPath": "src\\app\\lib\\utilities\\isTest\\index.js"
      }
    ]
  },
  "src\\app\\lib\\utilities\\langHandler\\index.js": {
    "incomingDependencies": [
      "src\\app\\contexts\\ServiceContext\\index.tsx",
      "src\\app\\contexts\\ServiceContext\\__mocks__\\index.tsx",
      "src\\app\\lib\\utilities\\langHandler\\index.test.js"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\lib\\utilities\\langHandler\\index.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": ".",
        "resolvedPath": "src\\app\\lib\\utilities\\langHandler\\index.js"
      }
    ]
  },
  "src\\app\\lib\\utilities\\logging\\index.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "#lib/logger.const",
        "resolvedPath": "#lib/logger.const"
      }
    ]
  },
  "src\\app\\lib\\utilities\\logging\\pathWithLogging\\index.js": {
    "incomingDependencies": [
      "src\\app\\lib\\utilities\\logging\\pathWithLogging\\index.test.js",
      "src\\app\\routes\\onDemandAudio\\getInitialData\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "ramda/src/isNil",
        "resolvedPath": "ramda/src/isNil"
      },
      {
        "source": "ramda/src/path",
        "resolvedPath": "ramda/src/path"
      },
      {
        "source": "ramda/src/curry",
        "resolvedPath": "ramda/src/curry"
      },
      {
        "source": "#lib/logger.node",
        "resolvedPath": "#lib/logger.node"
      }
    ]
  },
  "src\\app\\lib\\utilities\\logging\\pathWithLogging\\index.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "#testHelpers/loggerMock",
        "resolvedPath": "#testHelpers/loggerMock"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\lib\\utilities\\logging\\pathWithLogging\\index.js"
      }
    ]
  },
  "src\\app\\lib\\utilities\\makeRelativeUrlPath\\index.js": {
    "incomingDependencies": [
      "src\\app\\components\\FrostedGlassPromo\\index.test.tsx",
      "src\\app\\components\\FrostedGlassPromo\\index.tsx",
      "src\\app\\legacy\\components\\OptimoPromos\\Link\\index.jsx",
      "src\\app\\lib\\utilities\\getStoryPromoInfo\\index.jsx",
      "src\\app\\lib\\utilities\\makeRelativeUrlPath\\index.test.js"
    ],
    "outgoingDependencies": [
      {
        "source": "url-parse",
        "resolvedPath": "url-parse"
      }
    ]
  },
  "src\\app\\lib\\utilities\\makeRelativeUrlPath\\index.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": ".",
        "resolvedPath": "src\\app\\lib\\utilities\\makeRelativeUrlPath\\index.js"
      }
    ]
  },
  "src\\app\\lib\\utilities\\moment\\index.stories.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "moment",
        "resolvedPath": "moment"
      },
      {
        "source": "@storybook/react",
        "resolvedPath": "@storybook/react"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "#psammead/gel-foundations/src/spacings"
      },
      {
        "source": "#psammead/gel-foundations/src/typography",
        "resolvedPath": "#psammead/gel-foundations/src/typography"
      },
      {
        "source": "#testHelpers/withTimeMachine",
        "resolvedPath": "#testHelpers/withTimeMachine"
      },
      {
        "source": "#server/utilities/serviceConfigs",
        "resolvedPath": "#server/utilities/serviceConfigs"
      }
    ]
  },
  "src\\app\\lib\\utilities\\onClient\\index.js": {
    "incomingDependencies": [
      "src\\app\\components\\ChartbeatAnalytics\\utils\\index.test.ts",
      "src\\app\\components\\ChartbeatAnalytics\\utils\\index.ts",
      "src\\app\\lib\\analyticsUtils\\index.js",
      "src\\app\\lib\\analyticsUtils\\index.test.js",
      "src\\app\\lib\\analyticsUtils\\sendBeacon\\index.js",
      "src\\app\\lib\\utilities\\getEnvConfig\\index.ts",
      "src\\app\\lib\\utilities\\onClient\\index.test.js",
      "src\\app\\lib\\utilities\\pageAnchor\\index.js",
      "src\\app\\lib\\utilities\\pageAnchor\\index.test.js"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\lib\\utilities\\onClient\\index.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "#psammead/psammead-test-helpers/src",
        "resolvedPath": "#psammead/psammead-test-helpers/src"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\lib\\utilities\\onClient\\index.js"
      }
    ]
  },
  "src\\app\\lib\\utilities\\pageAnchor\\index.js": {
    "incomingDependencies": [
      "src\\app\\components\\ImageWithCaption\\index.tsx",
      "src\\app\\lib\\utilities\\pageAnchor\\index.test.js"
    ],
    "outgoingDependencies": [
      {
        "source": "../onClient",
        "resolvedPath": "src\\app\\lib\\utilities\\onClient\\index.js"
      }
    ]
  },
  "src\\app\\lib\\utilities\\pageAnchor\\index.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": ".",
        "resolvedPath": "src\\app\\lib\\utilities\\pageAnchor\\index.js"
      },
      {
        "source": "../onClient",
        "resolvedPath": "src\\app\\lib\\utilities\\onClient\\index.js"
      }
    ]
  },
  "src\\app\\lib\\utilities\\parseAssetData\\index.test.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "ramda/src/mergeDeepLeft",
        "resolvedPath": "ramda/src/mergeDeepLeft"
      },
      {
        "source": "#pages/ArticlePage/fixtureData",
        "resolvedPath": "#pages/ArticlePage/fixtureData"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\lib\\utilities\\parseAssetData\\index.ts"
      }
    ]
  },
  "src\\app\\lib\\utilities\\parseAssetData\\index.ts": {
    "incomingDependencies": [
      "src\\app\\lib\\utilities\\parseAssetData\\index.test.ts",
      "src\\app\\pages\\MediaArticlePage\\MediaArticlePage.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "#app/models/types/optimo",
        "resolvedPath": "#app/models/types/optimo"
      }
    ]
  },
  "src\\app\\lib\\utilities\\passport\\index.js": {
    "incomingDependencies": [
      "src\\app\\lib\\utilities\\passport\\index.test.js"
    ],
    "outgoingDependencies": [
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      }
    ]
  },
  "src\\app\\lib\\utilities\\passport\\index.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": ".",
        "resolvedPath": "src\\app\\lib\\utilities\\passport\\index.js"
      }
    ]
  },
  "src\\app\\lib\\utilities\\serialiseForScript\\index.js": {
    "incomingDependencies": [
      "src\\app\\lib\\utilities\\serialiseForScript\\index.test.js"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\lib\\utilities\\serialiseForScript\\index.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": ".",
        "resolvedPath": "src\\app\\lib\\utilities\\serialiseForScript\\index.js"
      }
    ]
  },
  "src\\app\\lib\\utilities\\setCookie\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\lib\\utilities\\setCookie\\index.test.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "js-cookie",
        "resolvedPath": "js-cookie"
      }
    ]
  },
  "src\\app\\lib\\utilities\\setCookie\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "js-cookie",
        "resolvedPath": "js-cookie"
      },
      {
        "source": "#psammead/psammead-test-helpers/src",
        "resolvedPath": "#psammead/psammead-test-helpers/src"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\lib\\utilities\\setCookie\\index.jsx"
      }
    ]
  },
  "src\\app\\lib\\utilities\\srcSet\\index.js": {
    "incomingDependencies": [
      "src\\app\\components\\FrostedGlassPromo\\withData.tsx",
      "src\\app\\components\\ImageWithCaption\\index.tsx",
      "src\\app\\lib\\utilities\\srcSet\\index.test.js"
    ],
    "outgoingDependencies": [
      {
        "source": "#lib/utilities/ichefURL",
        "resolvedPath": "#lib/utilities/ichefURL"
      }
    ]
  },
  "src\\app\\lib\\utilities\\srcSet\\index.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": ".",
        "resolvedPath": "src\\app\\lib\\utilities\\srcSet\\index.js"
      }
    ]
  },
  "src\\app\\lib\\utilities\\srcSet\\placeholder.js": {
    "incomingDependencies": [
      "src\\app\\lib\\utilities\\srcSet\\placeholder.test.js"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\lib\\utilities\\srcSet\\placeholder.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "./placeholder",
        "resolvedPath": "src\\app\\lib\\utilities\\srcSet\\placeholder.js"
      }
    ]
  },
  "src\\app\\lib\\utilities\\urlParser\\index.js": {
    "incomingDependencies": [
      "src\\app\\lib\\utilities\\urlParser\\index.test.js"
    ],
    "outgoingDependencies": [
      {
        "source": "url-parse",
        "resolvedPath": "url-parse"
      }
    ]
  },
  "src\\app\\lib\\utilities\\urlParser\\index.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": ".",
        "resolvedPath": "src\\app\\lib\\utilities\\urlParser\\index.js"
      }
    ]
  },
  "src\\app\\lib\\utilities\\variantHandler\\index.js": {
    "incomingDependencies": [
      "src\\app\\contexts\\ServiceContext\\index.tsx",
      "src\\app\\contexts\\ServiceContext\\__mocks__\\index.tsx",
      "src\\app\\lib\\utilities\\variantHandler\\index.test.js"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\lib\\utilities\\variantHandler\\index.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": ".",
        "resolvedPath": "src\\app\\lib\\utilities\\variantHandler\\index.js"
      }
    ]
  },
  "src\\app\\models\\blocks\\index.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\FauxHeadline\\index.test.jsx",
      "src\\app\\models\\blocks\\index.test.js"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\models\\blocks\\index.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": ".",
        "resolvedPath": "src\\app\\models\\blocks\\index.js"
      }
    ]
  },
  "src\\app\\models\\types\\curationData.ts": {
    "incomingDependencies": [
      "src\\app\\components\\Curation\\index.test.tsx",
      "src\\app\\lib\\seoUtils\\getItemList\\index.ts",
      "src\\app\\lib\\seoUtils\\testHelpers.ts",
      "src\\app\\pages\\HomePage\\HomePage.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "#app/components/Embeds/types",
        "resolvedPath": "#app/components/Embeds/types"
      },
      {
        "source": "#app/models/types/radioSchedule",
        "resolvedPath": "#app/models/types/radioSchedule"
      },
      {
        "source": "../../components/MostRead/types",
        "resolvedPath": "src\\app\\components\\MostRead\\types.ts"
      }
    ]
  },
  "src\\app\\models\\types\\eventTracking.ts": {
    "incomingDependencies": [
      "src\\app\\components\\FrostedGlassPromo\\index.tsx",
      "src\\app\\components\\FrostedGlassPromo\\types.ts",
      "src\\app\\components\\RelatedContentSection\\index.tsx",
      "src\\app\\components\\RelatedContentSection\\RelatedContentItem\\index.tsx",
      "src\\app\\pages\\MediaArticlePage\\PagePromoSections\\LatestMediaSection\\index.tsx",
      "src\\app\\pages\\MediaArticlePage\\PagePromoSections\\LatestMediaSection\\LatestMediaItem\\index.test.tsx",
      "src\\app\\pages\\MediaArticlePage\\PagePromoSections\\LatestMediaSection\\types.ts"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\models\\types\\fetch.ts": {
    "incomingDependencies": [
      "src\\app\\routes\\article\\getInitialData\\index.ts",
      "src\\app\\routes\\homePage\\getInitialData\\index.ts",
      "src\\app\\routes\\utils\\fetchDataFromBFF\\index.ts",
      "src\\app\\routes\\utils\\handleError\\index.ts"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\models\\types\\global.ts": {
    "incomingDependencies": [
      ".storybook\\withServicesDecorator\\index.tsx",
      "src\\app\\components\\Ad\\Amp\\AdSlot\\index.tsx",
      "src\\app\\components\\Ad\\Amp\\index.tsx",
      "src\\app\\components\\Ad\\utilities\\getAdsAriaLabel\\index.ts",
      "src\\app\\components\\ATIAnalytics\\params\\index.ts",
      "src\\app\\components\\ATIAnalytics\\types.ts",
      "src\\app\\components\\ChartbeatAnalytics\\index.test.tsx",
      "src\\app\\components\\ChartbeatAnalytics\\types.ts",
      "src\\app\\components\\ChartbeatAnalytics\\utils\\index.test.ts",
      "src\\app\\components\\ChartbeatAnalytics\\utils\\index.ts",
      "src\\app\\components\\Curation\\Subhead\\index.test.tsx",
      "src\\app\\components\\EmbedConsentBanner\\index.tsx",
      "src\\app\\components\\Embeds\\AmpIframeEmbed\\index.stories.tsx",
      "src\\app\\components\\Embeds\\OEmbed\\index.test.tsx",
      "src\\app\\components\\FrostedGlassPromo\\index.test.tsx",
      "src\\app\\components\\LinkedData\\index.test.tsx",
      "src\\app\\components\\MostRead\\Amp\\getRemoteDataScript\\index.ts",
      "src\\app\\components\\MostRead\\Amp\\index.test.tsx",
      "src\\app\\components\\MostRead\\Amp\\index.tsx",
      "src\\app\\components\\MostRead\\Canonical\\index.test.tsx",
      "src\\app\\components\\MostRead\\Canonical\\index.tsx",
      "src\\app\\components\\MostRead\\Canonical\\Item\\index.tsx",
      "src\\app\\components\\MostRead\\Canonical\\LastUpdated\\index.tsx",
      "src\\app\\components\\MostRead\\Canonical\\Rank\\index.styles.ts",
      "src\\app\\components\\MostRead\\Canonical\\Rank\\index.tsx",
      "src\\app\\components\\MostRead\\index.test.tsx",
      "src\\app\\components\\MostRead\\index.tsx",
      "src\\app\\components\\MostRead\\types.ts",
      "src\\app\\components\\MostRead\\utilities\\testHelpers.tsx",
      "src\\app\\components\\OptimizelyRecommendations\\index.test.tsx",
      "src\\app\\components\\react-testing-library-with-providers.tsx",
      "src\\app\\components\\RelatedContentSection\\index.stories.tsx",
      "src\\app\\components\\RelatedContentSection\\index.test.tsx",
      "src\\app\\components\\RelatedContentSection\\RelatedContentItem\\index.test.tsx",
      "src\\app\\components\\ThemeProvider\\index.tsx",
      "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx",
      "src\\app\\components\\VisuallyHiddenText\\index.stories.tsx",
      "src\\app\\contexts\\EventTrackingContext\\index.tsx",
      "src\\app\\contexts\\ServiceContext\\index.test.tsx",
      "src\\app\\contexts\\ServiceContext\\index.tsx",
      "src\\app\\contexts\\ServiceContext\\__mocks__\\index.tsx",
      "src\\app\\contexts\\ToggleContext\\index.test.tsx",
      "src\\app\\lib\\config\\services\\newsround.ts",
      "src\\app\\lib\\config\\services\\serbian.ts",
      "src\\app\\lib\\config\\services\\ukchina.ts",
      "src\\app\\lib\\config\\services\\ukrainian.ts",
      "src\\app\\lib\\config\\services\\uzbek.ts",
      "src\\app\\lib\\config\\services\\zhongwen.ts",
      "src\\app\\models\\types\\initialData.ts",
      "src\\app\\models\\types\\optimo.ts",
      "src\\app\\models\\types\\pageDataParams.ts",
      "src\\app\\models\\types\\serviceConfig.ts",
      "src\\app\\models\\types\\storybook.ts",
      "src\\app\\pages\\MediaArticlePage\\index.test.tsx",
      "src\\app\\pages\\MediaArticlePage\\PagePromoSections\\LatestMediaSection\\index.stories.tsx",
      "src\\app\\routes\\article\\getInitialData\\index.ts",
      "src\\app\\routes\\homePage\\getInitialData\\page-config.ts",
      "src\\app\\routes\\topic\\getInitialData\\page-config.ts",
      "src\\app\\routes\\utils\\fetchDataFromBFF\\index.ts",
      "src\\server\\utilities\\serviceConfigs\\index.ts",
      "ws-nextjs-app\\cypress\\support\\commands.ts",
      "ws-nextjs-app\\pages\\_app.page.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../../routes/utils/pageTypes",
        "resolvedPath": "src\\app\\routes\\utils\\pageTypes.ts"
      }
    ]
  },
  "src\\app\\models\\types\\initialData.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "./global",
        "resolvedPath": "src\\app\\models\\types\\global.ts"
      }
    ]
  },
  "src\\app\\models\\types\\media.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\models\\types\\metadata.ts": {
    "incomingDependencies": [
      "src\\app\\components\\Byline\\utilities\\categoryName\\index.ts",
      "src\\app\\components\\ChartbeatAnalytics\\types.ts",
      "src\\app\\components\\ChartbeatAnalytics\\utils\\index.ts",
      "src\\app\\models\\types\\optimo.ts"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\models\\types\\onwardJourney.ts": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\CpsRecommendations\\RecommendationsPromo\\fixture.ts",
      "src\\app\\legacy\\containers\\CpsRecommendations\\RecommendationsPromo\\utility\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "./optimo",
        "resolvedPath": "src\\app\\models\\types\\optimo.ts"
      }
    ]
  },
  "src\\app\\models\\types\\optimo.ts": {
    "incomingDependencies": [
      "src\\app\\components\\FrostedGlassPromo\\withData.tsx",
      "src\\app\\components\\RelatedContentSection\\index.stories.tsx",
      "src\\app\\components\\RelatedContentSection\\index.test.tsx",
      "src\\app\\components\\RelatedContentSection\\index.tsx",
      "src\\app\\models\\types\\onwardJourney.ts",
      "src\\app\\pages\\MediaArticlePage\\types.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "#app/components/ATIAnalytics/types",
        "resolvedPath": "#app/components/ATIAnalytics/types"
      },
      {
        "source": "#app/components/Metadata/types",
        "resolvedPath": "#app/components/Metadata/types"
      },
      {
        "source": "#app/components/MostRead/types",
        "resolvedPath": "#app/components/MostRead/types"
      },
      {
        "source": "#app/pages/ArticlePage/PagePromoSections/TopStoriesSection/types",
        "resolvedPath": "#app/pages/ArticlePage/PagePromoSections/TopStoriesSection/types"
      },
      {
        "source": "#app/pages/MediaArticlePage/PagePromoSections/LatestMediaSection/types",
        "resolvedPath": "#app/pages/MediaArticlePage/PagePromoSections/LatestMediaSection/types"
      },
      {
        "source": "./global",
        "resolvedPath": "src\\app\\models\\types\\global.ts"
      },
      {
        "source": "./metadata",
        "resolvedPath": "src\\app\\models\\types\\metadata.ts"
      }
    ]
  },
  "src\\app\\models\\types\\pageDataParams.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "querystring",
        "resolvedPath": "querystring"
      },
      {
        "source": "./global",
        "resolvedPath": "src\\app\\models\\types\\global.ts"
      }
    ]
  },
  "src\\app\\models\\types\\radioSchedule.ts": {
    "incomingDependencies": [
      "src\\app\\components\\Curation\\index.test.tsx"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\models\\types\\serviceConfig.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ATIAnalytics\\params\\genericPage\\buildParams.test.ts",
      "src\\app\\components\\ATIAnalytics\\params\\index.test.ts",
      "src\\app\\components\\ATIAnalytics\\params\\index.ts",
      "src\\app\\components\\ATIAnalytics\\params\\indexPage\\buildParams.test.ts",
      "src\\app\\components\\ATIAnalytics\\params\\indexPage\\buildParams.ts",
      "src\\app\\components\\ATIAnalytics\\params\\topicPage\\buildParams.test.ts",
      "src\\app\\components\\ATIAnalytics\\params\\topicPage\\buildParams.ts",
      "src\\app\\components\\ATIAnalytics\\params\\tvRadioPage\\buildParams.test.ts",
      "src\\app\\components\\ATIAnalytics\\params\\tvRadioPage\\buildParams.ts",
      "src\\app\\components\\ATIAnalytics\\types.ts",
      "src\\app\\components\\Copyright\\index.stories.tsx",
      "src\\app\\components\\Copyright\\index.test.tsx",
      "src\\app\\contexts\\ServiceContext\\index.tsx",
      "src\\app\\lib\\config\\services\\afaanoromoo.ts",
      "src\\app\\lib\\config\\services\\afrique.ts",
      "src\\app\\lib\\config\\services\\amharic.ts",
      "src\\app\\lib\\config\\services\\arabic.ts",
      "src\\app\\lib\\config\\services\\archive.ts",
      "src\\app\\lib\\config\\services\\azeri.ts",
      "src\\app\\lib\\config\\services\\bengali.ts",
      "src\\app\\lib\\config\\services\\burmese.ts",
      "src\\app\\lib\\config\\services\\cymrufyw.ts",
      "src\\app\\lib\\config\\services\\gahuza.ts",
      "src\\app\\lib\\config\\services\\gujarati.ts",
      "src\\app\\lib\\config\\services\\hausa.ts",
      "src\\app\\lib\\config\\services\\hindi.ts",
      "src\\app\\lib\\config\\services\\igbo.ts",
      "src\\app\\lib\\config\\services\\indonesia.ts",
      "src\\app\\lib\\config\\services\\japanese.ts",
      "src\\app\\lib\\config\\services\\korean.ts",
      "src\\app\\lib\\config\\services\\kyrgyz.ts",
      "src\\app\\lib\\config\\services\\marathi.ts",
      "src\\app\\lib\\config\\services\\mundo.ts",
      "src\\app\\lib\\config\\services\\naidheachdan.ts",
      "src\\app\\lib\\config\\services\\nepali.ts",
      "src\\app\\lib\\config\\services\\news.ts",
      "src\\app\\lib\\config\\services\\newsround.ts",
      "src\\app\\lib\\config\\services\\pashto.ts",
      "src\\app\\lib\\config\\services\\persian.ts",
      "src\\app\\lib\\config\\services\\pidgin.ts",
      "src\\app\\lib\\config\\services\\portuguese.ts",
      "src\\app\\lib\\config\\services\\punjabi.ts",
      "src\\app\\lib\\config\\services\\russian.ts",
      "src\\app\\lib\\config\\services\\scotland.ts",
      "src\\app\\lib\\config\\services\\serbian.ts",
      "src\\app\\lib\\config\\services\\sinhala.ts",
      "src\\app\\lib\\config\\services\\somali.ts",
      "src\\app\\lib\\config\\services\\sport.ts",
      "src\\app\\lib\\config\\services\\swahili.ts",
      "src\\app\\lib\\config\\services\\tamil.ts",
      "src\\app\\lib\\config\\services\\telugu.ts",
      "src\\app\\lib\\config\\services\\thai.ts",
      "src\\app\\lib\\config\\services\\tigrinya.ts",
      "src\\app\\lib\\config\\services\\turkce.ts",
      "src\\app\\lib\\config\\services\\ukchina.ts",
      "src\\app\\lib\\config\\services\\ukrainian.ts",
      "src\\app\\lib\\config\\services\\urdu.ts",
      "src\\app\\lib\\config\\services\\uzbek.ts",
      "src\\app\\lib\\config\\services\\vietnamese.ts",
      "src\\app\\lib\\config\\services\\ws.ts",
      "src\\app\\lib\\config\\services\\yoruba.ts",
      "src\\app\\lib\\config\\services\\zhongwen.ts",
      "src\\server\\utilities\\serviceConfigs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "./global",
        "resolvedPath": "src\\app\\models\\types\\global.ts"
      },
      {
        "source": "./translations",
        "resolvedPath": "src\\app\\models\\types\\translations.ts"
      }
    ]
  },
  "src\\app\\models\\types\\storybook.ts": {
    "incomingDependencies": [
      "src\\app\\components\\Billboard\\index.stories.tsx",
      "src\\app\\components\\BulletedList\\index.stories.tsx",
      "src\\app\\components\\Copyright\\index.stories.tsx",
      "src\\app\\components\\Curation\\Subhead\\index.stories.tsx",
      "src\\app\\components\\Disclaimer\\index.stories.tsx",
      "src\\app\\components\\Heading\\index.stories.tsx",
      "src\\app\\components\\InlineLink\\index.stories.tsx",
      "src\\app\\components\\MessageBanner\\index.stories.tsx",
      "src\\app\\components\\MostRead\\index.stories.tsx",
      "src\\app\\components\\Paragraph\\index.stories.tsx",
      "src\\app\\components\\Text\\index.stories.tsx",
      "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx",
      "src\\app\\legacy\\containers\\Footer\\index.stories.tsx",
      "src\\app\\pages\\HomePage\\index.stories.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "./global",
        "resolvedPath": "src\\app\\models\\types\\global.ts"
      }
    ]
  },
  "src\\app\\models\\types\\theming.ts": {
    "incomingDependencies": [
      "src\\app\\components\\Heading\\index.tsx",
      "src\\app\\components\\InlineLink\\index.tsx",
      "src\\app\\components\\MostRead\\Canonical\\index.tsx",
      "src\\app\\components\\MostRead\\Canonical\\LastUpdated\\index.tsx",
      "src\\app\\components\\MostRead\\utilities\\testHelpers.tsx",
      "src\\app\\components\\Paragraph\\index.tsx",
      "src\\app\\components\\Text\\index.tsx",
      "src\\app\\components\\ThemeProvider\\chameleonLogos\\index.tsx",
      "src\\app\\components\\ThemeProvider\\fontSizes.ts",
      "src\\app\\components\\ThemeProvider\\fontVariants\\index.tsx",
      "src\\app\\components\\ThemeProvider\\gridWidths.ts",
      "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\models\\types\\translations.ts": {
    "incomingDependencies": [
      "src\\app\\components\\EmbedConsentBanner\\ConsentBanner.tsx",
      "src\\app\\contexts\\ServiceContext\\index.test.tsx",
      "src\\app\\models\\types\\serviceConfig.ts"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\pages\\ArticlePage\\ArticlePage.styles.ts": {
    "incomingDependencies": [
      "src\\app\\pages\\ArticlePage\\ArticlePage.tsx",
      "src\\app\\pages\\ArticlePage\\SecondaryColumn.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "../../utilities/pixelsToRem",
        "resolvedPath": "src\\app\\utilities\\pixelsToRem\\index.ts"
      }
    ]
  },
  "src\\app\\pages\\ArticlePage\\ArticlePage.tsx": {
    "incomingDependencies": [
      "src\\app\\pages\\ArticlePage\\index.stories.tsx",
      "src\\app\\pages\\ArticlePage\\index.test.tsx",
      "src\\app\\pages\\ArticlePage\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "#hooks/useToggle",
        "resolvedPath": "#hooks/useToggle"
      },
      {
        "source": "#app/models/blocks",
        "resolvedPath": "#app/models/blocks"
      },
      {
        "source": "#containers/ArticleMetadata",
        "resolvedPath": "#containers/ArticleMetadata"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "#contexts/RequestContext"
      },
      {
        "source": "#containers/Headings",
        "resolvedPath": "#containers/Headings"
      },
      {
        "source": "#containers/VisuallyHiddenHeadline",
        "resolvedPath": "#containers/VisuallyHiddenHeadline"
      },
      {
        "source": "#containers/Gist",
        "resolvedPath": "#containers/Gist"
      },
      {
        "source": "#containers/Text",
        "resolvedPath": "#containers/Text"
      },
      {
        "source": "#containers/Blocks",
        "resolvedPath": "#containers/Blocks"
      },
      {
        "source": "#containers/ArticleTimestamp",
        "resolvedPath": "#containers/ArticleTimestamp"
      },
      {
        "source": "#containers/ComscoreAnalytics",
        "resolvedPath": "#containers/ComscoreAnalytics"
      },
      {
        "source": "#containers/SocialEmbed",
        "resolvedPath": "#containers/SocialEmbed"
      },
      {
        "source": "#app/components/MediaLoader",
        "resolvedPath": "#app/components/MediaLoader"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": "#lib/utilities/parseAssetData",
        "resolvedPath": "#lib/utilities/parseAssetData"
      },
      {
        "source": "#lib/utilities/blockHandlers",
        "resolvedPath": "#lib/utilities/blockHandlers"
      },
      {
        "source": "#containers/RelatedTopics",
        "resolvedPath": "#containers/RelatedTopics"
      },
      {
        "source": "#containers/NielsenAnalytics",
        "resolvedPath": "#containers/NielsenAnalytics"
      },
      {
        "source": "#containers/CpsRecommendations",
        "resolvedPath": "#containers/CpsRecommendations"
      },
      {
        "source": "#containers/PodcastPromo/Inline",
        "resolvedPath": "#containers/PodcastPromo/Inline"
      },
      {
        "source": "#app/models/types/optimo",
        "resolvedPath": "#app/models/types/optimo"
      },
      {
        "source": "#components/ScrollablePromo",
        "resolvedPath": "#components/ScrollablePromo"
      },
      {
        "source": "../../components/ImageWithCaption",
        "resolvedPath": "src\\app\\components\\ImageWithCaption\\index.tsx"
      },
      {
        "source": "../../components/Ad",
        "resolvedPath": "src\\app\\components\\Ad\\index.tsx"
      },
      {
        "source": "../../components/Embeds/EmbedImages",
        "resolvedPath": "src\\app\\components\\Embeds\\EmbedImages\\index.tsx"
      },
      {
        "source": "../../components/Embeds/EmbedHtml",
        "resolvedPath": "src\\app\\components\\Embeds\\EmbedHtml\\index.tsx"
      },
      {
        "source": "../../components/MostRead",
        "resolvedPath": "src\\app\\components\\MostRead\\index.tsx"
      },
      {
        "source": "../../components/ATIAnalytics",
        "resolvedPath": "src\\app\\components\\ATIAnalytics\\index.tsx"
      },
      {
        "source": "../../components/ChartbeatAnalytics",
        "resolvedPath": "src\\app\\components\\ChartbeatAnalytics\\index.tsx"
      },
      {
        "source": "../../components/LinkedData",
        "resolvedPath": "src\\app\\components\\LinkedData\\index.tsx"
      },
      {
        "source": "../../components/Byline",
        "resolvedPath": "src\\app\\components\\Byline\\index.tsx"
      },
      {
        "source": "../../components/Embeds/OEmbed",
        "resolvedPath": "src\\app\\components\\Embeds\\OEmbed\\index.tsx"
      },
      {
        "source": "../../components/Embeds/UnsupportedEmbed",
        "resolvedPath": "src\\app\\components\\Embeds\\UnsupportedEmbed\\index.tsx"
      },
      {
        "source": "../../components/Embeds/Uploader",
        "resolvedPath": "src\\app\\components\\Embeds\\Uploader\\index.tsx"
      },
      {
        "source": "../../components/Byline/utilities",
        "resolvedPath": "src\\app\\components\\Byline\\utilities\\index.ts"
      },
      {
        "source": "../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../../components/RelatedContentSection",
        "resolvedPath": "src\\app\\components\\RelatedContentSection\\index.tsx"
      },
      {
        "source": "../../components/Disclaimer",
        "resolvedPath": "src\\app\\components\\Disclaimer\\index.tsx"
      },
      {
        "source": "./SecondaryColumn",
        "resolvedPath": "src\\app\\pages\\ArticlePage\\SecondaryColumn.tsx"
      },
      {
        "source": "./ArticlePage.styles",
        "resolvedPath": "src\\app\\pages\\ArticlePage\\ArticlePage.styles.ts"
      },
      {
        "source": "./types",
        "resolvedPath": "src\\app\\pages\\ArticlePage\\types.ts"
      }
    ]
  },
  "src\\app\\pages\\ArticlePage\\fixtureData.ts": {
    "incomingDependencies": [
      "src\\app\\components\\Byline\\index.stories.tsx",
      "src\\app\\components\\Byline\\index.test.tsx",
      "src\\app\\components\\Byline\\utilities\\bylineExtractor\\index.test.tsx",
      "src\\app\\components\\Byline\\utilities\\categoryName\\index.test.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "#app/models/types/optimo",
        "resolvedPath": "#app/models/types/optimo"
      },
      {
        "source": "#models/blocks",
        "resolvedPath": "#models/blocks"
      }
    ]
  },
  "src\\app\\pages\\ArticlePage\\index.stories.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#app/components/ThemeProvider",
        "resolvedPath": "#app/components/ThemeProvider"
      },
      {
        "source": "#contexts/ToggleContext",
        "resolvedPath": "#contexts/ToggleContext"
      },
      {
        "source": "#app/contexts/ServiceContext",
        "resolvedPath": "#app/contexts/ServiceContext"
      },
      {
        "source": "#app/contexts/RequestContext",
        "resolvedPath": "#app/contexts/RequestContext"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": "#data/news/articles/c0g992jmmkko.json",
        "resolvedPath": "#data/news/articles/c0g992jmmkko.json"
      },
      {
        "source": "#data/burmese/articles/cn0exdy1jzvo.json",
        "resolvedPath": "#data/burmese/articles/cn0exdy1jzvo.json"
      },
      {
        "source": "#data/afrique/articles/c7yn6nznljdo.json",
        "resolvedPath": "#data/afrique/articles/c7yn6nznljdo.json"
      },
      {
        "source": "#data/afrique/articles/cz216x22106o.json",
        "resolvedPath": "#data/afrique/articles/cz216x22106o.json"
      },
      {
        "source": "#data/russian/articles/c61q94n3rm3o.json",
        "resolvedPath": "#data/russian/articles/c61q94n3rm3o.json"
      },
      {
        "source": "#data/news/articles/crkxdvxzwxk2.json",
        "resolvedPath": "#data/news/articles/crkxdvxzwxk2.json"
      },
      {
        "source": "#containers/PageHandlers/withPageWrapper",
        "resolvedPath": "#containers/PageHandlers/withPageWrapper"
      },
      {
        "source": "#containers/PageHandlers/withOptimizelyProvider",
        "resolvedPath": "#containers/PageHandlers/withOptimizelyProvider"
      },
      {
        "source": "#app/lib/config/services/news",
        "resolvedPath": "#app/lib/config/services/news"
      },
      {
        "source": "#app/components/ThemeProvider/fontScripts/latin",
        "resolvedPath": "#app/components/ThemeProvider/fontScripts/latin"
      },
      {
        "source": "#app/models/types/global",
        "resolvedPath": "#app/models/types/global"
      },
      {
        "source": "./ArticlePage",
        "resolvedPath": "src\\app\\pages\\ArticlePage\\ArticlePage.tsx"
      }
    ]
  },
  "src\\app\\pages\\ArticlePage\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "react-helmet",
        "resolvedPath": "react-helmet"
      },
      {
        "source": "react-router-dom",
        "resolvedPath": "react-router-dom"
      },
      {
        "source": "ramda/src/mergeDeepLeft",
        "resolvedPath": "ramda/src/mergeDeepLeft"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "#contexts/RequestContext"
      },
      {
        "source": "#contexts/ToggleContext",
        "resolvedPath": "#contexts/ToggleContext"
      },
      {
        "source": "#pages/ArticlePage/fixtureData",
        "resolvedPath": "#pages/ArticlePage/fixtureData"
      },
      {
        "source": "#data/news/mostRead/index.json",
        "resolvedPath": "#data/news/mostRead/index.json"
      },
      {
        "source": "#data/persian/mostRead/index.json",
        "resolvedPath": "#data/persian/mostRead/index.json"
      },
      {
        "source": "#data/pidgin/mostRead/index.json",
        "resolvedPath": "#data/pidgin/mostRead/index.json"
      },
      {
        "source": "#models/blocks/index",
        "resolvedPath": "#models/blocks/index"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": "#app/legacy/psammead/psammead-test-helpers/src",
        "resolvedPath": "#app/legacy/psammead/psammead-test-helpers/src"
      },
      {
        "source": "#app/models/types/global",
        "resolvedPath": "#app/models/types/global"
      },
      {
        "source": "#app/models/types/optimo",
        "resolvedPath": "#app/models/types/optimo"
      },
      {
        "source": "../../components/react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "./ArticlePage",
        "resolvedPath": "src\\app\\pages\\ArticlePage\\ArticlePage.tsx"
      },
      {
        "source": "../../components/ThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\index.tsx"
      },
      {
        "source": "../../components/ATIAnalytics",
        "resolvedPath": "src\\app\\components\\ATIAnalytics\\index.tsx"
      }
    ]
  },
  "src\\app\\pages\\ArticlePage\\index.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "./ArticlePage",
        "resolvedPath": "src\\app\\pages\\ArticlePage\\ArticlePage.tsx"
      },
      {
        "source": "../utils/applyBasicPageHandlers",
        "resolvedPath": "src\\app\\pages\\utils\\applyBasicPageHandlers.js"
      }
    ]
  },
  "src\\app\\pages\\ArticlePage\\PagePromoSections\\constants.ts": {
    "incomingDependencies": [
      "src\\app\\pages\\ArticlePage\\PagePromoSections\\TopStoriesSection\\index.styles.ts",
      "src\\app\\pages\\ArticlePage\\PagePromoSections\\TopStoriesSection\\TopStoriesItem\\index.styles.ts"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\pages\\ArticlePage\\PagePromoSections\\TopStoriesSection\\fixture\\index.ts": {
    "incomingDependencies": [
      "src\\app\\pages\\ArticlePage\\PagePromoSections\\TopStoriesSection\\index.stories.tsx",
      "src\\app\\pages\\ArticlePage\\PagePromoSections\\TopStoriesSection\\index.test.tsx",
      "src\\app\\pages\\ArticlePage\\PagePromoSections\\TopStoriesSection\\TopStoriesItem\\index.test.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../types",
        "resolvedPath": "src\\app\\pages\\ArticlePage\\PagePromoSections\\TopStoriesSection\\types.ts"
      }
    ]
  },
  "src\\app\\pages\\ArticlePage\\PagePromoSections\\TopStoriesSection\\index.stories.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#contexts/ServiceContext",
        "resolvedPath": "#contexts/ServiceContext"
      },
      {
        "source": "#app/models/types/global",
        "resolvedPath": "#app/models/types/global"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\pages\\ArticlePage\\PagePromoSections\\TopStoriesSection\\index.tsx"
      },
      {
        "source": "./fixture",
        "resolvedPath": "src\\app\\pages\\ArticlePage\\PagePromoSections\\TopStoriesSection\\fixture\\index.ts"
      },
      {
        "source": "./metadata.json",
        "resolvedPath": "..\\EXIM\\Work\\iterate-ai\\dep-graph\\metadata.json"
      },
      {
        "source": "./README.md",
        "resolvedPath": "..\\EXIM\\Work\\iterate-ai\\dep-graph\\README.md"
      },
      {
        "source": "./types",
        "resolvedPath": "src\\app\\pages\\ArticlePage\\PagePromoSections\\TopStoriesSection\\types.ts"
      }
    ]
  },
  "src\\app\\pages\\ArticlePage\\PagePromoSections\\TopStoriesSection\\index.styles.ts": {
    "incomingDependencies": [
      "src\\app\\pages\\ArticlePage\\PagePromoSections\\TopStoriesSection\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "../constants",
        "resolvedPath": "src\\app\\pages\\ArticlePage\\PagePromoSections\\constants.ts"
      }
    ]
  },
  "src\\app\\pages\\ArticlePage\\PagePromoSections\\TopStoriesSection\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#contexts/ToggleContext",
        "resolvedPath": "#contexts/ToggleContext"
      },
      {
        "source": "#hooks/useClickTrackerHandler",
        "resolvedPath": "#hooks/useClickTrackerHandler"
      },
      {
        "source": "#hooks/useViewTracker",
        "resolvedPath": "#hooks/useViewTracker"
      },
      {
        "source": "#psammead/psammead-test-helpers/src",
        "resolvedPath": "#psammead/psammead-test-helpers/src"
      },
      {
        "source": "#app/models/types/global",
        "resolvedPath": "#app/models/types/global"
      },
      {
        "source": "../../../../components/react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "../../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\pages\\ArticlePage\\PagePromoSections\\TopStoriesSection\\index.tsx"
      },
      {
        "source": "./fixture",
        "resolvedPath": "src\\app\\pages\\ArticlePage\\PagePromoSections\\TopStoriesSection\\fixture\\index.ts"
      },
      {
        "source": "./types",
        "resolvedPath": "src\\app\\pages\\ArticlePage\\PagePromoSections\\TopStoriesSection\\types.ts"
      }
    ]
  },
  "src\\app\\pages\\ArticlePage\\PagePromoSections\\TopStoriesSection\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\pages\\ArticlePage\\PagePromoSections\\TopStoriesSection\\index.stories.tsx",
      "src\\app\\pages\\ArticlePage\\PagePromoSections\\TopStoriesSection\\index.test.tsx",
      "src\\app\\pages\\ArticlePage\\SecondaryColumn.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#hooks/useViewTracker",
        "resolvedPath": "#hooks/useViewTracker"
      },
      {
        "source": "#app/models/types/eventTracking",
        "resolvedPath": "#app/models/types/eventTracking"
      },
      {
        "source": "#psammead/psammead-section-label/src",
        "resolvedPath": "#psammead/psammead-section-label/src"
      },
      {
        "source": "#components/OptimoPromos/PromoItem/index.styles",
        "resolvedPath": "#components/OptimoPromos/PromoItem/index.styles"
      },
      {
        "source": "#components/OptimoPromos/PromoList",
        "resolvedPath": "#components/OptimoPromos/PromoList"
      },
      {
        "source": "../../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\pages\\ArticlePage\\PagePromoSections\\TopStoriesSection\\index.styles.ts"
      },
      {
        "source": "./TopStoriesItem",
        "resolvedPath": "src\\app\\pages\\ArticlePage\\PagePromoSections\\TopStoriesSection\\TopStoriesItem\\index.tsx"
      },
      {
        "source": "../../../../lib/utilities/generatePromoId",
        "resolvedPath": "src\\app\\lib\\utilities\\generatePromoId\\index.ts"
      },
      {
        "source": "./types",
        "resolvedPath": "src\\app\\pages\\ArticlePage\\PagePromoSections\\TopStoriesSection\\types.ts"
      }
    ]
  },
  "src\\app\\pages\\ArticlePage\\PagePromoSections\\TopStoriesSection\\TopStoriesItem\\index.styles.ts": {
    "incomingDependencies": [
      "src\\app\\pages\\ArticlePage\\PagePromoSections\\TopStoriesSection\\TopStoriesItem\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "../../constants",
        "resolvedPath": "src\\app\\pages\\ArticlePage\\PagePromoSections\\constants.ts"
      }
    ]
  },
  "src\\app\\pages\\ArticlePage\\PagePromoSections\\TopStoriesSection\\TopStoriesItem\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#contexts/ToggleContext",
        "resolvedPath": "#contexts/ToggleContext"
      },
      {
        "source": "#psammead/psammead-test-helpers/src",
        "resolvedPath": "#psammead/psammead-test-helpers/src"
      },
      {
        "source": "#app/models/types/global",
        "resolvedPath": "#app/models/types/global"
      },
      {
        "source": "../../../../../components/react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "../../../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\pages\\ArticlePage\\PagePromoSections\\TopStoriesSection\\TopStoriesItem\\index.tsx"
      },
      {
        "source": "../fixture",
        "resolvedPath": "src\\app\\pages\\ArticlePage\\PagePromoSections\\TopStoriesSection\\fixture\\index.ts"
      },
      {
        "source": "../types",
        "resolvedPath": "src\\app\\pages\\ArticlePage\\PagePromoSections\\TopStoriesSection\\types.ts"
      }
    ]
  },
  "src\\app\\pages\\ArticlePage\\PagePromoSections\\TopStoriesSection\\TopStoriesItem\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\pages\\ArticlePage\\PagePromoSections\\TopStoriesSection\\index.tsx",
      "src\\app\\pages\\ArticlePage\\PagePromoSections\\TopStoriesSection\\TopStoriesItem\\index.test.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#lib/utilities/getStoryPromoInfo",
        "resolvedPath": "#lib/utilities/getStoryPromoInfo"
      },
      {
        "source": "#components/OptimoPromos",
        "resolvedPath": "#components/OptimoPromos"
      },
      {
        "source": "#app/models/types/eventTracking",
        "resolvedPath": "#app/models/types/eventTracking"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\pages\\ArticlePage\\PagePromoSections\\TopStoriesSection\\TopStoriesItem\\index.styles.ts"
      },
      {
        "source": "../types",
        "resolvedPath": "src\\app\\pages\\ArticlePage\\PagePromoSections\\TopStoriesSection\\types.ts"
      }
    ]
  },
  "src\\app\\pages\\ArticlePage\\PagePromoSections\\TopStoriesSection\\types.ts": {
    "incomingDependencies": [
      "src\\app\\pages\\ArticlePage\\PagePromoSections\\TopStoriesSection\\fixture\\index.ts",
      "src\\app\\pages\\ArticlePage\\PagePromoSections\\TopStoriesSection\\index.stories.tsx",
      "src\\app\\pages\\ArticlePage\\PagePromoSections\\TopStoriesSection\\index.test.tsx",
      "src\\app\\pages\\ArticlePage\\PagePromoSections\\TopStoriesSection\\index.tsx",
      "src\\app\\pages\\ArticlePage\\PagePromoSections\\TopStoriesSection\\TopStoriesItem\\index.test.tsx",
      "src\\app\\pages\\ArticlePage\\PagePromoSections\\TopStoriesSection\\TopStoriesItem\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "#app/models/types/metadata",
        "resolvedPath": "#app/models/types/metadata"
      },
      {
        "source": "#app/models/types/optimo",
        "resolvedPath": "#app/models/types/optimo"
      }
    ]
  },
  "src\\app\\pages\\ArticlePage\\SecondaryColumn.tsx": {
    "incomingDependencies": [
      "src\\app\\pages\\ArticlePage\\ArticlePage.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "#containers/CpsFeaturesAnalysis",
        "resolvedPath": "#containers/CpsFeaturesAnalysis"
      },
      {
        "source": "#app/models/types/optimo",
        "resolvedPath": "#app/models/types/optimo"
      },
      {
        "source": "./PagePromoSections/TopStoriesSection",
        "resolvedPath": "src\\app\\pages\\ArticlePage\\PagePromoSections\\TopStoriesSection\\index.tsx"
      },
      {
        "source": "./ArticlePage.styles",
        "resolvedPath": "src\\app\\pages\\ArticlePage\\ArticlePage.styles.ts"
      }
    ]
  },
  "src\\app\\pages\\ArticlePage\\types.ts": {
    "incomingDependencies": [
      "src\\app\\pages\\ArticlePage\\ArticlePage.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "#app/models/types/optimo",
        "resolvedPath": "#app/models/types/optimo"
      }
    ]
  },
  "src\\app\\pages\\ErrorPage\\ErrorPage.jsx": {
    "incomingDependencies": [
      "src\\app\\pages\\ErrorPage\\index.jsx",
      "src\\app\\pages\\ErrorPage\\index.stories.jsx",
      "src\\app\\pages\\ErrorPage\\index.test.jsx",
      "ws-nextjs-app\\pages\\_app.page.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "react-helmet",
        "resolvedPath": "react-helmet"
      },
      {
        "source": "#components/ErrorMain",
        "resolvedPath": "#components/ErrorMain"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      }
    ]
  },
  "src\\app\\pages\\ErrorPage\\index.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "ramda/src/pipe",
        "resolvedPath": "ramda/src/pipe"
      },
      {
        "source": "#containers/PageHandlers/withContexts",
        "resolvedPath": "#containers/PageHandlers/withContexts"
      },
      {
        "source": "#containers/PageHandlers/withPageWrapper",
        "resolvedPath": "#containers/PageHandlers/withPageWrapper"
      },
      {
        "source": "./ErrorPage",
        "resolvedPath": "src\\app\\pages\\ErrorPage\\ErrorPage.jsx"
      }
    ]
  },
  "src\\app\\pages\\ErrorPage\\index.stories.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "./ErrorPage",
        "resolvedPath": "src\\app\\pages\\ErrorPage\\ErrorPage.jsx"
      },
      {
        "source": "../../components/ThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\index.tsx"
      }
    ]
  },
  "src\\app\\pages\\ErrorPage\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "./ErrorPage",
        "resolvedPath": "src\\app\\pages\\ErrorPage\\ErrorPage.jsx"
      },
      {
        "source": "../../components/react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      }
    ]
  },
  "src\\app\\pages\\FeatureIdxPage\\FeatureIdxPage.jsx": {
    "incomingDependencies": [
      "src\\app\\pages\\FeatureIdxPage\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "ramda/src/path",
        "resolvedPath": "ramda/src/path"
      },
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "#containers/IndexHeading",
        "resolvedPath": "#containers/IndexHeading"
      },
      {
        "source": "#components/PageLayout/IndexPageContainer",
        "resolvedPath": "#components/PageLayout/IndexPageContainer"
      },
      {
        "source": "#containers/IndexPageSection",
        "resolvedPath": "#containers/IndexPageSection"
      },
      {
        "source": "#containers/ComscoreAnalytics",
        "resolvedPath": "#containers/ComscoreAnalytics"
      },
      {
        "source": "../../components/Ad",
        "resolvedPath": "src\\app\\components\\Ad\\index.tsx"
      },
      {
        "source": "../../components/Ad/MPU",
        "resolvedPath": "src\\app\\components\\Ad\\MPU\\index.tsx"
      },
      {
        "source": "../../components/ATIAnalytics",
        "resolvedPath": "src\\app\\components\\ATIAnalytics\\index.tsx"
      },
      {
        "source": "../../components/ChartbeatAnalytics",
        "resolvedPath": "src\\app\\components\\ChartbeatAnalytics\\index.tsx"
      },
      {
        "source": "../../components/Metadata",
        "resolvedPath": "src\\app\\components\\Metadata\\index.tsx"
      },
      {
        "source": "../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../../components/LinkedData",
        "resolvedPath": "src\\app\\components\\LinkedData\\index.tsx"
      },
      {
        "source": "./flattenGroups",
        "resolvedPath": "src\\app\\pages\\FeatureIdxPage\\flattenGroups.js"
      }
    ]
  },
  "src\\app\\pages\\FeatureIdxPage\\flattenGroups.js": {
    "incomingDependencies": [
      "src\\app\\pages\\FeatureIdxPage\\FeatureIdxPage.jsx",
      "src\\app\\pages\\FeatureIdxPage\\flattenGroups.test.js"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\pages\\FeatureIdxPage\\flattenGroups.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "./flattenGroups",
        "resolvedPath": "src\\app\\pages\\FeatureIdxPage\\flattenGroups.js"
      }
    ]
  },
  "src\\app\\pages\\FeatureIdxPage\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\pages\\FeatureIdxPage\\index.stories.jsx",
      "src\\app\\pages\\FeatureIdxPage\\index.test.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "./FeatureIdxPage",
        "resolvedPath": "src\\app\\pages\\FeatureIdxPage\\FeatureIdxPage.jsx"
      },
      {
        "source": "../utils/applyBasicPageHandlers",
        "resolvedPath": "src\\app\\pages\\utils\\applyBasicPageHandlers.js"
      }
    ]
  },
  "src\\app\\pages\\FeatureIdxPage\\index.stories.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "react-router-dom",
        "resolvedPath": "react-router-dom"
      },
      {
        "source": "#testHelpers/withTimeMachine",
        "resolvedPath": "#testHelpers/withTimeMachine"
      },
      {
        "source": "#data/afrique/cpsAssets/reduced-48465371",
        "resolvedPath": "#data/afrique/cpsAssets/reduced-48465371"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\pages\\FeatureIdxPage\\index.jsx"
      }
    ]
  },
  "src\\app\\pages\\FeatureIdxPage\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "react-router-dom",
        "resolvedPath": "react-router-dom"
      },
      {
        "source": "@testing-library/react",
        "resolvedPath": "@testing-library/react"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "#contexts/RequestContext"
      },
      {
        "source": "#contexts/ToggleContext",
        "resolvedPath": "#contexts/ToggleContext"
      },
      {
        "source": "#data/urdu/cpsAssets/science-51314202.json",
        "resolvedPath": "#data/urdu/cpsAssets/science-51314202.json"
      },
      {
        "source": "#app/routes/article/getInitialData",
        "resolvedPath": "#app/routes/article/getInitialData"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": "react-helmet",
        "resolvedPath": "react-helmet"
      },
      {
        "source": "../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../../components/ThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\index.tsx"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\pages\\FeatureIdxPage\\index.jsx"
      }
    ]
  },
  "src\\app\\pages\\FrontPage\\FrontPage.jsx": {
    "incomingDependencies": [
      "src\\app\\pages\\FrontPage\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "ramda/src/path",
        "resolvedPath": "ramda/src/path"
      },
      {
        "source": "ramda/src/findIndex",
        "resolvedPath": "ramda/src/findIndex"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "#psammead/gel-foundations/src/breakpoints"
      },
      {
        "source": "#containers/ComscoreAnalytics",
        "resolvedPath": "#containers/ComscoreAnalytics"
      },
      {
        "source": "#components/PageLayout/IndexPageContainer",
        "resolvedPath": "#components/PageLayout/IndexPageContainer"
      },
      {
        "source": "#containers/IndexPageSection",
        "resolvedPath": "#containers/IndexPageSection"
      },
      {
        "source": "#containers/RadioSchedule",
        "resolvedPath": "#containers/RadioSchedule"
      },
      {
        "source": "#lib/styles.const",
        "resolvedPath": "#lib/styles.const"
      },
      {
        "source": "../../components/Ad",
        "resolvedPath": "src\\app\\components\\Ad\\index.tsx"
      },
      {
        "source": "../../components/Ad/MPU",
        "resolvedPath": "src\\app\\components\\Ad\\MPU\\index.tsx"
      },
      {
        "source": "../../components/MostRead",
        "resolvedPath": "src\\app\\components\\MostRead\\index.tsx"
      },
      {
        "source": "../../components/ATIAnalytics",
        "resolvedPath": "src\\app\\components\\ATIAnalytics\\index.tsx"
      },
      {
        "source": "../../components/ChartbeatAnalytics",
        "resolvedPath": "src\\app\\components\\ChartbeatAnalytics\\index.tsx"
      },
      {
        "source": "../../components/Metadata",
        "resolvedPath": "src\\app\\components\\Metadata\\index.tsx"
      },
      {
        "source": "../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../../components/ThemeProvider/palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "../../components/LinkedData",
        "resolvedPath": "src\\app\\components\\LinkedData\\index.tsx"
      },
      {
        "source": "../../components/VisuallyHiddenText",
        "resolvedPath": "src\\app\\components\\VisuallyHiddenText\\index.tsx"
      }
    ]
  },
  "src\\app\\pages\\FrontPage\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\pages\\FrontPage\\index.stories.jsx",
      "src\\app\\pages\\FrontPage\\index.test.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "./FrontPage",
        "resolvedPath": "src\\app\\pages\\FrontPage\\FrontPage.jsx"
      },
      {
        "source": "../utils/applyBasicPageHandlers",
        "resolvedPath": "src\\app\\pages\\utils\\applyBasicPageHandlers.js"
      }
    ]
  },
  "src\\app\\pages\\FrontPage\\index.stories.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "react-router-dom",
        "resolvedPath": "react-router-dom"
      },
      {
        "source": "#testHelpers/withTimeMachine",
        "resolvedPath": "#testHelpers/withTimeMachine"
      },
      {
        "source": "#data/urdu/frontpage",
        "resolvedPath": "#data/urdu/frontpage"
      },
      {
        "source": "#data/news/frontpage",
        "resolvedPath": "#data/news/frontpage"
      },
      {
        "source": "#data/serbian/frontpage/cyr",
        "resolvedPath": "#data/serbian/frontpage/cyr"
      },
      {
        "source": "#data/serbian/frontpage/lat",
        "resolvedPath": "#data/serbian/frontpage/lat"
      },
      {
        "source": "../../lib/config/services/urdu",
        "resolvedPath": "src\\app\\lib\\config\\services\\urdu.ts"
      },
      {
        "source": "../../lib/config/services/news",
        "resolvedPath": "src\\app\\lib\\config\\services\\news.ts"
      },
      {
        "source": "../../lib/config/services/serbian",
        "resolvedPath": "src\\app\\lib\\config\\services\\serbian.ts"
      },
      {
        "source": "#lib/utilities/getUrlHelpers/getMostReadUrls",
        "resolvedPath": "#lib/utilities/getUrlHelpers/getMostReadUrls"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": "../../components/ThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\index.tsx"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\pages\\FrontPage\\index.jsx"
      }
    ]
  },
  "src\\app\\pages\\FrontPage\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "react-router-dom",
        "resolvedPath": "react-router-dom"
      },
      {
        "source": "@testing-library/react",
        "resolvedPath": "@testing-library/react"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "#contexts/RequestContext"
      },
      {
        "source": "#contexts/ToggleContext",
        "resolvedPath": "#contexts/ToggleContext"
      },
      {
        "source": "#data/serbian/frontpage/lat.json",
        "resolvedPath": "#data/serbian/frontpage/lat.json"
      },
      {
        "source": "#app/routes/frontPage/getInitialData",
        "resolvedPath": "#app/routes/frontPage/getInitialData"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": "../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../../components/ThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\index.tsx"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\pages\\FrontPage\\index.jsx"
      }
    ]
  },
  "src\\app\\pages\\HomePage\\HomePage.tsx": {
    "incomingDependencies": [
      "src\\app\\pages\\HomePage\\index.test.tsx",
      "src\\app\\pages\\HomePage\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "#app/components/VisuallyHiddenText",
        "resolvedPath": "#app/components/VisuallyHiddenText"
      },
      {
        "source": "../../components/ATIAnalytics",
        "resolvedPath": "src\\app\\components\\ATIAnalytics\\index.tsx"
      },
      {
        "source": "../../models/types/curationData",
        "resolvedPath": "src\\app\\models\\types\\curationData.ts"
      },
      {
        "source": "../../components/ATIAnalytics/types",
        "resolvedPath": "src\\app\\components\\ATIAnalytics\\types.ts"
      },
      {
        "source": "../../components/Curation",
        "resolvedPath": "src\\app\\components\\Curation\\index.tsx"
      },
      {
        "source": "../../components/Ad",
        "resolvedPath": "src\\app\\components\\Ad\\index.tsx"
      },
      {
        "source": "../../components/Ad/MPU",
        "resolvedPath": "src\\app\\components\\Ad\\MPU\\index.tsx"
      },
      {
        "source": "../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\pages\\HomePage\\index.styles.tsx"
      },
      {
        "source": "../../components/Metadata",
        "resolvedPath": "src\\app\\components\\Metadata\\index.tsx"
      },
      {
        "source": "../../components/LinkedData",
        "resolvedPath": "src\\app\\components\\LinkedData\\index.tsx"
      },
      {
        "source": "../../lib/seoUtils/getItemList",
        "resolvedPath": "src\\app\\lib\\seoUtils\\getItemList\\index.ts"
      },
      {
        "source": "../../components/ChartbeatAnalytics",
        "resolvedPath": "src\\app\\components\\ChartbeatAnalytics\\index.tsx"
      },
      {
        "source": "../utils/getNthCurationByStyleAndProminence",
        "resolvedPath": "src\\app\\pages\\utils\\getNthCurationByStyleAndProminence\\index.ts"
      },
      {
        "source": "../utils/getIndexOfFirstNonBanner",
        "resolvedPath": "src\\app\\pages\\utils\\getIndexOfFirstNonBanner\\index.ts"
      }
    ]
  },
  "src\\app\\pages\\HomePage\\index.stories.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "url-parse",
        "resolvedPath": "url-parse"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": "node-fetch",
        "resolvedPath": "node-fetch"
      },
      {
        "source": "#app/models/types/curationData",
        "resolvedPath": "#app/models/types/curationData"
      },
      {
        "source": "#app/models/types/global",
        "resolvedPath": "#app/models/types/global"
      },
      {
        "source": "#storybook/withServicesDecorator",
        "resolvedPath": "#storybook/withServicesDecorator"
      },
      {
        "source": "../../models/types/storybook",
        "resolvedPath": "src\\app\\models\\types\\storybook.ts"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\pages\\HomePage\\index.tsx"
      }
    ]
  },
  "src\\app\\pages\\HomePage\\index.styles.tsx": {
    "incomingDependencies": [
      "src\\app\\pages\\HomePage\\HomePage.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      }
    ]
  },
  "src\\app\\pages\\HomePage\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "react-router-dom",
        "resolvedPath": "react-router-dom"
      },
      {
        "source": "react-helmet",
        "resolvedPath": "react-helmet"
      },
      {
        "source": "#data/kyrgyz/homePage/index.json",
        "resolvedPath": "#data/kyrgyz/homePage/index.json"
      },
      {
        "source": "#data/afrique/homePage/index.json",
        "resolvedPath": "#data/afrique/homePage/index.json"
      },
      {
        "source": "#data/pidgin/homePage/index.json",
        "resolvedPath": "#data/pidgin/homePage/index.json"
      },
      {
        "source": "../../components/react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "./HomePage",
        "resolvedPath": "src\\app\\pages\\HomePage\\HomePage.tsx"
      },
      {
        "source": "../../legacy/psammead/psammead-test-helpers/src",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-test-helpers\\src\\index.js"
      }
    ]
  },
  "src\\app\\pages\\HomePage\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\pages\\HomePage\\index.stories.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "./HomePage",
        "resolvedPath": "src\\app\\pages\\HomePage\\HomePage.tsx"
      },
      {
        "source": "../utils/applyBasicPageHandlers",
        "resolvedPath": "src\\app\\pages\\utils\\applyBasicPageHandlers.js"
      }
    ]
  },
  "src\\app\\pages\\index.js": {
    "incomingDependencies": [
      "src\\app\\pages\\LiveRadioPage\\index.stories.tsx",
      "src\\app\\pages\\OnDemandAudioPage\\index.stories.tsx",
      "src\\app\\pages\\OnDemandTvPage\\index.stories.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@loadable/component",
        "resolvedPath": "@loadable/component"
      }
    ]
  },
  "src\\app\\pages\\LiveRadioPage\\index.stories.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": "#app/models/types/global",
        "resolvedPath": "#app/models/types/global"
      },
      {
        "source": "#app/models/types/storybook",
        "resolvedPath": "#app/models/types/storybook"
      },
      {
        "source": "..",
        "resolvedPath": "src\\app\\pages\\index.js"
      },
      {
        "source": "./fixtureData/indonesia.json",
        "resolvedPath": "..\\EXIM\\Work\\iterate-ai\\dep-graph\\fixtureData\\indonesia.json"
      },
      {
        "source": "./fixtureData/korean.json",
        "resolvedPath": "..\\EXIM\\Work\\iterate-ai\\dep-graph\\fixtureData\\korean.json"
      },
      {
        "source": "./fixtureData/tigrinya.json",
        "resolvedPath": "..\\EXIM\\Work\\iterate-ai\\dep-graph\\fixtureData\\tigrinya.json"
      },
      {
        "source": "./fixtureData/afaanoromoo.json",
        "resolvedPath": "..\\EXIM\\Work\\iterate-ai\\dep-graph\\fixtureData\\afaanoromoo.json"
      },
      {
        "source": "./fixtureData/amharic.json",
        "resolvedPath": "..\\EXIM\\Work\\iterate-ai\\dep-graph\\fixtureData\\amharic.json"
      }
    ]
  },
  "src\\app\\pages\\LiveRadioPage\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "react-router-dom",
        "resolvedPath": "react-router-dom"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "#contexts/RequestContext"
      },
      {
        "source": "#lib/analyticsUtils",
        "resolvedPath": "#lib/analyticsUtils"
      },
      {
        "source": "#contexts/ToggleContext",
        "resolvedPath": "#contexts/ToggleContext"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": "#app/models/types/global",
        "resolvedPath": "#app/models/types/global"
      },
      {
        "source": "#app/models/types/media",
        "resolvedPath": "#app/models/types/media"
      },
      {
        "source": "../../components/react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "./LiveRadioPage",
        "resolvedPath": "src\\app\\pages\\LiveRadioPage\\LiveRadioPage.tsx"
      },
      {
        "source": "./fixtureData/afrique.json",
        "resolvedPath": "..\\EXIM\\Work\\iterate-ai\\dep-graph\\fixtureData\\afrique.json"
      },
      {
        "source": "./fixtureData/indonesia.json",
        "resolvedPath": "..\\EXIM\\Work\\iterate-ai\\dep-graph\\fixtureData\\indonesia.json"
      },
      {
        "source": "./fixtureData/gahuza.json",
        "resolvedPath": "..\\EXIM\\Work\\iterate-ai\\dep-graph\\fixtureData\\gahuza.json"
      },
      {
        "source": "./types",
        "resolvedPath": "src\\app\\pages\\LiveRadioPage\\types.ts"
      }
    ]
  },
  "src\\app\\pages\\LiveRadioPage\\index.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "./LiveRadioPage",
        "resolvedPath": "src\\app\\pages\\LiveRadioPage\\LiveRadioPage.tsx"
      },
      {
        "source": "../utils/applyBasicPageHandlers",
        "resolvedPath": "src\\app\\pages\\utils\\applyBasicPageHandlers.js"
      }
    ]
  },
  "src\\app\\pages\\LiveRadioPage\\LiveRadioPage.tsx": {
    "incomingDependencies": [
      "src\\app\\pages\\LiveRadioPage\\index.test.tsx",
      "src\\app\\pages\\LiveRadioPage\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#psammead/psammead-headings/src",
        "resolvedPath": "#psammead/psammead-headings/src"
      },
      {
        "source": "#psammead/psammead-paragraph/src",
        "resolvedPath": "#psammead/psammead-paragraph/src"
      },
      {
        "source": "#containers/RadioSchedule",
        "resolvedPath": "#containers/RadioSchedule"
      },
      {
        "source": "#containers/ComscoreAnalytics",
        "resolvedPath": "#containers/ComscoreAnalytics"
      },
      {
        "source": "#components/Grid",
        "resolvedPath": "#components/Grid"
      },
      {
        "source": "#app/components/MediaLoader",
        "resolvedPath": "#app/components/MediaLoader"
      },
      {
        "source": "../../components/ATIAnalytics",
        "resolvedPath": "src\\app\\components\\ATIAnalytics\\index.tsx"
      },
      {
        "source": "../../components/ChartbeatAnalytics",
        "resolvedPath": "src\\app\\components\\ChartbeatAnalytics\\index.tsx"
      },
      {
        "source": "../../components/Metadata",
        "resolvedPath": "src\\app\\components\\Metadata\\index.tsx"
      },
      {
        "source": "../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../../components/LinkedData",
        "resolvedPath": "src\\app\\components\\LinkedData\\index.tsx"
      },
      {
        "source": "./types",
        "resolvedPath": "src\\app\\pages\\LiveRadioPage\\types.ts"
      }
    ]
  },
  "src\\app\\pages\\LiveRadioPage\\types.ts": {
    "incomingDependencies": [
      "src\\app\\pages\\LiveRadioPage\\index.test.tsx",
      "src\\app\\pages\\LiveRadioPage\\LiveRadioPage.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "#app/components/ChartbeatAnalytics/types",
        "resolvedPath": "#app/components/ChartbeatAnalytics/types"
      },
      {
        "source": "#app/models/types/media",
        "resolvedPath": "#app/models/types/media"
      }
    ]
  },
  "src\\app\\pages\\MediaArticlePage\\fixtureData.ts": {
    "incomingDependencies": [
      "src\\app\\pages\\MediaArticlePage\\index.test.tsx",
      "src\\app\\pages\\MediaArticlePage\\utils\\checkIsLiveMedia\\index.test.ts"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\pages\\MediaArticlePage\\index.stories.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "react-router-dom",
        "resolvedPath": "react-router-dom"
      },
      {
        "source": "#app/models/types/storybook",
        "resolvedPath": "#app/models/types/storybook"
      },
      {
        "source": "#app/components/ThemeProvider",
        "resolvedPath": "#app/components/ThemeProvider"
      },
      {
        "source": "#app/models/types/global",
        "resolvedPath": "#app/models/types/global"
      },
      {
        "source": "../../contexts/ToggleContext",
        "resolvedPath": "src\\app\\contexts\\ToggleContext\\index.tsx"
      },
      {
        "source": "../../contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext\\index.tsx"
      },
      {
        "source": "../../contexts/UserContext",
        "resolvedPath": "src\\app\\contexts\\UserContext\\index.tsx"
      },
      {
        "source": "../../routes/utils/pageTypes",
        "resolvedPath": "src\\app\\routes\\utils\\pageTypes.ts"
      },
      {
        "source": "../../../../data/hausa/articles/cw43vy8zdjvo.json",
        "resolvedPath": "..\\data\\hausa\\articles\\cw43vy8zdjvo.json"
      },
      {
        "source": "../../../../data/tamil/articles/c84m2jl4dpzo.json",
        "resolvedPath": "..\\data\\tamil\\articles\\c84m2jl4dpzo.json"
      },
      {
        "source": "../../../../data/pidgin/articles/cw0x29n2pvqo.json",
        "resolvedPath": "..\\data\\pidgin\\articles\\cw0x29n2pvqo.json"
      },
      {
        "source": "../../../../data/arabic/cpsAssets/media-49522519.json",
        "resolvedPath": "..\\data\\arabic\\cpsAssets\\media-49522519.json"
      },
      {
        "source": "../../legacy/containers/PageHandlers/withPageWrapper",
        "resolvedPath": "src\\app\\legacy\\containers\\PageHandlers\\withPageWrapper\\index.jsx"
      },
      {
        "source": "../../legacy/containers/PageHandlers/withOptimizelyProvider",
        "resolvedPath": "src\\app\\legacy\\containers\\PageHandlers\\withOptimizelyProvider\\index.jsx"
      },
      {
        "source": "../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "./MediaArticlePage",
        "resolvedPath": "src\\app\\pages\\MediaArticlePage\\MediaArticlePage.tsx"
      }
    ]
  },
  "src\\app\\pages\\MediaArticlePage\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "react-router-dom",
        "resolvedPath": "react-router-dom"
      },
      {
        "source": "@testing-library/react",
        "resolvedPath": "@testing-library/react"
      },
      {
        "source": "jest-fetch-mock",
        "resolvedPath": "jest-fetch-mock"
      },
      {
        "source": "#app/models/types/optimo",
        "resolvedPath": "#app/models/types/optimo"
      },
      {
        "source": "react-helmet",
        "resolvedPath": "react-helmet"
      },
      {
        "source": "../../routes/utils/pageTypes",
        "resolvedPath": "src\\app\\routes\\utils\\pageTypes.ts"
      },
      {
        "source": "../../contexts/ToggleContext",
        "resolvedPath": "src\\app\\contexts\\ToggleContext\\index.tsx"
      },
      {
        "source": "../../contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext\\index.tsx"
      },
      {
        "source": "../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../../../../data/news/mostRead/index.json",
        "resolvedPath": "..\\data\\news\\mostRead\\index.json"
      },
      {
        "source": "./MediaArticlePage",
        "resolvedPath": "src\\app\\pages\\MediaArticlePage\\MediaArticlePage.tsx"
      },
      {
        "source": "../../components/ThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\index.tsx"
      },
      {
        "source": "./fixtureData",
        "resolvedPath": "src\\app\\pages\\MediaArticlePage\\fixtureData.ts"
      },
      {
        "source": "../../models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global.ts"
      }
    ]
  },
  "src\\app\\pages\\MediaArticlePage\\index.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "./MediaArticlePage",
        "resolvedPath": "src\\app\\pages\\MediaArticlePage\\MediaArticlePage.tsx"
      },
      {
        "source": "../utils/applyBasicPageHandlers",
        "resolvedPath": "src\\app\\pages\\utils\\applyBasicPageHandlers.js"
      }
    ]
  },
  "src\\app\\pages\\MediaArticlePage\\MediaArticlePage.styles.ts": {
    "incomingDependencies": [
      "src\\app\\pages\\MediaArticlePage\\MediaArticlePage.tsx",
      "src\\app\\pages\\MediaArticlePage\\SecondaryColumn.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "../../utilities/pixelsToRem",
        "resolvedPath": "src\\app\\utilities\\pixelsToRem\\index.ts"
      }
    ]
  },
  "src\\app\\pages\\MediaArticlePage\\MediaArticlePage.tsx": {
    "incomingDependencies": [
      "src\\app\\pages\\MediaArticlePage\\index.stories.tsx",
      "src\\app\\pages\\MediaArticlePage\\index.test.tsx",
      "src\\app\\pages\\MediaArticlePage\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "#app/components/Embeds/types",
        "resolvedPath": "#app/components/Embeds/types"
      },
      {
        "source": "#app/components/MediaLoader",
        "resolvedPath": "#app/components/MediaLoader"
      },
      {
        "source": "#app/components/MediaLoader/types",
        "resolvedPath": "#app/components/MediaLoader/types"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": "#app/components/LinkedData/types",
        "resolvedPath": "#app/components/LinkedData/types"
      },
      {
        "source": "#app/models/types/optimo",
        "resolvedPath": "#app/models/types/optimo"
      },
      {
        "source": "#app/contexts/RequestContext",
        "resolvedPath": "#app/contexts/RequestContext"
      },
      {
        "source": "#app/models/types/media",
        "resolvedPath": "#app/models/types/media"
      },
      {
        "source": "../../hooks/useToggle",
        "resolvedPath": "src\\app\\hooks\\useToggle\\index.js"
      },
      {
        "source": "../../lib/utilities/parseAssetData",
        "resolvedPath": "src\\app\\lib\\utilities\\parseAssetData\\index.ts"
      },
      {
        "source": "../../lib/utilities/blockHandlers",
        "resolvedPath": "src\\app\\lib\\utilities\\blockHandlers\\index.js"
      },
      {
        "source": "../../legacy/components/ScrollablePromo",
        "resolvedPath": "src\\app\\legacy\\components\\ScrollablePromo\\index.jsx"
      },
      {
        "source": "../../legacy/containers/Headings",
        "resolvedPath": "src\\app\\legacy\\containers\\Headings\\index.jsx"
      },
      {
        "source": "../../legacy/containers/VisuallyHiddenHeadline",
        "resolvedPath": "src\\app\\legacy\\containers\\VisuallyHiddenHeadline\\index.jsx"
      },
      {
        "source": "../../legacy/containers/Gist",
        "resolvedPath": "src\\app\\legacy\\containers\\Gist\\index.jsx"
      },
      {
        "source": "../../legacy/containers/Text",
        "resolvedPath": "src\\app\\legacy\\containers\\Text\\index.jsx"
      },
      {
        "source": "../../components/ImageWithCaption",
        "resolvedPath": "src\\app\\components\\ImageWithCaption\\index.tsx"
      },
      {
        "source": "../../legacy/containers/Blocks",
        "resolvedPath": "src\\app\\legacy\\containers\\Blocks\\index.jsx"
      },
      {
        "source": "../../legacy/containers/ArticleTimestamp",
        "resolvedPath": "src\\app\\legacy\\containers\\ArticleTimestamp\\index.jsx"
      },
      {
        "source": "../../components/ATIAnalytics",
        "resolvedPath": "src\\app\\components\\ATIAnalytics\\index.tsx"
      },
      {
        "source": "../../components/ChartbeatAnalytics",
        "resolvedPath": "src\\app\\components\\ChartbeatAnalytics\\index.tsx"
      },
      {
        "source": "../../legacy/containers/ComscoreAnalytics",
        "resolvedPath": "src\\app\\legacy\\containers\\ComscoreAnalytics\\index.jsx"
      },
      {
        "source": "../../legacy/containers/SocialEmbed",
        "resolvedPath": "src\\app\\legacy\\containers\\SocialEmbed\\index.jsx"
      },
      {
        "source": "../../legacy/containers/FauxHeadline",
        "resolvedPath": "src\\app\\legacy\\containers\\FauxHeadline\\index.jsx"
      },
      {
        "source": "../../legacy/containers/RelatedTopics",
        "resolvedPath": "src\\app\\legacy\\containers\\RelatedTopics\\index.jsx"
      },
      {
        "source": "../../legacy/containers/NielsenAnalytics",
        "resolvedPath": "src\\app\\legacy\\containers\\NielsenAnalytics\\index.jsx"
      },
      {
        "source": "../../legacy/containers/ArticleMetadata",
        "resolvedPath": "src\\app\\legacy\\containers\\ArticleMetadata\\index.jsx"
      },
      {
        "source": "../../components/Embeds/EmbedImages",
        "resolvedPath": "src\\app\\components\\Embeds\\EmbedImages\\index.tsx"
      },
      {
        "source": "../../components/Embeds/EmbedHtml",
        "resolvedPath": "src\\app\\components\\Embeds\\EmbedHtml\\index.tsx"
      },
      {
        "source": "../../components/Embeds/OEmbed",
        "resolvedPath": "src\\app\\components\\Embeds\\OEmbed\\index.tsx"
      },
      {
        "source": "../../components/LinkedData",
        "resolvedPath": "src\\app\\components\\LinkedData\\index.tsx"
      },
      {
        "source": "../../components/Byline",
        "resolvedPath": "src\\app\\components\\Byline\\index.tsx"
      },
      {
        "source": "../../components/Byline/utilities",
        "resolvedPath": "src\\app\\components\\Byline\\utilities\\index.ts"
      },
      {
        "source": "../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../../components/RelatedContentSection",
        "resolvedPath": "src\\app\\components\\RelatedContentSection\\index.tsx"
      },
      {
        "source": "./SecondaryColumn",
        "resolvedPath": "src\\app\\pages\\MediaArticlePage\\SecondaryColumn.tsx"
      },
      {
        "source": "./MediaArticlePage.styles",
        "resolvedPath": "src\\app\\pages\\MediaArticlePage\\MediaArticlePage.styles.ts"
      },
      {
        "source": "./types",
        "resolvedPath": "src\\app\\pages\\MediaArticlePage\\types.ts"
      },
      {
        "source": "./utils/checkIsLiveMedia",
        "resolvedPath": "src\\app\\pages\\MediaArticlePage\\utils\\checkIsLiveMedia\\index.ts"
      }
    ]
  },
  "src\\app\\pages\\MediaArticlePage\\PagePromoSections\\LatestMediaSection\\index.stories.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#app/contexts/ToggleContext",
        "resolvedPath": "#app/contexts/ToggleContext"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "#contexts/RequestContext"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": "#app/models/types/storybook",
        "resolvedPath": "#app/models/types/storybook"
      },
      {
        "source": "../../../../components/ThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\index.tsx"
      },
      {
        "source": "../../../../models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global.ts"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\pages\\MediaArticlePage\\PagePromoSections\\LatestMediaSection\\index.tsx"
      },
      {
        "source": "../../../../../../data/hausa/articles/cxr0765kxlzo.json",
        "resolvedPath": "..\\..\\..\\data\\hausa\\articles\\cxr0765kxlzo.json"
      },
      {
        "source": "../../../../../../data/tamil/articles/c84m2jl4dpzo.json",
        "resolvedPath": "..\\..\\..\\data\\tamil\\articles\\c84m2jl4dpzo.json"
      },
      {
        "source": "../../../../../../data/pidgin/articles/cw0x29n2pvqo.json",
        "resolvedPath": "..\\..\\..\\data\\pidgin\\articles\\cw0x29n2pvqo.json"
      },
      {
        "source": "./types",
        "resolvedPath": "src\\app\\pages\\MediaArticlePage\\PagePromoSections\\LatestMediaSection\\types.ts"
      },
      {
        "source": "./metadata.json",
        "resolvedPath": "..\\EXIM\\Work\\iterate-ai\\dep-graph\\metadata.json"
      }
    ]
  },
  "src\\app\\pages\\MediaArticlePage\\PagePromoSections\\LatestMediaSection\\index.styles.ts": {
    "incomingDependencies": [
      "src\\app\\pages\\MediaArticlePage\\PagePromoSections\\LatestMediaSection\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "../../../../utilities/pixelsToRem",
        "resolvedPath": "src\\app\\utilities\\pixelsToRem\\index.ts"
      }
    ]
  },
  "src\\app\\pages\\MediaArticlePage\\PagePromoSections\\LatestMediaSection\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../../../../components/react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\pages\\MediaArticlePage\\PagePromoSections\\LatestMediaSection\\index.tsx"
      },
      {
        "source": "../../../../../../data/hausa/articles/cxr0765kxlzo.json",
        "resolvedPath": "..\\..\\..\\data\\hausa\\articles\\cxr0765kxlzo.json"
      },
      {
        "source": "../../../../../../data/tamil/articles/c84m2jl4dpzo.json",
        "resolvedPath": "..\\..\\..\\data\\tamil\\articles\\c84m2jl4dpzo.json"
      },
      {
        "source": "./types",
        "resolvedPath": "src\\app\\pages\\MediaArticlePage\\PagePromoSections\\LatestMediaSection\\types.ts"
      }
    ]
  },
  "src\\app\\pages\\MediaArticlePage\\PagePromoSections\\LatestMediaSection\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\pages\\MediaArticlePage\\PagePromoSections\\LatestMediaSection\\index.stories.tsx",
      "src\\app\\pages\\MediaArticlePage\\PagePromoSections\\LatestMediaSection\\index.test.tsx",
      "src\\app\\pages\\MediaArticlePage\\SecondaryColumn.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "#psammead/psammead-section-label/src",
        "resolvedPath": "#psammead/psammead-section-label/src"
      },
      {
        "source": "../../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../../../../legacy/components/OptimoPromos/PromoItem/index.styles",
        "resolvedPath": "src\\app\\legacy\\components\\OptimoPromos\\PromoItem\\index.styles.jsx"
      },
      {
        "source": "../../../../legacy/components/OptimoPromos/PromoList",
        "resolvedPath": "src\\app\\legacy\\components\\OptimoPromos\\PromoList\\index.jsx"
      },
      {
        "source": "../../../../hooks/useViewTracker",
        "resolvedPath": "src\\app\\hooks\\useViewTracker\\index.jsx"
      },
      {
        "source": "../../../../lib/utilities/generatePromoId",
        "resolvedPath": "src\\app\\lib\\utilities\\generatePromoId\\index.ts"
      },
      {
        "source": "./LatestMediaItem",
        "resolvedPath": "src\\app\\pages\\MediaArticlePage\\PagePromoSections\\LatestMediaSection\\LatestMediaItem\\index.tsx"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\pages\\MediaArticlePage\\PagePromoSections\\LatestMediaSection\\index.styles.ts"
      },
      {
        "source": "./types",
        "resolvedPath": "src\\app\\pages\\MediaArticlePage\\PagePromoSections\\LatestMediaSection\\types.ts"
      },
      {
        "source": "../../../../models/types/eventTracking",
        "resolvedPath": "src\\app\\models\\types\\eventTracking.ts"
      }
    ]
  },
  "src\\app\\pages\\MediaArticlePage\\PagePromoSections\\LatestMediaSection\\LatestMediaIndicator\\index.styles.ts": {
    "incomingDependencies": [
      "src\\app\\pages\\MediaArticlePage\\PagePromoSections\\LatestMediaSection\\LatestMediaIndicator\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      }
    ]
  },
  "src\\app\\pages\\MediaArticlePage\\PagePromoSections\\LatestMediaSection\\LatestMediaIndicator\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../../../../../components/react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\pages\\MediaArticlePage\\PagePromoSections\\LatestMediaSection\\LatestMediaIndicator\\index.tsx"
      },
      {
        "source": "../../../../../legacy/components/OptimoPromos/PromoContext",
        "resolvedPath": "src\\app\\legacy\\components\\OptimoPromos\\PromoContext.jsx"
      },
      {
        "source": "../types",
        "resolvedPath": "src\\app\\pages\\MediaArticlePage\\PagePromoSections\\LatestMediaSection\\types.ts"
      }
    ]
  },
  "src\\app\\pages\\MediaArticlePage\\PagePromoSections\\LatestMediaSection\\LatestMediaIndicator\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\pages\\MediaArticlePage\\PagePromoSections\\LatestMediaSection\\LatestMediaIndicator\\index.test.tsx",
      "src\\app\\pages\\MediaArticlePage\\PagePromoSections\\LatestMediaSection\\LatestMediaItem\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "moment",
        "resolvedPath": "moment"
      },
      {
        "source": "../../../../../legacy/components/OptimoPromos",
        "resolvedPath": "src\\app\\legacy\\components\\OptimoPromos\\index.jsx"
      },
      {
        "source": "../../../../../lib/utilities/formatDuration",
        "resolvedPath": "src\\app\\lib\\utilities\\formatDuration\\index.js"
      },
      {
        "source": "../types",
        "resolvedPath": "src\\app\\pages\\MediaArticlePage\\PagePromoSections\\LatestMediaSection\\types.ts"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\pages\\MediaArticlePage\\PagePromoSections\\LatestMediaSection\\LatestMediaIndicator\\index.styles.ts"
      }
    ]
  },
  "src\\app\\pages\\MediaArticlePage\\PagePromoSections\\LatestMediaSection\\LatestMediaItem\\index.styles.ts": {
    "incomingDependencies": [
      "src\\app\\pages\\MediaArticlePage\\PagePromoSections\\LatestMediaSection\\LatestMediaItem\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      }
    ]
  },
  "src\\app\\pages\\MediaArticlePage\\PagePromoSections\\LatestMediaSection\\LatestMediaItem\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../../../../../components/react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\pages\\MediaArticlePage\\PagePromoSections\\LatestMediaSection\\LatestMediaItem\\index.tsx"
      },
      {
        "source": "../../../../../legacy/components/OptimoPromos/PromoContext",
        "resolvedPath": "src\\app\\legacy\\components\\OptimoPromos\\PromoContext.jsx"
      },
      {
        "source": "../../../../../models/types/eventTracking",
        "resolvedPath": "src\\app\\models\\types\\eventTracking.ts"
      },
      {
        "source": "../types",
        "resolvedPath": "src\\app\\pages\\MediaArticlePage\\PagePromoSections\\LatestMediaSection\\types.ts"
      }
    ]
  },
  "src\\app\\pages\\MediaArticlePage\\PagePromoSections\\LatestMediaSection\\LatestMediaItem\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\pages\\MediaArticlePage\\PagePromoSections\\LatestMediaSection\\index.tsx",
      "src\\app\\pages\\MediaArticlePage\\PagePromoSections\\LatestMediaSection\\LatestMediaItem\\index.test.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "../../../../../legacy/components/OptimoPromos",
        "resolvedPath": "src\\app\\legacy\\components\\OptimoPromos\\index.jsx"
      },
      {
        "source": "../types",
        "resolvedPath": "src\\app\\pages\\MediaArticlePage\\PagePromoSections\\LatestMediaSection\\types.ts"
      },
      {
        "source": "../LatestMediaIndicator",
        "resolvedPath": "src\\app\\pages\\MediaArticlePage\\PagePromoSections\\LatestMediaSection\\LatestMediaIndicator\\index.tsx"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\pages\\MediaArticlePage\\PagePromoSections\\LatestMediaSection\\LatestMediaItem\\index.styles.ts"
      }
    ]
  },
  "src\\app\\pages\\MediaArticlePage\\PagePromoSections\\LatestMediaSection\\types.ts": {
    "incomingDependencies": [
      "src\\app\\pages\\MediaArticlePage\\PagePromoSections\\LatestMediaSection\\index.stories.tsx",
      "src\\app\\pages\\MediaArticlePage\\PagePromoSections\\LatestMediaSection\\index.test.tsx",
      "src\\app\\pages\\MediaArticlePage\\PagePromoSections\\LatestMediaSection\\index.tsx",
      "src\\app\\pages\\MediaArticlePage\\PagePromoSections\\LatestMediaSection\\LatestMediaIndicator\\index.test.tsx",
      "src\\app\\pages\\MediaArticlePage\\PagePromoSections\\LatestMediaSection\\LatestMediaIndicator\\index.tsx",
      "src\\app\\pages\\MediaArticlePage\\PagePromoSections\\LatestMediaSection\\LatestMediaItem\\index.test.tsx",
      "src\\app\\pages\\MediaArticlePage\\PagePromoSections\\LatestMediaSection\\LatestMediaItem\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../../models/types/eventTracking",
        "resolvedPath": "src\\app\\models\\types\\eventTracking.ts"
      }
    ]
  },
  "src\\app\\pages\\MediaArticlePage\\SecondaryColumn.tsx": {
    "incomingDependencies": [
      "src\\app\\pages\\MediaArticlePage\\MediaArticlePage.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "#app/models/types/optimo",
        "resolvedPath": "#app/models/types/optimo"
      },
      {
        "source": "./PagePromoSections/LatestMediaSection",
        "resolvedPath": "src\\app\\pages\\MediaArticlePage\\PagePromoSections\\LatestMediaSection\\index.tsx"
      },
      {
        "source": "./MediaArticlePage.styles",
        "resolvedPath": "src\\app\\pages\\MediaArticlePage\\MediaArticlePage.styles.ts"
      }
    ]
  },
  "src\\app\\pages\\MediaArticlePage\\types.ts": {
    "incomingDependencies": [
      "src\\app\\pages\\MediaArticlePage\\MediaArticlePage.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../../models/types/optimo",
        "resolvedPath": "src\\app\\models\\types\\optimo.ts"
      }
    ]
  },
  "src\\app\\pages\\MediaArticlePage\\utils\\checkIsLiveMedia\\index.test.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "#app/models/types/optimo",
        "resolvedPath": "#app/models/types/optimo"
      },
      {
        "source": "../../fixtureData",
        "resolvedPath": "src\\app\\pages\\MediaArticlePage\\fixtureData.ts"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\pages\\MediaArticlePage\\utils\\checkIsLiveMedia\\index.ts"
      }
    ]
  },
  "src\\app\\pages\\MediaArticlePage\\utils\\checkIsLiveMedia\\index.ts": {
    "incomingDependencies": [
      "src\\app\\pages\\MediaArticlePage\\MediaArticlePage.tsx",
      "src\\app\\pages\\MediaArticlePage\\utils\\checkIsLiveMedia\\index.test.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "#app/components/MediaLoader/types",
        "resolvedPath": "#app/components/MediaLoader/types"
      },
      {
        "source": "#app/lib/utilities/blockHandlers",
        "resolvedPath": "#app/lib/utilities/blockHandlers"
      },
      {
        "source": "#app/models/types/optimo",
        "resolvedPath": "#app/models/types/optimo"
      }
    ]
  },
  "src\\app\\pages\\MostReadPage\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\pages\\MostReadPage\\index.stories.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "./MostReadPage",
        "resolvedPath": "src\\app\\pages\\MostReadPage\\MostReadPage.jsx"
      },
      {
        "source": "../utils/applyBasicPageHandlers",
        "resolvedPath": "src\\app\\pages\\utils\\applyBasicPageHandlers.js"
      }
    ]
  },
  "src\\app\\pages\\MostReadPage\\index.stories.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "node-fetch",
        "resolvedPath": "node-fetch"
      },
      {
        "source": "url-parse",
        "resolvedPath": "url-parse"
      },
      {
        "source": "react-router-dom",
        "resolvedPath": "react-router-dom"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": "#storybook/withServicesDecorator",
        "resolvedPath": "#storybook/withServicesDecorator"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\pages\\MostReadPage\\index.jsx"
      }
    ]
  },
  "src\\app\\pages\\MostReadPage\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@testing-library/react",
        "resolvedPath": "@testing-library/react"
      },
      {
        "source": "react-router-dom",
        "resolvedPath": "react-router-dom"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "#contexts/RequestContext"
      },
      {
        "source": "#data/pidgin/mostRead/index.json",
        "resolvedPath": "#data/pidgin/mostRead/index.json"
      },
      {
        "source": "#lib/analyticsUtils",
        "resolvedPath": "#lib/analyticsUtils"
      },
      {
        "source": "#contexts/ToggleContext",
        "resolvedPath": "#contexts/ToggleContext"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": "../../components/react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "./MostReadPage",
        "resolvedPath": "src\\app\\pages\\MostReadPage\\MostReadPage.jsx"
      }
    ]
  },
  "src\\app\\pages\\MostReadPage\\MostReadPage.jsx": {
    "incomingDependencies": [
      "src\\app\\pages\\MostReadPage\\index.jsx",
      "src\\app\\pages\\MostReadPage\\index.test.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "#psammead/gel-foundations/src/breakpoints"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "#psammead/gel-foundations/src/spacings"
      },
      {
        "source": "#containers/ComscoreAnalytics",
        "resolvedPath": "#containers/ComscoreAnalytics"
      },
      {
        "source": "#components/Grid",
        "resolvedPath": "#components/Grid"
      },
      {
        "source": "#containers/IndexHeading",
        "resolvedPath": "#containers/IndexHeading"
      },
      {
        "source": "#components/PageLayout/IndexPageContainer",
        "resolvedPath": "#components/PageLayout/IndexPageContainer"
      },
      {
        "source": "../../components/MostRead/Canonical",
        "resolvedPath": "src\\app\\components\\MostRead\\Canonical\\index.tsx"
      },
      {
        "source": "../../components/ATIAnalytics",
        "resolvedPath": "src\\app\\components\\ATIAnalytics\\index.tsx"
      },
      {
        "source": "../../components/ChartbeatAnalytics",
        "resolvedPath": "src\\app\\components\\ChartbeatAnalytics\\index.tsx"
      },
      {
        "source": "../../components/Metadata",
        "resolvedPath": "src\\app\\components\\Metadata\\index.tsx"
      },
      {
        "source": "../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../../components/LinkedData",
        "resolvedPath": "src\\app\\components\\LinkedData\\index.tsx"
      }
    ]
  },
  "src\\app\\pages\\OnDemandAudioPage\\index.stories.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "react-router-dom",
        "resolvedPath": "react-router-dom"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": "#storybook/withServicesDecorator",
        "resolvedPath": "#storybook/withServicesDecorator"
      },
      {
        "source": "..",
        "resolvedPath": "src\\app\\pages\\index.js"
      },
      {
        "source": "./fixtureData/indonesia.json",
        "resolvedPath": "..\\EXIM\\Work\\iterate-ai\\dep-graph\\fixtureData\\indonesia.json"
      },
      {
        "source": "./fixtureData/pashto.json",
        "resolvedPath": "..\\EXIM\\Work\\iterate-ai\\dep-graph\\fixtureData\\pashto.json"
      }
    ]
  },
  "src\\app\\pages\\OnDemandAudioPage\\index.styles.ts": {
    "incomingDependencies": [
      "src\\app\\pages\\OnDemandAudioPage\\OnDemandAudioPage.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "#app/components/ThemeProvider/mediaQueries",
        "resolvedPath": "#app/components/ThemeProvider/mediaQueries"
      }
    ]
  },
  "src\\app\\pages\\OnDemandAudioPage\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "ramda/src/assocPath",
        "resolvedPath": "ramda/src/assocPath"
      },
      {
        "source": "#data/pashto/bbc_pashto_radio/w3ct0lz1.json",
        "resolvedPath": "#data/pashto/bbc_pashto_radio/w3ct0lz1.json"
      },
      {
        "source": "#data/korean/bbc_korean_radio/w3ct0kn5.json",
        "resolvedPath": "#data/korean/bbc_korean_radio/w3ct0kn5.json"
      },
      {
        "source": "#data/zhongwen/bbc_cantonese_radio/w172xf3r5x8hw4v.json",
        "resolvedPath": "#data/zhongwen/bbc_cantonese_radio/w172xf3r5x8hw4v.json"
      },
      {
        "source": "#data/indonesia/bbc_indonesian_radio/w172xh267fpn19l.json",
        "resolvedPath": "#data/indonesia/bbc_indonesian_radio/w172xh267fpn19l.json"
      },
      {
        "source": "#data/afaanoromoo/bbc_afaanoromoo_radio/w13xttnw.json",
        "resolvedPath": "#data/afaanoromoo/bbc_afaanoromoo_radio/w13xttnw.json"
      },
      {
        "source": "#data/arabic/podcasts/p02pc9qc/p08wtg4d.json",
        "resolvedPath": "#data/arabic/podcasts/p02pc9qc/p08wtg4d.json"
      },
      {
        "source": "#data/persian/bbc_persian_radio/p02pc9wf.json",
        "resolvedPath": "#data/persian/bbc_persian_radio/p02pc9wf.json"
      },
      {
        "source": "#data/indonesia/bbc_indonesian_radio/w13xtt0s.json",
        "resolvedPath": "#data/indonesia/bbc_indonesian_radio/w13xtt0s.json"
      },
      {
        "source": "#data/persian/bbc_dari_radio/p0340v11.json",
        "resolvedPath": "#data/persian/bbc_dari_radio/p0340v11.json"
      },
      {
        "source": "#data/persian/bbc_persian_radio/p0340vyx.json",
        "resolvedPath": "#data/persian/bbc_persian_radio/p0340vyx.json"
      },
      {
        "source": "#lib/analyticsUtils",
        "resolvedPath": "#lib/analyticsUtils"
      },
      {
        "source": "#app/routes/onDemandAudio/getInitialData",
        "resolvedPath": "#app/routes/onDemandAudio/getInitialData"
      },
      {
        "source": "#lib/utilities/episodeAvailability/withMediaError",
        "resolvedPath": "#lib/utilities/episodeAvailability/withMediaError"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": "#app/models/types/global",
        "resolvedPath": "#app/models/types/global"
      },
      {
        "source": "jest-fetch-mock",
        "resolvedPath": "jest-fetch-mock"
      },
      {
        "source": "#app/components/MediaLoader",
        "resolvedPath": "#app/components/MediaLoader"
      },
      {
        "source": "../../components/react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "./fixtureData/korean.json",
        "resolvedPath": "..\\EXIM\\Work\\iterate-ai\\dep-graph\\fixtureData\\korean.json"
      },
      {
        "source": "./OnDemandAudioPage",
        "resolvedPath": "src\\app\\pages\\OnDemandAudioPage\\OnDemandAudioPage.tsx"
      }
    ]
  },
  "src\\app\\pages\\OnDemandAudioPage\\index.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "ramda/src/pipe",
        "resolvedPath": "ramda/src/pipe"
      },
      {
        "source": "#lib/utilities/episodeAvailability/withMediaError",
        "resolvedPath": "#lib/utilities/episodeAvailability/withMediaError"
      },
      {
        "source": "./OnDemandAudioPage",
        "resolvedPath": "src\\app\\pages\\OnDemandAudioPage\\OnDemandAudioPage.tsx"
      },
      {
        "source": "../utils/applyBasicPageHandlers",
        "resolvedPath": "src\\app\\pages\\utils\\applyBasicPageHandlers.js"
      }
    ]
  },
  "src\\app\\pages\\OnDemandAudioPage\\OnDemandAudioPage.tsx": {
    "incomingDependencies": [
      "src\\app\\pages\\OnDemandAudioPage\\index.test.tsx",
      "src\\app\\pages\\OnDemandAudioPage\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "ramda/src/path",
        "resolvedPath": "ramda/src/path"
      },
      {
        "source": "ramda/src/is",
        "resolvedPath": "ramda/src/is"
      },
      {
        "source": "#containers/ComscoreAnalytics",
        "resolvedPath": "#containers/ComscoreAnalytics"
      },
      {
        "source": "#components/Grid",
        "resolvedPath": "#components/Grid"
      },
      {
        "source": "#containers/OnDemandHeading/StyledRadioHeadingContainer",
        "resolvedPath": "#containers/OnDemandHeading/StyledRadioHeadingContainer"
      },
      {
        "source": "#containers/OnDemandParagraph",
        "resolvedPath": "#containers/OnDemandParagraph"
      },
      {
        "source": "#containers/OnDemandImage",
        "resolvedPath": "#containers/OnDemandImage"
      },
      {
        "source": "#lib/utilities/getMasterbrand",
        "resolvedPath": "#lib/utilities/getMasterbrand"
      },
      {
        "source": "#containers/RadioSchedule",
        "resolvedPath": "#containers/RadioSchedule"
      },
      {
        "source": "#containers/EpisodeList/RecentAudioEpisodes",
        "resolvedPath": "#containers/EpisodeList/RecentAudioEpisodes"
      },
      {
        "source": "#containers/OnDemandFooterTimestamp",
        "resolvedPath": "#containers/OnDemandFooterTimestamp"
      },
      {
        "source": "#containers/PodcastExternalLinks",
        "resolvedPath": "#containers/PodcastExternalLinks"
      },
      {
        "source": "#app/components/MediaLoader",
        "resolvedPath": "#app/components/MediaLoader"
      },
      {
        "source": "#app/models/types/global",
        "resolvedPath": "#app/models/types/global"
      },
      {
        "source": "#app/models/types/radioSchedule",
        "resolvedPath": "#app/models/types/radioSchedule"
      },
      {
        "source": "#app/components/ChartbeatAnalytics/types",
        "resolvedPath": "#app/components/ChartbeatAnalytics/types"
      },
      {
        "source": "#app/models/types/media",
        "resolvedPath": "#app/models/types/media"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\pages\\OnDemandAudioPage\\index.styles.ts"
      },
      {
        "source": "../../components/ATIAnalytics",
        "resolvedPath": "src\\app\\components\\ATIAnalytics\\index.tsx"
      },
      {
        "source": "../../components/ChartbeatAnalytics",
        "resolvedPath": "src\\app\\components\\ChartbeatAnalytics\\index.tsx"
      },
      {
        "source": "../../components/Metadata",
        "resolvedPath": "src\\app\\components\\Metadata\\index.tsx"
      },
      {
        "source": "../../components/LinkedData",
        "resolvedPath": "src\\app\\components\\LinkedData\\index.tsx"
      },
      {
        "source": "../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      }
    ]
  },
  "src\\app\\pages\\OnDemandTvPage\\index.stories.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "react-router-dom",
        "resolvedPath": "react-router-dom"
      },
      {
        "source": "#testHelpers/withTimeMachine",
        "resolvedPath": "#testHelpers/withTimeMachine"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": "#storybook/withServicesDecorator",
        "resolvedPath": "#storybook/withServicesDecorator"
      },
      {
        "source": "..",
        "resolvedPath": "src\\app\\pages\\index.js"
      },
      {
        "source": "./fixtureData/afrique.json",
        "resolvedPath": "..\\EXIM\\Work\\iterate-ai\\dep-graph\\fixtureData\\afrique.json"
      },
      {
        "source": "./fixtureData/pashto.json",
        "resolvedPath": "..\\EXIM\\Work\\iterate-ai\\dep-graph\\fixtureData\\pashto.json"
      },
      {
        "source": "./OnDemandTvPage",
        "resolvedPath": "src\\app\\pages\\OnDemandTvPage\\OnDemandTvPage.tsx"
      }
    ]
  },
  "src\\app\\pages\\OnDemandTvPage\\index.styles.ts": {
    "incomingDependencies": [
      "src\\app\\pages\\OnDemandTvPage\\OnDemandTvPage.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      }
    ]
  },
  "src\\app\\pages\\OnDemandTvPage\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "jest-fetch-mock",
        "resolvedPath": "jest-fetch-mock"
      },
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "ramda/src/assocPath",
        "resolvedPath": "ramda/src/assocPath"
      },
      {
        "source": "#data/pashto/bbc_pashto_tv/tv_programmes/w13xttn4.json",
        "resolvedPath": "#data/pashto/bbc_pashto_tv/tv_programmes/w13xttn4.json"
      },
      {
        "source": "#lib/analyticsUtils",
        "resolvedPath": "#lib/analyticsUtils"
      },
      {
        "source": "#app/routes/onDemandTV/getInitialData",
        "resolvedPath": "#app/routes/onDemandTV/getInitialData"
      },
      {
        "source": "#lib/utilities/episodeAvailability/withMediaError",
        "resolvedPath": "#lib/utilities/episodeAvailability/withMediaError"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": "#app/models/types/global",
        "resolvedPath": "#app/models/types/global"
      },
      {
        "source": "../../components/react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "../../components/MediaLoader",
        "resolvedPath": "src\\app\\components\\MediaLoader\\index.tsx"
      },
      {
        "source": "./OnDemandTvPage",
        "resolvedPath": "src\\app\\pages\\OnDemandTvPage\\OnDemandTvPage.tsx"
      }
    ]
  },
  "src\\app\\pages\\OnDemandTvPage\\index.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "ramda/src/pipe",
        "resolvedPath": "ramda/src/pipe"
      },
      {
        "source": "#lib/utilities/episodeAvailability/withMediaError",
        "resolvedPath": "#lib/utilities/episodeAvailability/withMediaError"
      },
      {
        "source": "./OnDemandTvPage",
        "resolvedPath": "src\\app\\pages\\OnDemandTvPage\\OnDemandTvPage.tsx"
      },
      {
        "source": "../utils/applyBasicPageHandlers",
        "resolvedPath": "src\\app\\pages\\utils\\applyBasicPageHandlers.js"
      }
    ]
  },
  "src\\app\\pages\\OnDemandTvPage\\OnDemandTvPage.tsx": {
    "incomingDependencies": [
      "src\\app\\pages\\OnDemandTvPage\\index.stories.tsx",
      "src\\app\\pages\\OnDemandTvPage\\index.test.tsx",
      "src\\app\\pages\\OnDemandTvPage\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#psammead/psammead-timestamp-container/src/utilities",
        "resolvedPath": "#psammead/psammead-timestamp-container/src/utilities"
      },
      {
        "source": "#containers/ComscoreAnalytics",
        "resolvedPath": "#containers/ComscoreAnalytics"
      },
      {
        "source": "#components/Grid",
        "resolvedPath": "#components/Grid"
      },
      {
        "source": "#containers/OnDemandHeading/StyledTvHeadingContainer",
        "resolvedPath": "#containers/OnDemandHeading/StyledTvHeadingContainer"
      },
      {
        "source": "#containers/OnDemandParagraph",
        "resolvedPath": "#containers/OnDemandParagraph"
      },
      {
        "source": "#containers/EpisodeList/RecentVideoEpisodes",
        "resolvedPath": "#containers/EpisodeList/RecentVideoEpisodes"
      },
      {
        "source": "#containers/OnDemandFooterTimestamp",
        "resolvedPath": "#containers/OnDemandFooterTimestamp"
      },
      {
        "source": "#app/models/types/global",
        "resolvedPath": "#app/models/types/global"
      },
      {
        "source": "#app/components/ChartbeatAnalytics/types",
        "resolvedPath": "#app/components/ChartbeatAnalytics/types"
      },
      {
        "source": "#app/components/MediaLoader",
        "resolvedPath": "#app/components/MediaLoader"
      },
      {
        "source": "#app/models/types/media",
        "resolvedPath": "#app/models/types/media"
      },
      {
        "source": "../../components/ATIAnalytics",
        "resolvedPath": "src\\app\\components\\ATIAnalytics\\index.tsx"
      },
      {
        "source": "../../components/ChartbeatAnalytics",
        "resolvedPath": "src\\app\\components\\ChartbeatAnalytics\\index.tsx"
      },
      {
        "source": "../../components/LinkedData",
        "resolvedPath": "src\\app\\components\\LinkedData\\index.tsx"
      },
      {
        "source": "../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../../components/Metadata",
        "resolvedPath": "src\\app\\components\\Metadata\\index.tsx"
      },
      {
        "source": "../../components/VisuallyHiddenText",
        "resolvedPath": "src\\app\\components\\VisuallyHiddenText\\index.tsx"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\pages\\OnDemandTvPage\\index.styles.ts"
      }
    ]
  },
  "src\\app\\pages\\TopicPage\\fixtures.js": {
    "incomingDependencies": [
      "src\\app\\pages\\TopicPage\\index.test.jsx"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\pages\\TopicPage\\index.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "./TopicPage",
        "resolvedPath": "src\\app\\pages\\TopicPage\\TopicPage.jsx"
      },
      {
        "source": "../utils/applyBasicPageHandlers",
        "resolvedPath": "src\\app\\pages\\utils\\applyBasicPageHandlers.js"
      }
    ]
  },
  "src\\app\\pages\\TopicPage\\index.stories.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "react-router-dom",
        "resolvedPath": "react-router-dom"
      },
      {
        "source": "#contexts/ToggleContext",
        "resolvedPath": "#contexts/ToggleContext"
      },
      {
        "source": "../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "#contexts/RequestContext"
      },
      {
        "source": "#contexts/UserContext",
        "resolvedPath": "#contexts/UserContext"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": "#data/mundo/topics/c1en6xwmpkvt.json",
        "resolvedPath": "#data/mundo/topics/c1en6xwmpkvt.json"
      },
      {
        "source": "#data/kyrgyz/topics/cvpv9djp9qqt.json",
        "resolvedPath": "#data/kyrgyz/topics/cvpv9djp9qqt.json"
      },
      {
        "source": "#data/persian/topics/cyy2zqnqn67t.json",
        "resolvedPath": "#data/persian/topics/cyy2zqnqn67t.json"
      },
      {
        "source": "#data/arabic/topics/cng9qem66p5t.json",
        "resolvedPath": "#data/arabic/topics/cng9qem66p5t.json"
      },
      {
        "source": "#data/tamil/topics/c03dm2xmzzpt.json",
        "resolvedPath": "#data/tamil/topics/c03dm2xmzzpt.json"
      },
      {
        "source": "#data/mundo/topics/cw90edn9kw4t.json",
        "resolvedPath": "#data/mundo/topics/cw90edn9kw4t.json"
      },
      {
        "source": "#data/persian/topics/crezq2dg9zwt.json",
        "resolvedPath": "#data/persian/topics/crezq2dg9zwt.json"
      },
      {
        "source": "#containers/PageHandlers/withPageWrapper",
        "resolvedPath": "#containers/PageHandlers/withPageWrapper"
      },
      {
        "source": "#storybook/withServicesDecorator",
        "resolvedPath": "#storybook/withServicesDecorator"
      },
      {
        "source": "./TopicPage",
        "resolvedPath": "src\\app\\pages\\TopicPage\\TopicPage.jsx"
      },
      {
        "source": "../../components/ThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\index.tsx"
      }
    ]
  },
  "src\\app\\pages\\TopicPage\\index.styles.jsx": {
    "incomingDependencies": [
      "src\\app\\pages\\TopicPage\\TopicPage.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      }
    ]
  },
  "src\\app\\pages\\TopicPage\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "react-router-dom",
        "resolvedPath": "react-router-dom"
      },
      {
        "source": "#psammead/psammead-test-helpers/src",
        "resolvedPath": "#psammead/psammead-test-helpers/src"
      },
      {
        "source": "#data/mundo/topics/cw90edn9kw4t.json",
        "resolvedPath": "#data/mundo/topics/cw90edn9kw4t.json"
      },
      {
        "source": "#app/models/types/curationData",
        "resolvedPath": "#app/models/types/curationData"
      },
      {
        "source": "react-helmet",
        "resolvedPath": "react-helmet"
      },
      {
        "source": "#data/kyrgyz/topics/cvpv9djp9qqt.json",
        "resolvedPath": "#data/kyrgyz/topics/cvpv9djp9qqt.json"
      },
      {
        "source": "#data/persian/topics/crezq2dg9zwt.json",
        "resolvedPath": "#data/persian/topics/crezq2dg9zwt.json"
      },
      {
        "source": "../../routes/utils/pageTypes",
        "resolvedPath": "src\\app\\routes\\utils\\pageTypes.ts"
      },
      {
        "source": "../../components/react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "./TopicPage",
        "resolvedPath": "src\\app\\pages\\TopicPage\\TopicPage.jsx"
      },
      {
        "source": "./fixtures",
        "resolvedPath": "src\\app\\pages\\TopicPage\\fixtures.js"
      }
    ]
  },
  "src\\app\\pages\\TopicPage\\TopicDescription\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\pages\\TopicPage\\TopicPage.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/psammead-styles/src/font-styles",
        "resolvedPath": "#psammead/psammead-styles/src/font-styles"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "#psammead/gel-foundations/src/breakpoints"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "#psammead/gel-foundations/src/spacings"
      },
      {
        "source": "#psammead/gel-foundations/src/typography",
        "resolvedPath": "#psammead/gel-foundations/src/typography"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      }
    ]
  },
  "src\\app\\pages\\TopicPage\\TopicImage\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\pages\\TopicPage\\TopicPage.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "#psammead/gel-foundations/src/spacings"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "#psammead/gel-foundations/src/breakpoints"
      }
    ]
  },
  "src\\app\\pages\\TopicPage\\TopicPage.jsx": {
    "incomingDependencies": [
      "src\\app\\pages\\TopicPage\\index.jsx",
      "src\\app\\pages\\TopicPage\\index.stories.jsx",
      "src\\app\\pages\\TopicPage\\index.test.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "ramda/src/path",
        "resolvedPath": "ramda/src/path"
      },
      {
        "source": "#app/components/Curation",
        "resolvedPath": "#app/components/Curation"
      },
      {
        "source": "../../components/Ad",
        "resolvedPath": "src\\app\\components\\Ad\\index.tsx"
      },
      {
        "source": "../../components/ATIAnalytics",
        "resolvedPath": "src\\app\\components\\ATIAnalytics\\index.tsx"
      },
      {
        "source": "../../components/ChartbeatAnalytics",
        "resolvedPath": "src\\app\\components\\ChartbeatAnalytics\\index.tsx"
      },
      {
        "source": "../../components/LinkedData",
        "resolvedPath": "src\\app\\components\\LinkedData\\index.tsx"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\pages\\TopicPage\\index.styles.jsx"
      },
      {
        "source": "../../components/Metadata",
        "resolvedPath": "src\\app\\components\\Metadata\\index.tsx"
      },
      {
        "source": "../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "./TopicImage",
        "resolvedPath": "src\\app\\pages\\TopicPage\\TopicImage\\index.jsx"
      },
      {
        "source": "./TopicTitle",
        "resolvedPath": "src\\app\\pages\\TopicPage\\TopicTitle\\index.jsx"
      },
      {
        "source": "./TopicDescription",
        "resolvedPath": "src\\app\\pages\\TopicPage\\TopicDescription\\index.jsx"
      },
      {
        "source": "../../components/Pagination",
        "resolvedPath": "src\\app\\components\\Pagination\\index.tsx"
      },
      {
        "source": "../../lib/seoUtils/getItemList",
        "resolvedPath": "src\\app\\lib\\seoUtils\\getItemList\\index.ts"
      },
      {
        "source": "../utils/getNthCurationByStyleAndProminence",
        "resolvedPath": "src\\app\\pages\\utils\\getNthCurationByStyleAndProminence\\index.ts"
      }
    ]
  },
  "src\\app\\pages\\TopicPage\\TopicTitle\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\pages\\TopicPage\\TopicPage.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/psammead-styles/src/font-styles",
        "resolvedPath": "#psammead/psammead-styles/src/font-styles"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "#psammead/gel-foundations/src/breakpoints"
      },
      {
        "source": "#psammead/gel-foundations/src/typography",
        "resolvedPath": "#psammead/gel-foundations/src/typography"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      }
    ]
  },
  "src\\app\\pages\\utils\\applyBasicPageHandlers.js": {
    "incomingDependencies": [
      "src\\app\\pages\\ArticlePage\\index.tsx",
      "src\\app\\pages\\FeatureIdxPage\\index.jsx",
      "src\\app\\pages\\FrontPage\\index.jsx",
      "src\\app\\pages\\HomePage\\index.tsx",
      "src\\app\\pages\\LiveRadioPage\\index.tsx",
      "src\\app\\pages\\MediaArticlePage\\index.tsx",
      "src\\app\\pages\\MostReadPage\\index.jsx",
      "src\\app\\pages\\OnDemandAudioPage\\index.tsx",
      "src\\app\\pages\\OnDemandTvPage\\index.tsx",
      "src\\app\\pages\\TopicPage\\index.jsx",
      "src\\app\\pages\\utils\\applyBasicPageHandlers.test.js"
    ],
    "outgoingDependencies": [
      {
        "source": "ramda/src/pipe",
        "resolvedPath": "ramda/src/pipe"
      },
      {
        "source": "#containers/PageHandlers/withContexts",
        "resolvedPath": "#containers/PageHandlers/withContexts"
      },
      {
        "source": "#containers/PageHandlers/withPageWrapper",
        "resolvedPath": "#containers/PageHandlers/withPageWrapper"
      },
      {
        "source": "#containers/PageHandlers/withError",
        "resolvedPath": "#containers/PageHandlers/withError"
      },
      {
        "source": "#containers/PageHandlers/withData",
        "resolvedPath": "#containers/PageHandlers/withData"
      },
      {
        "source": "#containers/PageHandlers/withHashChangeHandler",
        "resolvedPath": "#containers/PageHandlers/withHashChangeHandler"
      }
    ]
  },
  "src\\app\\pages\\utils\\applyBasicPageHandlers.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "ramda/src/pipe",
        "resolvedPath": "ramda/src/pipe"
      },
      {
        "source": "#app/legacy/containers/PageHandlers/withContexts",
        "resolvedPath": "#app/legacy/containers/PageHandlers/withContexts"
      },
      {
        "source": "./applyBasicPageHandlers",
        "resolvedPath": "src\\app\\pages\\utils\\applyBasicPageHandlers.js"
      }
    ]
  },
  "src\\app\\pages\\utils\\getIndexOfFirstNonBanner\\index.test.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "#app/models/types/curationData",
        "resolvedPath": "#app/models/types/curationData"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\pages\\utils\\getIndexOfFirstNonBanner\\index.ts"
      }
    ]
  },
  "src\\app\\pages\\utils\\getIndexOfFirstNonBanner\\index.ts": {
    "incomingDependencies": [
      "src\\app\\pages\\HomePage\\HomePage.tsx",
      "src\\app\\pages\\utils\\getIndexOfFirstNonBanner\\index.test.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "#app/models/types/curationData",
        "resolvedPath": "#app/models/types/curationData"
      }
    ]
  },
  "src\\app\\pages\\utils\\getNthCurationByStyleAndProminence\\index.test.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "#app/models/types/curationData",
        "resolvedPath": "#app/models/types/curationData"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\pages\\utils\\getNthCurationByStyleAndProminence\\index.ts"
      }
    ]
  },
  "src\\app\\pages\\utils\\getNthCurationByStyleAndProminence\\index.ts": {
    "incomingDependencies": [
      "src\\app\\pages\\HomePage\\HomePage.tsx",
      "src\\app\\pages\\TopicPage\\TopicPage.jsx",
      "src\\app\\pages\\utils\\getNthCurationByStyleAndProminence\\index.test.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "#app/models/types/curationData",
        "resolvedPath": "#app/models/types/curationData"
      }
    ]
  },
  "src\\app\\pages\\__mocks__\\index.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\routes\\article\\getInitialData\\client.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\routes\\article\\getInitialData\\index.test.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "https",
        "resolvedPath": "https"
      },
      {
        "source": "../utils/getOnwardsData",
        "resolvedPath": "src\\app\\routes\\article\\utils\\getOnwardsData.ts"
      },
      {
        "source": "../../utils/fetchPageData",
        "resolvedPath": "src\\app\\routes\\utils\\fetchPageData\\index.js"
      },
      {
        "source": "../../../../testHelpers/loggerMock",
        "resolvedPath": "src\\testHelpers\\loggerMock.js"
      },
      {
        "source": "../../../lib/logger.const",
        "resolvedPath": "src\\app\\lib\\logger.const.js"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\routes\\article\\getInitialData\\index.ts"
      },
      {
        "source": "../../../../../data/pidgin/articles/cw0x29n2pvqo.json",
        "resolvedPath": "..\\..\\data\\pidgin\\articles\\cw0x29n2pvqo.json"
      },
      {
        "source": "../../utils/pageTypes",
        "resolvedPath": "src\\app\\routes\\utils\\pageTypes.ts"
      }
    ]
  },
  "src\\app\\routes\\article\\getInitialData\\index.ts": {
    "incomingDependencies": [
      "src\\app\\routes\\article\\getInitialData\\index.test.ts",
      "src\\app\\routes\\article\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "ramda/src/pipe",
        "resolvedPath": "ramda/src/pipe"
      },
      {
        "source": "../../../lib/logger.node",
        "resolvedPath": "src\\app\\lib\\logger.node.js"
      },
      {
        "source": "../../../models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global.ts"
      },
      {
        "source": "../utils/getOnwardsData",
        "resolvedPath": "src\\app\\routes\\article\\utils\\getOnwardsData.ts"
      },
      {
        "source": "../utils/addAnalyticsCounterName",
        "resolvedPath": "src\\app\\routes\\article\\utils\\addAnalyticsCounterName.ts"
      },
      {
        "source": "../utils/augmentWithDisclaimer",
        "resolvedPath": "src\\app\\routes\\article\\utils\\augmentWithDisclaimer.ts"
      },
      {
        "source": "../utils/paramChecks",
        "resolvedPath": "src\\app\\routes\\article\\utils\\paramChecks.ts"
      },
      {
        "source": "../../../models/types/fetch",
        "resolvedPath": "src\\app\\models\\types\\fetch.ts"
      },
      {
        "source": "../../utils/handleError",
        "resolvedPath": "src\\app\\routes\\utils\\handleError\\index.ts"
      },
      {
        "source": "../../utils/fetchDataFromBFF",
        "resolvedPath": "src\\app\\routes\\utils\\fetchDataFromBFF\\index.ts"
      },
      {
        "source": "../../../../server/utilities/getAgent",
        "resolvedPath": "src\\server\\utilities\\getAgent\\index.js"
      },
      {
        "source": "../../../lib/logger.const",
        "resolvedPath": "src\\app\\lib\\logger.const.js"
      },
      {
        "source": "../../utils/certsRequired",
        "resolvedPath": "src\\app\\routes\\utils\\certsRequired\\index.ts"
      }
    ]
  },
  "src\\app\\routes\\article\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\routes\\index.js"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#pages/index",
        "resolvedPath": "#pages/index"
      },
      {
        "source": "#app/routes/utils/regex",
        "resolvedPath": "#app/routes/utils/regex"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": "#app/models/types/optimo",
        "resolvedPath": "#app/models/types/optimo"
      },
      {
        "source": "./getInitialData",
        "resolvedPath": "src\\app\\routes\\article\\getInitialData\\index.ts"
      }
    ]
  },
  "src\\app\\routes\\article\\utils\\addAnalyticsCounterName.test.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "ramda/src/assocPath",
        "resolvedPath": "ramda/src/assocPath"
      },
      {
        "source": "#data/urdu/cpsAssets/science-51314202.json",
        "resolvedPath": "#data/urdu/cpsAssets/science-51314202.json"
      },
      {
        "source": "#app/models/types/optimo",
        "resolvedPath": "#app/models/types/optimo"
      },
      {
        "source": "./addAnalyticsCounterName",
        "resolvedPath": "src\\app\\routes\\article\\utils\\addAnalyticsCounterName.ts"
      }
    ]
  },
  "src\\app\\routes\\article\\utils\\addAnalyticsCounterName.ts": {
    "incomingDependencies": [
      "src\\app\\routes\\article\\getInitialData\\index.ts",
      "src\\app\\routes\\article\\utils\\addAnalyticsCounterName.test.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "ramda/src/assocPath",
        "resolvedPath": "ramda/src/assocPath"
      },
      {
        "source": "ramda/src/hasPath",
        "resolvedPath": "ramda/src/hasPath"
      },
      {
        "source": "#app/models/types/optimo",
        "resolvedPath": "#app/models/types/optimo"
      }
    ]
  },
  "src\\app\\routes\\article\\utils\\augmentWithDisclaimer.test.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "#app/models/types/optimo",
        "resolvedPath": "#app/models/types/optimo"
      },
      {
        "source": "./augmentWithDisclaimer",
        "resolvedPath": "src\\app\\routes\\article\\utils\\augmentWithDisclaimer.ts"
      }
    ]
  },
  "src\\app\\routes\\article\\utils\\augmentWithDisclaimer.ts": {
    "incomingDependencies": [
      "src\\app\\routes\\article\\getInitialData\\index.ts",
      "src\\app\\routes\\article\\utils\\augmentWithDisclaimer.test.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "ramda/src/pathEq",
        "resolvedPath": "ramda/src/pathEq"
      },
      {
        "source": "ramda/src/assocPath",
        "resolvedPath": "ramda/src/assocPath"
      },
      {
        "source": "ramda/src/insert",
        "resolvedPath": "ramda/src/insert"
      },
      {
        "source": "#app/models/types/optimo",
        "resolvedPath": "#app/models/types/optimo"
      },
      {
        "source": "#app/models/types/global",
        "resolvedPath": "#app/models/types/global"
      },
      {
        "source": "./paramChecks",
        "resolvedPath": "src\\app\\routes\\article\\utils\\paramChecks.ts"
      }
    ]
  },
  "src\\app\\routes\\article\\utils\\getOnwardsData.test.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "https",
        "resolvedPath": "https"
      },
      {
        "source": "#data/mundo/recommendations/index.json",
        "resolvedPath": "#data/mundo/recommendations/index.json"
      },
      {
        "source": "./hasArticleRecommendations",
        "resolvedPath": "src\\app\\routes\\article\\utils\\hasArticleRecommendations.ts"
      },
      {
        "source": "./getOnwardsData",
        "resolvedPath": "src\\app\\routes\\article\\utils\\getOnwardsData.ts"
      },
      {
        "source": "../../utils/fetchPageData",
        "resolvedPath": "src\\app\\routes\\utils\\fetchPageData\\index.js"
      }
    ]
  },
  "src\\app\\routes\\article\\utils\\getOnwardsData.ts": {
    "incomingDependencies": [
      "src\\app\\routes\\article\\getInitialData\\index.test.ts",
      "src\\app\\routes\\article\\getInitialData\\index.ts",
      "src\\app\\routes\\article\\utils\\getOnwardsData.test.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "https",
        "resolvedPath": "https"
      },
      {
        "source": "ramda/src/path",
        "resolvedPath": "ramda/src/path"
      },
      {
        "source": "ramda/src/isEmpty",
        "resolvedPath": "ramda/src/isEmpty"
      },
      {
        "source": "#lib/logger.const",
        "resolvedPath": "#lib/logger.const"
      },
      {
        "source": "#app/lib/utilities/getUrlHelpers/getRecommendationsUrl",
        "resolvedPath": "#app/lib/utilities/getUrlHelpers/getRecommendationsUrl"
      },
      {
        "source": "#app/lib/utilities/getFetchTimeouts",
        "resolvedPath": "#app/lib/utilities/getFetchTimeouts"
      },
      {
        "source": "../../utils/fetchPageData",
        "resolvedPath": "src\\app\\routes\\utils\\fetchPageData\\index.js"
      },
      {
        "source": "../../../lib/logger.node",
        "resolvedPath": "src\\app\\lib\\logger.node.js"
      },
      {
        "source": "./hasArticleRecommendations",
        "resolvedPath": "src\\app\\routes\\article\\utils\\hasArticleRecommendations.ts"
      }
    ]
  },
  "src\\app\\routes\\article\\utils\\hasArticleRecommendations.test.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "./hasArticleRecommendations",
        "resolvedPath": "src\\app\\routes\\article\\utils\\hasArticleRecommendations.ts"
      },
      {
        "source": "../../utils/getConfig",
        "resolvedPath": "src\\app\\routes\\utils\\getConfig\\index.js"
      }
    ]
  },
  "src\\app\\routes\\article\\utils\\hasArticleRecommendations.ts": {
    "incomingDependencies": [
      "src\\app\\routes\\article\\utils\\getOnwardsData.test.ts",
      "src\\app\\routes\\article\\utils\\getOnwardsData.ts",
      "src\\app\\routes\\article\\utils\\hasArticleRecommendations.test.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "#app/routes/utils/getConfig",
        "resolvedPath": "#app/routes/utils/getConfig"
      }
    ]
  },
  "src\\app\\routes\\article\\utils\\paramChecks.test.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "#app/models/types/optimo",
        "resolvedPath": "#app/models/types/optimo"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": "./paramChecks",
        "resolvedPath": "src\\app\\routes\\article\\utils\\paramChecks.ts"
      }
    ]
  },
  "src\\app\\routes\\article\\utils\\paramChecks.ts": {
    "incomingDependencies": [
      "src\\app\\routes\\article\\getInitialData\\index.ts",
      "src\\app\\routes\\article\\utils\\augmentWithDisclaimer.ts",
      "src\\app\\routes\\article\\utils\\paramChecks.test.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "#app/models/types/optimo",
        "resolvedPath": "#app/models/types/optimo"
      }
    ]
  },
  "src\\app\\routes\\error\\getInitialData\\index.js": {
    "incomingDependencies": [
      "src\\app\\routes\\error\\getInitialData\\index.test.js",
      "src\\app\\routes\\error\\index.js"
    ],
    "outgoingDependencies": [
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": "react-router-config",
        "resolvedPath": "react-router-config"
      }
    ]
  },
  "src\\app\\routes\\error\\getInitialData\\index.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": ".",
        "resolvedPath": "src\\app\\routes\\error\\getInitialData\\index.js"
      },
      {
        "source": "../../utils/regex",
        "resolvedPath": "src\\app\\routes\\utils\\regex\\index.js"
      }
    ]
  },
  "src\\app\\routes\\error\\index.js": {
    "incomingDependencies": [
      "src\\app\\routes\\index.js"
    ],
    "outgoingDependencies": [
      {
        "source": "#pages",
        "resolvedPath": "#pages"
      },
      {
        "source": "#app/routes/utils/regex",
        "resolvedPath": "#app/routes/utils/regex"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": "./getInitialData",
        "resolvedPath": "src\\app\\routes\\error\\getInitialData\\index.js"
      }
    ]
  },
  "src\\app\\routes\\errorNoRouteMatch\\index.js": {
    "incomingDependencies": [
      "src\\app\\routes\\index.js"
    ],
    "outgoingDependencies": [
      {
        "source": "#pages",
        "resolvedPath": "#pages"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      }
    ]
  },
  "src\\app\\routes\\frontPage\\getInitialData\\index.js": {
    "incomingDependencies": [
      "src\\app\\routes\\frontPage\\getInitialData\\index.test.js",
      "src\\app\\routes\\frontPage\\index.js"
    ],
    "outgoingDependencies": [
      {
        "source": "ramda/src/pipe",
        "resolvedPath": "ramda/src/pipe"
      },
      {
        "source": "ramda/src/path",
        "resolvedPath": "ramda/src/path"
      },
      {
        "source": "#app/routes/utils/withRadioSchedule",
        "resolvedPath": "#app/routes/utils/withRadioSchedule"
      },
      {
        "source": "#app/routes/utils/sharedDataTransformers/filterUnknownContentTypes",
        "resolvedPath": "#app/routes/utils/sharedDataTransformers/filterUnknownContentTypes"
      },
      {
        "source": "#app/routes/utils/sharedDataTransformers/filterEmptyGroupItems",
        "resolvedPath": "#app/routes/utils/sharedDataTransformers/filterEmptyGroupItems"
      },
      {
        "source": "#app/routes/utils/sharedDataTransformers/squashTopStories",
        "resolvedPath": "#app/routes/utils/sharedDataTransformers/squashTopStories"
      },
      {
        "source": "#app/routes/utils/sharedDataTransformers/addIdsToGroups",
        "resolvedPath": "#app/routes/utils/sharedDataTransformers/addIdsToGroups"
      },
      {
        "source": "#app/routes/utils/sharedDataTransformers/filterGroupsWithoutStraplines",
        "resolvedPath": "#app/routes/utils/sharedDataTransformers/filterGroupsWithoutStraplines"
      },
      {
        "source": "#app/routes/utils/handleError",
        "resolvedPath": "#app/routes/utils/handleError"
      },
      {
        "source": "#app/routes/utils/fetchDataFromBFF",
        "resolvedPath": "#app/routes/utils/fetchDataFromBFF"
      },
      {
        "source": "../../utils/fetchPageData/utils/getErrorStatusCode",
        "resolvedPath": "src\\app\\routes\\utils\\fetchPageData\\utils\\getErrorStatusCode.js"
      },
      {
        "source": "../../utils/pageTypes",
        "resolvedPath": "src\\app\\routes\\utils\\pageTypes.ts"
      },
      {
        "source": "../../../lib/logger.node",
        "resolvedPath": "src\\app\\lib\\logger.node.js"
      },
      {
        "source": "../../../lib/logger.const",
        "resolvedPath": "src\\app\\lib\\logger.const.js"
      }
    ]
  },
  "src\\app\\routes\\frontPage\\getInitialData\\index.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "#data/serbian/frontpage/lat.json",
        "resolvedPath": "#data/serbian/frontpage/lat.json"
      },
      {
        "source": "#data/hausa/bbc_hausa_radio/schedule.json",
        "resolvedPath": "#data/hausa/bbc_hausa_radio/schedule.json"
      },
      {
        "source": "../../utils/pageTypes",
        "resolvedPath": "src\\app\\routes\\utils\\pageTypes.ts"
      },
      {
        "source": "../../utils/fetchPageData",
        "resolvedPath": "src\\app\\routes\\utils\\fetchPageData\\index.js"
      },
      {
        "source": "../../../../testHelpers/loggerMock",
        "resolvedPath": "src\\testHelpers\\loggerMock.js"
      },
      {
        "source": "../../../lib/logger.const",
        "resolvedPath": "src\\app\\lib\\logger.const.js"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\routes\\frontPage\\getInitialData\\index.js"
      }
    ]
  },
  "src\\app\\routes\\frontPage\\index.js": {
    "incomingDependencies": [
      "src\\app\\routes\\index.js"
    ],
    "outgoingDependencies": [
      {
        "source": "#pages",
        "resolvedPath": "#pages"
      },
      {
        "source": "#app/routes/utils/regex",
        "resolvedPath": "#app/routes/utils/regex"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": "./getInitialData",
        "resolvedPath": "src\\app\\routes\\frontPage\\getInitialData\\index.js"
      }
    ]
  },
  "src\\app\\routes\\getInitialData.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": "./index",
        "resolvedPath": "src\\app\\routes\\index.js"
      }
    ]
  },
  "src\\app\\routes\\homePage\\getInitialData\\index.test.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "#data/kyrgyz/homePage/index.json",
        "resolvedPath": "#data/kyrgyz/homePage/index.json"
      },
      {
        "source": "../../utils/fetchPageData",
        "resolvedPath": "src\\app\\routes\\utils\\fetchPageData\\index.js"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\routes\\homePage\\getInitialData\\index.ts"
      },
      {
        "source": "../../utils/pageTypes",
        "resolvedPath": "src\\app\\routes\\utils\\pageTypes.ts"
      }
    ]
  },
  "src\\app\\routes\\homePage\\getInitialData\\index.ts": {
    "incomingDependencies": [
      "src\\app\\routes\\homePage\\getInitialData\\index.test.ts",
      "src\\app\\routes\\homePage\\index.js"
    ],
    "outgoingDependencies": [
      {
        "source": "#app/models/types/initialData",
        "resolvedPath": "#app/models/types/initialData"
      },
      {
        "source": "../../../lib/logger.node",
        "resolvedPath": "src\\app\\lib\\logger.node.js"
      },
      {
        "source": "../../../lib/logger.const",
        "resolvedPath": "src\\app\\lib\\logger.const.js"
      },
      {
        "source": "../../../models/types/fetch",
        "resolvedPath": "src\\app\\models\\types\\fetch.ts"
      },
      {
        "source": "../../utils/fetchDataFromBFF",
        "resolvedPath": "src\\app\\routes\\utils\\fetchDataFromBFF\\index.ts"
      },
      {
        "source": "../../utils/pageTypes",
        "resolvedPath": "src\\app\\routes\\utils\\pageTypes.ts"
      }
    ]
  },
  "src\\app\\routes\\homePage\\getInitialData\\page-config.ts": {
    "incomingDependencies": [
      "src\\app\\routes\\utils\\constructPageFetchUrl\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global.ts"
      }
    ]
  },
  "src\\app\\routes\\homePage\\index.js": {
    "incomingDependencies": [
      "src\\app\\routes\\index.js"
    ],
    "outgoingDependencies": [
      {
        "source": "#pages",
        "resolvedPath": "#pages"
      },
      {
        "source": "#app/routes/utils/regex",
        "resolvedPath": "#app/routes/utils/regex"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": "./getInitialData",
        "resolvedPath": "src\\app\\routes\\homePage\\getInitialData\\index.ts"
      }
    ]
  },
  "src\\app\\routes\\index.js": {
    "incomingDependencies": [
      "src\\app\\routes\\getInitialData.test.jsx",
      "src\\app\\routes\\index.test.jsx",
      "src\\server\\index.test.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "./article",
        "resolvedPath": "src\\app\\routes\\article\\index.tsx"
      },
      {
        "source": "./frontPage",
        "resolvedPath": "src\\app\\routes\\frontPage\\index.js"
      },
      {
        "source": "./homePage",
        "resolvedPath": "src\\app\\routes\\homePage\\index.js"
      },
      {
        "source": "./liveRadio",
        "resolvedPath": "src\\app\\routes\\liveRadio\\index.js"
      },
      {
        "source": "./mostRead",
        "resolvedPath": "src\\app\\routes\\mostRead\\index.js"
      },
      {
        "source": "./podcast",
        "resolvedPath": "src\\app\\routes\\podcast\\index.js"
      },
      {
        "source": "./onDemandRadio",
        "resolvedPath": "src\\app\\routes\\onDemandRadio\\index.js"
      },
      {
        "source": "./onDemandTV",
        "resolvedPath": "src\\app\\routes\\onDemandTV\\index.js"
      },
      {
        "source": "./topic",
        "resolvedPath": "src\\app\\routes\\topic\\index.js"
      },
      {
        "source": "./error",
        "resolvedPath": "src\\app\\routes\\error\\index.js"
      },
      {
        "source": "./errorNoRouteMatch",
        "resolvedPath": "src\\app\\routes\\errorNoRouteMatch\\index.js"
      }
    ]
  },
  "src\\app\\routes\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "react-router-config",
        "resolvedPath": "react-router-config"
      },
      {
        "source": "react-router-dom",
        "resolvedPath": "react-router-dom"
      },
      {
        "source": "#lib/config/toggles",
        "resolvedPath": "#lib/config/toggles"
      },
      {
        "source": "#data/afrique/cpsAssets/48465371.json",
        "resolvedPath": "#data/afrique/cpsAssets/48465371.json"
      },
      {
        "source": "#data/arabic/podcasts/p02pc9qc.json",
        "resolvedPath": "#data/arabic/podcasts/p02pc9qc.json"
      },
      {
        "source": "#data/azeri/legacyAssets/multimedia/2012/09/120919_georgia_prison_video.json",
        "resolvedPath": "#data/azeri/legacyAssets/multimedia/2012/09/120919_georgia_prison_video.json"
      },
      {
        "source": "#data/indonesia/bbc_indonesian_radio/w172xh267fpn19l.json",
        "resolvedPath": "#data/indonesia/bbc_indonesian_radio/w172xh267fpn19l.json"
      },
      {
        "source": "#data/korean/bbc_korean_radio/liveradio.json",
        "resolvedPath": "#data/korean/bbc_korean_radio/liveradio.json"
      },
      {
        "source": "#data/kyrgyz/homePage/index.json",
        "resolvedPath": "#data/kyrgyz/homePage/index.json"
      },
      {
        "source": "#data/pashto/bbc_pashto_tv/tv_programmes/w13xttn4.json",
        "resolvedPath": "#data/pashto/bbc_pashto_tv/tv_programmes/w13xttn4.json"
      },
      {
        "source": "#data/persian/articles/c4vlle3q337o.json",
        "resolvedPath": "#data/persian/articles/c4vlle3q337o.json"
      },
      {
        "source": "#data/sport/judo/articles/cj80n66ddnko.json",
        "resolvedPath": "#data/sport/judo/articles/cj80n66ddnko.json"
      },
      {
        "source": "#data/yoruba/cpsAssets/media-23256797.json",
        "resolvedPath": "#data/yoruba/cpsAssets/media-23256797.json"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\routes\\index.js"
      },
      {
        "source": "../components/react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "../legacy/psammead/psammead-test-helpers/src",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-test-helpers\\src\\index.js"
      },
      {
        "source": "./utils/fetchDataFromBFF",
        "resolvedPath": "src\\app\\routes\\utils\\fetchDataFromBFF\\index.ts"
      }
    ]
  },
  "src\\app\\routes\\liveRadio\\getInitialData\\index.js": {
    "incomingDependencies": [
      "src\\app\\routes\\liveRadio\\getInitialData\\index.test.js",
      "src\\app\\routes\\liveRadio\\index.js"
    ],
    "outgoingDependencies": [
      {
        "source": "ramda/src/path",
        "resolvedPath": "ramda/src/path"
      },
      {
        "source": "#app/routes/utils/withRadioSchedule",
        "resolvedPath": "#app/routes/utils/withRadioSchedule"
      },
      {
        "source": "../../utils/fetchPageData",
        "resolvedPath": "src\\app\\routes\\utils\\fetchPageData\\index.js"
      },
      {
        "source": "../../utils/overrideRendererOnTest",
        "resolvedPath": "src\\app\\routes\\utils\\overrideRendererOnTest\\index.js"
      },
      {
        "source": "../../utils/fetchPageData/utils/getErrorStatusCode",
        "resolvedPath": "src\\app\\routes\\utils\\fetchPageData\\utils\\getErrorStatusCode.js"
      },
      {
        "source": "../../utils/getRadioService",
        "resolvedPath": "src\\app\\routes\\utils\\getRadioService\\index.js"
      }
    ]
  },
  "src\\app\\routes\\liveRadio\\getInitialData\\index.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "#data/korean/bbc_korean_radio/liveradio.json",
        "resolvedPath": "#data/korean/bbc_korean_radio/liveradio.json"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\routes\\liveRadio\\getInitialData\\index.js"
      },
      {
        "source": "../../utils/fetchPageData",
        "resolvedPath": "src\\app\\routes\\utils\\fetchPageData\\index.js"
      }
    ]
  },
  "src\\app\\routes\\liveRadio\\index.js": {
    "incomingDependencies": [
      "src\\app\\routes\\index.js"
    ],
    "outgoingDependencies": [
      {
        "source": "#pages",
        "resolvedPath": "#pages"
      },
      {
        "source": "#app/routes/utils/regex",
        "resolvedPath": "#app/routes/utils/regex"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": "./getInitialData",
        "resolvedPath": "src\\app\\routes\\liveRadio\\getInitialData\\index.js"
      }
    ]
  },
  "src\\app\\routes\\mostRead\\getInitialData\\index.js": {
    "incomingDependencies": [
      "src\\app\\routes\\mostRead\\getInitialData\\index.test.js",
      "src\\app\\routes\\mostRead\\index.js"
    ],
    "outgoingDependencies": [
      {
        "source": "../../utils/fetchPageData/utils/getErrorStatusCode",
        "resolvedPath": "src\\app\\routes\\utils\\fetchPageData\\utils\\getErrorStatusCode.js"
      },
      {
        "source": "../../utils/pageTypes",
        "resolvedPath": "src\\app\\routes\\utils\\pageTypes.ts"
      },
      {
        "source": "../../utils/handleError",
        "resolvedPath": "src\\app\\routes\\utils\\handleError\\index.ts"
      },
      {
        "source": "../../utils/fetchDataFromBFF",
        "resolvedPath": "src\\app\\routes\\utils\\fetchDataFromBFF\\index.ts"
      },
      {
        "source": "../../../lib/logger.const",
        "resolvedPath": "src\\app\\lib\\logger.const.js"
      },
      {
        "source": "../../../lib/logger.node",
        "resolvedPath": "src\\app\\lib\\logger.node.js"
      }
    ]
  },
  "src\\app\\routes\\mostRead\\getInitialData\\index.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": "../../utils/fetchPageData",
        "resolvedPath": "src\\app\\routes\\utils\\fetchPageData\\index.js"
      },
      {
        "source": "../../../../../data/pidgin/mostRead/index.json",
        "resolvedPath": "..\\..\\data\\pidgin\\mostRead\\index.json"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\routes\\mostRead\\getInitialData\\index.js"
      }
    ]
  },
  "src\\app\\routes\\mostRead\\index.js": {
    "incomingDependencies": [
      "src\\app\\routes\\index.js"
    ],
    "outgoingDependencies": [
      {
        "source": "#pages",
        "resolvedPath": "#pages"
      },
      {
        "source": "#app/routes/utils/regex",
        "resolvedPath": "#app/routes/utils/regex"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": "./getInitialData",
        "resolvedPath": "src\\app\\routes\\mostRead\\getInitialData\\index.js"
      }
    ]
  },
  "src\\app\\routes\\onDemandAudio\\getInitialData\\index.test.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "ramda/src/mergeDeepLeft",
        "resolvedPath": "ramda/src/mergeDeepLeft"
      },
      {
        "source": "ramda/src/dissocPath",
        "resolvedPath": "ramda/src/dissocPath"
      },
      {
        "source": "#testHelpers/loggerMock",
        "resolvedPath": "#testHelpers/loggerMock"
      },
      {
        "source": "#data/pashto/bbc_pashto_radio/w3ct0lz1.json",
        "resolvedPath": "#data/pashto/bbc_pashto_radio/w3ct0lz1.json"
      },
      {
        "source": "#data/arabic/podcasts/p02pc9qc/p08wtg4d.json",
        "resolvedPath": "#data/arabic/podcasts/p02pc9qc/p08wtg4d.json"
      },
      {
        "source": "#lib/logger.const",
        "resolvedPath": "#lib/logger.const"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": "jest-fetch-mock",
        "resolvedPath": "jest-fetch-mock"
      },
      {
        "source": "../tempData/podcastExternalLinks/arabic",
        "resolvedPath": "src\\app\\routes\\onDemandAudio\\tempData\\podcastExternalLinks\\arabic.js"
      },
      {
        "source": "../../utils/fetchPageData",
        "resolvedPath": "src\\app\\routes\\utils\\fetchPageData\\index.js"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\routes\\onDemandAudio\\getInitialData\\index.ts"
      }
    ]
  },
  "src\\app\\routes\\onDemandAudio\\getInitialData\\index.ts": {
    "incomingDependencies": [
      "src\\app\\routes\\onDemandAudio\\getInitialData\\index.test.ts",
      "src\\app\\routes\\onDemandRadio\\index.js",
      "src\\app\\routes\\podcast\\index.js"
    ],
    "outgoingDependencies": [
      {
        "source": "ramda/src/path",
        "resolvedPath": "ramda/src/path"
      },
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "#lib/logger.const",
        "resolvedPath": "#lib/logger.const"
      },
      {
        "source": "#lib/utilities/episodeAvailability",
        "resolvedPath": "#lib/utilities/episodeAvailability"
      },
      {
        "source": "#app/routes/utils/withRadioSchedule",
        "resolvedPath": "#app/routes/utils/withRadioSchedule"
      },
      {
        "source": "#app/models/types/initialData",
        "resolvedPath": "#app/models/types/initialData"
      },
      {
        "source": "#app/models/types/media",
        "resolvedPath": "#app/models/types/media"
      },
      {
        "source": "../../utils/fetchPageData",
        "resolvedPath": "src\\app\\routes\\utils\\fetchPageData\\index.js"
      },
      {
        "source": "../../utils/overrideRendererOnTest",
        "resolvedPath": "src\\app\\routes\\utils\\overrideRendererOnTest\\index.js"
      },
      {
        "source": "../../utils/getPlaceholderImageUrl",
        "resolvedPath": "src\\app\\routes\\utils\\getPlaceholderImageUrl\\index.js"
      },
      {
        "source": "../../../lib/utilities/logging/pathWithLogging",
        "resolvedPath": "src\\app\\lib\\utilities\\logging\\pathWithLogging\\index.js"
      },
      {
        "source": "../../utils/fetchPageData/utils/getErrorStatusCode",
        "resolvedPath": "src\\app\\routes\\utils\\fetchPageData\\utils\\getErrorStatusCode.js"
      },
      {
        "source": "../../utils/getRadioService",
        "resolvedPath": "src\\app\\routes\\utils\\getRadioService\\index.js"
      },
      {
        "source": "../../utils/processRecentEpisodes",
        "resolvedPath": "src\\app\\routes\\utils\\processRecentEpisodes\\index.jsx"
      },
      {
        "source": "../tempData/podcastExternalLinks",
        "resolvedPath": "src\\app\\routes\\onDemandAudio\\tempData\\podcastExternalLinks\\index.js"
      }
    ]
  },
  "src\\app\\routes\\onDemandAudio\\tempData\\podcastExternalLinks\\arabic.js": {
    "incomingDependencies": [
      "src\\app\\routes\\onDemandAudio\\getInitialData\\index.test.ts"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\routes\\onDemandAudio\\tempData\\podcastExternalLinks\\burmese.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\routes\\onDemandAudio\\tempData\\podcastExternalLinks\\gahuza.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\routes\\onDemandAudio\\tempData\\podcastExternalLinks\\hausa.js": {
    "incomingDependencies": [
      "src\\app\\routes\\onDemandAudio\\tempData\\podcastExternalLinks\\index.test.js"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\routes\\onDemandAudio\\tempData\\podcastExternalLinks\\hindi.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\routes\\onDemandAudio\\tempData\\podcastExternalLinks\\index.js": {
    "incomingDependencies": [
      "src\\app\\routes\\onDemandAudio\\getInitialData\\index.ts",
      "src\\app\\routes\\onDemandAudio\\tempData\\podcastExternalLinks\\index.test.js"
    ],
    "outgoingDependencies": [
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "#lib/logger.node",
        "resolvedPath": "#lib/logger.node"
      },
      {
        "source": "#lib/logger.const",
        "resolvedPath": "#lib/logger.const"
      }
    ]
  },
  "src\\app\\routes\\onDemandAudio\\tempData\\podcastExternalLinks\\index.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": ".",
        "resolvedPath": "src\\app\\routes\\onDemandAudio\\tempData\\podcastExternalLinks\\index.js"
      },
      {
        "source": "./hausa",
        "resolvedPath": "src\\app\\routes\\onDemandAudio\\tempData\\podcastExternalLinks\\hausa.js"
      },
      {
        "source": "./zhongwen",
        "resolvedPath": "src\\app\\routes\\onDemandAudio\\tempData\\podcastExternalLinks\\zhongwen.js"
      }
    ]
  },
  "src\\app\\routes\\onDemandAudio\\tempData\\podcastExternalLinks\\indonesia.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\routes\\onDemandAudio\\tempData\\podcastExternalLinks\\kyrgyz.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\routes\\onDemandAudio\\tempData\\podcastExternalLinks\\marathi.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\routes\\onDemandAudio\\tempData\\podcastExternalLinks\\nepali.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\routes\\onDemandAudio\\tempData\\podcastExternalLinks\\persian.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\routes\\onDemandAudio\\tempData\\podcastExternalLinks\\portuguese.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\routes\\onDemandAudio\\tempData\\podcastExternalLinks\\russian.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\routes\\onDemandAudio\\tempData\\podcastExternalLinks\\ukrainian.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\routes\\onDemandAudio\\tempData\\podcastExternalLinks\\urdu.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\routes\\onDemandAudio\\tempData\\podcastExternalLinks\\zhongwen.js": {
    "incomingDependencies": [
      "src\\app\\routes\\onDemandAudio\\tempData\\podcastExternalLinks\\index.test.js"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\routes\\onDemandRadio\\index.js": {
    "incomingDependencies": [
      "src\\app\\routes\\index.js"
    ],
    "outgoingDependencies": [
      {
        "source": "#pages",
        "resolvedPath": "#pages"
      },
      {
        "source": "#app/routes/utils/regex",
        "resolvedPath": "#app/routes/utils/regex"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": "../onDemandAudio/getInitialData",
        "resolvedPath": "src\\app\\routes\\onDemandAudio\\getInitialData\\index.ts"
      }
    ]
  },
  "src\\app\\routes\\onDemandTV\\getInitialData\\index.js": {
    "incomingDependencies": [
      "src\\app\\routes\\onDemandTV\\getInitialData\\index.test.js",
      "src\\app\\routes\\onDemandTV\\index.js"
    ],
    "outgoingDependencies": [
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "#lib/utilities/logging/pathWithLogging",
        "resolvedPath": "#lib/utilities/logging/pathWithLogging"
      },
      {
        "source": "#lib/logger.const",
        "resolvedPath": "#lib/logger.const"
      },
      {
        "source": "#lib/utilities/episodeAvailability",
        "resolvedPath": "#lib/utilities/episodeAvailability"
      },
      {
        "source": "#app/routes/utils/processRecentEpisodes",
        "resolvedPath": "#app/routes/utils/processRecentEpisodes"
      },
      {
        "source": "../../utils/fetchPageData",
        "resolvedPath": "src\\app\\routes\\utils\\fetchPageData\\index.js"
      },
      {
        "source": "../../utils/overrideRendererOnTest",
        "resolvedPath": "src\\app\\routes\\utils\\overrideRendererOnTest\\index.js"
      },
      {
        "source": "../../utils/getPlaceholderImageUrl",
        "resolvedPath": "src\\app\\routes\\utils\\getPlaceholderImageUrl\\index.js"
      },
      {
        "source": "../../utils/fetchPageData/utils/getErrorStatusCode",
        "resolvedPath": "src\\app\\routes\\utils\\fetchPageData\\utils\\getErrorStatusCode.js"
      }
    ]
  },
  "src\\app\\routes\\onDemandTV\\getInitialData\\index.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "ramda/src/pipe",
        "resolvedPath": "ramda/src/pipe"
      },
      {
        "source": "ramda/src/dissocPath",
        "resolvedPath": "ramda/src/dissocPath"
      },
      {
        "source": "ramda/src/map",
        "resolvedPath": "ramda/src/map"
      },
      {
        "source": "#testHelpers/loggerMock",
        "resolvedPath": "#testHelpers/loggerMock"
      },
      {
        "source": "#data/pashto/bbc_pashto_tv/tv_programmes/w13xttn4",
        "resolvedPath": "#data/pashto/bbc_pashto_tv/tv_programmes/w13xttn4"
      },
      {
        "source": "#lib/logger.const",
        "resolvedPath": "#lib/logger.const"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": "../../utils/fetchPageData",
        "resolvedPath": "src\\app\\routes\\utils\\fetchPageData\\index.js"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\routes\\onDemandTV\\getInitialData\\index.js"
      }
    ]
  },
  "src\\app\\routes\\onDemandTV\\index.js": {
    "incomingDependencies": [
      "src\\app\\routes\\index.js"
    ],
    "outgoingDependencies": [
      {
        "source": "#pages",
        "resolvedPath": "#pages"
      },
      {
        "source": "#app/routes/utils/regex",
        "resolvedPath": "#app/routes/utils/regex"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": "./getInitialData",
        "resolvedPath": "src\\app\\routes\\onDemandTV\\getInitialData\\index.js"
      }
    ]
  },
  "src\\app\\routes\\podcast\\index.js": {
    "incomingDependencies": [
      "src\\app\\routes\\index.js"
    ],
    "outgoingDependencies": [
      {
        "source": "#pages",
        "resolvedPath": "#pages"
      },
      {
        "source": "#app/routes/utils/regex",
        "resolvedPath": "#app/routes/utils/regex"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": "../onDemandAudio/getInitialData",
        "resolvedPath": "src\\app\\routes\\onDemandAudio\\getInitialData\\index.ts"
      }
    ]
  },
  "src\\app\\routes\\topic\\getInitialData\\index.js": {
    "incomingDependencies": [
      "src\\app\\routes\\topic\\getInitialData\\index.test.js",
      "src\\app\\routes\\topic\\index.js"
    ],
    "outgoingDependencies": [
      {
        "source": "url-parse",
        "resolvedPath": "url-parse"
      },
      {
        "source": "../../../lib/logger.const",
        "resolvedPath": "src\\app\\lib\\logger.const.js"
      },
      {
        "source": "../../../lib/logger.node",
        "resolvedPath": "src\\app\\lib\\logger.node.js"
      },
      {
        "source": "../../utils/fetchPageData/utils/getErrorStatusCode",
        "resolvedPath": "src\\app\\routes\\utils\\fetchPageData\\utils\\getErrorStatusCode.js"
      },
      {
        "source": "../../utils/fetchDataFromBFF",
        "resolvedPath": "src\\app\\routes\\utils\\fetchDataFromBFF\\index.ts"
      },
      {
        "source": "../../utils/pageTypes",
        "resolvedPath": "src\\app\\routes\\utils\\pageTypes.ts"
      },
      {
        "source": "../../../lib/utilities/isTest",
        "resolvedPath": "src\\app\\lib\\utilities\\isTest\\index.js"
      }
    ]
  },
  "src\\app\\routes\\topic\\getInitialData\\index.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "ramda/src/assocPath",
        "resolvedPath": "ramda/src/assocPath"
      },
      {
        "source": "../../utils/fetchPageData",
        "resolvedPath": "src\\app\\routes\\utils\\fetchPageData\\index.js"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\routes\\topic\\getInitialData\\index.js"
      },
      {
        "source": "../../utils/pageTypes",
        "resolvedPath": "src\\app\\routes\\utils\\pageTypes.ts"
      }
    ]
  },
  "src\\app\\routes\\topic\\getInitialData\\page-config.ts": {
    "incomingDependencies": [
      "src\\app\\routes\\utils\\constructPageFetchUrl\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global.ts"
      }
    ]
  },
  "src\\app\\routes\\topic\\index.js": {
    "incomingDependencies": [
      "src\\app\\routes\\index.js"
    ],
    "outgoingDependencies": [
      {
        "source": "#pages",
        "resolvedPath": "#pages"
      },
      {
        "source": "#app/routes/utils/regex",
        "resolvedPath": "#app/routes/utils/regex"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": "./getInitialData",
        "resolvedPath": "src\\app\\routes\\topic\\getInitialData\\index.js"
      }
    ]
  },
  "src\\app\\routes\\utils\\certsRequired\\index.test.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": ".",
        "resolvedPath": "src\\app\\routes\\utils\\certsRequired\\index.ts"
      },
      {
        "source": "../getEnvironment",
        "resolvedPath": "src\\app\\routes\\utils\\getEnvironment\\index.ts"
      }
    ]
  },
  "src\\app\\routes\\utils\\certsRequired\\index.ts": {
    "incomingDependencies": [
      "src\\app\\routes\\article\\getInitialData\\index.ts",
      "src\\app\\routes\\utils\\certsRequired\\index.test.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../getEnvironment",
        "resolvedPath": "src\\app\\routes\\utils\\getEnvironment\\index.ts"
      }
    ]
  },
  "src\\app\\routes\\utils\\constructPageFetchUrl\\index.test.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": ".",
        "resolvedPath": "src\\app\\routes\\utils\\constructPageFetchUrl\\index.ts"
      },
      {
        "source": "../pageTypes",
        "resolvedPath": "src\\app\\routes\\utils\\pageTypes.ts"
      }
    ]
  },
  "src\\app\\routes\\utils\\constructPageFetchUrl\\index.ts": {
    "incomingDependencies": [
      "src\\app\\routes\\utils\\constructPageFetchUrl\\index.test.ts",
      "src\\app\\routes\\utils\\fetchDataFromBFF\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "url-parse",
        "resolvedPath": "url-parse"
      },
      {
        "source": "ramda/src/pipe",
        "resolvedPath": "ramda/src/pipe"
      },
      {
        "source": "#app/routes/utils/getEnvironment",
        "resolvedPath": "#app/routes/utils/getEnvironment"
      },
      {
        "source": "#app/lib/utilities/getUrlHelpers/getMostReadUrls",
        "resolvedPath": "#app/lib/utilities/getUrlHelpers/getMostReadUrls"
      },
      {
        "source": "#lib/utilities/urlParser",
        "resolvedPath": "#lib/utilities/urlParser"
      },
      {
        "source": "#models/types/global",
        "resolvedPath": "#models/types/global"
      },
      {
        "source": "../handleError",
        "resolvedPath": "src\\app\\routes\\utils\\handleError\\index.ts"
      },
      {
        "source": "../../homePage/getInitialData/page-config",
        "resolvedPath": "src\\app\\routes\\homePage\\getInitialData\\page-config.ts"
      },
      {
        "source": "../../topic/getInitialData/page-config",
        "resolvedPath": "src\\app\\routes\\topic\\getInitialData\\page-config.ts"
      },
      {
        "source": "../pageTypes",
        "resolvedPath": "src\\app\\routes\\utils\\pageTypes.ts"
      },
      {
        "source": "../parseAvRoute",
        "resolvedPath": "src\\app\\routes\\utils\\parseAvRoute\\index.ts"
      }
    ]
  },
  "src\\app\\routes\\utils\\fetchDataFromBFF\\client.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\routes\\utils\\fetchDataFromBFF\\index.test.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "http",
        "resolvedPath": "http"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\routes\\utils\\fetchDataFromBFF\\index.ts"
      },
      {
        "source": "../pageTypes",
        "resolvedPath": "src\\app\\routes\\utils\\pageTypes.ts"
      },
      {
        "source": "../fetchPageData",
        "resolvedPath": "src\\app\\routes\\utils\\fetchPageData\\index.js"
      }
    ]
  },
  "src\\app\\routes\\utils\\fetchDataFromBFF\\index.ts": {
    "incomingDependencies": [
      "src\\app\\routes\\article\\getInitialData\\index.ts",
      "src\\app\\routes\\homePage\\getInitialData\\index.ts",
      "src\\app\\routes\\index.test.jsx",
      "src\\app\\routes\\mostRead\\getInitialData\\index.js",
      "src\\app\\routes\\topic\\getInitialData\\index.js",
      "src\\app\\routes\\utils\\fetchDataFromBFF\\index.test.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../../server/utilities/getAgent",
        "resolvedPath": "src\\server\\utilities\\getAgent\\index.js"
      },
      {
        "source": "../constructPageFetchUrl",
        "resolvedPath": "src\\app\\routes\\utils\\constructPageFetchUrl\\index.ts"
      },
      {
        "source": "../getEnvironment",
        "resolvedPath": "src\\app\\routes\\utils\\getEnvironment\\index.ts"
      },
      {
        "source": "../../../models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global.ts"
      },
      {
        "source": "../fetchPageData",
        "resolvedPath": "src\\app\\routes\\utils\\fetchPageData\\index.js"
      },
      {
        "source": "../fetchPageData/utils/getErrorStatusCode",
        "resolvedPath": "src\\app\\routes\\utils\\fetchPageData\\utils\\getErrorStatusCode.js"
      },
      {
        "source": "../../../lib/logger.const",
        "resolvedPath": "src\\app\\lib\\logger.const.js"
      },
      {
        "source": "../../../models/types/fetch",
        "resolvedPath": "src\\app\\models\\types\\fetch.ts"
      },
      {
        "source": "../../../lib/logger.node",
        "resolvedPath": "src\\app\\lib\\logger.node.js"
      }
    ]
  },
  "src\\app\\routes\\utils\\fetchPageData\\client.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\routes\\utils\\fetchPageData\\index.js": {
    "incomingDependencies": [
      "src\\app\\routes\\article\\getInitialData\\index.test.ts",
      "src\\app\\routes\\article\\utils\\getOnwardsData.test.ts",
      "src\\app\\routes\\article\\utils\\getOnwardsData.ts",
      "src\\app\\routes\\frontPage\\getInitialData\\index.test.js",
      "src\\app\\routes\\homePage\\getInitialData\\index.test.ts",
      "src\\app\\routes\\liveRadio\\getInitialData\\index.js",
      "src\\app\\routes\\liveRadio\\getInitialData\\index.test.js",
      "src\\app\\routes\\mostRead\\getInitialData\\index.test.js",
      "src\\app\\routes\\onDemandAudio\\getInitialData\\index.test.ts",
      "src\\app\\routes\\onDemandAudio\\getInitialData\\index.ts",
      "src\\app\\routes\\onDemandTV\\getInitialData\\index.js",
      "src\\app\\routes\\onDemandTV\\getInitialData\\index.test.js",
      "src\\app\\routes\\topic\\getInitialData\\index.test.js",
      "src\\app\\routes\\utils\\fetchDataFromBFF\\index.test.ts",
      "src\\app\\routes\\utils\\fetchDataFromBFF\\index.ts",
      "src\\app\\routes\\utils\\fetchPageData\\index.test.js",
      "src\\app\\routes\\utils\\fetchPageData\\withCache.js"
    ],
    "outgoingDependencies": [
      {
        "source": "isomorphic-fetch",
        "resolvedPath": "isomorphic-fetch"
      },
      {
        "source": "#lib/logger.node",
        "resolvedPath": "#lib/logger.node"
      },
      {
        "source": "#lib/logger.const",
        "resolvedPath": "#lib/logger.const"
      },
      {
        "source": "#lib/statusCodes.const",
        "resolvedPath": "#lib/statusCodes.const"
      },
      {
        "source": "#app/lib/utilities/getFetchTimeouts",
        "resolvedPath": "#app/lib/utilities/getFetchTimeouts"
      },
      {
        "source": "#lib/utilities/onClient",
        "resolvedPath": "#lib/utilities/onClient"
      },
      {
        "source": "#app/lib/utilities/isLocal",
        "resolvedPath": "#app/lib/utilities/isLocal"
      },
      {
        "source": "./utils/getErrorStatusCode",
        "resolvedPath": "src\\app\\routes\\utils\\fetchPageData\\utils\\getErrorStatusCode.js"
      },
      {
        "source": "./utils/getUrl",
        "resolvedPath": "src\\app\\routes\\utils\\fetchPageData\\utils\\getUrl\\index.js"
      }
    ]
  },
  "src\\app\\routes\\utils\\fetchPageData\\index.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "#testHelpers/loggerMock",
        "resolvedPath": "#testHelpers/loggerMock"
      },
      {
        "source": "#lib/logger.const",
        "resolvedPath": "#lib/logger.const"
      },
      {
        "source": "#psammead/psammead-test-helpers/src",
        "resolvedPath": "#psammead/psammead-test-helpers/src"
      },
      {
        "source": "#app/lib/utilities/isLocal",
        "resolvedPath": "#app/lib/utilities/isLocal"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\routes\\utils\\fetchPageData\\index.js"
      }
    ]
  },
  "src\\app\\routes\\utils\\fetchPageData\\utils\\getBaseUrl\\index.js": {
    "incomingDependencies": [
      "src\\app\\routes\\utils\\fetchPageData\\utils\\getBaseUrl\\index.test.js",
      "src\\app\\routes\\utils\\fetchPageData\\utils\\getUrl\\index.js"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\routes\\utils\\fetchPageData\\utils\\getBaseUrl\\index.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "#testHelpers/config",
        "resolvedPath": "#testHelpers/config"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\routes\\utils\\fetchPageData\\utils\\getBaseUrl\\index.js"
      }
    ]
  },
  "src\\app\\routes\\utils\\fetchPageData\\utils\\getErrorStatusCode.js": {
    "incomingDependencies": [
      "src\\app\\routes\\frontPage\\getInitialData\\index.js",
      "src\\app\\routes\\liveRadio\\getInitialData\\index.js",
      "src\\app\\routes\\mostRead\\getInitialData\\index.js",
      "src\\app\\routes\\onDemandAudio\\getInitialData\\index.ts",
      "src\\app\\routes\\onDemandTV\\getInitialData\\index.js",
      "src\\app\\routes\\topic\\getInitialData\\index.js",
      "src\\app\\routes\\utils\\fetchDataFromBFF\\index.ts",
      "src\\app\\routes\\utils\\fetchPageData\\index.js"
    ],
    "outgoingDependencies": [
      {
        "source": "#lib/utilities/onClient",
        "resolvedPath": "#lib/utilities/onClient"
      },
      {
        "source": "#lib/statusCodes.const",
        "resolvedPath": "#lib/statusCodes.const"
      }
    ]
  },
  "src\\app\\routes\\utils\\fetchPageData\\utils\\getRouteProps\\fallbackServiceParam\\index.js": {
    "incomingDependencies": [
      "src\\app\\routes\\utils\\fetchPageData\\utils\\getRouteProps\\fallbackServiceParam\\index.test.js",
      "src\\app\\routes\\utils\\fetchPageData\\utils\\getRouteProps\\index.js",
      "src\\app\\routes\\utils\\fetchPageData\\utils\\getRouteProps\\index.test.js"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../../../../lib/config/services/loadableConfig",
        "resolvedPath": "src\\app\\lib\\config\\services\\loadableConfig.ts"
      }
    ]
  },
  "src\\app\\routes\\utils\\fetchPageData\\utils\\getRouteProps\\fallbackServiceParam\\index.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": ".",
        "resolvedPath": "src\\app\\routes\\utils\\fetchPageData\\utils\\getRouteProps\\fallbackServiceParam\\index.js"
      }
    ]
  },
  "src\\app\\routes\\utils\\fetchPageData\\utils\\getRouteProps\\index.js": {
    "incomingDependencies": [
      "src\\app\\routes\\utils\\fetchPageData\\utils\\getRouteProps\\index.test.js"
    ],
    "outgoingDependencies": [
      {
        "source": "react-router-config",
        "resolvedPath": "react-router-config"
      },
      {
        "source": "ramda/src/path",
        "resolvedPath": "ramda/src/path"
      },
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "#lib/utilities/variantHandler",
        "resolvedPath": "#lib/utilities/variantHandler"
      },
      {
        "source": "#app/routes/utils/isAmpPath",
        "resolvedPath": "#app/routes/utils/isAmpPath"
      },
      {
        "source": "#app/routes/utils/isAppPath",
        "resolvedPath": "#app/routes/utils/isAppPath"
      },
      {
        "source": "#app/routes/utils/isLitePath",
        "resolvedPath": "#app/routes/utils/isLitePath"
      },
      {
        "source": "#app/routes",
        "resolvedPath": "#app/routes"
      },
      {
        "source": "./fallbackServiceParam",
        "resolvedPath": "src\\app\\routes\\utils\\fetchPageData\\utils\\getRouteProps\\fallbackServiceParam\\index.js"
      }
    ]
  },
  "src\\app\\routes\\utils\\fetchPageData\\utils\\getRouteProps\\index.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react-router-config",
        "resolvedPath": "react-router-config"
      },
      {
        "source": "#app/routes/utils/isAmpPath",
        "resolvedPath": "#app/routes/utils/isAmpPath"
      },
      {
        "source": "#app/routes/utils/isAppPath",
        "resolvedPath": "#app/routes/utils/isAppPath"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\routes\\utils\\fetchPageData\\utils\\getRouteProps\\index.js"
      },
      {
        "source": "./fallbackServiceParam",
        "resolvedPath": "src\\app\\routes\\utils\\fetchPageData\\utils\\getRouteProps\\fallbackServiceParam\\index.js"
      }
    ]
  },
  "src\\app\\routes\\utils\\fetchPageData\\utils\\getUrl\\index.js": {
    "incomingDependencies": [
      "src\\app\\routes\\utils\\fetchPageData\\index.js",
      "src\\app\\routes\\utils\\fetchPageData\\utils\\getUrl\\index.test.js"
    ],
    "outgoingDependencies": [
      {
        "source": "#lib/utilities/urlParser",
        "resolvedPath": "#lib/utilities/urlParser"
      },
      {
        "source": "#lib/utilities/onClient",
        "resolvedPath": "#lib/utilities/onClient"
      },
      {
        "source": "#lib/utilities/isLive",
        "resolvedPath": "#lib/utilities/isLive"
      },
      {
        "source": "#app/lib/regex.const",
        "resolvedPath": "#app/lib/regex.const"
      },
      {
        "source": "#app/lib/utilities/getEnvConfig",
        "resolvedPath": "#app/lib/utilities/getEnvConfig"
      },
      {
        "source": "../getBaseUrl",
        "resolvedPath": "src\\app\\routes\\utils\\fetchPageData\\utils\\getBaseUrl\\index.js"
      }
    ]
  },
  "src\\app\\routes\\utils\\fetchPageData\\utils\\getUrl\\index.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": ".",
        "resolvedPath": "src\\app\\routes\\utils\\fetchPageData\\utils\\getUrl\\index.js"
      }
    ]
  },
  "src\\app\\routes\\utils\\fetchPageData\\withCache.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "lru-cache",
        "resolvedPath": "lru-cache"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\routes\\utils\\fetchPageData\\index.js"
      }
    ]
  },
  "src\\app\\routes\\utils\\getConfig\\index.js": {
    "incomingDependencies": [
      "src\\app\\routes\\article\\utils\\hasArticleRecommendations.test.ts",
      "src\\app\\routes\\utils\\getConfig\\index.test.js"
    ],
    "outgoingDependencies": [
      {
        "source": "ramda/src/path",
        "resolvedPath": "ramda/src/path"
      },
      {
        "source": "#lib/logger.node",
        "resolvedPath": "#lib/logger.node"
      }
    ]
  },
  "src\\app\\routes\\utils\\getConfig\\index.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "#testHelpers/loggerMock",
        "resolvedPath": "#testHelpers/loggerMock"
      },
      {
        "source": "../../../lib/config/services/pidgin",
        "resolvedPath": "src\\app\\lib\\config\\services\\pidgin.ts"
      },
      {
        "source": "../../../lib/config/services/serbian",
        "resolvedPath": "src\\app\\lib\\config\\services\\serbian.ts"
      },
      {
        "source": "../../../lib/config/services/uzbek",
        "resolvedPath": "src\\app\\lib\\config\\services\\uzbek.ts"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\routes\\utils\\getConfig\\index.js"
      }
    ]
  },
  "src\\app\\routes\\utils\\getEnvironment\\index.test.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": ".",
        "resolvedPath": "src\\app\\routes\\utils\\getEnvironment\\index.ts"
      }
    ]
  },
  "src\\app\\routes\\utils\\getEnvironment\\index.ts": {
    "incomingDependencies": [
      "src\\app\\routes\\utils\\certsRequired\\index.test.ts",
      "src\\app\\routes\\utils\\certsRequired\\index.ts",
      "src\\app\\routes\\utils\\fetchDataFromBFF\\index.ts",
      "src\\app\\routes\\utils\\getEnvironment\\index.test.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "#app/lib/utilities/getEnvConfig",
        "resolvedPath": "#app/lib/utilities/getEnvConfig"
      },
      {
        "source": "url-parse",
        "resolvedPath": "url-parse"
      }
    ]
  },
  "src\\app\\routes\\utils\\getPlaceholderImageUrl\\index.js": {
    "incomingDependencies": [
      "src\\app\\routes\\onDemandAudio\\getInitialData\\index.ts",
      "src\\app\\routes\\onDemandTV\\getInitialData\\index.js",
      "src\\app\\routes\\utils\\getPlaceholderImageUrl\\index.test.js"
    ],
    "outgoingDependencies": [
      {
        "source": "ramda/src/is",
        "resolvedPath": "ramda/src/is"
      },
      {
        "source": "#app/lib/utilities/getEnvConfig",
        "resolvedPath": "#app/lib/utilities/getEnvConfig"
      }
    ]
  },
  "src\\app\\routes\\utils\\getPlaceholderImageUrl\\index.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": ".",
        "resolvedPath": "src\\app\\routes\\utils\\getPlaceholderImageUrl\\index.js"
      }
    ]
  },
  "src\\app\\routes\\utils\\getRadioService\\index.js": {
    "incomingDependencies": [
      "src\\app\\routes\\liveRadio\\getInitialData\\index.js",
      "src\\app\\routes\\onDemandAudio\\getInitialData\\index.ts",
      "src\\app\\routes\\utils\\getRadioService\\index.test.js"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\routes\\utils\\getRadioService\\index.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": ".",
        "resolvedPath": "src\\app\\routes\\utils\\getRadioService\\index.js"
      }
    ]
  },
  "src\\app\\routes\\utils\\handleError\\index.ts": {
    "incomingDependencies": [
      "src\\app\\routes\\article\\getInitialData\\index.ts",
      "src\\app\\routes\\mostRead\\getInitialData\\index.js",
      "src\\app\\routes\\utils\\constructPageFetchUrl\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../models/types/fetch",
        "resolvedPath": "src\\app\\models\\types\\fetch.ts"
      }
    ]
  },
  "src\\app\\routes\\utils\\isAmpPath\\index.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "url-parse",
        "resolvedPath": "url-parse"
      },
      {
        "source": "#app/lib/regex.const",
        "resolvedPath": "#app/lib/regex.const"
      }
    ]
  },
  "src\\app\\routes\\utils\\isAmpPath\\index.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "#app/routes/utils/isAmpPath",
        "resolvedPath": "#app/routes/utils/isAmpPath"
      }
    ]
  },
  "src\\app\\routes\\utils\\isAppPath\\index.test.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "#app/routes/utils/isAppPath",
        "resolvedPath": "#app/routes/utils/isAppPath"
      }
    ]
  },
  "src\\app\\routes\\utils\\isAppPath\\index.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "url-parse",
        "resolvedPath": "url-parse"
      },
      {
        "source": "#app/lib/regex.const",
        "resolvedPath": "#app/lib/regex.const"
      }
    ]
  },
  "src\\app\\routes\\utils\\isLitePath\\index.test.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "#app/routes/utils/isLitePath",
        "resolvedPath": "#app/routes/utils/isLitePath"
      }
    ]
  },
  "src\\app\\routes\\utils\\isLitePath\\index.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "url-parse",
        "resolvedPath": "url-parse"
      },
      {
        "source": "#app/lib/regex.const",
        "resolvedPath": "#app/lib/regex.const"
      }
    ]
  },
  "src\\app\\routes\\utils\\overrideRendererOnTest\\index.js": {
    "incomingDependencies": [
      "src\\app\\routes\\liveRadio\\getInitialData\\index.js",
      "src\\app\\routes\\onDemandAudio\\getInitialData\\index.ts",
      "src\\app\\routes\\onDemandTV\\getInitialData\\index.js",
      "src\\app\\routes\\utils\\overrideRendererOnTest\\index.test.js"
    ],
    "outgoingDependencies": [
      {
        "source": "url-parse",
        "resolvedPath": "url-parse"
      },
      {
        "source": "#lib/utilities/isLive",
        "resolvedPath": "#lib/utilities/isLive"
      }
    ]
  },
  "src\\app\\routes\\utils\\overrideRendererOnTest\\index.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": ".",
        "resolvedPath": "src\\app\\routes\\utils\\overrideRendererOnTest\\index.js"
      }
    ]
  },
  "src\\app\\routes\\utils\\pageTypes.ts": {
    "incomingDependencies": [
      "src\\app\\components\\Ad\\Amp\\AdSlot\\index.tsx",
      "src\\app\\components\\ATIAnalytics\\index.test.tsx",
      "src\\app\\components\\ATIAnalytics\\params\\index.test.ts",
      "src\\app\\components\\ATIAnalytics\\params\\index.ts",
      "src\\app\\components\\ChartbeatAnalytics\\index.test.tsx",
      "src\\app\\components\\ChartbeatAnalytics\\utils\\index.test.ts",
      "src\\app\\components\\ChartbeatAnalytics\\utils\\index.ts",
      "src\\app\\components\\Disclaimer\\index.tsx",
      "src\\app\\components\\Embeds\\AmpIframeEmbed\\index.stories.tsx",
      "src\\app\\components\\Embeds\\OEmbed\\index.test.tsx",
      "src\\app\\components\\Embeds\\UnsupportedEmbed\\index.test.tsx",
      "src\\app\\components\\FrostedGlassPromo\\index.test.tsx",
      "src\\app\\components\\Image\\index.tsx",
      "src\\app\\components\\MostRead\\index.test.tsx",
      "src\\app\\components\\MostRead\\index.tsx",
      "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx",
      "src\\app\\contexts\\EventTrackingContext\\index.test.tsx",
      "src\\app\\contexts\\EventTrackingContext\\index.tsx",
      "src\\app\\contexts\\RequestContext\\getStatsPageIdentifier\\index.ts",
      "src\\app\\legacy\\components\\ScrollablePromo\\index.test.jsx",
      "src\\app\\legacy\\containers\\PageHandlers\\withData\\shouldRender\\index.js",
      "src\\app\\legacy\\psammead\\psammead-headings\\src\\index.test.jsx",
      "src\\app\\legacy\\psammead\\psammead-image\\src\\index.jsx",
      "src\\app\\legacy\\psammead\\psammead-paragraph\\src\\index.test.jsx",
      "src\\app\\legacy\\psammead\\psammead-social-embed\\src\\index.jsx",
      "src\\app\\legacy\\psammead\\psammead-social-embed\\src\\index.test.jsx",
      "src\\app\\legacy\\psammead\\psammead-timestamp\\src\\index.test.jsx",
      "src\\app\\models\\types\\global.ts",
      "src\\app\\pages\\MediaArticlePage\\index.stories.tsx",
      "src\\app\\pages\\MediaArticlePage\\index.test.tsx",
      "src\\app\\pages\\TopicPage\\index.test.jsx",
      "src\\app\\routes\\article\\getInitialData\\index.test.ts",
      "src\\app\\routes\\frontPage\\getInitialData\\index.js",
      "src\\app\\routes\\frontPage\\getInitialData\\index.test.js",
      "src\\app\\routes\\homePage\\getInitialData\\index.test.ts",
      "src\\app\\routes\\homePage\\getInitialData\\index.ts",
      "src\\app\\routes\\mostRead\\getInitialData\\index.js",
      "src\\app\\routes\\topic\\getInitialData\\index.js",
      "src\\app\\routes\\topic\\getInitialData\\index.test.js",
      "src\\app\\routes\\utils\\constructPageFetchUrl\\index.test.ts",
      "src\\app\\routes\\utils\\constructPageFetchUrl\\index.ts",
      "src\\app\\routes\\utils\\fetchDataFromBFF\\index.test.ts",
      "ws-nextjs-app\\pages\\[service]\\av-embeds\\AvEmbedsMetadata.test.tsx",
      "ws-nextjs-app\\pages\\[service]\\live\\[id]\\Post\\index.test.tsx"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\routes\\utils\\parseAvRoute\\index.test.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": ".",
        "resolvedPath": "src\\app\\routes\\utils\\parseAvRoute\\index.ts"
      }
    ]
  },
  "src\\app\\routes\\utils\\parseAvRoute\\index.ts": {
    "incomingDependencies": [
      "src\\app\\routes\\utils\\constructPageFetchUrl\\index.ts",
      "src\\app\\routes\\utils\\parseAvRoute\\index.test.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "#lib/config/services/loadableConfig",
        "resolvedPath": "#lib/config/services/loadableConfig"
      },
      {
        "source": "#app/models/types/global",
        "resolvedPath": "#app/models/types/global"
      }
    ]
  },
  "src\\app\\routes\\utils\\processRecentEpisodes\\index.jsx": {
    "incomingDependencies": [
      "cypress\\e2e\\pages\\onDemandAudio\\tests.js",
      "cypress\\e2e\\pages\\onDemandTV\\tests.js",
      "src\\app\\routes\\onDemandAudio\\getInitialData\\index.ts",
      "src\\app\\routes\\utils\\processRecentEpisodes\\index.test.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "ramda/src/path",
        "resolvedPath": "ramda/src/path"
      },
      {
        "source": "ramda/src/is",
        "resolvedPath": "ramda/src/is"
      }
    ]
  },
  "src\\app\\routes\\utils\\processRecentEpisodes\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "ramda/src/assocPath",
        "resolvedPath": "ramda/src/assocPath"
      },
      {
        "source": "#data/afrique/bbc_afrique_tv/tv_programmes/w13xttmz.json",
        "resolvedPath": "#data/afrique/bbc_afrique_tv/tv_programmes/w13xttmz.json"
      },
      {
        "source": "#data/indonesia/bbc_indonesian_radio/w13xtt0s.json",
        "resolvedPath": "#data/indonesia/bbc_indonesian_radio/w13xtt0s.json"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\routes\\utils\\processRecentEpisodes\\index.jsx"
      }
    ]
  },
  "src\\app\\routes\\utils\\regex\\index.js": {
    "incomingDependencies": [
      "src\\app\\routes\\error\\getInitialData\\index.test.js",
      "src\\app\\routes\\utils\\regex\\index.test.js",
      "src\\server\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../lib/config/services/loadableConfig",
        "resolvedPath": "src\\app\\lib\\config\\services\\loadableConfig.ts"
      },
      {
        "source": "./utils",
        "resolvedPath": "src\\app\\routes\\utils\\regex\\utils\\index.js"
      }
    ]
  },
  "src\\app\\routes\\utils\\regex\\index.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react-router-dom",
        "resolvedPath": "react-router-dom"
      },
      {
        "source": "./index",
        "resolvedPath": "src\\app\\routes\\utils\\regex\\index.js"
      },
      {
        "source": "../../../lib/config/services/loadableConfig",
        "resolvedPath": "src\\app\\lib\\config\\services\\loadableConfig.ts"
      },
      {
        "source": "./utils/index",
        "resolvedPath": "src\\app\\routes\\utils\\regex\\utils\\index.js"
      }
    ]
  },
  "src\\app\\routes\\utils\\regex\\utils\\index.js": {
    "incomingDependencies": [
      "src\\app\\routes\\utils\\regex\\index.js",
      "src\\app\\routes\\utils\\regex\\index.test.js",
      "src\\app\\routes\\utils\\regex\\utils\\index.test.js"
    ],
    "outgoingDependencies": [
      {
        "source": "#app/lib/utilities/isLive",
        "resolvedPath": "#app/lib/utilities/isLive"
      }
    ]
  },
  "src\\app\\routes\\utils\\regex\\utils\\index.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "#app/lib/utilities/isLive",
        "resolvedPath": "#app/lib/utilities/isLive"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\routes\\utils\\regex\\utils\\index.js"
      },
      {
        "source": "../../../../lib/config/services/loadableConfig",
        "resolvedPath": "src\\app\\lib\\config\\services\\loadableConfig.ts"
      }
    ]
  },
  "src\\app\\routes\\utils\\sharedDataTransformers\\addIdsToGroups\\index.js": {
    "incomingDependencies": [
      "src\\app\\routes\\utils\\sharedDataTransformers\\addIdsToGroups\\index.test.js"
    ],
    "outgoingDependencies": [
      {
        "source": "ramda/src/path",
        "resolvedPath": "ramda/src/path"
      },
      {
        "source": "ramda/src/mergeDeepLeft",
        "resolvedPath": "ramda/src/mergeDeepLeft"
      },
      {
        "source": "../addIdsToItems",
        "resolvedPath": "src\\app\\routes\\utils\\sharedDataTransformers\\addIdsToItems\\index.js"
      }
    ]
  },
  "src\\app\\routes\\utils\\sharedDataTransformers\\addIdsToGroups\\index.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": ".",
        "resolvedPath": "src\\app\\routes\\utils\\sharedDataTransformers\\addIdsToGroups\\index.js"
      }
    ]
  },
  "src\\app\\routes\\utils\\sharedDataTransformers\\addIdsToItems\\index.js": {
    "incomingDependencies": [
      "src\\app\\routes\\utils\\sharedDataTransformers\\addIdsToGroups\\index.js",
      "src\\app\\routes\\utils\\sharedDataTransformers\\addIdsToItems\\index.test.js"
    ],
    "outgoingDependencies": [
      {
        "source": "uuid",
        "resolvedPath": "uuid"
      },
      {
        "source": "ramda/src/lensPath",
        "resolvedPath": "ramda/src/lensPath"
      },
      {
        "source": "ramda/src/view",
        "resolvedPath": "ramda/src/view"
      },
      {
        "source": "ramda/src/set",
        "resolvedPath": "ramda/src/set"
      }
    ]
  },
  "src\\app\\routes\\utils\\sharedDataTransformers\\addIdsToItems\\index.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": ".",
        "resolvedPath": "src\\app\\routes\\utils\\sharedDataTransformers\\addIdsToItems\\index.js"
      }
    ]
  },
  "src\\app\\routes\\utils\\sharedDataTransformers\\filterEmptyGroupItems\\index.js": {
    "incomingDependencies": [
      "src\\app\\routes\\utils\\sharedDataTransformers\\filterEmptyGroupItems\\index.test.js"
    ],
    "outgoingDependencies": [
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      }
    ]
  },
  "src\\app\\routes\\utils\\sharedDataTransformers\\filterEmptyGroupItems\\index.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": ".",
        "resolvedPath": "src\\app\\routes\\utils\\sharedDataTransformers\\filterEmptyGroupItems\\index.js"
      }
    ]
  },
  "src\\app\\routes\\utils\\sharedDataTransformers\\filterGroupsWithoutStraplines\\index.js": {
    "incomingDependencies": [
      "src\\app\\routes\\utils\\sharedDataTransformers\\filterGroupsWithoutStraplines\\index.test.js"
    ],
    "outgoingDependencies": [
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      }
    ]
  },
  "src\\app\\routes\\utils\\sharedDataTransformers\\filterGroupsWithoutStraplines\\index.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": ".",
        "resolvedPath": "src\\app\\routes\\utils\\sharedDataTransformers\\filterGroupsWithoutStraplines\\index.js"
      }
    ]
  },
  "src\\app\\routes\\utils\\sharedDataTransformers\\filterUnknownContentTypes\\index.js": {
    "incomingDependencies": [
      "src\\app\\routes\\utils\\sharedDataTransformers\\filterUnknownContentTypes\\index.test.js"
    ],
    "outgoingDependencies": [
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      }
    ]
  },
  "src\\app\\routes\\utils\\sharedDataTransformers\\filterUnknownContentTypes\\index.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "#data/serbian/frontpage/lat.json",
        "resolvedPath": "#data/serbian/frontpage/lat.json"
      },
      {
        "source": "#data/urdu/frontpage/index.json",
        "resolvedPath": "#data/urdu/frontpage/index.json"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\routes\\utils\\sharedDataTransformers\\filterUnknownContentTypes\\index.js"
      }
    ]
  },
  "src\\app\\routes\\utils\\sharedDataTransformers\\squashTopStories\\index.js": {
    "incomingDependencies": [
      "src\\app\\routes\\utils\\sharedDataTransformers\\squashTopStories\\index.test.js"
    ],
    "outgoingDependencies": [
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      }
    ]
  },
  "src\\app\\routes\\utils\\sharedDataTransformers\\squashTopStories\\index.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": ".",
        "resolvedPath": "src\\app\\routes\\utils\\sharedDataTransformers\\squashTopStories\\index.js"
      }
    ]
  },
  "src\\app\\routes\\utils\\withRadioSchedule\\index.js": {
    "incomingDependencies": [
      "src\\app\\routes\\utils\\withRadioSchedule\\index.test.js"
    ],
    "outgoingDependencies": [
      {
        "source": "isomorphic-fetch",
        "resolvedPath": "isomorphic-fetch"
      },
      {
        "source": "#lib/logger.node",
        "resolvedPath": "#lib/logger.node"
      },
      {
        "source": "#lib/utilities/getUrlHelpers/getRadioSchedulesUrls",
        "resolvedPath": "#lib/utilities/getUrlHelpers/getRadioSchedulesUrls"
      },
      {
        "source": "#lib/utilities/urlParser",
        "resolvedPath": "#lib/utilities/urlParser"
      },
      {
        "source": "#containers/RadioSchedule/utilities/processRadioSchedule",
        "resolvedPath": "#containers/RadioSchedule/utilities/processRadioSchedule"
      },
      {
        "source": "#lib/logger.const",
        "resolvedPath": "#lib/logger.const"
      },
      {
        "source": "#app/lib/utilities/getEnvConfig",
        "resolvedPath": "#app/lib/utilities/getEnvConfig"
      }
    ]
  },
  "src\\app\\routes\\utils\\withRadioSchedule\\index.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "#testHelpers/loggerMock",
        "resolvedPath": "#testHelpers/loggerMock"
      },
      {
        "source": "#lib/logger.const",
        "resolvedPath": "#lib/logger.const"
      },
      {
        "source": "#data/hausa/bbc_hausa_radio/schedule.json",
        "resolvedPath": "#data/hausa/bbc_hausa_radio/schedule.json"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\routes\\utils\\withRadioSchedule\\index.js"
      }
    ]
  },
  "src\\app\\utilities\\pixelsToRem\\index.ts": {
    "incomingDependencies": [
      ".storybook\\DocsDecorator\\HealthFactors\\index.styles.tsx",
      ".storybook\\DocsDecorator\\HealthFactors\\SingleDoc\\index.styles.ts",
      ".storybook\\SidebarLabel\\HealthFactorsSidebarLabel\\index.styles.tsx",
      ".storybook\\StorybookComponents\\ColorList\\ColorCard\\index.styles.tsx",
      "src\\app\\components\\AmpIframe\\index.styles.tsx",
      "src\\app\\components\\Billboard\\index.styles.ts",
      "src\\app\\components\\Byline\\index.styles.tsx",
      "src\\app\\components\\Disclaimer\\index.styles.ts",
      "src\\app\\components\\EmbedConsentBanner\\ConsentBanner.styles.tsx",
      "src\\app\\components\\Embeds\\EmbedError\\index.styles.tsx",
      "src\\app\\components\\InlineLink\\index.styles.ts",
      "src\\app\\components\\ThemeProvider\\focusIndicator.ts",
      "src\\app\\components\\ThemeProvider\\fontMediaQueries.ts",
      "src\\app\\components\\ThemeProvider\\fontSizes.ts",
      "src\\app\\components\\ThemeProvider\\mediaQueries.ts",
      "src\\app\\components\\ThemeProvider\\spacings.ts",
      "src\\app\\pages\\ArticlePage\\ArticlePage.styles.ts",
      "src\\app\\pages\\MediaArticlePage\\MediaArticlePage.styles.ts",
      "src\\app\\pages\\MediaArticlePage\\PagePromoSections\\LatestMediaSection\\index.styles.ts",
      "ws-nextjs-app\\pages\\[service]\\downloads\\styles.ts",
      "ws-nextjs-app\\pages\\[service]\\live\\[id]\\Header\\styles.tsx",
      "ws-nextjs-app\\pages\\[service]\\live\\[id]\\KeyPoints\\styles.ts",
      "ws-nextjs-app\\pages\\[service]\\live\\[id]\\Post\\styles.tsx",
      "ws-nextjs-app\\pages\\[service]\\live\\[id]\\ShareButton\\styles.ts",
      "ws-nextjs-app\\pages\\[service]\\live\\[id]\\styles.ts",
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\styles.ts"
    ],
    "outgoingDependencies": []
  },
  "src\\client.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/cache",
        "resolvedPath": "@emotion/cache"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "@loadable/component",
        "resolvedPath": "@loadable/component"
      },
      {
        "source": "react-dom/client",
        "resolvedPath": "react-dom/client"
      },
      {
        "source": "#lib/joinUsTemplate",
        "resolvedPath": "#lib/joinUsTemplate"
      },
      {
        "source": "#lib/logger.node",
        "resolvedPath": "#lib/logger.node"
      },
      {
        "source": "./app/legacy/containers/App",
        "resolvedPath": "src\\app\\legacy\\containers\\App\\index.jsx"
      }
    ]
  },
  "src\\client.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "react-dom/client",
        "resolvedPath": "react-dom/client"
      },
      {
        "source": "#psammead/psammead-test-helpers/src",
        "resolvedPath": "#psammead/psammead-test-helpers/src"
      },
      {
        "source": "#testHelpers/loggerMock",
        "resolvedPath": "#testHelpers/loggerMock"
      }
    ]
  },
  "src\\clientEnvVars.js": {
    "incomingDependencies": [
      "src\\clientEnvVars.test.js"
    ],
    "outgoingDependencies": []
  },
  "src\\clientEnvVars.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "./clientEnvVars",
        "resolvedPath": "src\\clientEnvVars.js"
      }
    ]
  },
  "src\\index.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\integration\\common\\a11y.js": {
    "incomingDependencies": [
      "src\\integration\\common\\index.js"
    ],
    "outgoingDependencies": []
  },
  "src\\integration\\common\\ads.amp.js": {
    "incomingDependencies": [
      "src\\integration\\common\\index.js"
    ],
    "outgoingDependencies": []
  },
  "src\\integration\\common\\ads.canonical.js": {
    "incomingDependencies": [
      "src\\integration\\common\\index.js"
    ],
    "outgoingDependencies": []
  },
  "src\\integration\\common\\ampIframe.amp.js": {
    "incomingDependencies": [
      "src\\integration\\common\\index.js"
    ],
    "outgoingDependencies": []
  },
  "src\\integration\\common\\analytics.amp.js": {
    "incomingDependencies": [
      "src\\integration\\common\\index.js"
    ],
    "outgoingDependencies": []
  },
  "src\\integration\\common\\analytics.canonical.js": {
    "incomingDependencies": [
      "src\\integration\\common\\index.js"
    ],
    "outgoingDependencies": []
  },
  "src\\integration\\common\\appleItunesAppBanner.js": {
    "incomingDependencies": [
      "src\\integration\\common\\index.js"
    ],
    "outgoingDependencies": []
  },
  "src\\integration\\common\\core.amp.js": {
    "incomingDependencies": [
      "src\\integration\\common\\index.js"
    ],
    "outgoingDependencies": []
  },
  "src\\integration\\common\\core.canonical.js": {
    "incomingDependencies": [
      "src\\integration\\common\\index.js"
    ],
    "outgoingDependencies": []
  },
  "src\\integration\\common\\embedHtml.amp.js": {
    "incomingDependencies": [
      "src\\integration\\common\\index.js"
    ],
    "outgoingDependencies": []
  },
  "src\\integration\\common\\embedHtml.canonical.js": {
    "incomingDependencies": [
      "src\\integration\\common\\index.js"
    ],
    "outgoingDependencies": []
  },
  "src\\integration\\common\\embedImages.js": {
    "incomingDependencies": [
      "src\\integration\\common\\index.js"
    ],
    "outgoingDependencies": []
  },
  "src\\integration\\common\\flourishEmbed.amp.js": {
    "incomingDependencies": [
      "src\\integration\\common\\index.js"
    ],
    "outgoingDependencies": []
  },
  "src\\integration\\common\\flourishEmbed.canonical.js": {
    "incomingDependencies": [
      "src\\integration\\common\\index.js"
    ],
    "outgoingDependencies": []
  },
  "src\\integration\\common\\footer.amp.js": {
    "incomingDependencies": [
      "src\\integration\\common\\index.js"
    ],
    "outgoingDependencies": []
  },
  "src\\integration\\common\\footer.js": {
    "incomingDependencies": [
      "src\\integration\\common\\index.js"
    ],
    "outgoingDependencies": []
  },
  "src\\integration\\common\\header.js": {
    "incomingDependencies": [
      "src\\integration\\common\\index.js"
    ],
    "outgoingDependencies": []
  },
  "src\\integration\\common\\image.js": {
    "incomingDependencies": [
      "src\\integration\\common\\index.js"
    ],
    "outgoingDependencies": []
  },
  "src\\integration\\common\\index.js": {
    "incomingDependencies": [
      "src\\integration\\pages\\articles\\ampTests.js",
      "src\\integration\\pages\\articles\\canonicalTests.js",
      "src\\integration\\pages\\articles\\crossPlatformTests.js",
      "src\\integration\\pages\\articles\\pidginAmpIframe\\amp.test.js",
      "src\\integration\\pages\\articles\\pidginEmbedHtml\\amp.test.js",
      "src\\integration\\pages\\articles\\pidginEmbedHtml\\canonical.test.js",
      "src\\integration\\pages\\articles\\pidginEmbedImages\\amp.test.js",
      "src\\integration\\pages\\articles\\pidginEmbedImages\\canonical.test.js",
      "src\\integration\\pages\\articles\\portuguese\\amp.test.js",
      "src\\integration\\pages\\articles\\portuguese\\canonical.test.js",
      "src\\integration\\pages\\featureIdxPage\\ampTests.js",
      "src\\integration\\pages\\featureIdxPage\\canonicalTests.js",
      "src\\integration\\pages\\featureIdxPage\\crossPlatformTests.js",
      "src\\integration\\pages\\homePage\\ampTests.js",
      "src\\integration\\pages\\homePage\\canonicalTests.js",
      "src\\integration\\pages\\homePage\\crossPlatformTests.js",
      "src\\integration\\pages\\liveRadio\\canonicalTests.js",
      "src\\integration\\pages\\mediaArticlePage\\ampTests.js",
      "src\\integration\\pages\\mediaArticlePage\\canonicalTests.js",
      "src\\integration\\pages\\mediaArticlePage\\crossPlatformTests.js",
      "src\\integration\\pages\\mediaAssetPage\\ampTests.js",
      "src\\integration\\pages\\mediaAssetPage\\canonicalTests.js",
      "src\\integration\\pages\\mediaAssetPage\\crossPlatformTests.js",
      "src\\integration\\pages\\mostReadPage\\ampTests.js",
      "src\\integration\\pages\\mostReadPage\\canonicalTests.js",
      "src\\integration\\pages\\mostReadPage\\crossPlatformTests.js",
      "src\\integration\\pages\\onDemandAudioPage\\canonicalTests.js",
      "src\\integration\\pages\\onDemandAudioPage\\gahuza.expired\\canonical.test.js",
      "src\\integration\\pages\\onDemandAudioPage\\indonesia.expired\\canonical.test.js",
      "src\\integration\\pages\\onDemandAudioPage\\pashto.expired\\canonical.test.js",
      "src\\integration\\pages\\onDemandTVPage\\canonicalTests.js",
      "src\\integration\\pages\\onDemandTVPage\\pashto.expired\\canonical.test.js",
      "src\\integration\\pages\\photoGalleryPage\\ampTests.js",
      "src\\integration\\pages\\photoGalleryPage\\canonicalTests.js",
      "src\\integration\\pages\\photoGalleryPage\\crossPlatformTests.js",
      "src\\integration\\pages\\podcastPage\\canonicalTests.js",
      "src\\integration\\pages\\storyPage\\ampTests.js",
      "src\\integration\\pages\\storyPage\\canonicalTests.js",
      "src\\integration\\pages\\storyPage\\crossPlatformTests.js",
      "src\\integration\\pages\\topicPage\\canonicalTests.js",
      "src\\integration\\pages\\topicPage\\crossPlatformTests.js",
      "ws-nextjs-app\\integration\\pages\\av-embeds\\canonicalTests.js",
      "ws-nextjs-app\\integration\\pages\\live\\arabic\\canonical.test.ts",
      "ws-nextjs-app\\integration\\pages\\live\\canonicalTests.js",
      "ws-nextjs-app\\integration\\pages\\live\\serbian\\canonical.test.ts",
      "ws-nextjs-app\\integration\\pages\\send\\canonicalTests.js"
    ],
    "outgoingDependencies": [
      {
        "source": "./a11y",
        "resolvedPath": "src\\integration\\common\\a11y.js"
      },
      {
        "source": "./analytics.amp",
        "resolvedPath": "src\\integration\\common\\analytics.amp.js"
      },
      {
        "source": "./analytics.canonical",
        "resolvedPath": "src\\integration\\common\\analytics.canonical.js"
      },
      {
        "source": "./core.amp",
        "resolvedPath": "src\\integration\\common\\core.amp.js"
      },
      {
        "source": "./core.canonical",
        "resolvedPath": "src\\integration\\common\\core.canonical.js"
      },
      {
        "source": "./footer",
        "resolvedPath": "src\\integration\\common\\footer.js"
      },
      {
        "source": "./footer.amp",
        "resolvedPath": "src\\integration\\common\\footer.amp.js"
      },
      {
        "source": "./header",
        "resolvedPath": "src\\integration\\common\\header.js"
      },
      {
        "source": "./mainHeading",
        "resolvedPath": "src\\integration\\common\\mainHeading.js"
      },
      {
        "source": "./mediaPlayerAudio",
        "resolvedPath": "src\\integration\\common\\mediaPlayerAudio.js"
      },
      {
        "source": "./mediaPlayer",
        "resolvedPath": "src\\integration\\common\\mediaPlayer.js"
      },
      {
        "source": "./radioSchedule",
        "resolvedPath": "src\\integration\\common\\radioSchedule.js"
      },
      {
        "source": "./recentEpisodes",
        "resolvedPath": "src\\integration\\common\\recentEpisodes.js"
      },
      {
        "source": "./SEO",
        "resolvedPath": "src\\integration\\common\\SEO.js"
      },
      {
        "source": "./SEO.amp",
        "resolvedPath": "src\\integration\\common\\SEO.amp.js"
      },
      {
        "source": "./timestamp",
        "resolvedPath": "src\\integration\\common\\timestamp.js"
      },
      {
        "source": "./image",
        "resolvedPath": "src\\integration\\common\\image.js"
      },
      {
        "source": "./appleItunesAppBanner",
        "resolvedPath": "src\\integration\\common\\appleItunesAppBanner.js"
      },
      {
        "source": "./storyPromo",
        "resolvedPath": "src\\integration\\common\\storyPromo.js"
      },
      {
        "source": "./sections",
        "resolvedPath": "src\\integration\\common\\sections.js"
      },
      {
        "source": "./mostReadTests",
        "resolvedPath": "src\\integration\\common\\mostReadTests.js"
      },
      {
        "source": "./ads.amp",
        "resolvedPath": "src\\integration\\common\\ads.amp.js"
      },
      {
        "source": "./ads.canonical",
        "resolvedPath": "src\\integration\\common\\ads.canonical.js"
      },
      {
        "source": "./flourishEmbed.canonical",
        "resolvedPath": "src\\integration\\common\\flourishEmbed.canonical.js"
      },
      {
        "source": "./flourishEmbed.amp",
        "resolvedPath": "src\\integration\\common\\flourishEmbed.amp.js"
      },
      {
        "source": "./embedHtml.canonical",
        "resolvedPath": "src\\integration\\common\\embedHtml.canonical.js"
      },
      {
        "source": "./embedHtml.amp",
        "resolvedPath": "src\\integration\\common\\embedHtml.amp.js"
      },
      {
        "source": "./embedImages",
        "resolvedPath": "src\\integration\\common\\embedImages.js"
      },
      {
        "source": "./ampIframe.amp",
        "resolvedPath": "src\\integration\\common\\ampIframe.amp.js"
      }
    ]
  },
  "src\\integration\\common\\mainHeading.js": {
    "incomingDependencies": [
      "src\\integration\\common\\index.js"
    ],
    "outgoingDependencies": []
  },
  "src\\integration\\common\\mediaPlayer.js": {
    "incomingDependencies": [
      "src\\integration\\common\\index.js",
      "src\\integration\\pages\\articles\\afrique\\canonical.test.js",
      "src\\integration\\pages\\articles\\persianMediaPlayer\\canonical.test.js"
    ],
    "outgoingDependencies": []
  },
  "src\\integration\\common\\mediaPlayerAudio.js": {
    "incomingDependencies": [
      "src\\integration\\common\\index.js"
    ],
    "outgoingDependencies": []
  },
  "src\\integration\\common\\mostReadTests.js": {
    "incomingDependencies": [
      "src\\integration\\common\\index.js"
    ],
    "outgoingDependencies": []
  },
  "src\\integration\\common\\radioSchedule.js": {
    "incomingDependencies": [
      "src\\integration\\common\\index.js"
    ],
    "outgoingDependencies": []
  },
  "src\\integration\\common\\recentEpisodes.js": {
    "incomingDependencies": [
      "src\\integration\\common\\index.js"
    ],
    "outgoingDependencies": []
  },
  "src\\integration\\common\\sections.js": {
    "incomingDependencies": [
      "src\\integration\\common\\index.js"
    ],
    "outgoingDependencies": []
  },
  "src\\integration\\common\\SEO.amp.js": {
    "incomingDependencies": [
      "src\\integration\\common\\index.js"
    ],
    "outgoingDependencies": []
  },
  "src\\integration\\common\\SEO.js": {
    "incomingDependencies": [
      "src\\integration\\common\\index.js"
    ],
    "outgoingDependencies": []
  },
  "src\\integration\\common\\storyPromo.js": {
    "incomingDependencies": [
      "src\\integration\\common\\index.js"
    ],
    "outgoingDependencies": []
  },
  "src\\integration\\common\\timestamp.js": {
    "incomingDependencies": [
      "src\\integration\\common\\index.js"
    ],
    "outgoingDependencies": []
  },
  "src\\integration\\common\\topicTags.js": {
    "incomingDependencies": [
      "src\\integration\\pages\\articles\\news\\amp.test.js",
      "src\\integration\\pages\\articles\\portuguese\\canonical.test.js"
    ],
    "outgoingDependencies": []
  },
  "src\\integration\\integrationTestEnvironment.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\integration\\pages\\articles\\afrique\\amp.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../gistTests",
        "resolvedPath": "src\\integration\\pages\\articles\\gistTests.js"
      },
      {
        "source": "../mediaPlayerCaption",
        "resolvedPath": "src\\integration\\pages\\articles\\mediaPlayerCaption.js"
      },
      {
        "source": "../mediaPlayerPlaceholderTestsAmp",
        "resolvedPath": "src\\integration\\pages\\articles\\mediaPlayerPlaceholderTestsAmp.js"
      },
      {
        "source": "../imageCopyrightBBC",
        "resolvedPath": "src\\integration\\pages\\articles\\imageCopyrightBBC.js"
      }
    ]
  },
  "src\\integration\\pages\\articles\\afrique\\canonical.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../gistTests",
        "resolvedPath": "src\\integration\\pages\\articles\\gistTests.js"
      },
      {
        "source": "../imageCopyrightBBC",
        "resolvedPath": "src\\integration\\pages\\articles\\imageCopyrightBBC.js"
      },
      {
        "source": "../../../common/mediaPlayer",
        "resolvedPath": "src\\integration\\common\\mediaPlayer.js"
      }
    ]
  },
  "src\\integration\\pages\\articles\\ampTests.js": {
    "incomingDependencies": [
      "src\\integration\\pages\\articles\\hausa\\__snapshots__\\amp.test.js",
      "src\\integration\\pages\\articles\\news\\amp.test.js",
      "src\\integration\\pages\\articles\\persian\\amp.test.js",
      "src\\integration\\pages\\articles\\persianMediaPlayer\\amp.test.js",
      "src\\integration\\pages\\articles\\scotland\\amp.test.js"
    ],
    "outgoingDependencies": [
      {
        "source": "../../common",
        "resolvedPath": "src\\integration\\common\\index.js"
      },
      {
        "source": "./crossPlatformTests",
        "resolvedPath": "src\\integration\\pages\\articles\\crossPlatformTests.js"
      }
    ]
  },
  "src\\integration\\pages\\articles\\canonicalTests.js": {
    "incomingDependencies": [
      "src\\integration\\pages\\articles\\hausa\\__snapshots__\\canonical.test.js",
      "src\\integration\\pages\\articles\\news\\canonical.test.js",
      "src\\integration\\pages\\articles\\persian\\canonical.test.js",
      "src\\integration\\pages\\articles\\persianMediaPlayer\\canonical.test.js",
      "src\\integration\\pages\\articles\\scotland\\canonical.test.js"
    ],
    "outgoingDependencies": [
      {
        "source": "../../common",
        "resolvedPath": "src\\integration\\common\\index.js"
      },
      {
        "source": "./crossPlatformTests",
        "resolvedPath": "src\\integration\\pages\\articles\\crossPlatformTests.js"
      }
    ]
  },
  "src\\integration\\pages\\articles\\crossPlatformTests.js": {
    "incomingDependencies": [
      "src\\integration\\pages\\articles\\ampTests.js",
      "src\\integration\\pages\\articles\\canonicalTests.js"
    ],
    "outgoingDependencies": [
      {
        "source": "../../common",
        "resolvedPath": "src\\integration\\common\\index.js"
      }
    ]
  },
  "src\\integration\\pages\\articles\\gistTests.js": {
    "incomingDependencies": [
      "src\\integration\\pages\\articles\\afrique\\amp.test.js",
      "src\\integration\\pages\\articles\\afrique\\canonical.test.js"
    ],
    "outgoingDependencies": []
  },
  "src\\integration\\pages\\articles\\hausa\\__snapshots__\\amp.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../../ampTests",
        "resolvedPath": "src\\integration\\pages\\articles\\ampTests.js"
      },
      {
        "source": "../../inlineLink",
        "resolvedPath": "src\\integration\\pages\\articles\\inlineLink.js"
      }
    ]
  },
  "src\\integration\\pages\\articles\\hausa\\__snapshots__\\canonical.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../../canonicalTests",
        "resolvedPath": "src\\integration\\pages\\articles\\canonicalTests.js"
      },
      {
        "source": "../../inlineLink",
        "resolvedPath": "src\\integration\\pages\\articles\\inlineLink.js"
      }
    ]
  },
  "src\\integration\\pages\\articles\\imageCopyrightBBC.js": {
    "incomingDependencies": [
      "src\\integration\\pages\\articles\\afrique\\amp.test.js",
      "src\\integration\\pages\\articles\\afrique\\canonical.test.js"
    ],
    "outgoingDependencies": []
  },
  "src\\integration\\pages\\articles\\imageCopyrightNonBBC.js": {
    "incomingDependencies": [
      "src\\integration\\pages\\articles\\persian\\amp.test.js",
      "src\\integration\\pages\\articles\\persian\\canonical.test.js"
    ],
    "outgoingDependencies": []
  },
  "src\\integration\\pages\\articles\\inlineLink.js": {
    "incomingDependencies": [
      "src\\integration\\pages\\articles\\hausa\\__snapshots__\\amp.test.js",
      "src\\integration\\pages\\articles\\hausa\\__snapshots__\\canonical.test.js",
      "src\\integration\\pages\\articles\\news\\amp.test.js",
      "src\\integration\\pages\\articles\\news\\canonical.test.js",
      "src\\integration\\pages\\articles\\persianMediaPlayer\\amp.test.js",
      "src\\integration\\pages\\articles\\persianMediaPlayer\\canonical.test.js",
      "src\\integration\\pages\\articles\\portuguese\\amp.test.js",
      "src\\integration\\pages\\articles\\portuguese\\canonical.test.js"
    ],
    "outgoingDependencies": []
  },
  "src\\integration\\pages\\articles\\mediaPlayerCaption.js": {
    "incomingDependencies": [
      "src\\integration\\pages\\articles\\afrique\\amp.test.js",
      "src\\integration\\pages\\articles\\persianMediaPlayer\\amp.test.js"
    ],
    "outgoingDependencies": []
  },
  "src\\integration\\pages\\articles\\mediaPlayerPlaceholderTestsAmp.js": {
    "incomingDependencies": [
      "src\\integration\\pages\\articles\\afrique\\amp.test.js",
      "src\\integration\\pages\\articles\\persianMediaPlayer\\amp.test.js"
    ],
    "outgoingDependencies": []
  },
  "src\\integration\\pages\\articles\\mediaPlayerPlaceholderTestsCanonical.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\integration\\pages\\articles\\news\\amp.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../ampTests",
        "resolvedPath": "src\\integration\\pages\\articles\\ampTests.js"
      },
      {
        "source": "../inlineLink",
        "resolvedPath": "src\\integration\\pages\\articles\\inlineLink.js"
      },
      {
        "source": "../../../common/topicTags",
        "resolvedPath": "src\\integration\\common\\topicTags.js"
      }
    ]
  },
  "src\\integration\\pages\\articles\\news\\canonical.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../canonicalTests",
        "resolvedPath": "src\\integration\\pages\\articles\\canonicalTests.js"
      },
      {
        "source": "../inlineLink",
        "resolvedPath": "src\\integration\\pages\\articles\\inlineLink.js"
      }
    ]
  },
  "src\\integration\\pages\\articles\\paragraph.js": {
    "incomingDependencies": [
      "src\\integration\\pages\\articles\\persian\\amp.test.js",
      "src\\integration\\pages\\articles\\persian\\canonical.test.js",
      "src\\integration\\pages\\articles\\portuguese\\amp.test.js",
      "src\\integration\\pages\\articles\\portuguese\\canonical.test.js"
    ],
    "outgoingDependencies": []
  },
  "src\\integration\\pages\\articles\\persian\\amp.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../ampTests",
        "resolvedPath": "src\\integration\\pages\\articles\\ampTests.js"
      },
      {
        "source": "../imageCopyrightNonBBC",
        "resolvedPath": "src\\integration\\pages\\articles\\imageCopyrightNonBBC.js"
      },
      {
        "source": "../paragraph",
        "resolvedPath": "src\\integration\\pages\\articles\\paragraph.js"
      }
    ]
  },
  "src\\integration\\pages\\articles\\persian\\canonical.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../canonicalTests",
        "resolvedPath": "src\\integration\\pages\\articles\\canonicalTests.js"
      },
      {
        "source": "../imageCopyrightNonBBC",
        "resolvedPath": "src\\integration\\pages\\articles\\imageCopyrightNonBBC.js"
      },
      {
        "source": "../paragraph",
        "resolvedPath": "src\\integration\\pages\\articles\\paragraph.js"
      }
    ]
  },
  "src\\integration\\pages\\articles\\persianMediaPlayer\\amp.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../ampTests",
        "resolvedPath": "src\\integration\\pages\\articles\\ampTests.js"
      },
      {
        "source": "../mediaPlayerCaption",
        "resolvedPath": "src\\integration\\pages\\articles\\mediaPlayerCaption.js"
      },
      {
        "source": "../mediaPlayerPlaceholderTestsAmp",
        "resolvedPath": "src\\integration\\pages\\articles\\mediaPlayerPlaceholderTestsAmp.js"
      },
      {
        "source": "../inlineLink",
        "resolvedPath": "src\\integration\\pages\\articles\\inlineLink.js"
      }
    ]
  },
  "src\\integration\\pages\\articles\\persianMediaPlayer\\canonical.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../canonicalTests",
        "resolvedPath": "src\\integration\\pages\\articles\\canonicalTests.js"
      },
      {
        "source": "../inlineLink",
        "resolvedPath": "src\\integration\\pages\\articles\\inlineLink.js"
      },
      {
        "source": "../../../common/mediaPlayer",
        "resolvedPath": "src\\integration\\common\\mediaPlayer.js"
      }
    ]
  },
  "src\\integration\\pages\\articles\\pidginAmpIframe\\amp.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../../../common",
        "resolvedPath": "src\\integration\\common\\index.js"
      }
    ]
  },
  "src\\integration\\pages\\articles\\pidginEmbedHtml\\amp.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../../../common",
        "resolvedPath": "src\\integration\\common\\index.js"
      }
    ]
  },
  "src\\integration\\pages\\articles\\pidginEmbedHtml\\canonical.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../../../common",
        "resolvedPath": "src\\integration\\common\\index.js"
      }
    ]
  },
  "src\\integration\\pages\\articles\\pidginEmbedImages\\amp.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../../../common",
        "resolvedPath": "src\\integration\\common\\index.js"
      }
    ]
  },
  "src\\integration\\pages\\articles\\pidginEmbedImages\\canonical.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../../../common",
        "resolvedPath": "src\\integration\\common\\index.js"
      }
    ]
  },
  "src\\integration\\pages\\articles\\portuguese\\amp.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../../../common",
        "resolvedPath": "src\\integration\\common\\index.js"
      },
      {
        "source": "../inlineLink",
        "resolvedPath": "src\\integration\\pages\\articles\\inlineLink.js"
      },
      {
        "source": "../paragraph",
        "resolvedPath": "src\\integration\\pages\\articles\\paragraph.js"
      }
    ]
  },
  "src\\integration\\pages\\articles\\portuguese\\canonical.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../../../common/topicTags",
        "resolvedPath": "src\\integration\\common\\topicTags.js"
      },
      {
        "source": "../../../common",
        "resolvedPath": "src\\integration\\common\\index.js"
      },
      {
        "source": "../inlineLink",
        "resolvedPath": "src\\integration\\pages\\articles\\inlineLink.js"
      },
      {
        "source": "../paragraph",
        "resolvedPath": "src\\integration\\pages\\articles\\paragraph.js"
      }
    ]
  },
  "src\\integration\\pages\\articles\\scotland\\amp.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../ampTests",
        "resolvedPath": "src\\integration\\pages\\articles\\ampTests.js"
      }
    ]
  },
  "src\\integration\\pages\\articles\\scotland\\canonical.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../canonicalTests",
        "resolvedPath": "src\\integration\\pages\\articles\\canonicalTests.js"
      }
    ]
  },
  "src\\integration\\pages\\featureIdxPage\\afrique\\amp.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../ampTests",
        "resolvedPath": "src\\integration\\pages\\featureIdxPage\\ampTests.js"
      }
    ]
  },
  "src\\integration\\pages\\featureIdxPage\\afrique\\canonical.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../canonicalTests",
        "resolvedPath": "src\\integration\\pages\\featureIdxPage\\canonicalTests.js"
      }
    ]
  },
  "src\\integration\\pages\\featureIdxPage\\ampTests.js": {
    "incomingDependencies": [
      "src\\integration\\pages\\featureIdxPage\\afrique\\amp.test.js",
      "src\\integration\\pages\\featureIdxPage\\urdu\\amp.test.js"
    ],
    "outgoingDependencies": [
      {
        "source": "./crossPlatformTests",
        "resolvedPath": "src\\integration\\pages\\featureIdxPage\\crossPlatformTests.js"
      },
      {
        "source": "../../common",
        "resolvedPath": "src\\integration\\common\\index.js"
      }
    ]
  },
  "src\\integration\\pages\\featureIdxPage\\canonicalTests.js": {
    "incomingDependencies": [
      "src\\integration\\pages\\featureIdxPage\\afrique\\canonical.test.js",
      "src\\integration\\pages\\featureIdxPage\\urdu\\canonical.test.js"
    ],
    "outgoingDependencies": [
      {
        "source": "./crossPlatformTests",
        "resolvedPath": "src\\integration\\pages\\featureIdxPage\\crossPlatformTests.js"
      },
      {
        "source": "../../common",
        "resolvedPath": "src\\integration\\common\\index.js"
      }
    ]
  },
  "src\\integration\\pages\\featureIdxPage\\crossPlatformTests.js": {
    "incomingDependencies": [
      "src\\integration\\pages\\featureIdxPage\\ampTests.js",
      "src\\integration\\pages\\featureIdxPage\\canonicalTests.js"
    ],
    "outgoingDependencies": [
      {
        "source": "../../common",
        "resolvedPath": "src\\integration\\common\\index.js"
      }
    ]
  },
  "src\\integration\\pages\\featureIdxPage\\urdu\\amp.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../ampTests",
        "resolvedPath": "src\\integration\\pages\\featureIdxPage\\ampTests.js"
      }
    ]
  },
  "src\\integration\\pages\\featureIdxPage\\urdu\\canonical.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../canonicalTests",
        "resolvedPath": "src\\integration\\pages\\featureIdxPage\\canonicalTests.js"
      }
    ]
  },
  "src\\integration\\pages\\homePage\\ampTests.js": {
    "incomingDependencies": [
      "src\\integration\\pages\\homePage\\arabic\\amp.test.js",
      "src\\integration\\pages\\homePage\\hindi\\amp.test.js",
      "src\\integration\\pages\\homePage\\kyrgyz\\amp.test.js",
      "src\\integration\\pages\\homePage\\serbianCyr\\amp.test.js",
      "src\\integration\\pages\\homePage\\serbianLat\\amp.test.js"
    ],
    "outgoingDependencies": [
      {
        "source": "../../common",
        "resolvedPath": "src\\integration\\common\\index.js"
      },
      {
        "source": "./crossPlatformTests",
        "resolvedPath": "src\\integration\\pages\\homePage\\crossPlatformTests.js"
      }
    ]
  },
  "src\\integration\\pages\\homePage\\arabic\\amp.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../ampTests",
        "resolvedPath": "src\\integration\\pages\\homePage\\ampTests.js"
      },
      {
        "source": "../../../../../data/arabic/homePage/index.json",
        "resolvedPath": "..\\..\\data\\arabic\\homePage\\index.json"
      }
    ]
  },
  "src\\integration\\pages\\homePage\\arabic\\canonical.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../canonicalTests",
        "resolvedPath": "src\\integration\\pages\\homePage\\canonicalTests.js"
      },
      {
        "source": "../../../../../data/arabic/homePage/index.json",
        "resolvedPath": "..\\..\\data\\arabic\\homePage\\index.json"
      }
    ]
  },
  "src\\integration\\pages\\homePage\\canonicalTests.js": {
    "incomingDependencies": [
      "src\\integration\\pages\\homePage\\arabic\\canonical.test.js",
      "src\\integration\\pages\\homePage\\hindi\\canonical.test.js",
      "src\\integration\\pages\\homePage\\kyrgyz\\canonical.test.js",
      "src\\integration\\pages\\homePage\\serbianCyr\\canonical.test.js",
      "src\\integration\\pages\\homePage\\serbianLat\\canonical.test.js"
    ],
    "outgoingDependencies": [
      {
        "source": "../../common",
        "resolvedPath": "src\\integration\\common\\index.js"
      },
      {
        "source": "./crossPlatformTests",
        "resolvedPath": "src\\integration\\pages\\homePage\\crossPlatformTests.js"
      }
    ]
  },
  "src\\integration\\pages\\homePage\\crossPlatformTests.js": {
    "incomingDependencies": [
      "src\\integration\\pages\\homePage\\ampTests.js",
      "src\\integration\\pages\\homePage\\canonicalTests.js"
    ],
    "outgoingDependencies": [
      {
        "source": "../../common",
        "resolvedPath": "src\\integration\\common\\index.js"
      },
      {
        "source": "./pageContentTests",
        "resolvedPath": "src\\integration\\pages\\homePage\\pageContentTests.js"
      },
      {
        "source": "./messageBannerTests",
        "resolvedPath": "src\\integration\\pages\\homePage\\messageBannerTests.js"
      }
    ]
  },
  "src\\integration\\pages\\homePage\\hindi\\amp.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../ampTests",
        "resolvedPath": "src\\integration\\pages\\homePage\\ampTests.js"
      },
      {
        "source": "../../../../../data/hindi/homePage/index.json",
        "resolvedPath": "..\\..\\data\\hindi\\homePage\\index.json"
      }
    ]
  },
  "src\\integration\\pages\\homePage\\hindi\\canonical.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../canonicalTests",
        "resolvedPath": "src\\integration\\pages\\homePage\\canonicalTests.js"
      },
      {
        "source": "../../../../../data/hindi/homePage/index.json",
        "resolvedPath": "..\\..\\data\\hindi\\homePage\\index.json"
      }
    ]
  },
  "src\\integration\\pages\\homePage\\kyrgyz\\amp.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../ampTests",
        "resolvedPath": "src\\integration\\pages\\homePage\\ampTests.js"
      },
      {
        "source": "../../../../../data/kyrgyz/homePage/index.json",
        "resolvedPath": "..\\..\\data\\kyrgyz\\homePage\\index.json"
      }
    ]
  },
  "src\\integration\\pages\\homePage\\kyrgyz\\canonical.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../canonicalTests",
        "resolvedPath": "src\\integration\\pages\\homePage\\canonicalTests.js"
      },
      {
        "source": "../../../../../data/kyrgyz/homePage/index.json",
        "resolvedPath": "..\\..\\data\\kyrgyz\\homePage\\index.json"
      }
    ]
  },
  "src\\integration\\pages\\homePage\\messageBannerTests.js": {
    "incomingDependencies": [
      "src\\integration\\pages\\homePage\\crossPlatformTests.js"
    ],
    "outgoingDependencies": []
  },
  "src\\integration\\pages\\homePage\\pageContentTests.js": {
    "incomingDependencies": [
      "src\\integration\\pages\\homePage\\crossPlatformTests.js"
    ],
    "outgoingDependencies": []
  },
  "src\\integration\\pages\\homePage\\serbianCyr\\amp.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../ampTests",
        "resolvedPath": "src\\integration\\pages\\homePage\\ampTests.js"
      },
      {
        "source": "../../../../../data/serbian/homePage/cyr.json",
        "resolvedPath": "..\\..\\data\\serbian\\homePage\\cyr.json"
      }
    ]
  },
  "src\\integration\\pages\\homePage\\serbianCyr\\canonical.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../canonicalTests",
        "resolvedPath": "src\\integration\\pages\\homePage\\canonicalTests.js"
      },
      {
        "source": "../../../../../data/serbian/homePage/cyr.json",
        "resolvedPath": "..\\..\\data\\serbian\\homePage\\cyr.json"
      }
    ]
  },
  "src\\integration\\pages\\homePage\\serbianLat\\amp.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../ampTests",
        "resolvedPath": "src\\integration\\pages\\homePage\\ampTests.js"
      },
      {
        "source": "../../../../../data/serbian/homePage/lat.json",
        "resolvedPath": "..\\..\\data\\serbian\\homePage\\lat.json"
      }
    ]
  },
  "src\\integration\\pages\\homePage\\serbianLat\\canonical.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../canonicalTests",
        "resolvedPath": "src\\integration\\pages\\homePage\\canonicalTests.js"
      },
      {
        "source": "../../../../../data/serbian/homePage/lat.json",
        "resolvedPath": "..\\..\\data\\serbian\\homePage\\lat.json"
      }
    ]
  },
  "src\\integration\\pages\\liveRadio\\canonicalTests.js": {
    "incomingDependencies": [
      "src\\integration\\pages\\liveRadio\\gahuza\\canonical.test.js",
      "src\\integration\\pages\\liveRadio\\korean\\canonical.test.js",
      "src\\integration\\pages\\liveRadio\\sinhala\\canonical.test.js"
    ],
    "outgoingDependencies": [
      {
        "source": "../../common",
        "resolvedPath": "src\\integration\\common\\index.js"
      }
    ]
  },
  "src\\integration\\pages\\liveRadio\\gahuza\\canonical.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../canonicalTests",
        "resolvedPath": "src\\integration\\pages\\liveRadio\\canonicalTests.js"
      }
    ]
  },
  "src\\integration\\pages\\liveRadio\\korean\\canonical.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../canonicalTests",
        "resolvedPath": "src\\integration\\pages\\liveRadio\\canonicalTests.js"
      }
    ]
  },
  "src\\integration\\pages\\liveRadio\\sinhala\\canonical.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../canonicalTests",
        "resolvedPath": "src\\integration\\pages\\liveRadio\\canonicalTests.js"
      }
    ]
  },
  "src\\integration\\pages\\mediaArticlePage\\ampTests.js": {
    "incomingDependencies": [
      "src\\integration\\pages\\mediaArticlePage\\pidgin\\amp.test.js"
    ],
    "outgoingDependencies": [
      {
        "source": "../../common",
        "resolvedPath": "src\\integration\\common\\index.js"
      },
      {
        "source": "./crossPlatformTests",
        "resolvedPath": "src\\integration\\pages\\mediaArticlePage\\crossPlatformTests.js"
      }
    ]
  },
  "src\\integration\\pages\\mediaArticlePage\\canonicalTests.js": {
    "incomingDependencies": [
      "src\\integration\\pages\\mediaArticlePage\\pidgin\\canonical.test.js"
    ],
    "outgoingDependencies": [
      {
        "source": "../../common",
        "resolvedPath": "src\\integration\\common\\index.js"
      },
      {
        "source": "./crossPlatformTests",
        "resolvedPath": "src\\integration\\pages\\mediaArticlePage\\crossPlatformTests.js"
      }
    ]
  },
  "src\\integration\\pages\\mediaArticlePage\\crossPlatformTests.js": {
    "incomingDependencies": [
      "src\\integration\\pages\\mediaArticlePage\\ampTests.js",
      "src\\integration\\pages\\mediaArticlePage\\canonicalTests.js"
    ],
    "outgoingDependencies": [
      {
        "source": "../../common",
        "resolvedPath": "src\\integration\\common\\index.js"
      }
    ]
  },
  "src\\integration\\pages\\mediaArticlePage\\pidgin\\amp.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../ampTests",
        "resolvedPath": "src\\integration\\pages\\mediaArticlePage\\ampTests.js"
      }
    ]
  },
  "src\\integration\\pages\\mediaArticlePage\\pidgin\\canonical.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../canonicalTests",
        "resolvedPath": "src\\integration\\pages\\mediaArticlePage\\canonicalTests.js"
      }
    ]
  },
  "src\\integration\\pages\\mediaAssetPage\\ampTests.js": {
    "incomingDependencies": [
      "src\\integration\\pages\\mediaAssetPage\\arabicTC2\\amp.test.js",
      "src\\integration\\pages\\mediaAssetPage\\persian\\amp.test.js",
      "src\\integration\\pages\\mediaAssetPage\\pidgin\\amp.test.js"
    ],
    "outgoingDependencies": [
      {
        "source": "../../common",
        "resolvedPath": "src\\integration\\common\\index.js"
      },
      {
        "source": "./crossPlatformTests",
        "resolvedPath": "src\\integration\\pages\\mediaAssetPage\\crossPlatformTests.js"
      }
    ]
  },
  "src\\integration\\pages\\mediaAssetPage\\arabicTC2\\amp.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../ampTests",
        "resolvedPath": "src\\integration\\pages\\mediaAssetPage\\ampTests.js"
      }
    ]
  },
  "src\\integration\\pages\\mediaAssetPage\\arabicTC2\\canonical.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../canonicalTests",
        "resolvedPath": "src\\integration\\pages\\mediaAssetPage\\canonicalTests.js"
      }
    ]
  },
  "src\\integration\\pages\\mediaAssetPage\\canonicalTests.js": {
    "incomingDependencies": [
      "src\\integration\\pages\\mediaAssetPage\\arabicTC2\\canonical.test.js",
      "src\\integration\\pages\\mediaAssetPage\\persian\\canonical.test.js",
      "src\\integration\\pages\\mediaAssetPage\\pidgin\\canonical.test.js"
    ],
    "outgoingDependencies": [
      {
        "source": "../../common",
        "resolvedPath": "src\\integration\\common\\index.js"
      },
      {
        "source": "./crossPlatformTests",
        "resolvedPath": "src\\integration\\pages\\mediaAssetPage\\crossPlatformTests.js"
      }
    ]
  },
  "src\\integration\\pages\\mediaAssetPage\\crossPlatformTests.js": {
    "incomingDependencies": [
      "src\\integration\\pages\\mediaAssetPage\\ampTests.js",
      "src\\integration\\pages\\mediaAssetPage\\canonicalTests.js"
    ],
    "outgoingDependencies": [
      {
        "source": "../../common",
        "resolvedPath": "src\\integration\\common\\index.js"
      }
    ]
  },
  "src\\integration\\pages\\mediaAssetPage\\persian\\amp.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../ampTests",
        "resolvedPath": "src\\integration\\pages\\mediaAssetPage\\ampTests.js"
      }
    ]
  },
  "src\\integration\\pages\\mediaAssetPage\\persian\\canonical.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../canonicalTests",
        "resolvedPath": "src\\integration\\pages\\mediaAssetPage\\canonicalTests.js"
      }
    ]
  },
  "src\\integration\\pages\\mediaAssetPage\\pidgin\\amp.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../ampTests",
        "resolvedPath": "src\\integration\\pages\\mediaAssetPage\\ampTests.js"
      }
    ]
  },
  "src\\integration\\pages\\mediaAssetPage\\pidgin\\canonical.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../canonicalTests",
        "resolvedPath": "src\\integration\\pages\\mediaAssetPage\\canonicalTests.js"
      }
    ]
  },
  "src\\integration\\pages\\mostReadPage\\ampTests.js": {
    "incomingDependencies": [
      "src\\integration\\pages\\mostReadPage\\mundo\\amp.test.js",
      "src\\integration\\pages\\mostReadPage\\vietnamese\\amp.test.js"
    ],
    "outgoingDependencies": [
      {
        "source": "../../common",
        "resolvedPath": "src\\integration\\common\\index.js"
      },
      {
        "source": "./crossPlatformTests",
        "resolvedPath": "src\\integration\\pages\\mostReadPage\\crossPlatformTests.js"
      }
    ]
  },
  "src\\integration\\pages\\mostReadPage\\canonicalTests.js": {
    "incomingDependencies": [
      "src\\integration\\pages\\mostReadPage\\mundo\\canonical.test.js",
      "src\\integration\\pages\\mostReadPage\\vietnamese\\canonical.test.js"
    ],
    "outgoingDependencies": [
      {
        "source": "../../common",
        "resolvedPath": "src\\integration\\common\\index.js"
      },
      {
        "source": "./crossPlatformTests",
        "resolvedPath": "src\\integration\\pages\\mostReadPage\\crossPlatformTests.js"
      }
    ]
  },
  "src\\integration\\pages\\mostReadPage\\crossPlatformTests.js": {
    "incomingDependencies": [
      "src\\integration\\pages\\mostReadPage\\ampTests.js",
      "src\\integration\\pages\\mostReadPage\\canonicalTests.js"
    ],
    "outgoingDependencies": [
      {
        "source": "../../common",
        "resolvedPath": "src\\integration\\common\\index.js"
      }
    ]
  },
  "src\\integration\\pages\\mostReadPage\\mundo\\amp.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../ampTests",
        "resolvedPath": "src\\integration\\pages\\mostReadPage\\ampTests.js"
      }
    ]
  },
  "src\\integration\\pages\\mostReadPage\\mundo\\canonical.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../canonicalTests",
        "resolvedPath": "src\\integration\\pages\\mostReadPage\\canonicalTests.js"
      }
    ]
  },
  "src\\integration\\pages\\mostReadPage\\vietnamese\\amp.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../ampTests",
        "resolvedPath": "src\\integration\\pages\\mostReadPage\\ampTests.js"
      }
    ]
  },
  "src\\integration\\pages\\mostReadPage\\vietnamese\\canonical.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../canonicalTests",
        "resolvedPath": "src\\integration\\pages\\mostReadPage\\canonicalTests.js"
      }
    ]
  },
  "src\\integration\\pages\\onDemandAudioPage\\canonicalTests.js": {
    "incomingDependencies": [
      "src\\integration\\pages\\onDemandAudioPage\\indonesia\\canonical.test.js",
      "src\\integration\\pages\\onDemandAudioPage\\pashto\\canonical.test.js",
      "src\\integration\\pages\\onDemandAudioPage\\pashtoBrand\\canonical.test.js"
    ],
    "outgoingDependencies": [
      {
        "source": "../../common",
        "resolvedPath": "src\\integration\\common\\index.js"
      },
      {
        "source": "./commonEpisodeTests",
        "resolvedPath": "src\\integration\\pages\\onDemandAudioPage\\commonEpisodeTests.js"
      }
    ]
  },
  "src\\integration\\pages\\onDemandAudioPage\\commonEpisodeTests.js": {
    "incomingDependencies": [
      "src\\integration\\pages\\onDemandAudioPage\\canonicalTests.js",
      "src\\integration\\pages\\onDemandAudioPage\\expiredEpisodeTests.js",
      "src\\integration\\pages\\onDemandAudioPage\\gahuza.expired\\canonical.test.js",
      "src\\integration\\pages\\onDemandAudioPage\\indonesia.expired\\canonical.test.js",
      "src\\integration\\pages\\onDemandAudioPage\\pashto.expired\\canonical.test.js"
    ],
    "outgoingDependencies": []
  },
  "src\\integration\\pages\\onDemandAudioPage\\expiredEpisodeTests.js": {
    "incomingDependencies": [
      "src\\integration\\pages\\onDemandAudioPage\\gahuza.expired\\canonical.test.js",
      "src\\integration\\pages\\onDemandAudioPage\\indonesia.expired\\canonical.test.js",
      "src\\integration\\pages\\onDemandAudioPage\\pashto.expired\\canonical.test.js"
    ],
    "outgoingDependencies": [
      {
        "source": "./commonEpisodeTests",
        "resolvedPath": "src\\integration\\pages\\onDemandAudioPage\\commonEpisodeTests.js"
      }
    ]
  },
  "src\\integration\\pages\\onDemandAudioPage\\gahuza.expired\\canonical.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../expiredEpisodeTests",
        "resolvedPath": "src\\integration\\pages\\onDemandAudioPage\\expiredEpisodeTests.js"
      },
      {
        "source": "../../../common",
        "resolvedPath": "src\\integration\\common\\index.js"
      },
      {
        "source": "../commonEpisodeTests",
        "resolvedPath": "src\\integration\\pages\\onDemandAudioPage\\commonEpisodeTests.js"
      }
    ]
  },
  "src\\integration\\pages\\onDemandAudioPage\\indonesia\\canonical.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../canonicalTests",
        "resolvedPath": "src\\integration\\pages\\onDemandAudioPage\\canonicalTests.js"
      }
    ]
  },
  "src\\integration\\pages\\onDemandAudioPage\\indonesia.expired\\canonical.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../../../common",
        "resolvedPath": "src\\integration\\common\\index.js"
      },
      {
        "source": "../commonEpisodeTests",
        "resolvedPath": "src\\integration\\pages\\onDemandAudioPage\\commonEpisodeTests.js"
      },
      {
        "source": "../expiredEpisodeTests",
        "resolvedPath": "src\\integration\\pages\\onDemandAudioPage\\expiredEpisodeTests.js"
      }
    ]
  },
  "src\\integration\\pages\\onDemandAudioPage\\pashto\\canonical.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../canonicalTests",
        "resolvedPath": "src\\integration\\pages\\onDemandAudioPage\\canonicalTests.js"
      }
    ]
  },
  "src\\integration\\pages\\onDemandAudioPage\\pashto.expired\\canonical.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../../../common",
        "resolvedPath": "src\\integration\\common\\index.js"
      },
      {
        "source": "../commonEpisodeTests",
        "resolvedPath": "src\\integration\\pages\\onDemandAudioPage\\commonEpisodeTests.js"
      },
      {
        "source": "../expiredEpisodeTests",
        "resolvedPath": "src\\integration\\pages\\onDemandAudioPage\\expiredEpisodeTests.js"
      }
    ]
  },
  "src\\integration\\pages\\onDemandAudioPage\\pashtoBrand\\canonical.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../canonicalTests",
        "resolvedPath": "src\\integration\\pages\\onDemandAudioPage\\canonicalTests.js"
      }
    ]
  },
  "src\\integration\\pages\\onDemandTVPage\\canonicalTests.js": {
    "incomingDependencies": [
      "src\\integration\\pages\\onDemandTVPage\\hausa\\canonical.test.js",
      "src\\integration\\pages\\onDemandTVPage\\pashtoBrand\\canonical.test.js"
    ],
    "outgoingDependencies": [
      {
        "source": "../../common",
        "resolvedPath": "src\\integration\\common\\index.js"
      },
      {
        "source": "./commonEpisodeTests",
        "resolvedPath": "src\\integration\\pages\\onDemandTVPage\\commonEpisodeTests.js"
      }
    ]
  },
  "src\\integration\\pages\\onDemandTVPage\\commonEpisodeTests.js": {
    "incomingDependencies": [
      "src\\integration\\pages\\onDemandTVPage\\canonicalTests.js",
      "src\\integration\\pages\\onDemandTVPage\\expiredEpisodeTests.js",
      "src\\integration\\pages\\onDemandTVPage\\pashto.expired\\canonical.test.js"
    ],
    "outgoingDependencies": []
  },
  "src\\integration\\pages\\onDemandTVPage\\expiredEpisodeTests.js": {
    "incomingDependencies": [
      "src\\integration\\pages\\onDemandTVPage\\pashto.expired\\canonical.test.js"
    ],
    "outgoingDependencies": [
      {
        "source": "./commonEpisodeTests",
        "resolvedPath": "src\\integration\\pages\\onDemandTVPage\\commonEpisodeTests.js"
      }
    ]
  },
  "src\\integration\\pages\\onDemandTVPage\\hausa\\canonical.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../canonicalTests",
        "resolvedPath": "src\\integration\\pages\\onDemandTVPage\\canonicalTests.js"
      }
    ]
  },
  "src\\integration\\pages\\onDemandTVPage\\pashto.expired\\canonical.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../expiredEpisodeTests",
        "resolvedPath": "src\\integration\\pages\\onDemandTVPage\\expiredEpisodeTests.js"
      },
      {
        "source": "../commonEpisodeTests",
        "resolvedPath": "src\\integration\\pages\\onDemandTVPage\\commonEpisodeTests.js"
      },
      {
        "source": "../../../common",
        "resolvedPath": "src\\integration\\common\\index.js"
      }
    ]
  },
  "src\\integration\\pages\\onDemandTVPage\\pashtoBrand\\canonical.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../canonicalTests",
        "resolvedPath": "src\\integration\\pages\\onDemandTVPage\\canonicalTests.js"
      }
    ]
  },
  "src\\integration\\pages\\photoGalleryPage\\ampTests.js": {
    "incomingDependencies": [
      "src\\integration\\pages\\photoGalleryPage\\mundo\\amp.test.js",
      "src\\integration\\pages\\photoGalleryPage\\thai\\amp.test.js"
    ],
    "outgoingDependencies": [
      {
        "source": "../../common",
        "resolvedPath": "src\\integration\\common\\index.js"
      },
      {
        "source": "./crossPlatformTests",
        "resolvedPath": "src\\integration\\pages\\photoGalleryPage\\crossPlatformTests.js"
      }
    ]
  },
  "src\\integration\\pages\\photoGalleryPage\\canonicalTests.js": {
    "incomingDependencies": [
      "src\\integration\\pages\\photoGalleryPage\\mundo\\canonical.test.js",
      "src\\integration\\pages\\photoGalleryPage\\thai\\canonical.test.js"
    ],
    "outgoingDependencies": [
      {
        "source": "../../common",
        "resolvedPath": "src\\integration\\common\\index.js"
      },
      {
        "source": "./crossPlatformTests",
        "resolvedPath": "src\\integration\\pages\\photoGalleryPage\\crossPlatformTests.js"
      }
    ]
  },
  "src\\integration\\pages\\photoGalleryPage\\crossPlatformTests.js": {
    "incomingDependencies": [
      "src\\integration\\pages\\photoGalleryPage\\ampTests.js",
      "src\\integration\\pages\\photoGalleryPage\\canonicalTests.js"
    ],
    "outgoingDependencies": [
      {
        "source": "../../common",
        "resolvedPath": "src\\integration\\common\\index.js"
      }
    ]
  },
  "src\\integration\\pages\\photoGalleryPage\\mundo\\amp.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../ampTests",
        "resolvedPath": "src\\integration\\pages\\photoGalleryPage\\ampTests.js"
      }
    ]
  },
  "src\\integration\\pages\\photoGalleryPage\\mundo\\canonical.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../canonicalTests",
        "resolvedPath": "src\\integration\\pages\\photoGalleryPage\\canonicalTests.js"
      }
    ]
  },
  "src\\integration\\pages\\photoGalleryPage\\thai\\amp.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../ampTests",
        "resolvedPath": "src\\integration\\pages\\photoGalleryPage\\ampTests.js"
      }
    ]
  },
  "src\\integration\\pages\\photoGalleryPage\\thai\\canonical.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../canonicalTests",
        "resolvedPath": "src\\integration\\pages\\photoGalleryPage\\canonicalTests.js"
      }
    ]
  },
  "src\\integration\\pages\\podcastPage\\canonicalTests.js": {
    "incomingDependencies": [
      "src\\integration\\pages\\podcastPage\\portugueseBrand\\canonical.test.js",
      "src\\integration\\pages\\podcastPage\\portugueseEpisode\\canonical.test.js"
    ],
    "outgoingDependencies": [
      {
        "source": "../../common",
        "resolvedPath": "src\\integration\\common\\index.js"
      },
      {
        "source": "./commonEpisodeTests",
        "resolvedPath": "src\\integration\\pages\\podcastPage\\commonEpisodeTests.js"
      }
    ]
  },
  "src\\integration\\pages\\podcastPage\\commonEpisodeTests.js": {
    "incomingDependencies": [
      "src\\integration\\pages\\podcastPage\\canonicalTests.js"
    ],
    "outgoingDependencies": []
  },
  "src\\integration\\pages\\podcastPage\\portugueseBrand\\canonical.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../canonicalTests",
        "resolvedPath": "src\\integration\\pages\\podcastPage\\canonicalTests.js"
      }
    ]
  },
  "src\\integration\\pages\\podcastPage\\portugueseEpisode\\canonical.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../canonicalTests",
        "resolvedPath": "src\\integration\\pages\\podcastPage\\canonicalTests.js"
      }
    ]
  },
  "src\\integration\\pages\\storyPage\\ampIncludeTests.js": {
    "incomingDependencies": [
      "src\\integration\\pages\\storyPage\\gahuza\\amp.test.js"
    ],
    "outgoingDependencies": []
  },
  "src\\integration\\pages\\storyPage\\ampTests.js": {
    "incomingDependencies": [
      "src\\integration\\pages\\storyPage\\hausa\\amp.test.js",
      "src\\integration\\pages\\storyPage\\kyrgyz\\amp.test.js",
      "src\\integration\\pages\\storyPage\\mundo\\amp.test.js"
    ],
    "outgoingDependencies": [
      {
        "source": "../../common",
        "resolvedPath": "src\\integration\\common\\index.js"
      },
      {
        "source": "./crossPlatformTests",
        "resolvedPath": "src\\integration\\pages\\storyPage\\crossPlatformTests.js"
      }
    ]
  },
  "src\\integration\\pages\\storyPage\\canonicalIncludeTests.js": {
    "incomingDependencies": [
      "src\\integration\\pages\\storyPage\\gahuza\\canonical.test.js"
    ],
    "outgoingDependencies": []
  },
  "src\\integration\\pages\\storyPage\\canonicalTests.js": {
    "incomingDependencies": [
      "src\\integration\\pages\\storyPage\\hausa\\canonical.test.js",
      "src\\integration\\pages\\storyPage\\kyrgyz\\canonical.test.js",
      "src\\integration\\pages\\storyPage\\mundo\\canonical.test.js"
    ],
    "outgoingDependencies": [
      {
        "source": "../../common",
        "resolvedPath": "src\\integration\\common\\index.js"
      },
      {
        "source": "./crossPlatformTests",
        "resolvedPath": "src\\integration\\pages\\storyPage\\crossPlatformTests.js"
      }
    ]
  },
  "src\\integration\\pages\\storyPage\\crossPlatformTests.js": {
    "incomingDependencies": [
      "src\\integration\\pages\\storyPage\\ampTests.js",
      "src\\integration\\pages\\storyPage\\canonicalTests.js"
    ],
    "outgoingDependencies": [
      {
        "source": "../../common",
        "resolvedPath": "src\\integration\\common\\index.js"
      }
    ]
  },
  "src\\integration\\pages\\storyPage\\gahuza\\amp.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../ampIncludeTests",
        "resolvedPath": "src\\integration\\pages\\storyPage\\ampIncludeTests.js"
      }
    ]
  },
  "src\\integration\\pages\\storyPage\\gahuza\\canonical.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../canonicalIncludeTests",
        "resolvedPath": "src\\integration\\pages\\storyPage\\canonicalIncludeTests.js"
      }
    ]
  },
  "src\\integration\\pages\\storyPage\\hausa\\amp.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../ampTests",
        "resolvedPath": "src\\integration\\pages\\storyPage\\ampTests.js"
      }
    ]
  },
  "src\\integration\\pages\\storyPage\\hausa\\canonical.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../canonicalTests",
        "resolvedPath": "src\\integration\\pages\\storyPage\\canonicalTests.js"
      }
    ]
  },
  "src\\integration\\pages\\storyPage\\kyrgyz\\amp.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../ampTests",
        "resolvedPath": "src\\integration\\pages\\storyPage\\ampTests.js"
      }
    ]
  },
  "src\\integration\\pages\\storyPage\\kyrgyz\\canonical.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../canonicalTests",
        "resolvedPath": "src\\integration\\pages\\storyPage\\canonicalTests.js"
      }
    ]
  },
  "src\\integration\\pages\\storyPage\\mundo\\amp.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../ampTests",
        "resolvedPath": "src\\integration\\pages\\storyPage\\ampTests.js"
      }
    ]
  },
  "src\\integration\\pages\\storyPage\\mundo\\canonical.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../canonicalTests",
        "resolvedPath": "src\\integration\\pages\\storyPage\\canonicalTests.js"
      }
    ]
  },
  "src\\integration\\pages\\topicPage\\canonicalTests.js": {
    "incomingDependencies": [
      "src\\integration\\pages\\topicPage\\pidgin\\canonical.test.js"
    ],
    "outgoingDependencies": [
      {
        "source": "./crossPlatformTests",
        "resolvedPath": "src\\integration\\pages\\topicPage\\crossPlatformTests.js"
      },
      {
        "source": "../../common",
        "resolvedPath": "src\\integration\\common\\index.js"
      }
    ]
  },
  "src\\integration\\pages\\topicPage\\crossPlatformTests.js": {
    "incomingDependencies": [
      "src\\integration\\pages\\topicPage\\canonicalTests.js"
    ],
    "outgoingDependencies": [
      {
        "source": "../../common",
        "resolvedPath": "src\\integration\\common\\index.js"
      }
    ]
  },
  "src\\integration\\pages\\topicPage\\pidgin\\canonical.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../canonicalTests",
        "resolvedPath": "src\\integration\\pages\\topicPage\\canonicalTests.js"
      }
    ]
  },
  "src\\integration\\utils\\camelCaseToText.js": {
    "incomingDependencies": [
      "src\\integration\\utils\\camelCaseToText.test.js",
      "ws-nextjs-app\\integration\\IntegrationTestEnvironment.ts"
    ],
    "outgoingDependencies": []
  },
  "src\\integration\\utils\\camelCaseToText.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "./camelCaseToText",
        "resolvedPath": "src\\integration\\utils\\camelCaseToText.js"
      }
    ]
  },
  "src\\integration\\utils\\fetchDom.js": {
    "incomingDependencies": [
      "src\\integration\\utils\\fetchDom.test.js",
      "ws-nextjs-app\\integration\\IntegrationTestEnvironment.ts"
    ],
    "outgoingDependencies": []
  },
  "src\\integration\\utils\\fetchDom.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "jsdom",
        "resolvedPath": "jsdom"
      },
      {
        "source": "./fetchDom",
        "resolvedPath": "src\\integration\\utils\\fetchDom.js"
      }
    ]
  },
  "src\\integration\\utils\\getPageTypeFromTestPath.js": {
    "incomingDependencies": [
      "src\\integration\\utils\\getPageTypeFromTestPath.test.js",
      "ws-nextjs-app\\integration\\IntegrationTestEnvironment.ts"
    ],
    "outgoingDependencies": []
  },
  "src\\integration\\utils\\getPageTypeFromTestPath.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "./getPageTypeFromTestPath",
        "resolvedPath": "src\\integration\\utils\\getPageTypeFromTestPath.js"
      }
    ]
  },
  "src\\integration\\utils\\runTests\\index.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\poly\\legacy.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "core-js/es/map",
        "resolvedPath": "core-js/es/map"
      },
      {
        "source": "core-js/es/set",
        "resolvedPath": "core-js/es/set"
      },
      {
        "source": "core-js/es/symbol",
        "resolvedPath": "core-js/es/symbol"
      },
      {
        "source": "core-js/es/object/assign",
        "resolvedPath": "core-js/es/object/assign"
      },
      {
        "source": "core-js/es/weak-map",
        "resolvedPath": "core-js/es/weak-map"
      },
      {
        "source": "polyfill-crypto.getrandomvalues",
        "resolvedPath": "polyfill-crypto.getrandomvalues"
      }
    ]
  },
  "src\\poly\\modern.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "./safari-nomodule",
        "resolvedPath": "src\\poly\\safari-nomodule.js"
      }
    ]
  },
  "src\\poly\\safari-nomodule.js": {
    "incomingDependencies": [
      "src\\poly\\modern.js"
    ],
    "outgoingDependencies": []
  },
  "src\\server\\Document\\component.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "react-dom/server",
        "resolvedPath": "react-dom/server"
      },
      {
        "source": "react-helmet",
        "resolvedPath": "react-helmet"
      },
      {
        "source": "jsdom",
        "resolvedPath": "jsdom"
      },
      {
        "source": "./component",
        "resolvedPath": "src\\server\\Document\\component.tsx"
      }
    ]
  },
  "src\\server\\Document\\component.tsx": {
    "incomingDependencies": [
      "src\\server\\Document\\component.test.jsx",
      "src\\server\\Document\\index.jsx",
      "src\\server\\Document\\index.test.jsx",
      "src\\server\\index.test.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/server/create-instance",
        "resolvedPath": "@emotion/server/create-instance"
      },
      {
        "source": "react-helmet",
        "resolvedPath": "react-helmet"
      },
      {
        "source": "./Renderers/LiteRenderer",
        "resolvedPath": "src\\server\\Document\\Renderers\\LiteRenderer.tsx"
      },
      {
        "source": "./Renderers/CanonicalRenderer",
        "resolvedPath": "src\\server\\Document\\Renderers\\CanonicalRenderer.tsx"
      },
      {
        "source": "./Renderers/AmpRenderer",
        "resolvedPath": "src\\server\\Document\\Renderers\\AmpRenderer.tsx"
      },
      {
        "source": "./Renderers/litePageTransforms",
        "resolvedPath": "src\\server\\Document\\Renderers\\litePageTransforms\\index.ts"
      }
    ]
  },
  "src\\server\\Document\\index.jsx": {
    "incomingDependencies": [
      "src\\server\\Document\\index.test.jsx",
      "src\\server\\index.jsx",
      "src\\server\\index.test.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "path",
        "resolvedPath": "path"
      },
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "react-dom/server",
        "resolvedPath": "react-dom/server"
      },
      {
        "source": "@loadable/server",
        "resolvedPath": "@loadable/server"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "@emotion/server/create-instance",
        "resolvedPath": "@emotion/server/create-instance"
      },
      {
        "source": "@emotion/cache",
        "resolvedPath": "@emotion/cache"
      },
      {
        "source": "react-helmet",
        "resolvedPath": "react-helmet"
      },
      {
        "source": "#containers/App",
        "resolvedPath": "#containers/App"
      },
      {
        "source": "./component",
        "resolvedPath": "src\\server\\Document\\component.tsx"
      },
      {
        "source": "../utilities/attributeFunctions",
        "resolvedPath": "src\\server\\utilities\\attributeFunctions\\index.js"
      }
    ]
  },
  "src\\server\\Document\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "react-dom/server",
        "resolvedPath": "react-dom/server"
      },
      {
        "source": "@loadable/server",
        "resolvedPath": "@loadable/server"
      },
      {
        "source": ".",
        "resolvedPath": "src\\server\\Document\\index.jsx"
      },
      {
        "source": "../../app/legacy/containers/App",
        "resolvedPath": "src\\app\\legacy\\containers\\App\\index.jsx"
      },
      {
        "source": "./component",
        "resolvedPath": "src\\server\\Document\\component.tsx"
      }
    ]
  },
  "src\\server\\Document\\Renderers\\AmpRenderer.tsx": {
    "incomingDependencies": [
      "src\\server\\Document\\component.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#psammead/psammead-assets/src/amp-boilerplate",
        "resolvedPath": "#psammead/psammead-assets/src/amp-boilerplate"
      },
      {
        "source": "#components/AmpGeo",
        "resolvedPath": "#components/AmpGeo"
      },
      {
        "source": "./types",
        "resolvedPath": "src\\server\\Document\\Renderers\\types.ts"
      }
    ]
  },
  "src\\server\\Document\\Renderers\\CanonicalRenderer.tsx": {
    "incomingDependencies": [
      "src\\server\\Document\\component.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#app/legacy/components/IfAboveIE9Comment",
        "resolvedPath": "#app/legacy/components/IfAboveIE9Comment"
      },
      {
        "source": "#app/lib/noJs.const",
        "resolvedPath": "#app/lib/noJs.const"
      },
      {
        "source": "#app/lib/utilities/getEnvConfig",
        "resolvedPath": "#app/lib/utilities/getEnvConfig"
      },
      {
        "source": "#app/lib/utilities/serialiseForScript",
        "resolvedPath": "#app/lib/utilities/serialiseForScript"
      },
      {
        "source": "./types",
        "resolvedPath": "src\\server\\Document\\Renderers\\types.ts"
      }
    ]
  },
  "src\\server\\Document\\Renderers\\litePageTransforms\\index.test.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": ".",
        "resolvedPath": "src\\server\\Document\\Renderers\\litePageTransforms\\index.ts"
      }
    ]
  },
  "src\\server\\Document\\Renderers\\litePageTransforms\\index.ts": {
    "incomingDependencies": [
      "src\\server\\Document\\component.tsx",
      "src\\server\\Document\\Renderers\\litePageTransforms\\index.test.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "./transformAnchorTags",
        "resolvedPath": "src\\server\\Document\\Renderers\\litePageTransforms\\transformAnchorTags.ts"
      }
    ]
  },
  "src\\server\\Document\\Renderers\\litePageTransforms\\transformAnchorTags.ts": {
    "incomingDependencies": [
      "src\\server\\Document\\Renderers\\litePageTransforms\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "#app/models/types/global",
        "resolvedPath": "#app/models/types/global"
      },
      {
        "source": "#lib/config/services/loadableConfig",
        "resolvedPath": "#lib/config/services/loadableConfig"
      }
    ]
  },
  "src\\server\\Document\\Renderers\\LiteRenderer.tsx": {
    "incomingDependencies": [
      "src\\server\\Document\\component.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "./types",
        "resolvedPath": "src\\server\\Document\\Renderers\\types.ts"
      }
    ]
  },
  "src\\server\\Document\\Renderers\\types.ts": {
    "incomingDependencies": [
      "src\\server\\Document\\Renderers\\AmpRenderer.tsx",
      "src\\server\\Document\\Renderers\\CanonicalRenderer.tsx",
      "src\\server\\Document\\Renderers\\LiteRenderer.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      }
    ]
  },
  "src\\server\\index.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "express",
        "resolvedPath": "express"
      },
      {
        "source": "compression",
        "resolvedPath": "compression"
      },
      {
        "source": "ramda/src/path",
        "resolvedPath": "ramda/src/path"
      },
      {
        "source": "ramda/src/omit",
        "resolvedPath": "ramda/src/omit"
      },
      {
        "source": "helmet",
        "resolvedPath": "helmet"
      },
      {
        "source": "#app/routes",
        "resolvedPath": "#app/routes"
      },
      {
        "source": "#lib/logger.node",
        "resolvedPath": "#lib/logger.node"
      },
      {
        "source": "#app/routes/utils/fetchPageData/utils/getRouteProps",
        "resolvedPath": "#app/routes/utils/fetchPageData/utils/getRouteProps"
      },
      {
        "source": "#lib/logger.const",
        "resolvedPath": "#lib/logger.const"
      },
      {
        "source": "#app/lib/utilities/getToggles/withCache",
        "resolvedPath": "#app/lib/utilities/getToggles/withCache"
      },
      {
        "source": "#lib/statusCodes.const",
        "resolvedPath": "#lib/statusCodes.const"
      },
      {
        "source": "./utilities/cspHeader",
        "resolvedPath": "src\\server\\utilities\\cspHeader\\index.js"
      },
      {
        "source": "./utilities/logResponseTime",
        "resolvedPath": "src\\server\\utilities\\logResponseTime\\index.js"
      },
      {
        "source": "./Document",
        "resolvedPath": "src\\server\\Document\\index.jsx"
      },
      {
        "source": "../app/routes/utils/regex",
        "resolvedPath": "src\\app\\routes\\utils\\regex\\index.js"
      },
      {
        "source": "./utilities/customMetrics",
        "resolvedPath": "src\\server\\utilities\\customMetrics\\index.ts"
      },
      {
        "source": "./utilities/customMetrics/metrics.const",
        "resolvedPath": "src\\server\\utilities\\customMetrics\\metrics.const.ts"
      },
      {
        "source": "./local",
        "resolvedPath": "src\\server\\local\\index.js"
      },
      {
        "source": "./utilities/getAgent",
        "resolvedPath": "src\\server\\utilities\\getAgent\\index.js"
      },
      {
        "source": "./utilities/mvtHeader",
        "resolvedPath": "src\\server\\utilities\\mvtHeader\\index.js"
      },
      {
        "source": "./utilities/getAssetOrigins",
        "resolvedPath": "src\\server\\utilities\\getAssetOrigins\\index.js"
      },
      {
        "source": "./utilities/extractHeaders",
        "resolvedPath": "src\\server\\utilities\\extractHeaders\\index.ts"
      }
    ]
  },
  "src\\server\\index.test.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "supertest",
        "resolvedPath": "supertest"
      },
      {
        "source": "react-dom/server",
        "resolvedPath": "react-dom/server"
      },
      {
        "source": "dotenv",
        "resolvedPath": "dotenv"
      },
      {
        "source": "#app/routes/utils/fetchPageData/utils/getRouteProps",
        "resolvedPath": "#app/routes/utils/fetchPageData/utils/getRouteProps"
      },
      {
        "source": "#lib/config/toggles",
        "resolvedPath": "#lib/config/toggles"
      },
      {
        "source": "#testHelpers/loggerMock",
        "resolvedPath": "#testHelpers/loggerMock"
      },
      {
        "source": "#lib/logger.const",
        "resolvedPath": "#lib/logger.const"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": "./Document/component",
        "resolvedPath": "src\\server\\Document\\component.tsx"
      },
      {
        "source": "../app/routes",
        "resolvedPath": "src\\app\\routes\\index.js"
      },
      {
        "source": "./Document",
        "resolvedPath": "src\\server\\Document\\index.jsx"
      },
      {
        "source": "./utilities/customMetrics",
        "resolvedPath": "src\\server\\utilities\\customMetrics\\index.ts"
      },
      {
        "source": "./utilities/customMetrics/metrics.const",
        "resolvedPath": "src\\server\\utilities\\customMetrics\\metrics.const.ts"
      },
      {
        "source": "./utilities/mvtHeader",
        "resolvedPath": "src\\server\\utilities\\mvtHeader\\index.js"
      }
    ]
  },
  "src\\server\\local\\constructDataFilePath\\index.js": {
    "incomingDependencies": [
      "src\\server\\local\\constructDataFilePath\\index.test.js",
      "src\\server\\local\\index.js"
    ],
    "outgoingDependencies": [
      {
        "source": "path",
        "resolvedPath": "path"
      }
    ]
  },
  "src\\server\\local\\constructDataFilePath\\index.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": ".",
        "resolvedPath": "src\\server\\local\\constructDataFilePath\\index.js"
      }
    ]
  },
  "src\\server\\local\\index.js": {
    "incomingDependencies": [
      "src\\server\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "path",
        "resolvedPath": "path"
      },
      {
        "source": "express-static-gzip",
        "resolvedPath": "express-static-gzip"
      },
      {
        "source": "#app/routes/utils/regex",
        "resolvedPath": "#app/routes/utils/regex"
      },
      {
        "source": "#lib/logger.const",
        "resolvedPath": "#lib/logger.const"
      },
      {
        "source": "#lib/logger.node",
        "resolvedPath": "#lib/logger.node"
      },
      {
        "source": "./constructDataFilePath",
        "resolvedPath": "src\\server\\local\\constructDataFilePath\\index.js"
      }
    ]
  },
  "src\\server\\local\\index.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\server\\utilities\\attributeFunctions\\index.js": {
    "incomingDependencies": [
      "src\\server\\Document\\index.jsx",
      "src\\server\\utilities\\attributeFunctions\\index.test.js"
    ],
    "outgoingDependencies": [
      {
        "source": "../encodeChunkUri",
        "resolvedPath": "src\\server\\utilities\\encodeChunkUri\\index.js"
      }
    ]
  },
  "src\\server\\utilities\\attributeFunctions\\index.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": ".",
        "resolvedPath": "src\\server\\utilities\\attributeFunctions\\index.js"
      }
    ]
  },
  "src\\server\\utilities\\cspHeader\\directives.js": {
    "incomingDependencies": [
      "src\\server\\utilities\\cspHeader\\index.js",
      "src\\server\\utilities\\cspHeader\\index.test.js"
    ],
    "outgoingDependencies": [
      {
        "source": "./domainLists",
        "resolvedPath": "src\\server\\utilities\\cspHeader\\domainLists.js"
      }
    ]
  },
  "src\\server\\utilities\\cspHeader\\domainLists.js": {
    "incomingDependencies": [
      "src\\server\\utilities\\cspHeader\\directives.js",
      "src\\server\\utilities\\cspHeader\\index.test.js"
    ],
    "outgoingDependencies": []
  },
  "src\\server\\utilities\\cspHeader\\index.js": {
    "incomingDependencies": [
      "src\\server\\index.jsx",
      "src\\server\\utilities\\cspHeader\\index.test.js"
    ],
    "outgoingDependencies": [
      {
        "source": "helmet-csp",
        "resolvedPath": "helmet-csp"
      },
      {
        "source": "#app/routes/utils/fetchPageData/utils/getRouteProps",
        "resolvedPath": "#app/routes/utils/fetchPageData/utils/getRouteProps"
      },
      {
        "source": "#lib/utilities/isLive",
        "resolvedPath": "#lib/utilities/isLive"
      },
      {
        "source": "./directives",
        "resolvedPath": "src\\server\\utilities\\cspHeader\\directives.js"
      }
    ]
  },
  "src\\server\\utilities\\cspHeader\\index.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": ".",
        "resolvedPath": "src\\server\\utilities\\cspHeader\\index.js"
      },
      {
        "source": "./directives",
        "resolvedPath": "src\\server\\utilities\\cspHeader\\directives.js"
      },
      {
        "source": "./domainLists",
        "resolvedPath": "src\\server\\utilities\\cspHeader\\domainLists.js"
      }
    ]
  },
  "src\\server\\utilities\\customMetrics\\index.test.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": ".",
        "resolvedPath": "src\\server\\utilities\\customMetrics\\index.ts"
      },
      {
        "source": "aws-embedded-metrics",
        "resolvedPath": "aws-embedded-metrics"
      }
    ]
  },
  "src\\server\\utilities\\customMetrics\\index.ts": {
    "incomingDependencies": [
      "src\\server\\index.jsx",
      "src\\server\\index.test.jsx",
      "src\\server\\utilities\\customMetrics\\index.test.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "aws-embedded-metrics",
        "resolvedPath": "aws-embedded-metrics"
      },
      {
        "source": "#app/models/types/global",
        "resolvedPath": "#app/models/types/global"
      },
      {
        "source": "../onEnvironment",
        "resolvedPath": "src\\server\\utilities\\onEnvironment\\index.js"
      }
    ]
  },
  "src\\server\\utilities\\customMetrics\\metrics.const.ts": {
    "incomingDependencies": [
      "src\\server\\index.jsx",
      "src\\server\\index.test.jsx"
    ],
    "outgoingDependencies": []
  },
  "src\\server\\utilities\\encodeChunkUri\\index.js": {
    "incomingDependencies": [
      "src\\server\\utilities\\attributeFunctions\\index.js",
      "src\\server\\utilities\\encodeChunkUri\\index.test.js"
    ],
    "outgoingDependencies": []
  },
  "src\\server\\utilities\\encodeChunkUri\\index.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": ".",
        "resolvedPath": "src\\server\\utilities\\encodeChunkUri\\index.js"
      }
    ]
  },
  "src\\server\\utilities\\extractHeaders\\index.test.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": ".",
        "resolvedPath": "src\\server\\utilities\\extractHeaders\\index.ts"
      }
    ]
  },
  "src\\server\\utilities\\extractHeaders\\index.ts": {
    "incomingDependencies": [
      "src\\server\\index.jsx",
      "src\\server\\utilities\\extractHeaders\\index.test.ts",
      "ws-nextjs-app\\pages\\[service]\\downloads\\[[...variant]].page.tsx",
      "ws-nextjs-app\\pages\\[service]\\live\\[id]\\[[...variant]].page.tsx",
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\[[...variant]].page.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "http",
        "resolvedPath": "http"
      },
      {
        "source": "#app/lib/utilities/cookieCountries",
        "resolvedPath": "#app/lib/utilities/cookieCountries"
      }
    ]
  },
  "src\\server\\utilities\\getAgent\\certs.js": {
    "incomingDependencies": [
      "src\\server\\utilities\\getAgent\\index.js",
      "src\\server\\utilities\\getAgent\\index.test.js"
    ],
    "outgoingDependencies": [
      {
        "source": "fs",
        "resolvedPath": "fs"
      }
    ]
  },
  "src\\server\\utilities\\getAgent\\index.js": {
    "incomingDependencies": [
      "src\\app\\routes\\article\\getInitialData\\index.ts",
      "src\\app\\routes\\utils\\fetchDataFromBFF\\index.ts",
      "src\\server\\index.jsx",
      "src\\server\\utilities\\getAgent\\index.test.js"
    ],
    "outgoingDependencies": [
      {
        "source": "https",
        "resolvedPath": "https"
      },
      {
        "source": "tls",
        "resolvedPath": "tls"
      },
      {
        "source": "./certs",
        "resolvedPath": "src\\server\\utilities\\getAgent\\certs.js"
      }
    ]
  },
  "src\\server\\utilities\\getAgent\\index.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "https",
        "resolvedPath": "https"
      },
      {
        "source": ".",
        "resolvedPath": "src\\server\\utilities\\getAgent\\index.js"
      },
      {
        "source": "./certs",
        "resolvedPath": "src\\server\\utilities\\getAgent\\certs.js"
      }
    ]
  },
  "src\\server\\utilities\\getAssetOrigins\\index.js": {
    "incomingDependencies": [
      "src\\server\\index.jsx",
      "src\\server\\utilities\\getAssetOrigins\\index.test.js"
    ],
    "outgoingDependencies": [
      {
        "source": "../serviceConfigs",
        "resolvedPath": "src\\server\\utilities\\serviceConfigs\\index.ts"
      }
    ]
  },
  "src\\server\\utilities\\getAssetOrigins\\index.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": ".",
        "resolvedPath": "src\\server\\utilities\\getAssetOrigins\\index.js"
      }
    ]
  },
  "src\\server\\utilities\\logResponseTime\\index.js": {
    "incomingDependencies": [
      "src\\server\\index.jsx",
      "src\\server\\utilities\\logResponseTime\\index.test.js"
    ],
    "outgoingDependencies": [
      {
        "source": "#lib/logger.node",
        "resolvedPath": "#lib/logger.node"
      },
      {
        "source": "#lib/logger.const",
        "resolvedPath": "#lib/logger.const"
      }
    ]
  },
  "src\\server\\utilities\\logResponseTime\\index.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "#testHelpers/loggerMock",
        "resolvedPath": "#testHelpers/loggerMock"
      },
      {
        "source": ".",
        "resolvedPath": "src\\server\\utilities\\logResponseTime\\index.js"
      }
    ]
  },
  "src\\server\\utilities\\mvtHeader\\enabledExperimentsList.js": {
    "incomingDependencies": [
      "src\\server\\utilities\\mvtHeader\\getMvtExperiments\\index.js"
    ],
    "outgoingDependencies": []
  },
  "src\\server\\utilities\\mvtHeader\\getMvtExperiments\\index.js": {
    "incomingDependencies": [
      "src\\server\\utilities\\mvtHeader\\getMvtExperiments\\index.test.js",
      "src\\server\\utilities\\mvtHeader\\index.js"
    ],
    "outgoingDependencies": [
      {
        "source": "../enabledExperimentsList",
        "resolvedPath": "src\\server\\utilities\\mvtHeader\\enabledExperimentsList.js"
      }
    ]
  },
  "src\\server\\utilities\\mvtHeader\\getMvtExperiments\\index.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": ".",
        "resolvedPath": "src\\server\\utilities\\mvtHeader\\getMvtExperiments\\index.js"
      }
    ]
  },
  "src\\server\\utilities\\mvtHeader\\getMvtVaryHeaders\\index.js": {
    "incomingDependencies": [
      "src\\server\\utilities\\mvtHeader\\getMvtVaryHeaders\\index.test.js",
      "src\\server\\utilities\\mvtHeader\\index.js"
    ],
    "outgoingDependencies": []
  },
  "src\\server\\utilities\\mvtHeader\\getMvtVaryHeaders\\index.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": ".",
        "resolvedPath": "src\\server\\utilities\\mvtHeader\\getMvtVaryHeaders\\index.js"
      }
    ]
  },
  "src\\server\\utilities\\mvtHeader\\index.js": {
    "incomingDependencies": [
      "src\\server\\index.jsx",
      "src\\server\\index.test.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "./getMvtExperiments",
        "resolvedPath": "src\\server\\utilities\\mvtHeader\\getMvtExperiments\\index.js"
      },
      {
        "source": "./getMvtVaryHeaders",
        "resolvedPath": "src\\server\\utilities\\mvtHeader\\getMvtVaryHeaders\\index.js"
      }
    ]
  },
  "src\\server\\utilities\\onEnvironment\\index.js": {
    "incomingDependencies": [
      "src\\server\\utilities\\customMetrics\\index.ts",
      "src\\server\\utilities\\onEnvironment\\index.test.js"
    ],
    "outgoingDependencies": [
      {
        "source": "#app/lib/utilities/getEnvConfig",
        "resolvedPath": "#app/lib/utilities/getEnvConfig"
      }
    ]
  },
  "src\\server\\utilities\\onEnvironment\\index.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "./index",
        "resolvedPath": "src\\server\\utilities\\onEnvironment\\index.js"
      }
    ]
  },
  "src\\server\\utilities\\serviceConfigs\\index.ts": {
    "incomingDependencies": [
      "cypress\\e2e\\application\\index.js",
      "cypress\\e2e\\pages\\articles\\tests.js",
      "cypress\\e2e\\pages\\articles\\testsForCanonicalOnly.js",
      "cypress\\e2e\\pages\\errorPage404\\tests.js",
      "cypress\\e2e\\pages\\mediaAssetPage\\testsForAMPOnly.js",
      "cypress\\e2e\\pages\\mostReadPage\\mostReadAssertions.js",
      "cypress\\e2e\\specialFeatures\\scriptSwitching\\index.cy.js",
      "cypress\\e2e\\specialFeatures\\utilities\\cookiePrivacyBanner\\index.js",
      "cypress\\e2e\\specialFeatures\\utilities\\scriptSwitchingJourneyAssertions\\index.js",
      "src\\app\\components\\Curation\\Subhead\\index.stories.tsx",
      "src\\app\\components\\Metadata\\index.test.tsx",
      "src\\app\\contexts\\ServiceContext\\index.test.tsx",
      "src\\app\\contexts\\ServiceContext\\__mocks__\\index.tsx",
      "src\\app\\legacy\\containers\\ArticleTimestamp\\timeFormatTests\\generateTimeFormats.js",
      "src\\app\\legacy\\containers\\ArticleTimestamp\\timeFormatTests\\timeFormat.test.js",
      "src\\server\\utilities\\getAssetOrigins\\index.js"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../app/lib/config/services/afaanoromoo",
        "resolvedPath": "src\\app\\lib\\config\\services\\afaanoromoo.ts"
      },
      {
        "source": "../../../app/lib/config/services/afrique",
        "resolvedPath": "src\\app\\lib\\config\\services\\afrique.ts"
      },
      {
        "source": "../../../app/lib/config/services/amharic",
        "resolvedPath": "src\\app\\lib\\config\\services\\amharic.ts"
      },
      {
        "source": "../../../app/lib/config/services/arabic",
        "resolvedPath": "src\\app\\lib\\config\\services\\arabic.ts"
      },
      {
        "source": "../../../app/lib/config/services/archive",
        "resolvedPath": "src\\app\\lib\\config\\services\\archive.ts"
      },
      {
        "source": "../../../app/lib/config/services/azeri",
        "resolvedPath": "src\\app\\lib\\config\\services\\azeri.ts"
      },
      {
        "source": "../../../app/lib/config/services/bengali",
        "resolvedPath": "src\\app\\lib\\config\\services\\bengali.ts"
      },
      {
        "source": "../../../app/lib/config/services/burmese",
        "resolvedPath": "src\\app\\lib\\config\\services\\burmese.ts"
      },
      {
        "source": "../../../app/lib/config/services/cymrufyw",
        "resolvedPath": "src\\app\\lib\\config\\services\\cymrufyw.ts"
      },
      {
        "source": "../../../app/lib/config/services/gahuza",
        "resolvedPath": "src\\app\\lib\\config\\services\\gahuza.ts"
      },
      {
        "source": "../../../app/lib/config/services/gujarati",
        "resolvedPath": "src\\app\\lib\\config\\services\\gujarati.ts"
      },
      {
        "source": "../../../app/lib/config/services/hausa",
        "resolvedPath": "src\\app\\lib\\config\\services\\hausa.ts"
      },
      {
        "source": "../../../app/lib/config/services/hindi",
        "resolvedPath": "src\\app\\lib\\config\\services\\hindi.ts"
      },
      {
        "source": "../../../app/lib/config/services/igbo",
        "resolvedPath": "src\\app\\lib\\config\\services\\igbo.ts"
      },
      {
        "source": "../../../app/lib/config/services/indonesia",
        "resolvedPath": "src\\app\\lib\\config\\services\\indonesia.ts"
      },
      {
        "source": "../../../app/lib/config/services/japanese",
        "resolvedPath": "src\\app\\lib\\config\\services\\japanese.ts"
      },
      {
        "source": "../../../app/lib/config/services/korean",
        "resolvedPath": "src\\app\\lib\\config\\services\\korean.ts"
      },
      {
        "source": "../../../app/lib/config/services/kyrgyz",
        "resolvedPath": "src\\app\\lib\\config\\services\\kyrgyz.ts"
      },
      {
        "source": "../../../app/lib/config/services/marathi",
        "resolvedPath": "src\\app\\lib\\config\\services\\marathi.ts"
      },
      {
        "source": "../../../app/lib/config/services/mundo",
        "resolvedPath": "src\\app\\lib\\config\\services\\mundo.ts"
      },
      {
        "source": "../../../app/lib/config/services/naidheachdan",
        "resolvedPath": "src\\app\\lib\\config\\services\\naidheachdan.ts"
      },
      {
        "source": "../../../app/lib/config/services/nepali",
        "resolvedPath": "src\\app\\lib\\config\\services\\nepali.ts"
      },
      {
        "source": "../../../app/lib/config/services/news",
        "resolvedPath": "src\\app\\lib\\config\\services\\news.ts"
      },
      {
        "source": "../../../app/lib/config/services/pashto",
        "resolvedPath": "src\\app\\lib\\config\\services\\pashto.ts"
      },
      {
        "source": "../../../app/lib/config/services/persian",
        "resolvedPath": "src\\app\\lib\\config\\services\\persian.ts"
      },
      {
        "source": "../../../app/lib/config/services/pidgin",
        "resolvedPath": "src\\app\\lib\\config\\services\\pidgin.ts"
      },
      {
        "source": "../../../app/lib/config/services/portuguese",
        "resolvedPath": "src\\app\\lib\\config\\services\\portuguese.ts"
      },
      {
        "source": "../../../app/lib/config/services/punjabi",
        "resolvedPath": "src\\app\\lib\\config\\services\\punjabi.ts"
      },
      {
        "source": "../../../app/lib/config/services/russian",
        "resolvedPath": "src\\app\\lib\\config\\services\\russian.ts"
      },
      {
        "source": "../../../app/lib/config/services/scotland",
        "resolvedPath": "src\\app\\lib\\config\\services\\scotland.ts"
      },
      {
        "source": "../../../app/lib/config/services/sport",
        "resolvedPath": "src\\app\\lib\\config\\services\\sport.ts"
      },
      {
        "source": "../../../app/lib/config/services/serbian",
        "resolvedPath": "src\\app\\lib\\config\\services\\serbian.ts"
      },
      {
        "source": "../../../app/lib/config/services/sinhala",
        "resolvedPath": "src\\app\\lib\\config\\services\\sinhala.ts"
      },
      {
        "source": "../../../app/lib/config/services/somali",
        "resolvedPath": "src\\app\\lib\\config\\services\\somali.ts"
      },
      {
        "source": "../../../app/lib/config/services/swahili",
        "resolvedPath": "src\\app\\lib\\config\\services\\swahili.ts"
      },
      {
        "source": "../../../app/lib/config/services/tamil",
        "resolvedPath": "src\\app\\lib\\config\\services\\tamil.ts"
      },
      {
        "source": "../../../app/lib/config/services/telugu",
        "resolvedPath": "src\\app\\lib\\config\\services\\telugu.ts"
      },
      {
        "source": "../../../app/lib/config/services/thai",
        "resolvedPath": "src\\app\\lib\\config\\services\\thai.ts"
      },
      {
        "source": "../../../app/lib/config/services/tigrinya",
        "resolvedPath": "src\\app\\lib\\config\\services\\tigrinya.ts"
      },
      {
        "source": "../../../app/lib/config/services/turkce",
        "resolvedPath": "src\\app\\lib\\config\\services\\turkce.ts"
      },
      {
        "source": "../../../app/lib/config/services/ukchina",
        "resolvedPath": "src\\app\\lib\\config\\services\\ukchina.ts"
      },
      {
        "source": "../../../app/lib/config/services/ukrainian",
        "resolvedPath": "src\\app\\lib\\config\\services\\ukrainian.ts"
      },
      {
        "source": "../../../app/lib/config/services/urdu",
        "resolvedPath": "src\\app\\lib\\config\\services\\urdu.ts"
      },
      {
        "source": "../../../app/lib/config/services/uzbek",
        "resolvedPath": "src\\app\\lib\\config\\services\\uzbek.ts"
      },
      {
        "source": "../../../app/lib/config/services/vietnamese",
        "resolvedPath": "src\\app\\lib\\config\\services\\vietnamese.ts"
      },
      {
        "source": "../../../app/lib/config/services/ws",
        "resolvedPath": "src\\app\\lib\\config\\services\\ws.ts"
      },
      {
        "source": "../../../app/lib/config/services/yoruba",
        "resolvedPath": "src\\app\\lib\\config\\services\\yoruba.ts"
      },
      {
        "source": "../../../app/lib/config/services/zhongwen",
        "resolvedPath": "src\\app\\lib\\config\\services\\zhongwen.ts"
      },
      {
        "source": "../../../app/models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global.ts"
      },
      {
        "source": "../../../app/models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      }
    ]
  },
  "src\\startServer.js": {
    "incomingDependencies": [
      "src\\startServer.test.js"
    ],
    "outgoingDependencies": [
      {
        "source": "cluster",
        "resolvedPath": "cluster"
      },
      {
        "source": "os",
        "resolvedPath": "os"
      },
      {
        "source": "#lib/logger.const",
        "resolvedPath": "#lib/logger.const"
      }
    ]
  },
  "src\\startServer.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "cluster",
        "resolvedPath": "cluster"
      },
      {
        "source": "os",
        "resolvedPath": "os"
      },
      {
        "source": "http",
        "resolvedPath": "http"
      },
      {
        "source": "./startServer",
        "resolvedPath": "src\\startServer.js"
      }
    ]
  },
  "src\\sw.test.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "fs",
        "resolvedPath": "fs"
      },
      {
        "source": "path",
        "resolvedPath": "path"
      }
    ]
  },
  "src\\testHelpers\\config.js": {
    "incomingDependencies": [
      "src\\app\\components\\ChartbeatAnalytics\\index.test.tsx"
    ],
    "outgoingDependencies": []
  },
  "src\\testHelpers\\jest-setup.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "jest-fetch-mock",
        "resolvedPath": "jest-fetch-mock"
      },
      {
        "source": "path",
        "resolvedPath": "path"
      },
      {
        "source": "util",
        "resolvedPath": "util"
      }
    ]
  },
  "src\\testHelpers\\loggerMock.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\CpsRecommendations\\ErrorBoundary.test.tsx",
      "src\\app\\routes\\article\\getInitialData\\index.test.ts",
      "src\\app\\routes\\frontPage\\getInitialData\\index.test.js"
    ],
    "outgoingDependencies": [
      {
        "source": "../app/lib/logger.node",
        "resolvedPath": "src\\app\\lib\\logger.node.js"
      }
    ]
  },
  "src\\testHelpers\\mockComponents.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      }
    ]
  },
  "src\\testHelpers\\setupTests.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "colors",
        "resolvedPath": "colors"
      },
      {
        "source": "@testing-library/jest-dom",
        "resolvedPath": "@testing-library/jest-dom"
      }
    ]
  },
  "src\\testHelpers\\withTimeMachine.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\ArticleTimestamp\\index.stories.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../../.storybook/time-machine",
        "resolvedPath": ".storybook\\time-machine.js"
      }
    ]
  },
  "stylelint.config.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "webpack.config.client.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "webpack.config.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "webpack.config.server.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "ws-nextjs-app\\cypress\\e2e\\avEmbed\\index.cy.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "./pageVisit",
        "resolvedPath": "ws-nextjs-app\\cypress\\e2e\\avEmbed\\pageVisit.ts"
      },
      {
        "source": "../../support/helpers/runTestsForPage",
        "resolvedPath": "ws-nextjs-app\\cypress\\support\\helpers\\runTestsForPage.ts"
      }
    ]
  },
  "ws-nextjs-app\\cypress\\e2e\\avEmbed\\pageVisit.ts": {
    "incomingDependencies": [
      "ws-nextjs-app\\cypress\\e2e\\avEmbed\\index.cy.ts"
    ],
    "outgoingDependencies": []
  },
  "ws-nextjs-app\\cypress\\e2e\\livePage\\helpers.ts": {
    "incomingDependencies": [
      "ws-nextjs-app\\cypress\\e2e\\livePage\\mediaPlayer.ts"
    ],
    "outgoingDependencies": []
  },
  "ws-nextjs-app\\cypress\\e2e\\livePage\\index.cy.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "./mediaPlayer",
        "resolvedPath": "ws-nextjs-app\\cypress\\e2e\\livePage\\mediaPlayer.ts"
      },
      {
        "source": "./pageVisit",
        "resolvedPath": "ws-nextjs-app\\cypress\\e2e\\livePage\\pageVisit.ts"
      },
      {
        "source": "../testsForAllPages",
        "resolvedPath": "ws-nextjs-app\\cypress\\e2e\\testsForAllPages.ts"
      },
      {
        "source": "../../support/helpers/runTestsForPage",
        "resolvedPath": "ws-nextjs-app\\cypress\\support\\helpers\\runTestsForPage.ts"
      }
    ]
  },
  "ws-nextjs-app\\cypress\\e2e\\livePage\\mediaPlayer.ts": {
    "incomingDependencies": [
      "ws-nextjs-app\\cypress\\e2e\\livePage\\index.cy.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "./helpers",
        "resolvedPath": "ws-nextjs-app\\cypress\\e2e\\livePage\\helpers.ts"
      }
    ]
  },
  "ws-nextjs-app\\cypress\\e2e\\livePage\\pageVisit.ts": {
    "incomingDependencies": [
      "ws-nextjs-app\\cypress\\e2e\\livePage\\index.cy.ts"
    ],
    "outgoingDependencies": []
  },
  "ws-nextjs-app\\cypress\\e2e\\send\\index.cy.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "./pageVisit",
        "resolvedPath": "ws-nextjs-app\\cypress\\e2e\\send\\pageVisit.ts"
      },
      {
        "source": "../testsForAllPages",
        "resolvedPath": "ws-nextjs-app\\cypress\\e2e\\testsForAllPages.ts"
      },
      {
        "source": "../../support/helpers/runTestsForPage",
        "resolvedPath": "ws-nextjs-app\\cypress\\support\\helpers\\runTestsForPage.ts"
      }
    ]
  },
  "ws-nextjs-app\\cypress\\e2e\\send\\pageVisit.ts": {
    "incomingDependencies": [
      "ws-nextjs-app\\cypress\\e2e\\send\\index.cy.ts"
    ],
    "outgoingDependencies": []
  },
  "ws-nextjs-app\\cypress\\e2e\\testsForAllPages.ts": {
    "incomingDependencies": [
      "ws-nextjs-app\\cypress\\e2e\\livePage\\index.cy.ts",
      "ws-nextjs-app\\cypress\\e2e\\send\\index.cy.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../cypress/support/helpers/checkA11y",
        "resolvedPath": "cypress\\support\\helpers\\checkA11y.js"
      }
    ]
  },
  "ws-nextjs-app\\cypress\\support\\commands.ts": {
    "incomingDependencies": [
      "ws-nextjs-app\\cypress\\support\\e2e.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../cypress/support/commands/application",
        "resolvedPath": "cypress\\support\\commands\\application.js"
      },
      {
        "source": "../../../src/app/models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global.ts"
      }
    ]
  },
  "ws-nextjs-app\\cypress\\support\\e2e.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "cypress-axe",
        "resolvedPath": "cypress-axe"
      },
      {
        "source": "./commands",
        "resolvedPath": "ws-nextjs-app\\cypress\\support\\commands.ts"
      }
    ]
  },
  "ws-nextjs-app\\cypress\\support\\helpers\\runTestsForPage.ts": {
    "incomingDependencies": [
      "ws-nextjs-app\\cypress\\e2e\\avEmbed\\index.cy.ts",
      "ws-nextjs-app\\cypress\\e2e\\livePage\\index.cy.ts",
      "ws-nextjs-app\\cypress\\e2e\\send\\index.cy.ts"
    ],
    "outgoingDependencies": []
  },
  "ws-nextjs-app\\cypress.config.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "cypress",
        "resolvedPath": "cypress"
      }
    ]
  },
  "ws-nextjs-app\\integration\\IntegrationTestEnvironment.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "jest-environment-jsdom",
        "resolvedPath": "jest-environment-jsdom"
      },
      {
        "source": "@jest/environment",
        "resolvedPath": "@jest/environment"
      },
      {
        "source": "../../src/integration/utils/getPageTypeFromTestPath",
        "resolvedPath": "src\\integration\\utils\\getPageTypeFromTestPath.js"
      },
      {
        "source": "../../src/integration/utils/camelCaseToText",
        "resolvedPath": "src\\integration\\utils\\camelCaseToText.js"
      },
      {
        "source": "../../src/integration/utils/fetchDom",
        "resolvedPath": "src\\integration\\utils\\fetchDom.js"
      }
    ]
  },
  "ws-nextjs-app\\integration\\pages\\av-embeds\\canonicalTests.js": {
    "incomingDependencies": [
      "ws-nextjs-app\\integration\\pages\\av-embeds\\russian\\canonical.test.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../../src/integration/common",
        "resolvedPath": "src\\integration\\common\\index.js"
      }
    ]
  },
  "ws-nextjs-app\\integration\\pages\\av-embeds\\russian\\canonical.test.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../canonicalTests",
        "resolvedPath": "ws-nextjs-app\\integration\\pages\\av-embeds\\canonicalTests.js"
      }
    ]
  },
  "ws-nextjs-app\\integration\\pages\\live\\arabic\\canonical.test.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../../../../../src/integration/common",
        "resolvedPath": "src\\integration\\common\\index.js"
      }
    ]
  },
  "ws-nextjs-app\\integration\\pages\\live\\canonicalTests.js": {
    "incomingDependencies": [
      "ws-nextjs-app\\integration\\pages\\live\\pidgin\\canonical.test.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../../src/integration/common",
        "resolvedPath": "src\\integration\\common\\index.js"
      }
    ]
  },
  "ws-nextjs-app\\integration\\pages\\live\\pidgin\\canonical.test.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../canonicalTests",
        "resolvedPath": "ws-nextjs-app\\integration\\pages\\live\\canonicalTests.js"
      }
    ]
  },
  "ws-nextjs-app\\integration\\pages\\live\\serbian\\canonical.test.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../../../../../src/integration/common",
        "resolvedPath": "src\\integration\\common\\index.js"
      }
    ]
  },
  "ws-nextjs-app\\integration\\pages\\send\\canonicalTests.js": {
    "incomingDependencies": [
      "ws-nextjs-app\\integration\\pages\\send\\mundo\\canonical.test.ts",
      "ws-nextjs-app\\integration\\pages\\send\\somaliFileUpload\\canonical.test.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../../src/integration/common",
        "resolvedPath": "src\\integration\\common\\index.js"
      },
      {
        "source": "./ugcFormTests",
        "resolvedPath": "ws-nextjs-app\\integration\\pages\\send\\ugcFormTests.js"
      }
    ]
  },
  "ws-nextjs-app\\integration\\pages\\send\\mundo\\canonical.test.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../canonicalTests",
        "resolvedPath": "ws-nextjs-app\\integration\\pages\\send\\canonicalTests.js"
      }
    ]
  },
  "ws-nextjs-app\\integration\\pages\\send\\somaliFileUpload\\canonical.test.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../canonicalTests",
        "resolvedPath": "ws-nextjs-app\\integration\\pages\\send\\canonicalTests.js"
      },
      {
        "source": "../ugcFileUploadTests",
        "resolvedPath": "ws-nextjs-app\\integration\\pages\\send\\ugcFileUploadTests.js"
      }
    ]
  },
  "ws-nextjs-app\\integration\\pages\\send\\ugcFileUploadTests.js": {
    "incomingDependencies": [
      "ws-nextjs-app\\integration\\pages\\send\\somaliFileUpload\\canonical.test.ts"
    ],
    "outgoingDependencies": []
  },
  "ws-nextjs-app\\integration\\pages\\send\\ugcFormTests.js": {
    "incomingDependencies": [
      "ws-nextjs-app\\integration\\pages\\send\\canonicalTests.js"
    ],
    "outgoingDependencies": [
      {
        "source": "@testing-library/react",
        "resolvedPath": "@testing-library/react"
      }
    ]
  },
  "ws-nextjs-app\\jest.config.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "ts-jest",
        "resolvedPath": "ts-jest"
      },
      {
        "source": "@jest/types",
        "resolvedPath": "@jest/types"
      },
      {
        "source": "../tsconfig.json",
        "resolvedPath": "..\\EXIM\\Work\\iterate-ai\\tsconfig.json"
      }
    ]
  },
  "ws-nextjs-app\\middleware.page.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "next/server",
        "resolvedPath": "next/server"
      },
      {
        "source": "next/server",
        "resolvedPath": "next/server"
      },
      {
        "source": "./utilities/cspHeaderResponse",
        "resolvedPath": "ws-nextjs-app\\utilities\\cspHeaderResponse\\index.ts"
      }
    ]
  },
  "ws-nextjs-app\\next.config.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "ws-nextjs-app\\pages\\api\\local\\[service]\\[pageType]\\[id]\\local.api.test.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "next-test-api-route-handler",
        "resolvedPath": "next-test-api-route-handler"
      },
      {
        "source": "./[[...optionalParams]].api",
        "resolvedPath": "ws-nextjs-app\\pages\\api\\local\\[service]\\[pageType]\\[id]\\[[...optionalParams]].api.ts"
      },
      {
        "source": "../../../../../../../data/pidgin/live/c7p765ynk9qt.json",
        "resolvedPath": "..\\..\\..\\..\\data\\pidgin\\live\\c7p765ynk9qt.json"
      },
      {
        "source": "../../../../../../../data/zhongwen/live/c0000000000t/simp.json",
        "resolvedPath": "..\\..\\..\\..\\data\\zhongwen\\live\\c0000000000t\\simp.json"
      },
      {
        "source": "../../../../../../../data/mundo/send/u50853489.json",
        "resolvedPath": "..\\..\\..\\..\\data\\mundo\\send\\u50853489.json"
      },
      {
        "source": "../../../../../../../data/russian/av-embeds/features-49881797.json",
        "resolvedPath": "..\\..\\..\\..\\data\\russian\\av-embeds\\features-49881797.json"
      },
      {
        "source": "../../../../../../../data/russian/av-embeds/features-49881797/pid/p07q3wwl.json",
        "resolvedPath": "..\\..\\..\\..\\data\\russian\\av-embeds\\features-49881797\\pid\\p07q3wwl.json"
      }
    ]
  },
  "ws-nextjs-app\\pages\\api\\local\\[service]\\[pageType]\\[id]\\[[...optionalParams]].api.ts": {
    "incomingDependencies": [
      "ws-nextjs-app\\pages\\api\\local\\[service]\\[pageType]\\[id]\\local.api.test.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "node:fs/promises",
        "resolvedPath": "node:fs/promises"
      },
      {
        "source": "path",
        "resolvedPath": "path"
      },
      {
        "source": "next",
        "resolvedPath": "next"
      },
      {
        "source": "#app/models/types/global",
        "resolvedPath": "#app/models/types/global"
      }
    ]
  },
  "ws-nextjs-app\\pages\\ws\\languages.page.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "next/head",
        "resolvedPath": "next/head"
      },
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "next",
        "resolvedPath": "next"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": "#app/components/ChartbeatAnalytics",
        "resolvedPath": "#app/components/ChartbeatAnalytics"
      },
      {
        "source": "#app/components/ATIAnalytics",
        "resolvedPath": "#app/components/ATIAnalytics"
      },
      {
        "source": "#app/components/Metadata",
        "resolvedPath": "#app/components/Metadata"
      }
    ]
  },
  "ws-nextjs-app\\pages\\[service]\\av-embeds\\avembeds.stories.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#app/contexts/RequestContext",
        "resolvedPath": "#app/contexts/RequestContext"
      },
      {
        "source": "#app/components/MediaLoader/types",
        "resolvedPath": "#app/components/MediaLoader/types"
      },
      {
        "source": "#data/serbian/av-embeds/cyr/srbija-68707945.json",
        "resolvedPath": "#data/serbian/av-embeds/cyr/srbija-68707945.json"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": "./AvEmbedsPageLayout",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\av-embeds\\AvEmbedsPageLayout.tsx"
      }
    ]
  },
  "ws-nextjs-app\\pages\\[service]\\av-embeds\\AvEmbedsMetadata.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../../../../src/app/components/react-testing-library-with-providers",
        "resolvedPath": "src\\app\\components\\react-testing-library-with-providers.tsx"
      },
      {
        "source": "../../../../data/serbian/av-embeds/cyr/srbija-68707945.json",
        "resolvedPath": "..\\data\\serbian\\av-embeds\\cyr\\srbija-68707945.json"
      },
      {
        "source": "./AvEmbedsMetadata",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\av-embeds\\AvEmbedsMetadata.tsx"
      },
      {
        "source": "../../../../src/app/routes/utils/pageTypes",
        "resolvedPath": "src\\app\\routes\\utils\\pageTypes.ts"
      },
      {
        "source": "../../../../src/app/components/MediaLoader/types",
        "resolvedPath": "src\\app\\components\\MediaLoader\\types.ts"
      }
    ]
  },
  "ws-nextjs-app\\pages\\[service]\\av-embeds\\AvEmbedsMetadata.tsx": {
    "incomingDependencies": [
      "ws-nextjs-app\\pages\\[service]\\av-embeds\\AvEmbedsMetadata.test.tsx",
      "ws-nextjs-app\\pages\\[service]\\av-embeds\\AvEmbedsPageLayout.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "react-helmet",
        "resolvedPath": "react-helmet"
      },
      {
        "source": "./types",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\av-embeds\\types.ts"
      }
    ]
  },
  "ws-nextjs-app\\pages\\[service]\\av-embeds\\AvEmbedsPageLayout.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "react-helmet",
        "resolvedPath": "react-helmet"
      },
      {
        "source": "#app/components/react-testing-library-with-providers",
        "resolvedPath": "#app/components/react-testing-library-with-providers"
      },
      {
        "source": "#data/serbian/av-embeds/cyr/srbija-68707945.json",
        "resolvedPath": "#data/serbian/av-embeds/cyr/srbija-68707945.json"
      },
      {
        "source": "#app/components/MediaLoader/types",
        "resolvedPath": "#app/components/MediaLoader/types"
      },
      {
        "source": "./AvEmbedsPageLayout",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\av-embeds\\AvEmbedsPageLayout.tsx"
      }
    ]
  },
  "ws-nextjs-app\\pages\\[service]\\av-embeds\\AvEmbedsPageLayout.tsx": {
    "incomingDependencies": [
      "ws-nextjs-app\\pages\\[service]\\av-embeds\\avembeds.stories.tsx",
      "ws-nextjs-app\\pages\\[service]\\av-embeds\\AvEmbedsPageLayout.test.tsx",
      "ws-nextjs-app\\pages\\[service]\\[[...]].page.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "#app/components/MediaLoader",
        "resolvedPath": "#app/components/MediaLoader"
      },
      {
        "source": "./types",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\av-embeds\\types.ts"
      },
      {
        "source": "./styles",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\av-embeds\\styles.ts"
      },
      {
        "source": "./AvEmbedsMetadata",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\av-embeds\\AvEmbedsMetadata.tsx"
      }
    ]
  },
  "ws-nextjs-app\\pages\\[service]\\av-embeds\\handleAvRoute.test.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "next",
        "resolvedPath": "next"
      },
      {
        "source": "#app/routes/utils/fetchPageData",
        "resolvedPath": "#app/routes/utils/fetchPageData"
      },
      {
        "source": "#data/russian/av-embeds/features-49881797/pid/p07q3wwl.json",
        "resolvedPath": "#data/russian/av-embeds/features-49881797/pid/p07q3wwl.json"
      },
      {
        "source": "./handleAvRoute",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\av-embeds\\handleAvRoute.ts"
      }
    ]
  },
  "ws-nextjs-app\\pages\\[service]\\av-embeds\\handleAvRoute.ts": {
    "incomingDependencies": [
      "ws-nextjs-app\\pages\\[service]\\av-embeds\\handleAvRoute.test.ts",
      "ws-nextjs-app\\pages\\[service]\\[[...]].page.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "next",
        "resolvedPath": "next"
      },
      {
        "source": "#server/utilities/extractHeaders",
        "resolvedPath": "#server/utilities/extractHeaders"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": "#app/routes/utils/fetchPageData",
        "resolvedPath": "#app/routes/utils/fetchPageData"
      },
      {
        "source": "#app/routes/utils/certsRequired",
        "resolvedPath": "#app/routes/utils/certsRequired"
      },
      {
        "source": "#app/routes/utils/getEnvironment",
        "resolvedPath": "#app/routes/utils/getEnvironment"
      },
      {
        "source": "#app/models/types/fetch",
        "resolvedPath": "#app/models/types/fetch"
      },
      {
        "source": "#app/routes/utils/constructPageFetchUrl",
        "resolvedPath": "#app/routes/utils/constructPageFetchUrl"
      },
      {
        "source": "#app/routes/utils/parseAvRoute",
        "resolvedPath": "#app/routes/utils/parseAvRoute"
      },
      {
        "source": "#app/lib/utilities/blockHandlers",
        "resolvedPath": "#app/lib/utilities/blockHandlers"
      },
      {
        "source": "#lib/logger.node",
        "resolvedPath": "#lib/logger.node"
      },
      {
        "source": "#app/lib/statusCodes.const",
        "resolvedPath": "#app/lib/statusCodes.const"
      },
      {
        "source": "#app/lib/logger.const",
        "resolvedPath": "#app/lib/logger.const"
      },
      {
        "source": "#server/utilities/customMetrics",
        "resolvedPath": "#server/utilities/customMetrics"
      },
      {
        "source": "#server/utilities/customMetrics/metrics.const",
        "resolvedPath": "#server/utilities/customMetrics/metrics.const"
      },
      {
        "source": "../../../utilities/undiciAgent",
        "resolvedPath": "ws-nextjs-app\\utilities\\undiciAgent\\index.ts"
      }
    ]
  },
  "ws-nextjs-app\\pages\\[service]\\av-embeds\\styles.ts": {
    "incomingDependencies": [
      "ws-nextjs-app\\pages\\[service]\\av-embeds\\AvEmbedsPageLayout.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      }
    ]
  },
  "ws-nextjs-app\\pages\\[service]\\av-embeds\\types.ts": {
    "incomingDependencies": [
      "ws-nextjs-app\\pages\\[service]\\av-embeds\\AvEmbedsMetadata.tsx",
      "ws-nextjs-app\\pages\\[service]\\av-embeds\\AvEmbedsPageLayout.tsx",
      "ws-nextjs-app\\pages\\[service]\\[[...]].page.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "#app/components/ATIAnalytics/types",
        "resolvedPath": "#app/components/ATIAnalytics/types"
      },
      {
        "source": "#app/components/MediaLoader/types",
        "resolvedPath": "#app/components/MediaLoader/types"
      },
      {
        "source": "#app/models/types/global",
        "resolvedPath": "#app/models/types/global"
      }
    ]
  },
  "ws-nextjs-app\\pages\\[service]\\downloads\\dataFetch.ts": {
    "incomingDependencies": [
      "ws-nextjs-app\\pages\\[service]\\downloads\\[[...variant]].page.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "#app/models/types/global",
        "resolvedPath": "#app/models/types/global"
      },
      {
        "source": "#app/lib/statusCodes.const",
        "resolvedPath": "#app/lib/statusCodes.const"
      }
    ]
  },
  "ws-nextjs-app\\pages\\[service]\\downloads\\downloadsPageLayout.tsx": {
    "incomingDependencies": [
      "ws-nextjs-app\\pages\\[service]\\downloads\\[[...variant]].page.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "#app/components/Heading",
        "resolvedPath": "#app/components/Heading"
      },
      {
        "source": "#app/components/ATIAnalytics",
        "resolvedPath": "#app/components/ATIAnalytics"
      },
      {
        "source": "#app/components/ChartbeatAnalytics",
        "resolvedPath": "#app/components/ChartbeatAnalytics"
      },
      {
        "source": "#app/components/Metadata",
        "resolvedPath": "#app/components/Metadata"
      },
      {
        "source": "#app/components/CallToActionLink",
        "resolvedPath": "#app/components/CallToActionLink"
      },
      {
        "source": "#app/contexts/ServiceContext",
        "resolvedPath": "#app/contexts/ServiceContext"
      },
      {
        "source": "#app/legacy/psammead/psammead-timestamp-container/src",
        "resolvedPath": "#app/legacy/psammead/psammead-timestamp-container/src"
      },
      {
        "source": "./styles",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\downloads\\styles.ts"
      },
      {
        "source": "./types",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\downloads\\types.ts"
      }
    ]
  },
  "ws-nextjs-app\\pages\\[service]\\downloads\\styles.ts": {
    "incomingDependencies": [
      "ws-nextjs-app\\pages\\[service]\\downloads\\downloadsPageLayout.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "../../../../src/app/utilities/pixelsToRem",
        "resolvedPath": "src\\app\\utilities\\pixelsToRem\\index.ts"
      }
    ]
  },
  "ws-nextjs-app\\pages\\[service]\\downloads\\types.ts": {
    "incomingDependencies": [
      "ws-nextjs-app\\pages\\[service]\\downloads\\downloadsPageLayout.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "#app/models/types/global",
        "resolvedPath": "#app/models/types/global"
      },
      {
        "source": "#app/components/ATIAnalytics/types",
        "resolvedPath": "#app/components/ATIAnalytics/types"
      }
    ]
  },
  "ws-nextjs-app\\pages\\[service]\\downloads\\[[...variant]].page.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "next",
        "resolvedPath": "next"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": "#server/utilities/logResponseTime",
        "resolvedPath": "#server/utilities/logResponseTime"
      },
      {
        "source": "#app/models/types/pageDataParams",
        "resolvedPath": "#app/models/types/pageDataParams"
      },
      {
        "source": "#app/lib/utilities/getToggles/withCache",
        "resolvedPath": "#app/lib/utilities/getToggles/withCache"
      },
      {
        "source": "./dataFetch",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\downloads\\dataFetch.ts"
      },
      {
        "source": "./downloadsPageLayout",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\downloads\\downloadsPageLayout.tsx"
      },
      {
        "source": "../../../../src/server/utilities/extractHeaders",
        "resolvedPath": "src\\server\\utilities\\extractHeaders\\index.ts"
      }
    ]
  },
  "ws-nextjs-app\\pages\\[service]\\live\\[id]\\Header\\index.stories.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": ".",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\live\\[id]\\Header\\index.tsx"
      },
      {
        "source": "./metadata.json",
        "resolvedPath": "..\\EXIM\\Work\\iterate-ai\\dep-graph\\metadata.json"
      }
    ]
  },
  "ws-nextjs-app\\pages\\[service]\\live\\[id]\\Header\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#app/components/react-testing-library-with-providers",
        "resolvedPath": "#app/components/react-testing-library-with-providers"
      },
      {
        "source": "./index",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\live\\[id]\\Header\\index.tsx"
      }
    ]
  },
  "ws-nextjs-app\\pages\\[service]\\live\\[id]\\Header\\index.tsx": {
    "incomingDependencies": [
      "ws-nextjs-app\\pages\\[service]\\live\\[id]\\Header\\index.stories.tsx",
      "ws-nextjs-app\\pages\\[service]\\live\\[id]\\Header\\index.test.tsx",
      "ws-nextjs-app\\pages\\[service]\\live\\[id]\\LivePageLayout.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "#app/components/Heading",
        "resolvedPath": "#app/components/Heading"
      },
      {
        "source": "#app/components/Text",
        "resolvedPath": "#app/components/Text"
      },
      {
        "source": "#app/components/MaskedImage",
        "resolvedPath": "#app/components/MaskedImage"
      },
      {
        "source": "./LiveLabelHeader",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\live\\[id]\\Header\\LiveLabelHeader\\index.tsx"
      },
      {
        "source": "./styles",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\live\\[id]\\Header\\styles.tsx"
      }
    ]
  },
  "ws-nextjs-app\\pages\\[service]\\live\\[id]\\Header\\LiveLabelHeader\\index.styles.ts": {
    "incomingDependencies": [
      "ws-nextjs-app\\pages\\[service]\\live\\[id]\\Header\\LiveLabelHeader\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "#app/components/ThemeProvider/spacings",
        "resolvedPath": "#app/components/ThemeProvider/spacings"
      }
    ]
  },
  "ws-nextjs-app\\pages\\[service]\\live\\[id]\\Header\\LiveLabelHeader\\index.tsx": {
    "incomingDependencies": [
      "ws-nextjs-app\\pages\\[service]\\live\\[id]\\Header\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "#app/components/LiveLabel/types",
        "resolvedPath": "#app/components/LiveLabel/types"
      },
      {
        "source": "#app/components/LiveLabel",
        "resolvedPath": "#app/components/LiveLabel"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\live\\[id]\\Header\\LiveLabelHeader\\index.styles.ts"
      }
    ]
  },
  "ws-nextjs-app\\pages\\[service]\\live\\[id]\\Header\\styles.tsx": {
    "incomingDependencies": [
      "ws-nextjs-app\\pages\\[service]\\live\\[id]\\Header\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "../../../../../../src/app/utilities/pixelsToRem",
        "resolvedPath": "src\\app\\utilities\\pixelsToRem\\index.ts"
      }
    ]
  },
  "ws-nextjs-app\\pages\\[service]\\live\\[id]\\KeyPoints\\fixture.ts": {
    "incomingDependencies": [
      "ws-nextjs-app\\pages\\[service]\\live\\[id]\\KeyPoints\\index.stories.tsx",
      "ws-nextjs-app\\pages\\[service]\\live\\[id]\\KeyPoints\\index.test.tsx"
    ],
    "outgoingDependencies": []
  },
  "ws-nextjs-app\\pages\\[service]\\live\\[id]\\KeyPoints\\index.stories.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": ".",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\live\\[id]\\KeyPoints\\index.tsx"
      },
      {
        "source": "./types",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\live\\[id]\\KeyPoints\\types.ts"
      },
      {
        "source": "./fixture",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\live\\[id]\\KeyPoints\\fixture.ts"
      },
      {
        "source": "./metadata.json",
        "resolvedPath": "..\\EXIM\\Work\\iterate-ai\\dep-graph\\metadata.json"
      }
    ]
  },
  "ws-nextjs-app\\pages\\[service]\\live\\[id]\\KeyPoints\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#app/components/react-testing-library-with-providers",
        "resolvedPath": "#app/components/react-testing-library-with-providers"
      },
      {
        "source": ".",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\live\\[id]\\KeyPoints\\index.tsx"
      },
      {
        "source": "./fixture",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\live\\[id]\\KeyPoints\\fixture.ts"
      }
    ]
  },
  "ws-nextjs-app\\pages\\[service]\\live\\[id]\\KeyPoints\\index.tsx": {
    "incomingDependencies": [
      "ws-nextjs-app\\pages\\[service]\\live\\[id]\\KeyPoints\\index.stories.tsx",
      "ws-nextjs-app\\pages\\[service]\\live\\[id]\\KeyPoints\\index.test.tsx",
      "ws-nextjs-app\\pages\\[service]\\live\\[id]\\LivePageLayout.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "#app/components/Heading",
        "resolvedPath": "#app/components/Heading"
      },
      {
        "source": "#app/legacy/containers/Text",
        "resolvedPath": "#app/legacy/containers/Text"
      },
      {
        "source": "#app/legacy/containers/Paragraph",
        "resolvedPath": "#app/legacy/containers/Paragraph"
      },
      {
        "source": "#app/legacy/containers/BulletedList",
        "resolvedPath": "#app/legacy/containers/BulletedList"
      },
      {
        "source": "#app/legacy/containers/Blocks",
        "resolvedPath": "#app/legacy/containers/Blocks"
      },
      {
        "source": "#contexts/ServiceContext",
        "resolvedPath": "#contexts/ServiceContext"
      },
      {
        "source": "./styles",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\live\\[id]\\KeyPoints\\styles.ts"
      },
      {
        "source": "./types",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\live\\[id]\\KeyPoints\\types.ts"
      }
    ]
  },
  "ws-nextjs-app\\pages\\[service]\\live\\[id]\\KeyPoints\\styles.ts": {
    "incomingDependencies": [
      "ws-nextjs-app\\pages\\[service]\\live\\[id]\\KeyPoints\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "../../../../../../src/app/utilities/pixelsToRem",
        "resolvedPath": "src\\app\\utilities\\pixelsToRem\\index.ts"
      }
    ]
  },
  "ws-nextjs-app\\pages\\[service]\\live\\[id]\\KeyPoints\\types.ts": {
    "incomingDependencies": [
      "ws-nextjs-app\\pages\\[service]\\live\\[id]\\KeyPoints\\index.stories.tsx",
      "ws-nextjs-app\\pages\\[service]\\live\\[id]\\KeyPoints\\index.tsx",
      "ws-nextjs-app\\pages\\[service]\\live\\[id]\\LivePageLayout.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "#models/types/optimo",
        "resolvedPath": "#models/types/optimo"
      }
    ]
  },
  "ws-nextjs-app\\pages\\[service]\\live\\[id]\\live.stories.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#app/components/PageLayoutWrapper",
        "resolvedPath": "#app/components/PageLayoutWrapper"
      },
      {
        "source": "#data/pidgin/live/c7p765ynk9qt.json",
        "resolvedPath": "#data/pidgin/live/c7p765ynk9qt.json"
      },
      {
        "source": "#data/pidgin/posts/postFixtureCleaned.json",
        "resolvedPath": "#data/pidgin/posts/postFixtureCleaned.json"
      },
      {
        "source": "./LivePageLayout",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\live\\[id]\\LivePageLayout.tsx"
      }
    ]
  },
  "ws-nextjs-app\\pages\\[service]\\live\\[id]\\live.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "react-helmet",
        "resolvedPath": "react-helmet"
      },
      {
        "source": "#app/components/react-testing-library-with-providers",
        "resolvedPath": "#app/components/react-testing-library-with-providers"
      },
      {
        "source": "#data/pidgin/live/c7p765ynk9qt.json",
        "resolvedPath": "#data/pidgin/live/c7p765ynk9qt.json"
      },
      {
        "source": "#data/pidgin/posts/postFixture.json",
        "resolvedPath": "#data/pidgin/posts/postFixture.json"
      },
      {
        "source": "next",
        "resolvedPath": "next"
      },
      {
        "source": "./LivePageLayout",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\live\\[id]\\LivePageLayout.tsx"
      },
      {
        "source": "./[[...variant]].page",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\live\\[id]\\[[...variant]].page.tsx"
      }
    ]
  },
  "ws-nextjs-app\\pages\\[service]\\live\\[id]\\LivePageLayout.tsx": {
    "incomingDependencies": [
      "ws-nextjs-app\\pages\\[service]\\live\\[id]\\live.stories.tsx",
      "ws-nextjs-app\\pages\\[service]\\live\\[id]\\live.test.tsx",
      "ws-nextjs-app\\pages\\[service]\\live\\[id]\\[[...variant]].page.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "#contexts/ServiceContext",
        "resolvedPath": "#contexts/ServiceContext"
      },
      {
        "source": "#app/components/Pagination",
        "resolvedPath": "#app/components/Pagination"
      },
      {
        "source": "#app/components/ChartbeatAnalytics",
        "resolvedPath": "#app/components/ChartbeatAnalytics"
      },
      {
        "source": "#app/components/ATIAnalytics",
        "resolvedPath": "#app/components/ATIAnalytics"
      },
      {
        "source": "#app/components/ATIAnalytics/types",
        "resolvedPath": "#app/components/ATIAnalytics/types"
      },
      {
        "source": "#app/contexts/RequestContext",
        "resolvedPath": "#app/contexts/RequestContext"
      },
      {
        "source": "#app/components/Metadata",
        "resolvedPath": "#app/components/Metadata"
      },
      {
        "source": "#app/components/LinkedData",
        "resolvedPath": "#app/components/LinkedData"
      },
      {
        "source": "#app/lib/seoUtils/getLiveBlogPostingSchema",
        "resolvedPath": "#app/lib/seoUtils/getLiveBlogPostingSchema"
      },
      {
        "source": "./Stream",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\live\\[id]\\Stream\\index.tsx"
      },
      {
        "source": "./Header",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\live\\[id]\\Header\\index.tsx"
      },
      {
        "source": "./KeyPoints",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\live\\[id]\\KeyPoints\\index.tsx"
      },
      {
        "source": "./styles",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\live\\[id]\\styles.ts"
      },
      {
        "source": "./Post/types",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\live\\[id]\\Post\\types.ts"
      },
      {
        "source": "./KeyPoints/types",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\live\\[id]\\KeyPoints\\types.ts"
      }
    ]
  },
  "ws-nextjs-app\\pages\\[service]\\live\\[id]\\Post\\fixture.ts": {
    "incomingDependencies": [
      "ws-nextjs-app\\pages\\[service]\\live\\[id]\\Post\\index.test.tsx"
    ],
    "outgoingDependencies": []
  },
  "ws-nextjs-app\\pages\\[service]\\live\\[id]\\Post\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#app/components/react-testing-library-with-providers",
        "resolvedPath": "#app/components/react-testing-library-with-providers"
      },
      {
        "source": "#data/pidgin/posts/postFixtureCleaned.json",
        "resolvedPath": "#data/pidgin/posts/postFixtureCleaned.json"
      },
      {
        "source": "../../../../../../src/app/routes/utils/pageTypes",
        "resolvedPath": "src\\app\\routes\\utils\\pageTypes.ts"
      },
      {
        "source": ".",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\live\\[id]\\Post\\index.tsx"
      },
      {
        "source": "./fixture",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\live\\[id]\\Post\\fixture.ts"
      }
    ]
  },
  "ws-nextjs-app\\pages\\[service]\\live\\[id]\\Post\\index.tsx": {
    "incomingDependencies": [
      "ws-nextjs-app\\pages\\[service]\\live\\[id]\\Post\\index.test.tsx",
      "ws-nextjs-app\\pages\\[service]\\live\\[id]\\Stream\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "#models/types/optimo",
        "resolvedPath": "#models/types/optimo"
      },
      {
        "source": "#app/components/Heading",
        "resolvedPath": "#app/components/Heading"
      },
      {
        "source": "#app/components/Text",
        "resolvedPath": "#app/components/Text"
      },
      {
        "source": "#app/legacy/containers/Blocks",
        "resolvedPath": "#app/legacy/containers/Blocks"
      },
      {
        "source": "#app/legacy/containers/Paragraph",
        "resolvedPath": "#app/legacy/containers/Paragraph"
      },
      {
        "source": "#app/legacy/containers/BulletedList",
        "resolvedPath": "#app/legacy/containers/BulletedList"
      },
      {
        "source": "#app/components/MediaLoader",
        "resolvedPath": "#app/components/MediaLoader"
      },
      {
        "source": "#app/components/VisuallyHiddenText",
        "resolvedPath": "#app/components/VisuallyHiddenText"
      },
      {
        "source": "#app/components/ImageWithCaption",
        "resolvedPath": "#app/components/ImageWithCaption"
      },
      {
        "source": "#app/contexts/ServiceContext",
        "resolvedPath": "#app/contexts/ServiceContext"
      },
      {
        "source": "#app/lib/utilities/isTenHoursAgo",
        "resolvedPath": "#app/lib/utilities/isTenHoursAgo"
      },
      {
        "source": "#app/legacy/psammead/psammead-timestamp-container/src",
        "resolvedPath": "#app/legacy/psammead/psammead-timestamp-container/src"
      },
      {
        "source": "#app/legacy/containers/SocialEmbed",
        "resolvedPath": "#app/legacy/containers/SocialEmbed"
      },
      {
        "source": "#app/components/MediaLoader/types",
        "resolvedPath": "#app/components/MediaLoader/types"
      },
      {
        "source": "./styles",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\live\\[id]\\Post\\styles.tsx"
      },
      {
        "source": "./types",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\live\\[id]\\Post\\types.ts"
      },
      {
        "source": "../ShareButton",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\live\\[id]\\ShareButton\\index.tsx"
      }
    ]
  },
  "ws-nextjs-app\\pages\\[service]\\live\\[id]\\Post\\styles.tsx": {
    "incomingDependencies": [
      "ws-nextjs-app\\pages\\[service]\\live\\[id]\\Post\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "../../../../../../src/app/utilities/pixelsToRem",
        "resolvedPath": "src\\app\\utilities\\pixelsToRem\\index.ts"
      }
    ]
  },
  "ws-nextjs-app\\pages\\[service]\\live\\[id]\\Post\\types.ts": {
    "incomingDependencies": [
      "src\\app\\lib\\seoUtils\\getLiveBlogPostingSchema\\index.test.ts",
      "src\\app\\lib\\seoUtils\\getLiveBlogPostingSchema\\index.ts",
      "ws-nextjs-app\\pages\\[service]\\live\\[id]\\LivePageLayout.tsx",
      "ws-nextjs-app\\pages\\[service]\\live\\[id]\\Post\\index.tsx",
      "ws-nextjs-app\\pages\\[service]\\live\\[id]\\Stream\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "#models/types/optimo",
        "resolvedPath": "#models/types/optimo"
      }
    ]
  },
  "ws-nextjs-app\\pages\\[service]\\live\\[id]\\ShareButton\\index.stories.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": ".",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\live\\[id]\\ShareButton\\index.tsx"
      },
      {
        "source": "./metadata.json",
        "resolvedPath": "..\\EXIM\\Work\\iterate-ai\\dep-graph\\metadata.json"
      }
    ]
  },
  "ws-nextjs-app\\pages\\[service]\\live\\[id]\\ShareButton\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#app/components/react-testing-library-with-providers",
        "resolvedPath": "#app/components/react-testing-library-with-providers"
      },
      {
        "source": "@testing-library/user-event",
        "resolvedPath": "@testing-library/user-event"
      },
      {
        "source": ".",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\live\\[id]\\ShareButton\\index.tsx"
      }
    ]
  },
  "ws-nextjs-app\\pages\\[service]\\live\\[id]\\ShareButton\\index.tsx": {
    "incomingDependencies": [
      "ws-nextjs-app\\pages\\[service]\\live\\[id]\\Post\\index.tsx",
      "ws-nextjs-app\\pages\\[service]\\live\\[id]\\ShareButton\\index.stories.tsx",
      "ws-nextjs-app\\pages\\[service]\\live\\[id]\\ShareButton\\index.test.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "#app/hooks/useClickTrackerHandler",
        "resolvedPath": "#app/hooks/useClickTrackerHandler"
      },
      {
        "source": "#app/hooks/useViewTracker",
        "resolvedPath": "#app/hooks/useViewTracker"
      },
      {
        "source": "#app/components/VisuallyHiddenText",
        "resolvedPath": "#app/components/VisuallyHiddenText"
      },
      {
        "source": "#app/contexts/ServiceContext",
        "resolvedPath": "#app/contexts/ServiceContext"
      },
      {
        "source": "./styles",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\live\\[id]\\ShareButton\\styles.ts"
      }
    ]
  },
  "ws-nextjs-app\\pages\\[service]\\live\\[id]\\ShareButton\\styles.ts": {
    "incomingDependencies": [
      "ws-nextjs-app\\pages\\[service]\\live\\[id]\\ShareButton\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "../../../../../../src/app/utilities/pixelsToRem",
        "resolvedPath": "src\\app\\utilities\\pixelsToRem\\index.ts"
      }
    ]
  },
  "ws-nextjs-app\\pages\\[service]\\live\\[id]\\Stream\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#app/components/react-testing-library-with-providers",
        "resolvedPath": "#app/components/react-testing-library-with-providers"
      },
      {
        "source": "#data/pidgin/posts/postFixture.json",
        "resolvedPath": "#data/pidgin/posts/postFixture.json"
      },
      {
        "source": "./index",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\live\\[id]\\Stream\\index.tsx"
      }
    ]
  },
  "ws-nextjs-app\\pages\\[service]\\live\\[id]\\Stream\\index.tsx": {
    "incomingDependencies": [
      "ws-nextjs-app\\pages\\[service]\\live\\[id]\\LivePageLayout.tsx",
      "ws-nextjs-app\\pages\\[service]\\live\\[id]\\Stream\\index.test.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "#app/components/Heading",
        "resolvedPath": "#app/components/Heading"
      },
      {
        "source": "#app/components/Paragraph",
        "resolvedPath": "#app/components/Paragraph"
      },
      {
        "source": "#contexts/ServiceContext",
        "resolvedPath": "#contexts/ServiceContext"
      },
      {
        "source": "../Post/types",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\live\\[id]\\Post\\types.ts"
      },
      {
        "source": "../Post",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\live\\[id]\\Post\\index.tsx"
      },
      {
        "source": "./styles",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\live\\[id]\\Stream\\styles.tsx"
      }
    ]
  },
  "ws-nextjs-app\\pages\\[service]\\live\\[id]\\Stream\\styles.tsx": {
    "incomingDependencies": [
      "ws-nextjs-app\\pages\\[service]\\live\\[id]\\Stream\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      }
    ]
  },
  "ws-nextjs-app\\pages\\[service]\\live\\[id]\\styles.ts": {
    "incomingDependencies": [
      "ws-nextjs-app\\pages\\[service]\\live\\[id]\\LivePageLayout.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "../../../../../src/app/utilities/pixelsToRem",
        "resolvedPath": "src\\app\\utilities\\pixelsToRem\\index.ts"
      }
    ]
  },
  "ws-nextjs-app\\pages\\[service]\\live\\[id]\\[[...variant]].page.tsx": {
    "incomingDependencies": [
      "ws-nextjs-app\\pages\\[service]\\live\\[id]\\live.test.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "next",
        "resolvedPath": "next"
      },
      {
        "source": "#app/routes/utils/constructPageFetchUrl",
        "resolvedPath": "#app/routes/utils/constructPageFetchUrl"
      },
      {
        "source": "#app/lib/utilities/getToggles/withCache",
        "resolvedPath": "#app/lib/utilities/getToggles/withCache"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": "#lib/logger.node",
        "resolvedPath": "#lib/logger.node"
      },
      {
        "source": "#server/utilities/logResponseTime",
        "resolvedPath": "#server/utilities/logResponseTime"
      },
      {
        "source": "#app/routes/utils/isAppPath",
        "resolvedPath": "#app/routes/utils/isAppPath"
      },
      {
        "source": "#app/lib/logger.const",
        "resolvedPath": "#app/lib/logger.const"
      },
      {
        "source": "#models/types/fetch",
        "resolvedPath": "#models/types/fetch"
      },
      {
        "source": "#app/routes/utils/getEnvironment",
        "resolvedPath": "#app/routes/utils/getEnvironment"
      },
      {
        "source": "#app/routes/utils/fetchPageData",
        "resolvedPath": "#app/routes/utils/fetchPageData"
      },
      {
        "source": "#app/routes/utils/certsRequired",
        "resolvedPath": "#app/routes/utils/certsRequired"
      },
      {
        "source": "#app/lib/statusCodes.const",
        "resolvedPath": "#app/lib/statusCodes.const"
      },
      {
        "source": "#server/utilities/customMetrics",
        "resolvedPath": "#server/utilities/customMetrics"
      },
      {
        "source": "#server/utilities/customMetrics/metrics.const",
        "resolvedPath": "#server/utilities/customMetrics/metrics.const"
      },
      {
        "source": "#app/routes/utils/isLitePath",
        "resolvedPath": "#app/routes/utils/isLitePath"
      },
      {
        "source": "#app/models/types/pageDataParams",
        "resolvedPath": "#app/models/types/pageDataParams"
      },
      {
        "source": "../../../../utilities/undiciAgent",
        "resolvedPath": "ws-nextjs-app\\utilities\\undiciAgent\\index.ts"
      },
      {
        "source": "./LivePageLayout",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\live\\[id]\\LivePageLayout.tsx"
      },
      {
        "source": "../../../../../src/server/utilities/extractHeaders",
        "resolvedPath": "src\\server\\utilities\\extractHeaders\\index.ts"
      },
      {
        "source": "../../../../utilities/pageQueryValidator",
        "resolvedPath": "ws-nextjs-app\\utilities\\pageQueryValidator\\index.ts"
      }
    ]
  },
  "ws-nextjs-app\\pages\\[service]\\send\\[id]\\ClosedScreen\\index.stories.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": ".",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\ClosedScreen\\index.tsx"
      }
    ]
  },
  "ws-nextjs-app\\pages\\[service]\\send\\[id]\\ClosedScreen\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#app/components/react-testing-library-with-providers",
        "resolvedPath": "#app/components/react-testing-library-with-providers"
      },
      {
        "source": ".",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\ClosedScreen\\index.tsx"
      }
    ]
  },
  "ws-nextjs-app\\pages\\[service]\\send\\[id]\\ClosedScreen\\index.tsx": {
    "incomingDependencies": [
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\ClosedScreen\\index.stories.tsx",
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\ClosedScreen\\index.test.tsx",
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\UGCPageLayout.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#app/contexts/ServiceContext",
        "resolvedPath": "#app/contexts/ServiceContext"
      },
      {
        "source": "#app/legacy/psammead/psammead-timestamp-container/src",
        "resolvedPath": "#app/legacy/psammead/psammead-timestamp-container/src"
      },
      {
        "source": "../GenericMessage",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\GenericMessage\\index.tsx"
      },
      {
        "source": "./styles",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\ClosedScreen\\styles.ts"
      },
      {
        "source": "../fallbackTranslations",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\fallbackTranslations.ts"
      }
    ]
  },
  "ws-nextjs-app\\pages\\[service]\\send\\[id]\\ClosedScreen\\styles.ts": {
    "incomingDependencies": [
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\ClosedScreen\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      }
    ]
  },
  "ws-nextjs-app\\pages\\[service]\\send\\[id]\\ErrorScreen\\index.stories.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": ".",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\ErrorScreen\\index.tsx"
      }
    ]
  },
  "ws-nextjs-app\\pages\\[service]\\send\\[id]\\ErrorScreen\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#app/components/react-testing-library-with-providers",
        "resolvedPath": "#app/components/react-testing-library-with-providers"
      },
      {
        "source": ".",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\ErrorScreen\\index.tsx"
      }
    ]
  },
  "ws-nextjs-app\\pages\\[service]\\send\\[id]\\ErrorScreen\\index.tsx": {
    "incomingDependencies": [
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\ErrorScreen\\index.stories.tsx",
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\ErrorScreen\\index.test.tsx",
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\UGCPageLayout.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#app/contexts/ServiceContext",
        "resolvedPath": "#app/contexts/ServiceContext"
      },
      {
        "source": "../GenericMessage",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\GenericMessage\\index.tsx"
      },
      {
        "source": "../fallbackTranslations",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\fallbackTranslations.ts"
      }
    ]
  },
  "ws-nextjs-app\\pages\\[service]\\send\\[id]\\fallbackTranslations.ts": {
    "incomingDependencies": [
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\ClosedScreen\\index.tsx",
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\ErrorScreen\\index.tsx",
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormField\\FieldLabel.tsx",
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormField\\File\\FileList\\index.tsx",
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormField\\File\\index.tsx",
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormField\\TextArea.tsx",
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormScreen\\index.tsx",
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\MessageBox\\InvalidMessageBox.tsx",
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\SubmitButton\\index.tsx",
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\SuccessScreen\\index.tsx",
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\UGCPageLayout.tsx",
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\UploadingScreen\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "#app/models/types/translations",
        "resolvedPath": "#app/models/types/translations"
      }
    ]
  },
  "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormContext\\index.tsx": {
    "incomingDependencies": [
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormField\\File\\FileList\\index.tsx",
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormField\\File\\index.test.tsx",
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormField\\File\\index.tsx",
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormField\\index.stories.tsx",
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormField\\index.test.tsx",
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormField\\index.test.tsx",
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormField\\index.tsx",
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormScreen\\index.test.tsx",
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormScreen\\index.test.tsx",
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormScreen\\index.tsx",
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\MessageBox\\ErrorSummaryBox.tsx",
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\MessageBox\\index.test.tsx",
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\SuccessScreen\\index.test.tsx",
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\SuccessScreen\\index.test.tsx",
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\SuccessScreen\\index.tsx",
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\UGCPageLayout.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "uuid",
        "resolvedPath": "uuid"
      },
      {
        "source": "next/router",
        "resolvedPath": "next/router"
      },
      {
        "source": "#app/lib/statusCodes.const",
        "resolvedPath": "#app/lib/statusCodes.const"
      },
      {
        "source": "#app/routes/utils/getEnvironment",
        "resolvedPath": "#app/routes/utils/getEnvironment"
      },
      {
        "source": "../types",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\types.ts"
      },
      {
        "source": "../UGCSendError",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\UGCSendError.ts"
      },
      {
        "source": "./utils/validateFunctions",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormContext\\utils\\validateFunctions.ts"
      },
      {
        "source": "./utils/getValidationErrors",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormContext\\utils\\getValidationErrors.ts"
      }
    ]
  },
  "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormContext\\utils\\getValidationErrors.test.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "./getValidationErrors",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormContext\\utils\\getValidationErrors.ts"
      },
      {
        "source": "../../types",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\types.ts"
      }
    ]
  },
  "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormContext\\utils\\getValidationErrors.ts": {
    "incomingDependencies": [
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormContext\\index.tsx",
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormContext\\utils\\getValidationErrors.test.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../types",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\types.ts"
      }
    ]
  },
  "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormContext\\utils\\validateFunctions.test.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../../types",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\types.ts"
      },
      {
        "source": "./validateFunctions",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormContext\\utils\\validateFunctions.ts"
      }
    ]
  },
  "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormContext\\utils\\validateFunctions.ts": {
    "incomingDependencies": [
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormContext\\index.tsx",
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormContext\\utils\\validateFunctions.test.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../types",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\types.ts"
      }
    ]
  },
  "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormField\\Checkbox.tsx": {
    "incomingDependencies": [
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormField\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "../types",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\types.ts"
      },
      {
        "source": "./FieldLabel",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormField\\FieldLabel.tsx"
      },
      {
        "source": "./styles",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormField\\styles.ts"
      },
      {
        "source": "../MessageBox/InvalidMessageBox",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\MessageBox\\InvalidMessageBox.tsx"
      }
    ]
  },
  "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormField\\EmailInput.tsx": {
    "incomingDependencies": [
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormField\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "../types",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\types.ts"
      },
      {
        "source": "./FieldLabel",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormField\\FieldLabel.tsx"
      },
      {
        "source": "./styles",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormField\\styles.ts"
      },
      {
        "source": "../MessageBox/InvalidMessageBox",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\MessageBox\\InvalidMessageBox.tsx"
      }
    ]
  },
  "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormField\\FieldLabel.tsx": {
    "incomingDependencies": [
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormField\\Checkbox.tsx",
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormField\\EmailInput.tsx",
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormField\\File\\index.tsx",
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormField\\Telephone.tsx",
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormField\\TextArea.tsx",
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormField\\TextInput.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "#app/components/Text",
        "resolvedPath": "#app/components/Text"
      },
      {
        "source": "#app/contexts/ServiceContext",
        "resolvedPath": "#app/contexts/ServiceContext"
      },
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../types",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\types.ts"
      },
      {
        "source": "./styles",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormField\\styles.ts"
      },
      {
        "source": "../fallbackTranslations",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\fallbackTranslations.ts"
      }
    ]
  },
  "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormField\\File\\FileList\\index.tsx": {
    "incomingDependencies": [
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormField\\File\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "#app/components/VisuallyHiddenText",
        "resolvedPath": "#app/components/VisuallyHiddenText"
      },
      {
        "source": "#app/components/LiveRegion/LiveRegionContext",
        "resolvedPath": "#app/components/LiveRegion/LiveRegionContext"
      },
      {
        "source": "#app/contexts/ServiceContext",
        "resolvedPath": "#app/contexts/ServiceContext"
      },
      {
        "source": "../../../types",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\types.ts"
      },
      {
        "source": "../../../FormContext",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormContext\\index.tsx"
      },
      {
        "source": "../styles",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormField\\File\\styles.ts"
      },
      {
        "source": "../svgs",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormField\\File\\svgs.tsx"
      },
      {
        "source": "../../../MessageBox/InvalidMessageBox",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\MessageBox\\InvalidMessageBox.tsx"
      },
      {
        "source": "../../../fallbackTranslations",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\fallbackTranslations.ts"
      }
    ]
  },
  "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormField\\File\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#app/components/react-testing-library-with-providers",
        "resolvedPath": "#app/components/react-testing-library-with-providers"
      },
      {
        "source": "@testing-library/user-event",
        "resolvedPath": "@testing-library/user-event"
      },
      {
        "source": "#app/components/LiveRegion/LiveRegionContext",
        "resolvedPath": "#app/components/LiveRegion/LiveRegionContext"
      },
      {
        "source": ".",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormField\\File\\index.tsx"
      },
      {
        "source": "./svgs",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormField\\File\\svgs.tsx"
      },
      {
        "source": "../../FormContext",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormContext\\index.tsx"
      },
      {
        "source": "../../types",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\types.ts"
      }
    ]
  },
  "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormField\\File\\index.tsx": {
    "incomingDependencies": [
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormField\\File\\index.test.tsx",
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormField\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "#app/components/LiveRegion/LiveRegionContext",
        "resolvedPath": "#app/components/LiveRegion/LiveRegionContext"
      },
      {
        "source": "#app/components/Text",
        "resolvedPath": "#app/components/Text"
      },
      {
        "source": "#app/contexts/ServiceContext",
        "resolvedPath": "#app/contexts/ServiceContext"
      },
      {
        "source": "../FieldLabel",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormField\\FieldLabel.tsx"
      },
      {
        "source": "../../types",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\types.ts"
      },
      {
        "source": "../../FormContext",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormContext\\index.tsx"
      },
      {
        "source": "./styles",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormField\\File\\styles.ts"
      },
      {
        "source": "./svgs",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormField\\File\\svgs.tsx"
      },
      {
        "source": "./FileList",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormField\\File\\FileList\\index.tsx"
      },
      {
        "source": "../../MessageBox/InvalidMessageBox",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\MessageBox\\InvalidMessageBox.tsx"
      },
      {
        "source": "../../fallbackTranslations",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\fallbackTranslations.ts"
      }
    ]
  },
  "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormField\\File\\styles.ts": {
    "incomingDependencies": [
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormField\\File\\FileList\\index.tsx",
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormField\\File\\index.tsx",
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormField\\File\\svgs.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "#app/utilities/pixelsToRem",
        "resolvedPath": "#app/utilities/pixelsToRem"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "../styles",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormField\\styles.ts"
      }
    ]
  },
  "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormField\\File\\svgs.tsx": {
    "incomingDependencies": [
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormField\\File\\FileList\\index.tsx",
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormField\\File\\index.test.tsx",
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormField\\File\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "./styles",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormField\\File\\styles.ts"
      }
    ]
  },
  "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormField\\index.stories.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#app/components/ThemeProvider",
        "resolvedPath": "#app/components/ThemeProvider"
      },
      {
        "source": "#data/mundo/send/test2qq3x8vt.json",
        "resolvedPath": "#data/mundo/send/test2qq3x8vt.json"
      },
      {
        "source": "#data/somali/send/u130092370.json",
        "resolvedPath": "#data/somali/send/u130092370.json"
      },
      {
        "source": "next/router",
        "resolvedPath": "next/router"
      },
      {
        "source": "next/dist/shared/lib/router-context.shared-runtime",
        "resolvedPath": "next/dist/shared/lib/router-context.shared-runtime"
      },
      {
        "source": ".",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormField\\index.tsx"
      },
      {
        "source": "../FormContext",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormContext\\index.tsx"
      },
      {
        "source": "../types",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\types.ts"
      }
    ]
  },
  "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormField\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#app/components/react-testing-library-with-providers",
        "resolvedPath": "#app/components/react-testing-library-with-providers"
      },
      {
        "source": "../FormContext",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormContext\\index.tsx"
      },
      {
        "source": ".",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormField\\index.tsx"
      },
      {
        "source": "../types",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\types.ts"
      },
      {
        "source": "../FormContext",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormContext\\index.tsx"
      }
    ]
  },
  "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormField\\index.tsx": {
    "incomingDependencies": [
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormField\\index.stories.tsx",
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormField\\index.test.tsx",
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormScreen\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../types",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\types.ts"
      },
      {
        "source": "./styles",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormField\\styles.ts"
      },
      {
        "source": "../FormContext",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormContext\\index.tsx"
      },
      {
        "source": "./TextInput",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormField\\TextInput.tsx"
      },
      {
        "source": "./EmailInput",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormField\\EmailInput.tsx"
      },
      {
        "source": "./Checkbox",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormField\\Checkbox.tsx"
      },
      {
        "source": "./Telephone",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormField\\Telephone.tsx"
      },
      {
        "source": "./TextArea",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormField\\TextArea.tsx"
      },
      {
        "source": "./File",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormField\\File\\index.tsx"
      }
    ]
  },
  "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormField\\styles.ts": {
    "incomingDependencies": [
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormField\\Checkbox.tsx",
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormField\\EmailInput.tsx",
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormField\\FieldLabel.tsx",
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormField\\File\\styles.ts",
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormField\\index.tsx",
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormField\\Telephone.tsx",
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormField\\TextArea.tsx",
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormField\\TextInput.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "#app/components/ThemeProvider/focusIndicator",
        "resolvedPath": "#app/components/ThemeProvider/focusIndicator"
      },
      {
        "source": "#app/utilities/pixelsToRem",
        "resolvedPath": "#app/utilities/pixelsToRem"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "#app/components/InlineLink/index.styles",
        "resolvedPath": "#app/components/InlineLink/index.styles"
      }
    ]
  },
  "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormField\\Telephone.tsx": {
    "incomingDependencies": [
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormField\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "../types",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\types.ts"
      },
      {
        "source": "./FieldLabel",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormField\\FieldLabel.tsx"
      },
      {
        "source": "./styles",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormField\\styles.ts"
      },
      {
        "source": "../MessageBox/InvalidMessageBox",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\MessageBox\\InvalidMessageBox.tsx"
      }
    ]
  },
  "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormField\\TextArea.tsx": {
    "incomingDependencies": [
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormField\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "#app/components/Paragraph",
        "resolvedPath": "#app/components/Paragraph"
      },
      {
        "source": "#app/contexts/ServiceContext",
        "resolvedPath": "#app/contexts/ServiceContext"
      },
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "../types",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\types.ts"
      },
      {
        "source": "./FieldLabel",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormField\\FieldLabel.tsx"
      },
      {
        "source": "./styles",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormField\\styles.ts"
      },
      {
        "source": "../MessageBox/InvalidMessageBox",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\MessageBox\\InvalidMessageBox.tsx"
      },
      {
        "source": "../fallbackTranslations",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\fallbackTranslations.ts"
      }
    ]
  },
  "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormField\\TextInput.tsx": {
    "incomingDependencies": [
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormField\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "../types",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\types.ts"
      },
      {
        "source": "./FieldLabel",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormField\\FieldLabel.tsx"
      },
      {
        "source": "./styles",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormField\\styles.ts"
      },
      {
        "source": "../MessageBox/InvalidMessageBox",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\MessageBox\\InvalidMessageBox.tsx"
      }
    ]
  },
  "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormScreen\\fixture.tsx": {
    "incomingDependencies": [
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormScreen\\index.test.tsx"
    ],
    "outgoingDependencies": []
  },
  "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormScreen\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#app/components/react-testing-library-with-providers",
        "resolvedPath": "#app/components/react-testing-library-with-providers"
      },
      {
        "source": "./fixture",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormScreen\\fixture.tsx"
      },
      {
        "source": "../FormContext",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormContext\\index.tsx"
      },
      {
        "source": "../FormContext",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormContext\\index.tsx"
      },
      {
        "source": ".",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormScreen\\index.tsx"
      },
      {
        "source": "../types",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\types.ts"
      }
    ]
  },
  "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormScreen\\index.tsx": {
    "incomingDependencies": [
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormScreen\\index.test.tsx",
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\UGCPageLayout.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "#app/components/Heading",
        "resolvedPath": "#app/components/Heading"
      },
      {
        "source": "#app/components/LiveRegion/LiveRegionContext",
        "resolvedPath": "#app/components/LiveRegion/LiveRegionContext"
      },
      {
        "source": "#app/components/LiveRegion",
        "resolvedPath": "#app/components/LiveRegion"
      },
      {
        "source": "#app/contexts/ServiceContext",
        "resolvedPath": "#app/contexts/ServiceContext"
      },
      {
        "source": "../FormContext",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormContext\\index.tsx"
      },
      {
        "source": "../types",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\types.ts"
      },
      {
        "source": "../FormField",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormField\\index.tsx"
      },
      {
        "source": "./styles",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormScreen\\styles.ts"
      },
      {
        "source": "../SubmitButton",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\SubmitButton\\index.tsx"
      },
      {
        "source": "../fallbackTranslations",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\fallbackTranslations.ts"
      },
      {
        "source": "../MessageBox/ErrorSummaryBox",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\MessageBox\\ErrorSummaryBox.tsx"
      }
    ]
  },
  "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormScreen\\styles.ts": {
    "incomingDependencies": [
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormScreen\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "#app/utilities/pixelsToRem",
        "resolvedPath": "#app/utilities/pixelsToRem"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "#app/components/InlineLink/index.styles",
        "resolvedPath": "#app/components/InlineLink/index.styles"
      }
    ]
  },
  "ws-nextjs-app\\pages\\[service]\\send\\[id]\\GenericMessage\\index.tsx": {
    "incomingDependencies": [
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\ClosedScreen\\index.tsx",
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\ErrorScreen\\index.tsx",
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\UGCPageLayout.tsx",
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\UploadingScreen\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "#app/components/Heading",
        "resolvedPath": "#app/components/Heading"
      },
      {
        "source": "#app/components/Paragraph",
        "resolvedPath": "#app/components/Paragraph"
      },
      {
        "source": "./styles",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\GenericMessage\\styles.ts"
      }
    ]
  },
  "ws-nextjs-app\\pages\\[service]\\send\\[id]\\GenericMessage\\styles.ts": {
    "incomingDependencies": [
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\GenericMessage\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      }
    ]
  },
  "ws-nextjs-app\\pages\\[service]\\send\\[id]\\MessageBox\\ErrorSummaryBox.tsx": {
    "incomingDependencies": [
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormScreen\\index.tsx",
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\MessageBox\\index.test.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#app/components/ThemeProvider/palette",
        "resolvedPath": "#app/components/ThemeProvider/palette"
      },
      {
        "source": "#app/components/BulletedList",
        "resolvedPath": "#app/components/BulletedList"
      },
      {
        "source": "#app/components/Text",
        "resolvedPath": "#app/components/Text"
      },
      {
        "source": "#app/hooks/useAdroidDetection",
        "resolvedPath": "#app/hooks/useAdroidDetection"
      },
      {
        "source": "../FormContext",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormContext\\index.tsx"
      },
      {
        "source": "./InvalidMessageBox",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\MessageBox\\InvalidMessageBox.tsx"
      },
      {
        "source": "./styles",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\MessageBox\\styles.ts"
      },
      {
        "source": "../types",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\types.ts"
      }
    ]
  },
  "ws-nextjs-app\\pages\\[service]\\send\\[id]\\MessageBox\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#app/components/react-testing-library-with-providers",
        "resolvedPath": "#app/components/react-testing-library-with-providers"
      },
      {
        "source": "#hooks/useAdroidDetection",
        "resolvedPath": "#hooks/useAdroidDetection"
      },
      {
        "source": "./ErrorSummaryBox",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\MessageBox\\ErrorSummaryBox.tsx"
      },
      {
        "source": "../FormContext",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormContext\\index.tsx"
      },
      {
        "source": "../types",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\types.ts"
      }
    ]
  },
  "ws-nextjs-app\\pages\\[service]\\send\\[id]\\MessageBox\\InvalidMessageBox.tsx": {
    "incomingDependencies": [
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormField\\Checkbox.tsx",
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormField\\EmailInput.tsx",
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormField\\File\\FileList\\index.tsx",
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormField\\File\\index.tsx",
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormField\\Telephone.tsx",
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormField\\TextArea.tsx",
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormField\\TextInput.tsx",
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\MessageBox\\ErrorSummaryBox.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#app/contexts/ServiceContext",
        "resolvedPath": "#app/contexts/ServiceContext"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "#app/components/Text",
        "resolvedPath": "#app/components/Text"
      },
      {
        "source": "#app/components/VisuallyHiddenText",
        "resolvedPath": "#app/components/VisuallyHiddenText"
      },
      {
        "source": "../types",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\types.ts"
      },
      {
        "source": "./styles",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\MessageBox\\styles.ts"
      },
      {
        "source": "../fallbackTranslations",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\fallbackTranslations.ts"
      }
    ]
  },
  "ws-nextjs-app\\pages\\[service]\\send\\[id]\\MessageBox\\styles.ts": {
    "incomingDependencies": [
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\MessageBox\\ErrorSummaryBox.tsx",
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\MessageBox\\InvalidMessageBox.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "#app/components/ThemeProvider/focusIndicator",
        "resolvedPath": "#app/components/ThemeProvider/focusIndicator"
      },
      {
        "source": "#app/utilities/pixelsToRem",
        "resolvedPath": "#app/utilities/pixelsToRem"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      }
    ]
  },
  "ws-nextjs-app\\pages\\[service]\\send\\[id]\\send.stories.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#app/components/PageLayoutWrapper",
        "resolvedPath": "#app/components/PageLayoutWrapper"
      },
      {
        "source": "next/router",
        "resolvedPath": "next/router"
      },
      {
        "source": "next/dist/shared/lib/router-context.shared-runtime",
        "resolvedPath": "next/dist/shared/lib/router-context.shared-runtime"
      },
      {
        "source": "#data/mundo/send/test2qq3x8vt.json",
        "resolvedPath": "#data/mundo/send/test2qq3x8vt.json"
      },
      {
        "source": "#data/somali/send/u130092370.json",
        "resolvedPath": "#data/somali/send/u130092370.json"
      },
      {
        "source": "#data/hausa/send/u143732177.json",
        "resolvedPath": "#data/hausa/send/u143732177.json"
      },
      {
        "source": "./UGCPageLayout",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\UGCPageLayout.tsx"
      },
      {
        "source": "./types",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\types.ts"
      }
    ]
  },
  "ws-nextjs-app\\pages\\[service]\\send\\[id]\\styles.ts": {
    "incomingDependencies": [
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\UGCPageLayout.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "../../../../../src/app/utilities/pixelsToRem",
        "resolvedPath": "src\\app\\utilities\\pixelsToRem\\index.ts"
      }
    ]
  },
  "ws-nextjs-app\\pages\\[service]\\send\\[id]\\SubmitButton\\index.stories.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#app/components/ThemeProvider",
        "resolvedPath": "#app/components/ThemeProvider"
      },
      {
        "source": ".",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\SubmitButton\\index.tsx"
      }
    ]
  },
  "ws-nextjs-app\\pages\\[service]\\send\\[id]\\SubmitButton\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#app/components/react-testing-library-with-providers",
        "resolvedPath": "#app/components/react-testing-library-with-providers"
      },
      {
        "source": ".",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\SubmitButton\\index.tsx"
      }
    ]
  },
  "ws-nextjs-app\\pages\\[service]\\send\\[id]\\SubmitButton\\index.tsx": {
    "incomingDependencies": [
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormScreen\\index.tsx",
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\SubmitButton\\index.stories.tsx",
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\SubmitButton\\index.test.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#app/contexts/ServiceContext",
        "resolvedPath": "#app/contexts/ServiceContext"
      },
      {
        "source": "./styles",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\SubmitButton\\styles.ts"
      },
      {
        "source": "../fallbackTranslations",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\fallbackTranslations.ts"
      }
    ]
  },
  "ws-nextjs-app\\pages\\[service]\\send\\[id]\\SubmitButton\\styles.ts": {
    "incomingDependencies": [
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\SubmitButton\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      }
    ]
  },
  "ws-nextjs-app\\pages\\[service]\\send\\[id]\\SuccessScreen\\index.stories.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": ".",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\SuccessScreen\\index.tsx"
      }
    ]
  },
  "ws-nextjs-app\\pages\\[service]\\send\\[id]\\SuccessScreen\\index.styles.ts": {
    "incomingDependencies": [
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\SuccessScreen\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "#app/components/InlineLink/index.styles",
        "resolvedPath": "#app/components/InlineLink/index.styles"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      }
    ]
  },
  "ws-nextjs-app\\pages\\[service]\\send\\[id]\\SuccessScreen\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#app/components/react-testing-library-with-providers",
        "resolvedPath": "#app/components/react-testing-library-with-providers"
      },
      {
        "source": ".",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\SuccessScreen\\index.tsx"
      },
      {
        "source": "../FormContext",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormContext\\index.tsx"
      },
      {
        "source": "../FormContext",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormContext\\index.tsx"
      }
    ]
  },
  "ws-nextjs-app\\pages\\[service]\\send\\[id]\\SuccessScreen\\index.tsx": {
    "incomingDependencies": [
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\SuccessScreen\\index.stories.tsx",
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\SuccessScreen\\index.test.tsx",
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\UGCPageLayout.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "#app/components/Heading",
        "resolvedPath": "#app/components/Heading"
      },
      {
        "source": "#app/components/Paragraph",
        "resolvedPath": "#app/components/Paragraph"
      },
      {
        "source": "#app/components/Text",
        "resolvedPath": "#app/components/Text"
      },
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#app/contexts/ServiceContext",
        "resolvedPath": "#app/contexts/ServiceContext"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\SuccessScreen\\index.styles.ts"
      },
      {
        "source": "./svgs",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\SuccessScreen\\svgs.tsx"
      },
      {
        "source": "../FormContext",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormContext\\index.tsx"
      },
      {
        "source": "../fallbackTranslations",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\fallbackTranslations.ts"
      }
    ]
  },
  "ws-nextjs-app\\pages\\[service]\\send\\[id]\\SuccessScreen\\svgs.tsx": {
    "incomingDependencies": [
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\SuccessScreen\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      }
    ]
  },
  "ws-nextjs-app\\pages\\[service]\\send\\[id]\\types.ts": {
    "incomingDependencies": [
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormContext\\index.tsx",
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormContext\\utils\\getValidationErrors.test.ts",
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormContext\\utils\\getValidationErrors.ts",
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormContext\\utils\\validateFunctions.test.ts",
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormContext\\utils\\validateFunctions.ts",
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormField\\Checkbox.tsx",
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormField\\EmailInput.tsx",
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormField\\FieldLabel.tsx",
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormField\\File\\FileList\\index.tsx",
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormField\\File\\index.test.tsx",
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormField\\File\\index.tsx",
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormField\\index.stories.tsx",
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormField\\index.test.tsx",
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormField\\index.tsx",
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormField\\Telephone.tsx",
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormField\\TextArea.tsx",
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormField\\TextInput.tsx",
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormScreen\\index.test.tsx",
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormScreen\\index.tsx",
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\MessageBox\\ErrorSummaryBox.tsx",
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\MessageBox\\index.test.tsx",
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\MessageBox\\InvalidMessageBox.tsx",
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\send.stories.tsx",
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\UGCErrorPayload.ts",
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\UGCPageLayout.test.tsx",
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\UGCPageLayout.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#app/models/types/global",
        "resolvedPath": "#app/models/types/global"
      }
    ]
  },
  "ws-nextjs-app\\pages\\[service]\\send\\[id]\\UGCErrorPayload.ts": {
    "incomingDependencies": [
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\UGCSendError.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "./types",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\types.ts"
      }
    ]
  },
  "ws-nextjs-app\\pages\\[service]\\send\\[id]\\UGCPageLayout.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#app/components/react-testing-library-with-providers",
        "resolvedPath": "#app/components/react-testing-library-with-providers"
      },
      {
        "source": "#data/mundo/send/test2qq3x8vt.json",
        "resolvedPath": "#data/mundo/send/test2qq3x8vt.json"
      },
      {
        "source": "./UGCPageLayout",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\UGCPageLayout.tsx"
      },
      {
        "source": "./types",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\types.ts"
      }
    ]
  },
  "ws-nextjs-app\\pages\\[service]\\send\\[id]\\UGCPageLayout.tsx": {
    "incomingDependencies": [
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\send.stories.tsx",
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\UGCPageLayout.test.tsx",
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\[[...variant]].page.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "#app/components/Metadata",
        "resolvedPath": "#app/components/Metadata"
      },
      {
        "source": "#app/contexts/ServiceContext",
        "resolvedPath": "#app/contexts/ServiceContext"
      },
      {
        "source": "./styles",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\styles.ts"
      },
      {
        "source": "./types",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\types.ts"
      },
      {
        "source": "./FormContext",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormContext\\index.tsx"
      },
      {
        "source": "./FormScreen",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormScreen\\index.tsx"
      },
      {
        "source": "./SuccessScreen",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\SuccessScreen\\index.tsx"
      },
      {
        "source": "./ErrorScreen",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\ErrorScreen\\index.tsx"
      },
      {
        "source": "./UploadingScreen",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\UploadingScreen\\index.tsx"
      },
      {
        "source": "./GenericMessage",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\GenericMessage\\index.tsx"
      },
      {
        "source": "./fallbackTranslations",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\fallbackTranslations.ts"
      },
      {
        "source": "./ClosedScreen",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\ClosedScreen\\index.tsx"
      }
    ]
  },
  "ws-nextjs-app\\pages\\[service]\\send\\[id]\\UGCSendError.ts": {
    "incomingDependencies": [
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\FormContext\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "./UGCErrorPayload",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\UGCErrorPayload.ts"
      }
    ]
  },
  "ws-nextjs-app\\pages\\[service]\\send\\[id]\\UploadingScreen\\index.test.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#app/components/react-testing-library-with-providers",
        "resolvedPath": "#app/components/react-testing-library-with-providers"
      },
      {
        "source": ".",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\UploadingScreen\\index.tsx"
      }
    ]
  },
  "ws-nextjs-app\\pages\\[service]\\send\\[id]\\UploadingScreen\\index.tsx": {
    "incomingDependencies": [
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\UGCPageLayout.tsx",
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\UploadingScreen\\index.test.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "#app/contexts/ServiceContext",
        "resolvedPath": "#app/contexts/ServiceContext"
      },
      {
        "source": "../GenericMessage",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\GenericMessage\\index.tsx"
      },
      {
        "source": "../fallbackTranslations",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\fallbackTranslations.ts"
      }
    ]
  },
  "ws-nextjs-app\\pages\\[service]\\send\\[id]\\[[...variant]].page.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "next",
        "resolvedPath": "next"
      },
      {
        "source": "#lib/logger.node",
        "resolvedPath": "#lib/logger.node"
      },
      {
        "source": "#models/types/pageDataParams",
        "resolvedPath": "#models/types/pageDataParams"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": "#app/routes/utils/isLitePath",
        "resolvedPath": "#app/routes/utils/isLitePath"
      },
      {
        "source": "#app/routes/utils/isAppPath",
        "resolvedPath": "#app/routes/utils/isAppPath"
      },
      {
        "source": "../../../../utilities/pageRequests/getPageData",
        "resolvedPath": "ws-nextjs-app\\utilities\\pageRequests\\getPageData.ts"
      },
      {
        "source": "./UGCPageLayout",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\send\\[id]\\UGCPageLayout.tsx"
      },
      {
        "source": "../../../../../src/server/utilities/extractHeaders",
        "resolvedPath": "src\\server\\utilities\\extractHeaders\\index.ts"
      }
    ]
  },
  "ws-nextjs-app\\pages\\[service]\\[[...]].page.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "next",
        "resolvedPath": "next"
      },
      {
        "source": "#server/utilities/logResponseTime",
        "resolvedPath": "#server/utilities/logResponseTime"
      },
      {
        "source": "#app/routes/utils/isLitePath",
        "resolvedPath": "#app/routes/utils/isLitePath"
      },
      {
        "source": "#server/utilities/extractHeaders",
        "resolvedPath": "#server/utilities/extractHeaders"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": "./av-embeds/AvEmbedsPageLayout",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\av-embeds\\AvEmbedsPageLayout.tsx"
      },
      {
        "source": "./av-embeds/handleAvRoute",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\av-embeds\\handleAvRoute.ts"
      },
      {
        "source": "./av-embeds/types",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\av-embeds\\types.ts"
      }
    ]
  },
  "ws-nextjs-app\\pages\\_app.page.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "next/app",
        "resolvedPath": "next/app"
      },
      {
        "source": "#app/components/ATIAnalytics/types",
        "resolvedPath": "#app/components/ATIAnalytics/types"
      },
      {
        "source": "#app/components/ThemeProvider",
        "resolvedPath": "#app/components/ThemeProvider"
      },
      {
        "source": "../../src/app/contexts/ToggleContext",
        "resolvedPath": "src\\app\\contexts\\ToggleContext\\index.tsx"
      },
      {
        "source": "../../src/app/contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../../src/app/contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext\\index.tsx"
      },
      {
        "source": "../../src/app/contexts/EventTrackingContext",
        "resolvedPath": "src\\app\\contexts\\EventTrackingContext\\index.tsx"
      },
      {
        "source": "../../src/app/contexts/UserContext",
        "resolvedPath": "src\\app\\contexts\\UserContext\\index.tsx"
      },
      {
        "source": "../../src/app/pages/ErrorPage/ErrorPage",
        "resolvedPath": "src\\app\\pages\\ErrorPage\\ErrorPage.jsx"
      },
      {
        "source": "../../src/app/models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global.ts"
      },
      {
        "source": "../../src/app/components/PageLayoutWrapper",
        "resolvedPath": "src\\app\\components\\PageLayoutWrapper\\index.tsx"
      }
    ]
  },
  "ws-nextjs-app\\pages\\_document.page.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "next/document",
        "resolvedPath": "next/document"
      },
      {
        "source": "next/script",
        "resolvedPath": "next/script"
      },
      {
        "source": "react",
        "resolvedPath": "react"
      },
      {
        "source": "react-helmet",
        "resolvedPath": "react-helmet"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "@emotion/server/create-instance",
        "resolvedPath": "@emotion/server/create-instance"
      },
      {
        "source": "@emotion/cache",
        "resolvedPath": "@emotion/cache"
      },
      {
        "source": "#app/routes/utils/isAppPath",
        "resolvedPath": "#app/routes/utils/isAppPath"
      },
      {
        "source": "#app/routes/utils/isLitePath",
        "resolvedPath": "#app/routes/utils/isLitePath"
      },
      {
        "source": "#lib/utilities/getEnvConfig",
        "resolvedPath": "#lib/utilities/getEnvConfig"
      },
      {
        "source": "#server/Document/Renderers/LiteRenderer",
        "resolvedPath": "#server/Document/Renderers/LiteRenderer"
      },
      {
        "source": "#server/Document/Renderers/litePageTransforms",
        "resolvedPath": "#server/Document/Renderers/litePageTransforms"
      },
      {
        "source": "#server/utilities/customMetrics",
        "resolvedPath": "#server/utilities/customMetrics"
      },
      {
        "source": "#server/utilities/customMetrics/metrics.const",
        "resolvedPath": "#server/utilities/customMetrics/metrics.const"
      },
      {
        "source": "#lib/logger.node",
        "resolvedPath": "#lib/logger.node"
      },
      {
        "source": "#lib/logger.const",
        "resolvedPath": "#lib/logger.const"
      },
      {
        "source": "#app/lib/statusCodes.const",
        "resolvedPath": "#app/lib/statusCodes.const"
      },
      {
        "source": "#app/lib/noJs.const",
        "resolvedPath": "#app/lib/noJs.const"
      },
      {
        "source": "../utilities/removeSensitiveHeaders",
        "resolvedPath": "ws-nextjs-app\\utilities\\removeSensitiveHeaders\\index.ts"
      },
      {
        "source": "../utilities/derivePageType",
        "resolvedPath": "ws-nextjs-app\\utilities\\derivePageType\\index.ts"
      }
    ]
  },
  "ws-nextjs-app\\setupTests.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "@testing-library/jest-dom",
        "resolvedPath": "@testing-library/jest-dom"
      },
      {
        "source": "node:util",
        "resolvedPath": "node:util"
      },
      {
        "source": "node:stream/web",
        "resolvedPath": "node:stream/web"
      }
    ]
  },
  "ws-nextjs-app\\utilities\\cspHeaderResponse\\index.test.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "next/server",
        "resolvedPath": "next/server"
      },
      {
        "source": ".",
        "resolvedPath": "ws-nextjs-app\\utilities\\cspHeaderResponse\\index.ts"
      }
    ]
  },
  "ws-nextjs-app\\utilities\\cspHeaderResponse\\index.ts": {
    "incomingDependencies": [
      "ws-nextjs-app\\middleware.page.ts",
      "ws-nextjs-app\\utilities\\cspHeaderResponse\\index.test.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "next/server",
        "resolvedPath": "next/server"
      },
      {
        "source": "#server/utilities/cspHeader/directives",
        "resolvedPath": "#server/utilities/cspHeader/directives"
      },
      {
        "source": "#app/routes/utils/fetchPageData/utils/getRouteProps/fallbackServiceParam",
        "resolvedPath": "#app/routes/utils/fetchPageData/utils/getRouteProps/fallbackServiceParam"
      },
      {
        "source": "#app/routes/utils/isAmpPath",
        "resolvedPath": "#app/routes/utils/isAmpPath"
      },
      {
        "source": "#lib/utilities/isLive",
        "resolvedPath": "#lib/utilities/isLive"
      }
    ]
  },
  "ws-nextjs-app\\utilities\\derivePageType\\index.test.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      },
      {
        "source": ".",
        "resolvedPath": "ws-nextjs-app\\utilities\\derivePageType\\index.ts"
      }
    ]
  },
  "ws-nextjs-app\\utilities\\derivePageType\\index.ts": {
    "incomingDependencies": [
      "ws-nextjs-app\\pages\\_document.page.tsx",
      "ws-nextjs-app\\utilities\\derivePageType\\index.test.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "#app/models/types/global",
        "resolvedPath": "#app/models/types/global"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "#app/routes/utils/pageTypes"
      }
    ]
  },
  "ws-nextjs-app\\utilities\\pageQueryValidator\\index.test.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": ".",
        "resolvedPath": "ws-nextjs-app\\utilities\\pageQueryValidator\\index.ts"
      }
    ]
  },
  "ws-nextjs-app\\utilities\\pageQueryValidator\\index.ts": {
    "incomingDependencies": [
      "ws-nextjs-app\\pages\\[service]\\live\\[id]\\[[...variant]].page.tsx",
      "ws-nextjs-app\\utilities\\pageQueryValidator\\index.test.ts"
    ],
    "outgoingDependencies": []
  },
  "ws-nextjs-app\\utilities\\pageRequests\\getPageData.test.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "#testHelpers/loggerMock",
        "resolvedPath": "#testHelpers/loggerMock"
      },
      {
        "source": "#app/routes/utils/fetchPageData",
        "resolvedPath": "#app/routes/utils/fetchPageData"
      },
      {
        "source": "#app/lib/utilities/getToggles",
        "resolvedPath": "#app/lib/utilities/getToggles"
      },
      {
        "source": "./getPageData",
        "resolvedPath": "ws-nextjs-app\\utilities\\pageRequests\\getPageData.ts"
      }
    ]
  },
  "ws-nextjs-app\\utilities\\pageRequests\\getPageData.ts": {
    "incomingDependencies": [
      "ws-nextjs-app\\pages\\[service]\\send\\[id]\\[[...variant]].page.tsx",
      "ws-nextjs-app\\utilities\\pageRequests\\getPageData.test.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "#app/lib/logger.const",
        "resolvedPath": "#app/lib/logger.const"
      },
      {
        "source": "#app/lib/utilities/getToggles",
        "resolvedPath": "#app/lib/utilities/getToggles"
      },
      {
        "source": "#app/models/types/fetch",
        "resolvedPath": "#app/models/types/fetch"
      },
      {
        "source": "#app/models/types/pageDataParams",
        "resolvedPath": "#app/models/types/pageDataParams"
      },
      {
        "source": "#app/routes/utils/constructPageFetchUrl",
        "resolvedPath": "#app/routes/utils/constructPageFetchUrl"
      },
      {
        "source": "#server/utilities/customMetrics",
        "resolvedPath": "#server/utilities/customMetrics"
      },
      {
        "source": "#app/routes/utils/getEnvironment",
        "resolvedPath": "#app/routes/utils/getEnvironment"
      },
      {
        "source": "#server/utilities/customMetrics/metrics.const",
        "resolvedPath": "#server/utilities/customMetrics/metrics.const"
      },
      {
        "source": "#app/routes/utils/fetchPageData",
        "resolvedPath": "#app/routes/utils/fetchPageData"
      },
      {
        "source": "#app/routes/utils/certsRequired",
        "resolvedPath": "#app/routes/utils/certsRequired"
      },
      {
        "source": "../undiciAgent",
        "resolvedPath": "ws-nextjs-app\\utilities\\undiciAgent\\index.ts"
      }
    ]
  },
  "ws-nextjs-app\\utilities\\removeSensitiveHeaders\\index.test.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": ".",
        "resolvedPath": "ws-nextjs-app\\utilities\\removeSensitiveHeaders\\index.ts"
      }
    ]
  },
  "ws-nextjs-app\\utilities\\removeSensitiveHeaders\\index.ts": {
    "incomingDependencies": [
      "ws-nextjs-app\\pages\\_document.page.tsx",
      "ws-nextjs-app\\utilities\\removeSensitiveHeaders\\index.test.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "http",
        "resolvedPath": "http"
      }
    ]
  },
  "ws-nextjs-app\\utilities\\undiciAgent\\certs.ts": {
    "incomingDependencies": [
      "ws-nextjs-app\\utilities\\undiciAgent\\index.test.ts",
      "ws-nextjs-app\\utilities\\undiciAgent\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "fs",
        "resolvedPath": "fs"
      }
    ]
  },
  "ws-nextjs-app\\utilities\\undiciAgent\\index.test.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "undici",
        "resolvedPath": "undici"
      },
      {
        "source": ".",
        "resolvedPath": "ws-nextjs-app\\utilities\\undiciAgent\\index.ts"
      },
      {
        "source": "./certs",
        "resolvedPath": "ws-nextjs-app\\utilities\\undiciAgent\\certs.ts"
      }
    ]
  },
  "ws-nextjs-app\\utilities\\undiciAgent\\index.ts": {
    "incomingDependencies": [
      "ws-nextjs-app\\pages\\[service]\\av-embeds\\handleAvRoute.ts",
      "ws-nextjs-app\\pages\\[service]\\live\\[id]\\[[...variant]].page.tsx",
      "ws-nextjs-app\\utilities\\pageRequests\\getPageData.ts",
      "ws-nextjs-app\\utilities\\undiciAgent\\index.test.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "undici",
        "resolvedPath": "undici"
      },
      {
        "source": "tls",
        "resolvedPath": "tls"
      },
      {
        "source": "./certs",
        "resolvedPath": "ws-nextjs-app\\utilities\\undiciAgent\\certs.ts"
      }
    ]
  }
}