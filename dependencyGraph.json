{
  "src\\app\\components\\Ad\\Amp\\AdSlot\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\Ad\\Amp\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "#lib/utilities/isLive",
        "resolvedPath": "src\\app\\lib\\utilities\\isLive"
      },
      {
        "source": "../../../../routes/utils/pageTypes",
        "resolvedPath": "src\\app\\routes\\utils\\pageTypes.ts"
      },
      {
        "source": "../../../../models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global.ts"
      },
      {
        "source": "../../types",
        "resolvedPath": "src\\app\\components\\Ad\\types.ts"
      },
      {
        "source": "../../../ThemeProvider/mediaQueries",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\mediaQueries.ts"
      }
    ]
  },
  "src\\app\\components\\Ad\\Amp\\index.styles.ts": {
    "incomingDependencies": [
      "src\\app\\components\\Ad\\Amp\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      }
    ]
  },
  "src\\app\\components\\Ad\\Amp\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\Ad\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "react-helmet",
        "resolvedPath": "node_modules\\@types\\react\\-helmet"
      },
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext"
      },
      {
        "source": "#psammead/psammead-assets/src/amp-boilerplate",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-assets\\src\\amp-boilerplate"
      },
      {
        "source": "#app/lib/utilities/getEnvConfig",
        "resolvedPath": "src\\app\\lib\\utilities\\getEnvConfig"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../utilities/getAdsAriaLabel",
        "resolvedPath": "src\\app\\components\\Ad\\utilities\\getAdsAriaLabel\\index.ts"
      },
      {
        "source": "./AdSlot",
        "resolvedPath": "src\\app\\components\\Ad\\Amp\\AdSlot\\index.tsx"
      },
      {
        "source": "../../../models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global.ts"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\components\\Ad\\Amp\\index.styles.ts"
      },
      {
        "source": "../utilities/adSlot.styles",
        "resolvedPath": "src\\app\\components\\Ad\\utilities\\adSlot.styles.ts"
      },
      {
        "source": "../types",
        "resolvedPath": "src\\app\\components\\Ad\\types.ts"
      }
    ]
  },
  "src\\app\\components\\Ad\\Canonical\\AdBootstrapJs\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\Ad\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "react-helmet",
        "resolvedPath": "node_modules\\@types\\react\\-helmet"
      }
    ]
  },
  "src\\app\\components\\Ad\\Canonical\\index.styles.ts": {
    "incomingDependencies": [
      "src\\app\\components\\Ad\\Canonical\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      }
    ]
  },
  "src\\app\\components\\Ad\\Canonical\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\Ad\\index.tsx",
      "src\\app\\components\\MediaLoader\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "react-helmet",
        "resolvedPath": "node_modules\\@types\\react\\-helmet"
      },
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "#hooks/useLocation",
        "resolvedPath": "src\\app\\hooks\\useLocation"
      },
      {
        "source": "../../../lib/utilities/isLive",
        "resolvedPath": "src\\app\\lib\\utilities\\isLive\\index.js"
      },
      {
        "source": "../../../hooks/useOperaMiniDetection",
        "resolvedPath": "src\\app\\hooks\\useOperaMiniDetection\\index.jsx"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../utilities/getAdsAriaLabel",
        "resolvedPath": "src\\app\\components\\Ad\\utilities\\getAdsAriaLabel\\index.ts"
      },
      {
        "source": "../utilities/adSlot.styles",
        "resolvedPath": "src\\app\\components\\Ad\\utilities\\adSlot.styles.ts"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\components\\Ad\\Canonical\\index.styles.ts"
      },
      {
        "source": "../types",
        "resolvedPath": "src\\app\\components\\Ad\\types.ts"
      }
    ]
  },
  "src\\app\\components\\Ad\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\Ad\\MPU\\index.tsx",
      "src\\app\\pages\\ArticlePage\\ArticlePage.tsx",
      "src\\app\\pages\\FeatureIdxPage\\FeatureIdxPage.jsx",
      "src\\app\\pages\\FrontPage\\FrontPage.jsx",
      "src\\app\\pages\\HomePage\\HomePage.tsx",
      "src\\app\\pages\\TopicPage\\TopicPage.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "#hooks/useToggle",
        "resolvedPath": "src\\app\\hooks\\useToggle"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext"
      },
      {
        "source": "./Amp",
        "resolvedPath": "src\\app\\components\\Ad\\Amp\\index.tsx"
      },
      {
        "source": "./Canonical",
        "resolvedPath": "src\\app\\components\\Ad\\Canonical\\index.tsx"
      },
      {
        "source": "./types",
        "resolvedPath": "src\\app\\components\\Ad\\types.ts"
      },
      {
        "source": "./Canonical/AdBootstrapJs",
        "resolvedPath": "src\\app\\components\\Ad\\Canonical\\AdBootstrapJs\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\Ad\\MPU\\index.styles.ts": {
    "incomingDependencies": [
      "src\\app\\components\\Ad\\MPU\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      }
    ]
  },
  "src\\app\\components\\Ad\\MPU\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\pages\\FeatureIdxPage\\FeatureIdxPage.jsx",
      "src\\app\\pages\\FrontPage\\FrontPage.jsx",
      "src\\app\\pages\\HomePage\\HomePage.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "../../../lib/styles.const",
        "resolvedPath": "src\\app\\lib\\styles.const\\index.ts"
      },
      {
        "source": "..",
        "resolvedPath": "src\\app\\components\\Ad\\index.tsx"
      },
      {
        "source": "../types",
        "resolvedPath": "src\\app\\components\\Ad\\types.ts"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\components\\Ad\\MPU\\index.styles.ts"
      }
    ]
  },
  "src\\app\\components\\Ad\\types.ts": {
    "incomingDependencies": [
      "src\\app\\components\\Ad\\Amp\\AdSlot\\index.tsx",
      "src\\app\\components\\Ad\\Amp\\index.tsx",
      "src\\app\\components\\Ad\\Canonical\\index.tsx",
      "src\\app\\components\\Ad\\index.tsx",
      "src\\app\\components\\Ad\\MPU\\index.tsx",
      "src\\app\\components\\Ad\\utilities\\getAdsAriaLabel\\index.ts"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\components\\Ad\\utilities\\adSlot.styles.ts": {
    "incomingDependencies": [
      "src\\app\\components\\Ad\\Amp\\index.tsx",
      "src\\app\\components\\Ad\\Canonical\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      }
    ]
  },
  "src\\app\\components\\Ad\\utilities\\getAdsAriaLabel\\index.ts": {
    "incomingDependencies": [
      "src\\app\\components\\Ad\\Amp\\index.tsx",
      "src\\app\\components\\Ad\\Canonical\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../../models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global.ts"
      },
      {
        "source": "../../types",
        "resolvedPath": "src\\app\\components\\Ad\\types.ts"
      }
    ]
  },
  "src\\app\\components\\AmpIframe\\index.styles.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\AmpIframe\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "../../utilities/pixelsToRem",
        "resolvedPath": "src\\app\\utilities\\pixelsToRem\\index.ts"
      }
    ]
  },
  "src\\app\\components\\AmpIframe\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\Embeds\\AmpIframeEmbed\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "react-helmet",
        "resolvedPath": "node_modules\\@types\\react\\-helmet"
      },
      {
        "source": "#components/Grid",
        "resolvedPath": "src\\app\\legacy\\components\\Grid"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\components\\AmpIframe\\index.styles.tsx"
      }
    ]
  },
  "src\\app\\components\\ATIAnalytics\\amp\\ampAnalyticsJson.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ATIAnalytics\\amp\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../types",
        "resolvedPath": "src\\app\\components\\ATIAnalytics\\types.ts"
      }
    ]
  },
  "src\\app\\components\\ATIAnalytics\\amp\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\ATIAnalytics\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "#app/lib/utilities/getEnvConfig",
        "resolvedPath": "src\\app\\lib\\utilities\\getEnvConfig"
      },
      {
        "source": "./ampAnalyticsJson",
        "resolvedPath": "src\\app\\components\\ATIAnalytics\\amp\\ampAnalyticsJson.ts"
      },
      {
        "source": "../types",
        "resolvedPath": "src\\app\\components\\ATIAnalytics\\types.ts"
      }
    ]
  },
  "src\\app\\components\\ATIAnalytics\\atiUrl\\index.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ATIAnalytics\\beacon\\index.ts",
      "src\\app\\components\\ATIAnalytics\\params\\genericPage\\buildParams.ts",
      "src\\app\\components\\ATIAnalytics\\params\\indexPage\\buildParams.ts",
      "src\\app\\components\\ATIAnalytics\\params\\topicPage\\buildParams.ts",
      "src\\app\\components\\ATIAnalytics\\params\\tvRadioPage\\buildParams.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "#app/lib/utilities/getEnvConfig",
        "resolvedPath": "src\\app\\lib\\utilities\\getEnvConfig"
      },
      {
        "source": "../../../lib/analyticsUtils",
        "resolvedPath": "src\\app\\lib\\analyticsUtils\\index.js"
      },
      {
        "source": "../types",
        "resolvedPath": "src\\app\\components\\ATIAnalytics\\types.ts"
      }
    ]
  },
  "src\\app\\components\\ATIAnalytics\\beacon\\index.ts": {
    "incomingDependencies": [
      "src\\app\\hooks\\useClickTrackerHandler\\index.jsx",
      "src\\app\\hooks\\useViewTracker\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../lib/analyticsUtils/sendBeacon",
        "resolvedPath": "src\\app\\lib\\analyticsUtils\\sendBeacon\\index.js"
      },
      {
        "source": "../atiUrl",
        "resolvedPath": "src\\app\\components\\ATIAnalytics\\atiUrl\\index.ts"
      },
      {
        "source": "../types",
        "resolvedPath": "src\\app\\components\\ATIAnalytics\\types.ts"
      }
    ]
  },
  "src\\app\\components\\ATIAnalytics\\canonical\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\ATIAnalytics\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "#app/lib/utilities/getEnvConfig",
        "resolvedPath": "src\\app\\lib\\utilities\\getEnvConfig"
      },
      {
        "source": "#app/contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext"
      },
      {
        "source": "#app/lib/utilities/isOperaProxy",
        "resolvedPath": "src\\app\\lib\\utilities\\isOperaProxy"
      },
      {
        "source": "react-helmet",
        "resolvedPath": "node_modules\\@types\\react\\-helmet"
      },
      {
        "source": "../../../lib/analyticsUtils/sendBeacon",
        "resolvedPath": "src\\app\\lib\\analyticsUtils\\sendBeacon\\index.js"
      },
      {
        "source": "../types",
        "resolvedPath": "src\\app\\components\\ATIAnalytics\\types.ts"
      },
      {
        "source": "./sendBeaconOperaMiniScript",
        "resolvedPath": "src\\app\\components\\ATIAnalytics\\canonical\\sendBeaconOperaMiniScript.ts"
      }
    ]
  },
  "src\\app\\components\\ATIAnalytics\\canonical\\sendBeaconOperaMiniScript.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ATIAnalytics\\canonical\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "#app/lib/utilities/isOperaProxy",
        "resolvedPath": "src\\app\\lib\\utilities\\isOperaProxy"
      }
    ]
  },
  "src\\app\\components\\ATIAnalytics\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\pages\\ArticlePage\\ArticlePage.tsx",
      "src\\app\\pages\\FeatureIdxPage\\FeatureIdxPage.jsx",
      "src\\app\\pages\\FrontPage\\FrontPage.jsx",
      "src\\app\\pages\\HomePage\\HomePage.tsx",
      "src\\app\\pages\\LiveRadioPage\\LiveRadioPage.tsx",
      "src\\app\\pages\\MediaArticlePage\\MediaArticlePage.tsx",
      "src\\app\\pages\\MostReadPage\\MostReadPage.jsx",
      "src\\app\\pages\\OnDemandAudioPage\\OnDemandAudioPage.tsx",
      "src\\app\\pages\\OnDemandTvPage\\OnDemandTvPage.tsx",
      "src\\app\\pages\\TopicPage\\TopicPage.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext"
      },
      {
        "source": "../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "./canonical",
        "resolvedPath": "src\\app\\components\\ATIAnalytics\\canonical\\index.tsx"
      },
      {
        "source": "./amp",
        "resolvedPath": "src\\app\\components\\ATIAnalytics\\amp\\index.tsx"
      },
      {
        "source": "./types",
        "resolvedPath": "src\\app\\components\\ATIAnalytics\\types.ts"
      },
      {
        "source": "./params",
        "resolvedPath": "src\\app\\components\\ATIAnalytics\\params\\index.ts"
      }
    ]
  },
  "src\\app\\components\\ATIAnalytics\\params\\genericPage\\buildParams.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ATIAnalytics\\params\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../../lib/analyticsUtils",
        "resolvedPath": "src\\app\\lib\\analyticsUtils\\index.js"
      },
      {
        "source": "../../atiUrl",
        "resolvedPath": "src\\app\\components\\ATIAnalytics\\atiUrl\\index.ts"
      },
      {
        "source": "../../types",
        "resolvedPath": "src\\app\\components\\ATIAnalytics\\types.ts"
      }
    ]
  },
  "src\\app\\components\\ATIAnalytics\\params\\index.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ATIAnalytics\\index.tsx",
      "src\\app\\contexts\\EventTrackingContext\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../routes/utils/pageTypes",
        "resolvedPath": "src\\app\\routes\\utils\\pageTypes.ts"
      },
      {
        "source": "./tvRadioPage/buildParams",
        "resolvedPath": "src\\app\\components\\ATIAnalytics\\params\\tvRadioPage\\buildParams.ts"
      },
      {
        "source": "./genericPage/buildParams",
        "resolvedPath": "src\\app\\components\\ATIAnalytics\\params\\genericPage\\buildParams.ts"
      },
      {
        "source": "./indexPage/buildParams",
        "resolvedPath": "src\\app\\components\\ATIAnalytics\\params\\indexPage\\buildParams.ts"
      },
      {
        "source": "../../../contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext\\index.tsx"
      },
      {
        "source": "../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      },
      {
        "source": "../types",
        "resolvedPath": "src\\app\\components\\ATIAnalytics\\types.ts"
      },
      {
        "source": "../../../models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global.ts"
      }
    ]
  },
  "src\\app\\components\\ATIAnalytics\\params\\indexPage\\buildParams.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ATIAnalytics\\params\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../../lib/analyticsUtils",
        "resolvedPath": "src\\app\\lib\\analyticsUtils\\index.js"
      },
      {
        "source": "../../../../lib/analyticsUtils/indexPage",
        "resolvedPath": "src\\app\\lib\\analyticsUtils\\indexPage\\index.js"
      },
      {
        "source": "../../../../contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext\\index.tsx"
      },
      {
        "source": "../../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      },
      {
        "source": "../../atiUrl",
        "resolvedPath": "src\\app\\components\\ATIAnalytics\\atiUrl\\index.ts"
      },
      {
        "source": "../../types",
        "resolvedPath": "src\\app\\components\\ATIAnalytics\\types.ts"
      }
    ]
  },
  "src\\app\\components\\ATIAnalytics\\params\\topicPage\\buildParams.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../../../../lib/analyticsUtils",
        "resolvedPath": "src\\app\\lib\\analyticsUtils\\index.js"
      },
      {
        "source": "../../../../contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext\\index.tsx"
      },
      {
        "source": "../../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      },
      {
        "source": "../../atiUrl",
        "resolvedPath": "src\\app\\components\\ATIAnalytics\\atiUrl\\index.ts"
      },
      {
        "source": "../../types",
        "resolvedPath": "src\\app\\components\\ATIAnalytics\\types.ts"
      }
    ]
  },
  "src\\app\\components\\ATIAnalytics\\params\\tvRadioPage\\buildParams.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ATIAnalytics\\params\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../../lib/analyticsUtils",
        "resolvedPath": "src\\app\\lib\\analyticsUtils\\index.js"
      },
      {
        "source": "../../../../contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext\\index.tsx"
      },
      {
        "source": "../../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      },
      {
        "source": "../../atiUrl",
        "resolvedPath": "src\\app\\components\\ATIAnalytics\\atiUrl\\index.ts"
      },
      {
        "source": "../../types",
        "resolvedPath": "src\\app\\components\\ATIAnalytics\\types.ts"
      }
    ]
  },
  "src\\app\\components\\ATIAnalytics\\types.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ATIAnalytics\\amp\\ampAnalyticsJson.ts",
      "src\\app\\components\\ATIAnalytics\\amp\\index.tsx",
      "src\\app\\components\\ATIAnalytics\\atiUrl\\index.ts",
      "src\\app\\components\\ATIAnalytics\\beacon\\index.ts",
      "src\\app\\components\\ATIAnalytics\\canonical\\index.tsx",
      "src\\app\\components\\ATIAnalytics\\index.tsx",
      "src\\app\\components\\ATIAnalytics\\params\\genericPage\\buildParams.ts",
      "src\\app\\components\\ATIAnalytics\\params\\index.ts",
      "src\\app\\components\\ATIAnalytics\\params\\indexPage\\buildParams.ts",
      "src\\app\\components\\ATIAnalytics\\params\\topicPage\\buildParams.ts",
      "src\\app\\components\\ATIAnalytics\\params\\tvRadioPage\\buildParams.ts",
      "src\\app\\components\\react-testing-library-with-providers.tsx",
      "src\\app\\contexts\\EventTrackingContext\\index.tsx",
      "src\\app\\pages\\HomePage\\HomePage.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../../models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global.ts"
      },
      {
        "source": "../../contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext\\index.tsx"
      },
      {
        "source": "../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      }
    ]
  },
  "src\\app\\components\\Billboard\\fixtures.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\components\\Billboard\\index.styles.ts": {
    "incomingDependencies": [
      "src\\app\\components\\Billboard\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "../../utilities/pixelsToRem",
        "resolvedPath": "src\\app\\utilities\\pixelsToRem\\index.ts"
      }
    ]
  },
  "src\\app\\components\\Billboard\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\Curation\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "#app/hooks/useViewTracker",
        "resolvedPath": "src\\app\\hooks\\useViewTracker"
      },
      {
        "source": "#app/hooks/useClickTrackerHandler",
        "resolvedPath": "src\\app\\hooks\\useClickTrackerHandler"
      },
      {
        "source": "#app/models/types/eventTracking",
        "resolvedPath": "src\\app\\models\\types\\eventTracking"
      },
      {
        "source": "../Heading",
        "resolvedPath": "src\\app\\components\\Heading\\index.tsx"
      },
      {
        "source": "../LiveLabel",
        "resolvedPath": "src\\app\\components\\LiveLabel\\index.tsx"
      },
      {
        "source": "../MaskedImage",
        "resolvedPath": "src\\app\\components\\MaskedImage\\index.tsx"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\components\\Billboard\\index.styles.ts"
      },
      {
        "source": "../Text",
        "resolvedPath": "src\\app\\components\\Text\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\BulletedList\\index.styles.ts": {
    "incomingDependencies": [
      "src\\app\\components\\BulletedList\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      }
    ]
  },
  "src\\app\\components\\BulletedList\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\BulletedList\\index.jsx",
      "src\\app\\legacy\\containers\\BulletedListItem\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "../ThemeProvider/palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\components\\BulletedList\\index.styles.ts"
      }
    ]
  },
  "src\\app\\components\\Byline\\index.styles.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\Byline\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "../../utilities/pixelsToRem",
        "resolvedPath": "src\\app\\utilities\\pixelsToRem\\index.ts"
      }
    ]
  },
  "src\\app\\components\\Byline\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\pages\\ArticlePage\\ArticlePage.tsx",
      "src\\app\\pages\\MediaArticlePage\\MediaArticlePage.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "#app/models/types/optimo",
        "resolvedPath": "src\\app\\models\\types\\optimo"
      },
      {
        "source": "../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../VisuallyHiddenText",
        "resolvedPath": "src\\app\\components\\VisuallyHiddenText\\index.tsx"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\components\\Byline\\index.styles.tsx"
      },
      {
        "source": "../icons",
        "resolvedPath": "src\\app\\components\\icons\\index.tsx"
      },
      {
        "source": "../Text",
        "resolvedPath": "src\\app\\components\\Text\\index.tsx"
      },
      {
        "source": "../Image",
        "resolvedPath": "src\\app\\components\\Image\\index.tsx"
      },
      {
        "source": "./utilities/bylineExtractor",
        "resolvedPath": "src\\app\\components\\Byline\\utilities\\bylineExtractor\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\Byline\\utilities\\bylineExtractor\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\Byline\\index.tsx",
      "src\\app\\components\\Byline\\utilities\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "#app/models/types/optimo",
        "resolvedPath": "src\\app\\models\\types\\optimo"
      },
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "../../../../lib/utilities/ichefURL",
        "resolvedPath": "src\\app\\lib\\utilities\\ichefURL\\index.js"
      }
    ]
  },
  "src\\app\\components\\Byline\\utilities\\categoryName\\index.ts": {
    "incomingDependencies": [
      "src\\app\\components\\Byline\\utilities\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "ramda/src/isEmpty",
        "resolvedPath": "ramda/src/isEmpty"
      },
      {
        "source": "../../../../models/types/metadata",
        "resolvedPath": "src\\app\\models\\types\\metadata.ts"
      }
    ]
  },
  "src\\app\\components\\Byline\\utilities\\getAuthorTwitterHandle\\fixture\\index.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\components\\Byline\\utilities\\getAuthorTwitterHandle\\index.js": {
    "incomingDependencies": [
      "src\\app\\components\\Byline\\utilities\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "ramda/src/isEmpty",
        "resolvedPath": "ramda/src/isEmpty"
      }
    ]
  },
  "src\\app\\components\\Byline\\utilities\\index.ts": {
    "incomingDependencies": [
      "src\\app\\pages\\ArticlePage\\ArticlePage.tsx",
      "src\\app\\pages\\MediaArticlePage\\MediaArticlePage.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "./bylineExtractor",
        "resolvedPath": "src\\app\\components\\Byline\\utilities\\bylineExtractor\\index.tsx"
      },
      {
        "source": "./categoryName",
        "resolvedPath": "src\\app\\components\\Byline\\utilities\\categoryName\\index.ts"
      },
      {
        "source": "./getAuthorTwitterHandle",
        "resolvedPath": "src\\app\\components\\Byline\\utilities\\getAuthorTwitterHandle\\index.js"
      }
    ]
  },
  "src\\app\\components\\CallToActionLink\\index.styles.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\CallToActionLink\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      }
    ]
  },
  "src\\app\\components\\CallToActionLink\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\Embeds\\Uploader\\index.tsx",
      "src\\app\\components\\MessageBanner\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "#app/hooks/useClickTrackerHandler",
        "resolvedPath": "src\\app\\hooks\\useClickTrackerHandler"
      },
      {
        "source": "../Text",
        "resolvedPath": "src\\app\\components\\Text\\index.tsx"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\components\\CallToActionLink\\index.styles.tsx"
      },
      {
        "source": "./types",
        "resolvedPath": "src\\app\\components\\CallToActionLink\\types.ts"
      }
    ]
  },
  "src\\app\\components\\CallToActionLink\\types.ts": {
    "incomingDependencies": [
      "src\\app\\components\\CallToActionLink\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "#app/models/types/eventTracking",
        "resolvedPath": "src\\app\\models\\types\\eventTracking"
      }
    ]
  },
  "src\\app\\components\\Caption\\fixture.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "#models/blocks",
        "resolvedPath": "src\\app\\models\\blocks"
      },
      {
        "source": "#app/models/types/optimo",
        "resolvedPath": "src\\app\\models\\types\\optimo"
      }
    ]
  },
  "src\\app\\components\\Caption\\index.style.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\Caption\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "../ThemeProvider/spacings",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\spacings.ts"
      }
    ]
  },
  "src\\app\\components\\Caption\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\ImageWithCaption\\index.tsx",
      "src\\app\\components\\MediaLoader\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "#app/contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext"
      },
      {
        "source": "#app/legacy/containers/Blocks",
        "resolvedPath": "src\\app\\legacy\\containers\\Blocks"
      },
      {
        "source": "#app/models/types/optimo",
        "resolvedPath": "src\\app\\models\\types\\optimo"
      },
      {
        "source": "../DecoratedInline",
        "resolvedPath": "src\\app\\components\\DecoratedInline\\index.tsx"
      },
      {
        "source": "../VisuallyHiddenText",
        "resolvedPath": "src\\app\\components\\VisuallyHiddenText\\index.tsx"
      },
      {
        "source": "./index.style",
        "resolvedPath": "src\\app\\components\\Caption\\index.style.tsx"
      },
      {
        "source": "../Fragment",
        "resolvedPath": "src\\app\\components\\Fragment\\index.tsx"
      },
      {
        "source": "../Text",
        "resolvedPath": "src\\app\\components\\Text\\index.tsx"
      },
      {
        "source": "../DecoratedInlineLink",
        "resolvedPath": "src\\app\\components\\DecoratedInlineLink\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\ChartbeatAnalytics\\amp\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\ChartbeatAnalytics\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "../types",
        "resolvedPath": "src\\app\\components\\ChartbeatAnalytics\\types.ts"
      }
    ]
  },
  "src\\app\\components\\ChartbeatAnalytics\\canonical\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\contexts\\UserContext\\Chartbeat\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "react-helmet",
        "resolvedPath": "node_modules\\@types\\react\\-helmet"
      },
      {
        "source": "../types",
        "resolvedPath": "src\\app\\components\\ChartbeatAnalytics\\types.ts"
      },
      {
        "source": "../utils",
        "resolvedPath": "src\\app\\components\\ChartbeatAnalytics\\utils\\index.ts"
      }
    ]
  },
  "src\\app\\components\\ChartbeatAnalytics\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\pages\\ArticlePage\\ArticlePage.tsx",
      "src\\app\\pages\\FeatureIdxPage\\FeatureIdxPage.jsx",
      "src\\app\\pages\\FrontPage\\FrontPage.jsx",
      "src\\app\\pages\\HomePage\\HomePage.tsx",
      "src\\app\\pages\\LiveRadioPage\\LiveRadioPage.tsx",
      "src\\app\\pages\\MediaArticlePage\\MediaArticlePage.tsx",
      "src\\app\\pages\\MostReadPage\\MostReadPage.jsx",
      "src\\app\\pages\\OnDemandAudioPage\\OnDemandAudioPage.tsx",
      "src\\app\\pages\\OnDemandTvPage\\OnDemandTvPage.tsx",
      "src\\app\\pages\\TopicPage\\TopicPage.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "../../hooks/useToggle",
        "resolvedPath": "src\\app\\hooks\\useToggle\\index.js"
      },
      {
        "source": "../../contexts/UserContext",
        "resolvedPath": "src\\app\\contexts\\UserContext\\index.tsx"
      },
      {
        "source": "../../contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext\\index.tsx"
      },
      {
        "source": "../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "./amp",
        "resolvedPath": "src\\app\\components\\ChartbeatAnalytics\\amp\\index.tsx"
      },
      {
        "source": "./utils",
        "resolvedPath": "src\\app\\components\\ChartbeatAnalytics\\utils\\index.ts"
      },
      {
        "source": "./types",
        "resolvedPath": "src\\app\\components\\ChartbeatAnalytics\\types.ts"
      }
    ]
  },
  "src\\app\\components\\ChartbeatAnalytics\\types.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ChartbeatAnalytics\\amp\\index.tsx",
      "src\\app\\components\\ChartbeatAnalytics\\canonical\\index.tsx",
      "src\\app\\components\\ChartbeatAnalytics\\index.tsx",
      "src\\app\\contexts\\UserContext\\Chartbeat\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../../models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global.ts"
      },
      {
        "source": "../../models/types/metadata",
        "resolvedPath": "src\\app\\models\\types\\metadata.ts"
      }
    ]
  },
  "src\\app\\components\\ChartbeatAnalytics\\utils\\index.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ChartbeatAnalytics\\canonical\\index.tsx",
      "src\\app\\components\\ChartbeatAnalytics\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "js-cookie",
        "resolvedPath": "js-cookie"
      },
      {
        "source": "ramda/src/find",
        "resolvedPath": "ramda/src/find"
      },
      {
        "source": "ramda/src/propSatisfies",
        "resolvedPath": "ramda/src/propSatisfies"
      },
      {
        "source": "ramda/src/includes",
        "resolvedPath": "ramda/src/includes"
      },
      {
        "source": "../../../lib/utilities/onClient",
        "resolvedPath": "src\\app\\lib\\utilities\\onClient\\index.js"
      },
      {
        "source": "../../../lib/analyticsUtils",
        "resolvedPath": "src\\app\\lib\\analyticsUtils\\index.js"
      },
      {
        "source": "../../../routes/utils/pageTypes",
        "resolvedPath": "src\\app\\routes\\utils\\pageTypes.ts"
      },
      {
        "source": "../../../models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global.ts"
      },
      {
        "source": "../../../models/types/metadata",
        "resolvedPath": "src\\app\\models\\types\\metadata.ts"
      }
    ]
  },
  "src\\app\\components\\Copyright\\index.styles.ts": {
    "incomingDependencies": [
      "src\\app\\components\\Copyright\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      }
    ]
  },
  "src\\app\\components\\Copyright\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\ImageWithCaption\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../VisuallyHiddenText",
        "resolvedPath": "src\\app\\components\\VisuallyHiddenText\\index.tsx"
      },
      {
        "source": "../Text",
        "resolvedPath": "src\\app\\components\\Text\\index.tsx"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\components\\Copyright\\index.styles.ts"
      }
    ]
  },
  "src\\app\\components\\Curation\\CurationGrid\\index.styles.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\Curation\\CurationGrid\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      }
    ]
  },
  "src\\app\\components\\Curation\\CurationGrid\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\Curation\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\components\\Curation\\CurationGrid\\index.styles.tsx"
      },
      {
        "source": "../CurationPromo",
        "resolvedPath": "src\\app\\components\\Curation\\CurationPromo\\index.tsx"
      },
      {
        "source": "../types",
        "resolvedPath": "src\\app\\components\\Curation\\types.ts"
      }
    ]
  },
  "src\\app\\components\\Curation\\CurationPromo\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\Curation\\CurationGrid\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "moment",
        "resolvedPath": "moment"
      },
      {
        "source": "ramda/src/path",
        "resolvedPath": "ramda/src/path"
      },
      {
        "source": "#app/lib/utilities/formatDuration",
        "resolvedPath": "src\\app\\lib\\utilities\\formatDuration"
      },
      {
        "source": "#components/Promo",
        "resolvedPath": "src\\app\\legacy\\components\\Promo"
      },
      {
        "source": "#app/models/types/curationData",
        "resolvedPath": "src\\app\\models\\types\\curationData"
      },
      {
        "source": "../../VisuallyHiddenText",
        "resolvedPath": "src\\app\\components\\VisuallyHiddenText\\index.tsx"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../../../contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext\\index.tsx"
      },
      {
        "source": "../../LiveLabel",
        "resolvedPath": "src\\app\\components\\LiveLabel\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\Curation\\getComponentName\\index.ts": {
    "incomingDependencies": [
      "src\\app\\components\\Curation\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "#app/models/types/curationData",
        "resolvedPath": "src\\app\\models\\types\\curationData"
      }
    ]
  },
  "src\\app\\components\\Curation\\HierarchicalGrid\\dataStructures.js": {
    "incomingDependencies": [
      "src\\app\\components\\Curation\\HierarchicalGrid\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\components\\Curation\\HierarchicalGrid\\index.styles.tsx"
      }
    ]
  },
  "src\\app\\components\\Curation\\HierarchicalGrid\\fixtures.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\components\\Curation\\HierarchicalGrid\\index.styles.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\Curation\\HierarchicalGrid\\dataStructures.js",
      "src\\app\\components\\Curation\\HierarchicalGrid\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "#app/components/ThemeProvider/mediaQueries",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\mediaQueries"
      }
    ]
  },
  "src\\app\\components\\Curation\\HierarchicalGrid\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\Curation\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "moment",
        "resolvedPath": "moment"
      },
      {
        "source": "ramda/src/path",
        "resolvedPath": "ramda/src/path"
      },
      {
        "source": "../../VisuallyHiddenText",
        "resolvedPath": "src\\app\\components\\VisuallyHiddenText\\index.tsx"
      },
      {
        "source": "../../../lib/utilities/formatDuration",
        "resolvedPath": "src\\app\\lib\\utilities\\formatDuration\\index.js"
      },
      {
        "source": "../../../legacy/components/Promo",
        "resolvedPath": "src\\app\\legacy\\components\\Promo\\index.jsx"
      },
      {
        "source": "./dataStructures",
        "resolvedPath": "src\\app\\components\\Curation\\HierarchicalGrid\\dataStructures.js"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\components\\Curation\\HierarchicalGrid\\index.styles.tsx"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../types",
        "resolvedPath": "src\\app\\components\\Curation\\types.ts"
      },
      {
        "source": "../../../contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext\\index.tsx"
      },
      {
        "source": "../../LiveLabel",
        "resolvedPath": "src\\app\\components\\LiveLabel\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\Curation\\HierarchicalGrid\\liveFixtures.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\components\\Curation\\HierarchicalGrid\\mediaFixtures.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\components\\Curation\\index.styles.ts": {
    "incomingDependencies": [
      "src\\app\\components\\Curation\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      }
    ]
  },
  "src\\app\\components\\Curation\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\pages\\HomePage\\HomePage.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "#app/models/types/curationData",
        "resolvedPath": "src\\app\\models\\types\\curationData"
      },
      {
        "source": "#app/legacy/containers/RadioSchedule",
        "resolvedPath": "src\\app\\legacy\\containers\\RadioSchedule"
      },
      {
        "source": "../VisuallyHiddenText",
        "resolvedPath": "src\\app\\components\\VisuallyHiddenText\\index.tsx"
      },
      {
        "source": "./CurationGrid",
        "resolvedPath": "src\\app\\components\\Curation\\CurationGrid\\index.tsx"
      },
      {
        "source": "./HierarchicalGrid",
        "resolvedPath": "src\\app\\components\\Curation\\HierarchicalGrid\\index.tsx"
      },
      {
        "source": "./Subhead",
        "resolvedPath": "src\\app\\components\\Curation\\Subhead\\index.tsx"
      },
      {
        "source": "./getComponentName",
        "resolvedPath": "src\\app\\components\\Curation\\getComponentName\\index.ts"
      },
      {
        "source": "../MessageBanner",
        "resolvedPath": "src\\app\\components\\MessageBanner\\index.tsx"
      },
      {
        "source": "../MostRead",
        "resolvedPath": "src\\app\\components\\MostRead\\index.tsx"
      },
      {
        "source": "../ThemeProvider/palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "../Embeds/OEmbed",
        "resolvedPath": "src\\app\\components\\Embeds\\OEmbed\\index.tsx"
      },
      {
        "source": "../Billboard",
        "resolvedPath": "src\\app\\components\\Billboard\\index.tsx"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\components\\Curation\\index.styles.ts"
      }
    ]
  },
  "src\\app\\components\\Curation\\Subhead\\index.styles.ts": {
    "incomingDependencies": [
      "src\\app\\components\\Curation\\Subhead\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      }
    ]
  },
  "src\\app\\components\\Curation\\Subhead\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\Curation\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\components\\Curation\\Subhead\\index.styles.ts"
      },
      {
        "source": "../../icons",
        "resolvedPath": "src\\app\\components\\icons\\index.tsx"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\Curation\\types.ts": {
    "incomingDependencies": [
      "src\\app\\components\\Curation\\CurationGrid\\index.tsx",
      "src\\app\\components\\Curation\\HierarchicalGrid\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "#app/models/types/curationData",
        "resolvedPath": "src\\app\\models\\types\\curationData"
      }
    ]
  },
  "src\\app\\components\\DecoratedInline\\fixture.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "#app/models/types/optimo",
        "resolvedPath": "src\\app\\models\\types\\optimo"
      }
    ]
  },
  "src\\app\\components\\DecoratedInline\\index.style.ts": {
    "incomingDependencies": [
      "src\\app\\components\\DecoratedInline\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      }
    ]
  },
  "src\\app\\components\\DecoratedInline\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\Caption\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "#app/legacy/containers/Blocks",
        "resolvedPath": "src\\app\\legacy\\containers\\Blocks"
      },
      {
        "source": "#app/models/types/optimo",
        "resolvedPath": "src\\app\\models\\types\\optimo"
      },
      {
        "source": "../Fragment",
        "resolvedPath": "src\\app\\components\\Fragment\\index.tsx"
      },
      {
        "source": "../DecoratedInlineLink",
        "resolvedPath": "src\\app\\components\\DecoratedInlineLink\\index.tsx"
      },
      {
        "source": "../Text",
        "resolvedPath": "src\\app\\components\\Text\\index.tsx"
      },
      {
        "source": "./index.style",
        "resolvedPath": "src\\app\\components\\DecoratedInline\\index.style.ts"
      }
    ]
  },
  "src\\app\\components\\DecoratedInlineLink\\index.style.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\DecoratedInlineLink\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      }
    ]
  },
  "src\\app\\components\\DecoratedInlineLink\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\Caption\\index.tsx",
      "src\\app\\components\\DecoratedInline\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "#app/contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext"
      },
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "#app/legacy/containers/Blocks",
        "resolvedPath": "src\\app\\legacy\\containers\\Blocks"
      },
      {
        "source": "#app/lib/utilities/makeRelativeUrlPath",
        "resolvedPath": "src\\app\\lib\\utilities\\makeRelativeUrlPath"
      },
      {
        "source": "#app/models/types/optimo",
        "resolvedPath": "src\\app\\models\\types\\optimo"
      },
      {
        "source": "./index.style",
        "resolvedPath": "src\\app\\components\\DecoratedInlineLink\\index.style.tsx"
      },
      {
        "source": "../Fragment",
        "resolvedPath": "src\\app\\components\\Fragment\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\Disclaimer\\index.styles.ts": {
    "incomingDependencies": [
      "src\\app\\components\\Disclaimer\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "../../utilities/pixelsToRem",
        "resolvedPath": "src\\app\\utilities\\pixelsToRem\\index.ts"
      }
    ]
  },
  "src\\app\\components\\Disclaimer\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\pages\\ArticlePage\\ArticlePage.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "ramda/src/isEmpty",
        "resolvedPath": "ramda/src/isEmpty"
      },
      {
        "source": "../../legacy/components/Grid",
        "resolvedPath": "src\\app\\legacy\\components\\Grid\\index.jsx"
      },
      {
        "source": "../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../../contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext\\index.tsx"
      },
      {
        "source": "../../hooks/useToggle",
        "resolvedPath": "src\\app\\hooks\\useToggle\\index.js"
      },
      {
        "source": "../../routes/utils/pageTypes",
        "resolvedPath": "src\\app\\routes\\utils\\pageTypes.ts"
      },
      {
        "source": "../Text",
        "resolvedPath": "src\\app\\components\\Text\\index.tsx"
      },
      {
        "source": "../InlineLink",
        "resolvedPath": "src\\app\\components\\InlineLink\\index.tsx"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\components\\Disclaimer\\index.styles.ts"
      }
    ]
  },
  "src\\app\\components\\EmbedConsentBanner\\ConsentBanner.styles.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\EmbedConsentBanner\\ConsentBanner.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "../../utilities/pixelsToRem",
        "resolvedPath": "src\\app\\utilities\\pixelsToRem\\index.ts"
      },
      {
        "source": "../ThemeProvider/focusIndicator",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\focusIndicator.ts"
      }
    ]
  },
  "src\\app\\components\\EmbedConsentBanner\\ConsentBanner.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\EmbedConsentBanner\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "#app/contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "src\\app\\routes\\utils\\pageTypes"
      },
      {
        "source": "../Text",
        "resolvedPath": "src\\app\\components\\Text\\index.tsx"
      },
      {
        "source": "../Paragraph",
        "resolvedPath": "src\\app\\components\\Paragraph\\index.tsx"
      },
      {
        "source": "../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../../models/types/translations",
        "resolvedPath": "src\\app\\models\\types\\translations.ts"
      },
      {
        "source": "../../hooks/useViewTracker",
        "resolvedPath": "src\\app\\hooks\\useViewTracker\\index.jsx"
      },
      {
        "source": "./ConsentBanner.styles",
        "resolvedPath": "src\\app\\components\\EmbedConsentBanner\\ConsentBanner.styles.tsx"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\EmbedConsentBanner\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\EmbedConsentBanner\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\EmbedConsentBanner\\ConsentBanner.tsx",
      "src\\app\\legacy\\psammead\\psammead-social-embed\\src\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "./ConsentBanner",
        "resolvedPath": "src\\app\\components\\EmbedConsentBanner\\ConsentBanner.tsx"
      },
      {
        "source": "../../models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global.ts"
      },
      {
        "source": "../../hooks/useClickTrackerHandler",
        "resolvedPath": "src\\app\\hooks\\useClickTrackerHandler\\index.jsx"
      }
    ]
  },
  "src\\app\\components\\Embeds\\AmpIframeEmbed\\index.styles.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\Embeds\\AmpIframeEmbed\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      }
    ]
  },
  "src\\app\\components\\Embeds\\AmpIframeEmbed\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\Embeds\\OEmbed\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "../../AmpIframe",
        "resolvedPath": "src\\app\\components\\AmpIframe\\index.tsx"
      },
      {
        "source": "../types",
        "resolvedPath": "src\\app\\components\\Embeds\\types.ts"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\components\\Embeds\\AmpIframeEmbed\\index.styles.tsx"
      }
    ]
  },
  "src\\app\\components\\Embeds\\EmbedError\\index.styles.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\Embeds\\EmbedError\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "../../../utilities/pixelsToRem",
        "resolvedPath": "src\\app\\utilities\\pixelsToRem\\index.ts"
      }
    ]
  },
  "src\\app\\components\\Embeds\\EmbedError\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\Embeds\\OEmbed\\index.tsx",
      "src\\app\\components\\Embeds\\UnsupportedEmbed\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\components\\Embeds\\EmbedError\\index.styles.tsx"
      },
      {
        "source": "../../InlineLink",
        "resolvedPath": "src\\app\\components\\InlineLink\\index.tsx"
      },
      {
        "source": "../../Text",
        "resolvedPath": "src\\app\\components\\Text\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\Embeds\\EmbedHtml\\fixtures.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\components\\Embeds\\EmbedHtml\\index.styles.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\Embeds\\EmbedHtml\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      }
    ]
  },
  "src\\app\\components\\Embeds\\EmbedHtml\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\Embeds\\OEmbed\\index.tsx",
      "src\\app\\pages\\ArticlePage\\ArticlePage.tsx",
      "src\\app\\pages\\MediaArticlePage\\MediaArticlePage.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\components\\Embeds\\EmbedHtml\\index.styles.tsx"
      }
    ]
  },
  "src\\app\\components\\Embeds\\EmbedImages\\fixtures.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\components\\Embeds\\EmbedImages\\index.styles.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\Embeds\\EmbedImages\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      }
    ]
  },
  "src\\app\\components\\Embeds\\EmbedImages\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\pages\\ArticlePage\\ArticlePage.tsx",
      "src\\app\\pages\\MediaArticlePage\\MediaArticlePage.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "#app/contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext"
      },
      {
        "source": "#app/lib/utilities/getEnvConfig",
        "resolvedPath": "src\\app\\lib\\utilities\\getEnvConfig"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\components\\Embeds\\EmbedImages\\index.styles.tsx"
      },
      {
        "source": "../../Image",
        "resolvedPath": "src\\app\\components\\Image\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\Embeds\\FlourishEmbed\\fixtures.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\components\\Embeds\\FlourishEmbed\\index.styles.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\Embeds\\FlourishEmbed\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      }
    ]
  },
  "src\\app\\components\\Embeds\\FlourishEmbed\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\Embeds\\OEmbed\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "react-helmet",
        "resolvedPath": "node_modules\\@types\\react\\-helmet"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\components\\Embeds\\FlourishEmbed\\index.styles.tsx"
      },
      {
        "source": "../types",
        "resolvedPath": "src\\app\\components\\Embeds\\types.ts"
      }
    ]
  },
  "src\\app\\components\\Embeds\\OEmbed\\fixtures.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\components\\Embeds\\OEmbed\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\Curation\\index.tsx",
      "src\\app\\pages\\ArticlePage\\ArticlePage.tsx",
      "src\\app\\pages\\MediaArticlePage\\MediaArticlePage.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "../../../contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext\\index.tsx"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../EmbedHtml",
        "resolvedPath": "src\\app\\components\\Embeds\\EmbedHtml\\index.tsx"
      },
      {
        "source": "../EmbedError",
        "resolvedPath": "src\\app\\components\\Embeds\\EmbedError\\index.tsx"
      },
      {
        "source": "../FlourishEmbed",
        "resolvedPath": "src\\app\\components\\Embeds\\FlourishEmbed\\index.tsx"
      },
      {
        "source": "../AmpIframeEmbed",
        "resolvedPath": "src\\app\\components\\Embeds\\AmpIframeEmbed\\index.tsx"
      },
      {
        "source": "../types",
        "resolvedPath": "src\\app\\components\\Embeds\\types.ts"
      }
    ]
  },
  "src\\app\\components\\Embeds\\types.ts": {
    "incomingDependencies": [
      "src\\app\\components\\Embeds\\AmpIframeEmbed\\index.tsx",
      "src\\app\\components\\Embeds\\FlourishEmbed\\index.tsx",
      "src\\app\\components\\Embeds\\OEmbed\\index.tsx"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\components\\Embeds\\UnsupportedEmbed\\fixtures.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\components\\Embeds\\UnsupportedEmbed\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\pages\\ArticlePage\\ArticlePage.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "../../../contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext\\index.tsx"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../EmbedError",
        "resolvedPath": "src\\app\\components\\Embeds\\EmbedError\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\Embeds\\Uploader\\fixtures.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\components\\Embeds\\Uploader\\index.styles.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\Embeds\\Uploader\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "#app/utilities/pixelsToRem",
        "resolvedPath": "src\\app\\utilities\\pixelsToRem"
      }
    ]
  },
  "src\\app\\components\\Embeds\\Uploader\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\pages\\ArticlePage\\ArticlePage.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "ramda/src/path",
        "resolvedPath": "ramda/src/path"
      },
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../../Paragraph",
        "resolvedPath": "src\\app\\components\\Paragraph\\index.tsx"
      },
      {
        "source": "../../Text",
        "resolvedPath": "src\\app\\components\\Text\\index.tsx"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\components\\Embeds\\Uploader\\index.styles.tsx"
      },
      {
        "source": "../../icons",
        "resolvedPath": "src\\app\\components\\icons\\index.tsx"
      },
      {
        "source": "../../CallToActionLink",
        "resolvedPath": "src\\app\\components\\CallToActionLink\\index.tsx"
      },
      {
        "source": "../../../lib/utilities/idSanitiser",
        "resolvedPath": "src\\app\\lib\\utilities\\idSanitiser\\index.js"
      }
    ]
  },
  "src\\app\\components\\Footer\\index.styles.ts": {
    "incomingDependencies": [
      "src\\app\\components\\Footer\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "../ThemeProvider/spacings",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\spacings.ts"
      },
      {
        "source": "../ThemeProvider/mediaQueries",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\mediaQueries.ts"
      }
    ]
  },
  "src\\app\\components\\Footer\\index.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "#containers/ConsentBanner/Banner/cookie.amp",
        "resolvedPath": "src\\app\\legacy\\containers\\ConsentBanner\\Banner\\cookie.amp"
      },
      {
        "source": "#app/contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext"
      },
      {
        "source": "#app/contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext"
      },
      {
        "source": "./Link",
        "resolvedPath": "src\\app\\components\\Footer\\Link\\index.tsx"
      },
      {
        "source": "./List",
        "resolvedPath": "src\\app\\components\\Footer\\List\\index.tsx"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\components\\Footer\\index.styles.ts"
      }
    ]
  },
  "src\\app\\components\\Footer\\Link\\index.styles.ts": {
    "incomingDependencies": [
      "src\\app\\components\\Footer\\Link\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      }
    ]
  },
  "src\\app\\components\\Footer\\Link\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\Footer\\index.tsx",
      "src\\app\\components\\Footer\\List\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "#app/models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\components\\Footer\\Link\\index.styles.ts"
      }
    ]
  },
  "src\\app\\components\\Footer\\List\\index.styles.ts": {
    "incomingDependencies": [
      "src\\app\\components\\Footer\\List\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "#psammead/psammead-styles/src/detection",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-styles\\src\\detection"
      },
      {
        "source": "#app/models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig"
      },
      {
        "source": "../../ThemeProvider/mediaQueries",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\mediaQueries.ts"
      }
    ]
  },
  "src\\app\\components\\Footer\\List\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\Footer\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "#app/models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig"
      },
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "../Link",
        "resolvedPath": "src\\app\\components\\Footer\\Link\\index.tsx"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\components\\Footer\\List\\index.styles.ts"
      }
    ]
  },
  "src\\app\\components\\Fragment\\index.style.ts": {
    "incomingDependencies": [
      "src\\app\\components\\Fragment\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      }
    ]
  },
  "src\\app\\components\\Fragment\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\Caption\\index.tsx",
      "src\\app\\components\\DecoratedInline\\index.tsx",
      "src\\app\\components\\DecoratedInlineLink\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "./index.style",
        "resolvedPath": "src\\app\\components\\Fragment\\index.style.ts"
      }
    ]
  },
  "src\\app\\components\\FrostedGlassPromo\\fixtures.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "./types",
        "resolvedPath": "src\\app\\components\\FrostedGlassPromo\\types.ts"
      }
    ]
  },
  "src\\app\\components\\FrostedGlassPromo\\FrostedGlassPanel.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\FrostedGlassPromo\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "../../hooks/useImageColour",
        "resolvedPath": "src\\app\\hooks\\useImageColour\\index.js"
      },
      {
        "source": "./styles",
        "resolvedPath": "src\\app\\components\\FrostedGlassPromo\\styles.ts"
      }
    ]
  },
  "src\\app\\components\\FrostedGlassPromo\\index.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "ramda/src/pick",
        "resolvedPath": "ramda/src/pick"
      },
      {
        "source": "react-lazyload",
        "resolvedPath": "node_modules\\@types\\react\\-lazyload"
      },
      {
        "source": "../Image",
        "resolvedPath": "src\\app\\components\\Image\\index.tsx"
      },
      {
        "source": "../../lib/utilities/makeRelativeUrlPath",
        "resolvedPath": "src\\app\\lib\\utilities\\makeRelativeUrlPath\\index.js"
      },
      {
        "source": "../../hooks/useClickTrackerHandler",
        "resolvedPath": "src\\app\\hooks\\useClickTrackerHandler\\index.jsx"
      },
      {
        "source": "../../contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext\\index.tsx"
      },
      {
        "source": "./FrostedGlassPanel",
        "resolvedPath": "src\\app\\components\\FrostedGlassPromo\\FrostedGlassPanel.tsx"
      },
      {
        "source": "./withData",
        "resolvedPath": "src\\app\\components\\FrostedGlassPromo\\withData.tsx"
      },
      {
        "source": "./styles",
        "resolvedPath": "src\\app\\components\\FrostedGlassPromo\\styles.ts"
      },
      {
        "source": "../../models/types/eventTracking",
        "resolvedPath": "src\\app\\models\\types\\eventTracking.ts"
      },
      {
        "source": "./types",
        "resolvedPath": "src\\app\\components\\FrostedGlassPromo\\types.ts"
      }
    ]
  },
  "src\\app\\components\\FrostedGlassPromo\\lazy.tsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\CpsFeaturesAnalysis\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@loadable/component",
        "resolvedPath": "@loadable/component"
      }
    ]
  },
  "src\\app\\components\\FrostedGlassPromo\\styles.ts": {
    "incomingDependencies": [
      "src\\app\\components\\FrostedGlassPromo\\FrostedGlassPanel.tsx",
      "src\\app\\components\\FrostedGlassPromo\\index.tsx",
      "src\\app\\components\\FrostedGlassPromo\\withData.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      }
    ]
  },
  "src\\app\\components\\FrostedGlassPromo\\types.ts": {
    "incomingDependencies": [
      "src\\app\\components\\FrostedGlassPromo\\fixtures.ts",
      "src\\app\\components\\FrostedGlassPromo\\index.tsx",
      "src\\app\\components\\FrostedGlassPromo\\withData.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../../models/types/eventTracking",
        "resolvedPath": "src\\app\\models\\types\\eventTracking.ts"
      }
    ]
  },
  "src\\app\\components\\FrostedGlassPromo\\withData.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\FrostedGlassPromo\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "ramda/src/path",
        "resolvedPath": "ramda/src/path"
      },
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "ramda/src/pick",
        "resolvedPath": "ramda/src/pick"
      },
      {
        "source": "../../legacy/components/Promo/timestamp",
        "resolvedPath": "src\\app\\legacy\\components\\Promo\\timestamp.jsx"
      },
      {
        "source": "../../lib/utilities/imageSrcHelpers/originCode",
        "resolvedPath": "src\\app\\lib\\utilities\\imageSrcHelpers\\originCode.js"
      },
      {
        "source": "../../lib/utilities/imageSrcHelpers/locator",
        "resolvedPath": "src\\app\\lib\\utilities\\imageSrcHelpers\\locator.js"
      },
      {
        "source": "../../lib/utilities/ichefURL",
        "resolvedPath": "src\\app\\lib\\utilities\\ichefURL\\index.js"
      },
      {
        "source": "../../lib/utilities/srcSet",
        "resolvedPath": "src\\app\\lib\\utilities\\srcSet\\index.js"
      },
      {
        "source": "../../contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext\\index.tsx"
      },
      {
        "source": "./styles",
        "resolvedPath": "src\\app\\components\\FrostedGlassPromo\\styles.ts"
      },
      {
        "source": "./types",
        "resolvedPath": "src\\app\\components\\FrostedGlassPromo\\types.ts"
      },
      {
        "source": "../../models/types/optimo",
        "resolvedPath": "src\\app\\models\\types\\optimo.ts"
      }
    ]
  },
  "src\\app\\components\\Header\\ScriptLink\\index.styles.ts": {
    "incomingDependencies": [
      "src\\app\\components\\Header\\ScriptLink\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      }
    ]
  },
  "src\\app\\components\\Header\\ScriptLink\\index.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "path-to-regexp",
        "resolvedPath": "path-to-regexp"
      },
      {
        "source": "ramda/src/clone",
        "resolvedPath": "ramda/src/clone"
      },
      {
        "source": "react-router-dom",
        "resolvedPath": "node_modules\\@types\\react\\-router-dom"
      },
      {
        "source": "#hooks/useToggle",
        "resolvedPath": "src\\app\\hooks\\useToggle"
      },
      {
        "source": "#app/models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../../../contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext\\index.tsx"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\components\\Header\\ScriptLink\\index.styles.ts"
      }
    ]
  },
  "src\\app\\components\\Heading\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\Billboard\\index.tsx",
      "src\\app\\components\\MessageBanner\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "../../models/types/theming",
        "resolvedPath": "src\\app\\models\\types\\theming.ts"
      },
      {
        "source": "../Text",
        "resolvedPath": "src\\app\\components\\Text\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\icons\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\Byline\\index.tsx",
      "src\\app\\components\\Curation\\Subhead\\index.tsx",
      "src\\app\\components\\Embeds\\Uploader\\index.tsx",
      "src\\app\\components\\MessageBanner\\index.tsx",
      "src\\app\\components\\Pagination\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      }
    ]
  },
  "src\\app\\components\\Image\\base64Placeholder.ts": {
    "incomingDependencies": [
      "src\\app\\components\\Image\\index.styles.tsx"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\components\\Image\\index.styles.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\Image\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "./base64Placeholder",
        "resolvedPath": "src\\app\\components\\Image\\base64Placeholder.ts"
      }
    ]
  },
  "src\\app\\components\\Image\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\Byline\\index.tsx",
      "src\\app\\components\\Embeds\\EmbedImages\\index.tsx",
      "src\\app\\components\\FrostedGlassPromo\\index.tsx",
      "src\\app\\components\\ImageWithCaption\\index.tsx",
      "src\\app\\components\\MediaLoader\\Placeholder\\index.tsx",
      "src\\app\\components\\MessageBanner\\index.tsx",
      "src\\app\\legacy\\components\\OptimoPromos\\Image\\index.jsx",
      "src\\app\\legacy\\components\\Promo\\image.jsx",
      "src\\app\\legacy\\containers\\StoryPromo\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "react-helmet",
        "resolvedPath": "node_modules\\@types\\react\\-helmet"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\components\\Image\\index.styles.tsx"
      },
      {
        "source": "../../contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext\\index.tsx"
      },
      {
        "source": "../../routes/utils/pageTypes",
        "resolvedPath": "src\\app\\routes\\utils\\pageTypes.ts"
      }
    ]
  },
  "src\\app\\components\\ImageWithCaption\\fixtureData.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "#models/blocks",
        "resolvedPath": "src\\app\\models\\blocks"
      }
    ]
  },
  "src\\app\\components\\ImageWithCaption\\index.styles.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ImageWithCaption\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      }
    ]
  },
  "src\\app\\components\\ImageWithCaption\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\pages\\ArticlePage\\ArticlePage.tsx",
      "src\\app\\pages\\MediaArticlePage\\MediaArticlePage.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "../../lib/utilities/ichefURL",
        "resolvedPath": "src\\app\\lib\\utilities\\ichefURL\\index.js"
      },
      {
        "source": "../../lib/utilities/pageAnchor",
        "resolvedPath": "src\\app\\lib\\utilities\\pageAnchor\\index.js"
      },
      {
        "source": "../../lib/utilities/srcSet",
        "resolvedPath": "src\\app\\lib\\utilities\\srcSet\\index.js"
      },
      {
        "source": "../../lib/utilities/blockHandlers",
        "resolvedPath": "src\\app\\lib\\utilities\\blockHandlers\\index.js"
      },
      {
        "source": "../Copyright",
        "resolvedPath": "src\\app\\components\\Copyright\\index.tsx"
      },
      {
        "source": "../Caption",
        "resolvedPath": "src\\app\\components\\Caption\\index.tsx"
      },
      {
        "source": "../Image",
        "resolvedPath": "src\\app\\components\\Image\\index.tsx"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\components\\ImageWithCaption\\index.styles.ts"
      },
      {
        "source": "../../contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\InlineLink\\index.styles.ts": {
    "incomingDependencies": [
      "src\\app\\components\\InlineLink\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "../../utilities/pixelsToRem",
        "resolvedPath": "src\\app\\utilities\\pixelsToRem\\index.ts"
      }
    ]
  },
  "src\\app\\components\\InlineLink\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\Disclaimer\\index.tsx",
      "src\\app\\components\\Embeds\\EmbedError\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "url-parse",
        "resolvedPath": "url-parse"
      },
      {
        "source": "../../models/types/theming",
        "resolvedPath": "src\\app\\models\\types\\theming.ts"
      },
      {
        "source": "../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\components\\InlineLink\\index.styles.ts"
      }
    ]
  },
  "src\\app\\components\\LinkedData\\getAboutTagsContent.ts": {
    "incomingDependencies": [
      "src\\app\\components\\LinkedData\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "./types",
        "resolvedPath": "src\\app\\components\\LinkedData\\types.ts"
      }
    ]
  },
  "src\\app\\components\\LinkedData\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\pages\\ArticlePage\\ArticlePage.tsx",
      "src\\app\\pages\\FeatureIdxPage\\FeatureIdxPage.jsx",
      "src\\app\\pages\\FrontPage\\FrontPage.jsx",
      "src\\app\\pages\\HomePage\\HomePage.tsx",
      "src\\app\\pages\\LiveRadioPage\\LiveRadioPage.tsx",
      "src\\app\\pages\\MediaArticlePage\\MediaArticlePage.tsx",
      "src\\app\\pages\\MostReadPage\\MostReadPage.jsx",
      "src\\app\\pages\\OnDemandAudioPage\\OnDemandAudioPage.tsx",
      "src\\app\\pages\\OnDemandTvPage\\OnDemandTvPage.tsx",
      "src\\app\\pages\\TopicPage\\TopicPage.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "react-helmet",
        "resolvedPath": "node_modules\\@types\\react\\-helmet"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext"
      },
      {
        "source": "#lib/utilities/serialiseForScript",
        "resolvedPath": "src\\app\\lib\\utilities\\serialiseForScript"
      },
      {
        "source": "#lib/utilities/getBrandedImage",
        "resolvedPath": "src\\app\\lib\\utilities\\getBrandedImage"
      },
      {
        "source": "../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "./getAboutTagsContent",
        "resolvedPath": "src\\app\\components\\LinkedData\\getAboutTagsContent.ts"
      },
      {
        "source": "./types",
        "resolvedPath": "src\\app\\components\\LinkedData\\types.ts"
      }
    ]
  },
  "src\\app\\components\\LinkedData\\types.ts": {
    "incomingDependencies": [
      "src\\app\\components\\LinkedData\\getAboutTagsContent.ts",
      "src\\app\\components\\LinkedData\\index.tsx"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\components\\LiveLabel\\index.styles.ts": {
    "incomingDependencies": [
      "src\\app\\components\\LiveLabel\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "#app/utilities/pixelsToRem",
        "resolvedPath": "src\\app\\utilities\\pixelsToRem"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      }
    ]
  },
  "src\\app\\components\\LiveLabel\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\Billboard\\index.tsx",
      "src\\app\\components\\Curation\\CurationPromo\\index.tsx",
      "src\\app\\components\\Curation\\HierarchicalGrid\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "./types",
        "resolvedPath": "src\\app\\components\\LiveLabel\\types.ts"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\components\\LiveLabel\\index.styles.ts"
      },
      {
        "source": "./Text",
        "resolvedPath": "src\\app\\components\\LiveLabel\\Text\\index.tsx"
      },
      {
        "source": "./Pulse",
        "resolvedPath": "src\\app\\components\\LiveLabel\\Pulse\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\LiveLabel\\Pulse\\index.styles.ts": {
    "incomingDependencies": [
      "src\\app\\components\\LiveLabel\\Pulse\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      }
    ]
  },
  "src\\app\\components\\LiveLabel\\Pulse\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\LiveLabel\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\components\\LiveLabel\\Pulse\\index.styles.ts"
      },
      {
        "source": "../types",
        "resolvedPath": "src\\app\\components\\LiveLabel\\types.ts"
      }
    ]
  },
  "src\\app\\components\\LiveLabel\\Text\\index.styles.ts": {
    "incomingDependencies": [
      "src\\app\\components\\LiveLabel\\Text\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      }
    ]
  },
  "src\\app\\components\\LiveLabel\\Text\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\LiveLabel\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "../../VisuallyHiddenText",
        "resolvedPath": "src\\app\\components\\VisuallyHiddenText\\index.tsx"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\components\\LiveLabel\\Text\\index.styles.ts"
      },
      {
        "source": "../types",
        "resolvedPath": "src\\app\\components\\LiveLabel\\types.ts"
      }
    ]
  },
  "src\\app\\components\\LiveLabel\\types.ts": {
    "incomingDependencies": [
      "src\\app\\components\\LiveLabel\\index.tsx",
      "src\\app\\components\\LiveLabel\\Pulse\\index.tsx",
      "src\\app\\components\\LiveLabel\\Text\\index.tsx"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\components\\LiveRegion\\index.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "../VisuallyHiddenText",
        "resolvedPath": "src\\app\\components\\VisuallyHiddenText\\index.tsx"
      },
      {
        "source": "./LiveRegionContext",
        "resolvedPath": "src\\app\\components\\LiveRegion\\LiveRegionContext\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\LiveRegion\\LiveRegionContext\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\LiveRegion\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      }
    ]
  },
  "src\\app\\components\\MaskedImage\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\Billboard\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "#contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext"
      },
      {
        "source": "#app/contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext"
      },
      {
        "source": "#app/components/Image",
        "resolvedPath": "src\\app\\components\\Image"
      },
      {
        "source": "#app/lib/utilities/srcSet",
        "resolvedPath": "src\\app\\lib\\utilities\\srcSet"
      },
      {
        "source": "#app/lib/utilities/imageSrcHelpers/originCode",
        "resolvedPath": "src\\app\\lib\\utilities\\imageSrcHelpers\\originCode"
      },
      {
        "source": "#app/lib/utilities/imageSrcHelpers/locator",
        "resolvedPath": "src\\app\\lib\\utilities\\imageSrcHelpers\\locator"
      },
      {
        "source": "./styles",
        "resolvedPath": "src\\app\\components\\MaskedImage\\styles.tsx"
      }
    ]
  },
  "src\\app\\components\\MaskedImage\\styles.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\MaskedImage\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      }
    ]
  },
  "src\\app\\components\\MediaLoader\\Amp\\index.styles.ts": {
    "incomingDependencies": [
      "src\\app\\components\\MediaLoader\\Amp\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "#app/components/Image/base64Placeholder",
        "resolvedPath": "src\\app\\components\\Image\\base64Placeholder"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      }
    ]
  },
  "src\\app\\components\\MediaLoader\\Amp\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\MediaLoader\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "react-helmet",
        "resolvedPath": "node_modules\\@types\\react\\-helmet"
      },
      {
        "source": "../Message",
        "resolvedPath": "src\\app\\components\\MediaLoader\\Message\\index.tsx"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\components\\MediaLoader\\Amp\\index.styles.ts"
      }
    ]
  },
  "src\\app\\components\\MediaLoader\\configs\\aresMedia.ts": {
    "incomingDependencies": [
      "src\\app\\components\\MediaLoader\\configs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "#lib/utilities/ichefURL",
        "resolvedPath": "src\\app\\lib\\utilities\\ichefURL"
      },
      {
        "source": "#lib/utilities/blockHandlers",
        "resolvedPath": "src\\app\\lib\\utilities\\blockHandlers"
      },
      {
        "source": "#app/models/types/optimo",
        "resolvedPath": "src\\app\\models\\types\\optimo"
      },
      {
        "source": "../types",
        "resolvedPath": "src\\app\\components\\MediaLoader\\types.ts"
      },
      {
        "source": "../utils/getCaptionBlock",
        "resolvedPath": "src\\app\\components\\MediaLoader\\utils\\getCaptionBlock.ts"
      },
      {
        "source": "../utils/buildPlaceholderConfig",
        "resolvedPath": "src\\app\\components\\MediaLoader\\utils\\buildPlaceholderConfig\\index.ts"
      },
      {
        "source": "../utils/shouldDisplayAds",
        "resolvedPath": "src\\app\\components\\MediaLoader\\utils\\shouldDisplayAds\\index.ts"
      },
      {
        "source": "../utils/urlConstructors",
        "resolvedPath": "src\\app\\components\\MediaLoader\\utils\\urlConstructors.ts"
      }
    ]
  },
  "src\\app\\components\\MediaLoader\\configs\\audio.ts": {
    "incomingDependencies": [
      "src\\app\\components\\MediaLoader\\configs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "#lib/utilities/blockHandlers",
        "resolvedPath": "src\\app\\lib\\utilities\\blockHandlers"
      },
      {
        "source": "../types",
        "resolvedPath": "src\\app\\components\\MediaLoader\\types.ts"
      },
      {
        "source": "./constants",
        "resolvedPath": "src\\app\\components\\MediaLoader\\configs\\constants.ts"
      }
    ]
  },
  "src\\app\\components\\MediaLoader\\configs\\clipMedia.ts": {
    "incomingDependencies": [
      "src\\app\\components\\MediaLoader\\configs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "moment-timezone",
        "resolvedPath": "moment-timezone"
      },
      {
        "source": "#lib/utilities/ichefURL",
        "resolvedPath": "src\\app\\lib\\utilities\\ichefURL"
      },
      {
        "source": "#lib/utilities/blockHandlers",
        "resolvedPath": "src\\app\\lib\\utilities\\blockHandlers"
      },
      {
        "source": "../types",
        "resolvedPath": "src\\app\\components\\MediaLoader\\types.ts"
      },
      {
        "source": "../utils/getCaptionBlock",
        "resolvedPath": "src\\app\\components\\MediaLoader\\utils\\getCaptionBlock.ts"
      },
      {
        "source": "../utils/buildPlaceholderConfig",
        "resolvedPath": "src\\app\\components\\MediaLoader\\utils\\buildPlaceholderConfig\\index.ts"
      },
      {
        "source": "../utils/shouldDisplayAds",
        "resolvedPath": "src\\app\\components\\MediaLoader\\utils\\shouldDisplayAds\\index.ts"
      },
      {
        "source": "../utils/urlConstructors",
        "resolvedPath": "src\\app\\components\\MediaLoader\\utils\\urlConstructors.ts"
      },
      {
        "source": "./constants",
        "resolvedPath": "src\\app\\components\\MediaLoader\\configs\\constants.ts"
      }
    ]
  },
  "src\\app\\components\\MediaLoader\\configs\\constants.ts": {
    "incomingDependencies": [
      "src\\app\\components\\MediaLoader\\configs\\audio.ts",
      "src\\app\\components\\MediaLoader\\configs\\clipMedia.ts",
      "src\\app\\components\\MediaLoader\\configs\\liveRadio.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../types",
        "resolvedPath": "src\\app\\components\\MediaLoader\\types.ts"
      }
    ]
  },
  "src\\app\\components\\MediaLoader\\configs\\index.ts": {
    "incomingDependencies": [
      "src\\app\\components\\MediaLoader\\utils\\buildSettings.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "#app/lib/utilities/blockHandlers",
        "resolvedPath": "src\\app\\lib\\utilities\\blockHandlers"
      },
      {
        "source": "./clipMedia",
        "resolvedPath": "src\\app\\components\\MediaLoader\\configs\\clipMedia.ts"
      },
      {
        "source": "./aresMedia",
        "resolvedPath": "src\\app\\components\\MediaLoader\\configs\\aresMedia.ts"
      },
      {
        "source": "./tv",
        "resolvedPath": "src\\app\\components\\MediaLoader\\configs\\tv.ts"
      },
      {
        "source": "./liveRadio",
        "resolvedPath": "src\\app\\components\\MediaLoader\\configs\\liveRadio.ts"
      },
      {
        "source": "./audio",
        "resolvedPath": "src\\app\\components\\MediaLoader\\configs\\audio.ts"
      },
      {
        "source": "./legacyMedia",
        "resolvedPath": "src\\app\\components\\MediaLoader\\configs\\legacyMedia.ts"
      },
      {
        "source": "../types",
        "resolvedPath": "src\\app\\components\\MediaLoader\\types.ts"
      }
    ]
  },
  "src\\app\\components\\MediaLoader\\configs\\legacyMedia.ts": {
    "incomingDependencies": [
      "src\\app\\components\\MediaLoader\\configs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "#app/models/types/media",
        "resolvedPath": "src\\app\\models\\types\\media"
      },
      {
        "source": "#lib/utilities/blockHandlers",
        "resolvedPath": "src\\app\\lib\\utilities\\blockHandlers"
      },
      {
        "source": "../types",
        "resolvedPath": "src\\app\\components\\MediaLoader\\types.ts"
      },
      {
        "source": "../utils/buildPlaceholderConfig",
        "resolvedPath": "src\\app\\components\\MediaLoader\\utils\\buildPlaceholderConfig\\index.ts"
      }
    ]
  },
  "src\\app\\components\\MediaLoader\\configs\\liveRadio.ts": {
    "incomingDependencies": [
      "src\\app\\components\\MediaLoader\\configs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "#lib/utilities/blockHandlers",
        "resolvedPath": "src\\app\\lib\\utilities\\blockHandlers"
      },
      {
        "source": "#app/models/types/media",
        "resolvedPath": "src\\app\\models\\types\\media"
      },
      {
        "source": "../types",
        "resolvedPath": "src\\app\\components\\MediaLoader\\types.ts"
      },
      {
        "source": "./constants",
        "resolvedPath": "src\\app\\components\\MediaLoader\\configs\\constants.ts"
      }
    ]
  },
  "src\\app\\components\\MediaLoader\\configs\\tv.ts": {
    "incomingDependencies": [
      "src\\app\\components\\MediaLoader\\configs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "#lib/utilities/blockHandlers",
        "resolvedPath": "src\\app\\lib\\utilities\\blockHandlers"
      },
      {
        "source": "../types",
        "resolvedPath": "src\\app\\components\\MediaLoader\\types.ts"
      },
      {
        "source": "../utils/buildPlaceholderConfig",
        "resolvedPath": "src\\app\\components\\MediaLoader\\utils\\buildPlaceholderConfig\\index.ts"
      }
    ]
  },
  "src\\app\\components\\MediaLoader\\fixture.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\components\\MediaLoader\\index.styles.ts": {
    "incomingDependencies": [
      "src\\app\\components\\MediaLoader\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "#app/utilities/pixelsToRem",
        "resolvedPath": "src\\app\\utilities\\pixelsToRem"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      }
    ]
  },
  "src\\app\\components\\MediaLoader\\index.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "react-helmet",
        "resolvedPath": "node_modules\\@types\\react\\-helmet"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext"
      },
      {
        "source": "#app/lib/logger.const",
        "resolvedPath": "src\\app\\lib\\logger.const"
      },
      {
        "source": "#app/contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext"
      },
      {
        "source": "#app/hooks/useLocation",
        "resolvedPath": "src\\app\\hooks\\useLocation"
      },
      {
        "source": "#app/hooks/useToggle",
        "resolvedPath": "src\\app\\hooks\\useToggle"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "src\\app\\routes\\utils\\pageTypes"
      },
      {
        "source": "#lib/utilities/blockHandlers",
        "resolvedPath": "src\\app\\lib\\utilities\\blockHandlers"
      },
      {
        "source": "#app/models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global"
      },
      {
        "source": "#app/contexts/EventTrackingContext",
        "resolvedPath": "src\\app\\contexts\\EventTrackingContext"
      },
      {
        "source": "./types",
        "resolvedPath": "src\\app\\components\\MediaLoader\\types.ts"
      },
      {
        "source": "../Caption",
        "resolvedPath": "src\\app\\components\\Caption\\index.tsx"
      },
      {
        "source": "../../lib/logger.node",
        "resolvedPath": "src\\app\\lib\\logger.node.js"
      },
      {
        "source": "./utils/buildSettings",
        "resolvedPath": "src\\app\\components\\MediaLoader\\utils\\buildSettings.ts"
      },
      {
        "source": "./Placeholder",
        "resolvedPath": "src\\app\\components\\MediaLoader\\Placeholder\\index.tsx"
      },
      {
        "source": "./utils/getProducerFromServiceName",
        "resolvedPath": "src\\app\\components\\MediaLoader\\utils\\getProducerFromServiceName.ts"
      },
      {
        "source": "./utils/getCaptionBlock",
        "resolvedPath": "src\\app\\components\\MediaLoader\\utils\\getCaptionBlock.ts"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\components\\MediaLoader\\index.styles.ts"
      },
      {
        "source": "../Ad/Canonical",
        "resolvedPath": "src\\app\\components\\Ad\\Canonical\\index.tsx"
      },
      {
        "source": "./Metadata",
        "resolvedPath": "src\\app\\components\\MediaLoader\\Metadata\\index.tsx"
      },
      {
        "source": "./Amp",
        "resolvedPath": "src\\app\\components\\MediaLoader\\Amp\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\MediaLoader\\Message\\index.styles.ts": {
    "incomingDependencies": [
      "src\\app\\components\\MediaLoader\\Message\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      }
    ]
  },
  "src\\app\\components\\MediaLoader\\Message\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\MediaLoader\\Amp\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\components\\MediaLoader\\Message\\index.styles.ts"
      }
    ]
  },
  "src\\app\\components\\MediaLoader\\Metadata\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\MediaLoader\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "react-helmet",
        "resolvedPath": "node_modules\\@types\\react\\-helmet"
      },
      {
        "source": "#app/lib/utilities/blockHandlers",
        "resolvedPath": "src\\app\\lib\\utilities\\blockHandlers"
      },
      {
        "source": "#app/contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "src\\app\\routes\\utils\\pageTypes"
      },
      {
        "source": "#app/models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global"
      },
      {
        "source": "../types",
        "resolvedPath": "src\\app\\components\\MediaLoader\\types.ts"
      }
    ]
  },
  "src\\app\\components\\MediaLoader\\Placeholder\\Guidance\\index.styles.ts": {
    "incomingDependencies": [
      "src\\app\\components\\MediaLoader\\Placeholder\\Guidance\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "#app/lib/noJs.const",
        "resolvedPath": "src\\app\\lib\\noJs.const"
      }
    ]
  },
  "src\\app\\components\\MediaLoader\\Placeholder\\Guidance\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\MediaLoader\\Placeholder\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\components\\MediaLoader\\Placeholder\\Guidance\\index.styles.ts"
      }
    ]
  },
  "src\\app\\components\\MediaLoader\\Placeholder\\index.styles.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\MediaLoader\\Placeholder\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "#app/lib/noJs.const",
        "resolvedPath": "src\\app\\lib\\noJs.const"
      },
      {
        "source": "#app/utilities/pixelsToRem",
        "resolvedPath": "src\\app\\utilities\\pixelsToRem"
      },
      {
        "source": "../../ThemeProvider/focusIndicator",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\focusIndicator.ts"
      }
    ]
  },
  "src\\app\\components\\MediaLoader\\Placeholder\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\MediaLoader\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "../../Image",
        "resolvedPath": "src\\app\\components\\Image\\index.tsx"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\components\\MediaLoader\\Placeholder\\index.styles.tsx"
      },
      {
        "source": "./PlayButton",
        "resolvedPath": "src\\app\\components\\MediaLoader\\Placeholder\\PlayButton\\index.tsx"
      },
      {
        "source": "./Guidance",
        "resolvedPath": "src\\app\\components\\MediaLoader\\Placeholder\\Guidance\\index.tsx"
      },
      {
        "source": "../types",
        "resolvedPath": "src\\app\\components\\MediaLoader\\types.ts"
      }
    ]
  },
  "src\\app\\components\\MediaLoader\\Placeholder\\PlayButton\\index.styles.ts": {
    "incomingDependencies": [
      "src\\app\\components\\MediaLoader\\Placeholder\\PlayButton\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "#app/utilities/pixelsToRem",
        "resolvedPath": "src\\app\\utilities\\pixelsToRem"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      }
    ]
  },
  "src\\app\\components\\MediaLoader\\Placeholder\\PlayButton\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\MediaLoader\\Placeholder\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "#psammead/psammead-assets/src/svgs",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\components\\MediaLoader\\Placeholder\\PlayButton\\index.styles.ts"
      },
      {
        "source": "../../../VisuallyHiddenText",
        "resolvedPath": "src\\app\\components\\VisuallyHiddenText\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\MediaLoader\\types.ts": {
    "incomingDependencies": [
      "src\\app\\components\\MediaLoader\\configs\\aresMedia.ts",
      "src\\app\\components\\MediaLoader\\configs\\audio.ts",
      "src\\app\\components\\MediaLoader\\configs\\clipMedia.ts",
      "src\\app\\components\\MediaLoader\\configs\\constants.ts",
      "src\\app\\components\\MediaLoader\\configs\\index.ts",
      "src\\app\\components\\MediaLoader\\configs\\legacyMedia.ts",
      "src\\app\\components\\MediaLoader\\configs\\liveRadio.ts",
      "src\\app\\components\\MediaLoader\\configs\\tv.ts",
      "src\\app\\components\\MediaLoader\\index.tsx",
      "src\\app\\components\\MediaLoader\\Metadata\\index.tsx",
      "src\\app\\components\\MediaLoader\\Placeholder\\index.tsx",
      "src\\app\\components\\MediaLoader\\utils\\buildPlaceholderConfig\\index.ts",
      "src\\app\\components\\MediaLoader\\utils\\buildSettings.ts",
      "src\\app\\components\\MediaLoader\\utils\\getCaptionBlock.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "#app/models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global"
      },
      {
        "source": "#app/models/types/media",
        "resolvedPath": "src\\app\\models\\types\\media"
      },
      {
        "source": "#app/models/types/optimo",
        "resolvedPath": "src\\app\\models\\types\\optimo"
      },
      {
        "source": "#app/models/types/translations",
        "resolvedPath": "src\\app\\models\\types\\translations"
      }
    ]
  },
  "src\\app\\components\\MediaLoader\\utils\\buildPlaceholderConfig\\index.ts": {
    "incomingDependencies": [
      "src\\app\\components\\MediaLoader\\configs\\aresMedia.ts",
      "src\\app\\components\\MediaLoader\\configs\\clipMedia.ts",
      "src\\app\\components\\MediaLoader\\configs\\legacyMedia.ts",
      "src\\app\\components\\MediaLoader\\configs\\tv.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "moment-timezone",
        "resolvedPath": "moment-timezone"
      },
      {
        "source": "#app/lib/utilities/formatDuration",
        "resolvedPath": "src\\app\\lib\\utilities\\formatDuration"
      },
      {
        "source": "#app/models/types/translations",
        "resolvedPath": "src\\app\\models\\types\\translations"
      },
      {
        "source": "#app/lib/utilities/srcSet",
        "resolvedPath": "src\\app\\lib\\utilities\\srcSet"
      },
      {
        "source": "#app/models/types/media",
        "resolvedPath": "src\\app\\models\\types\\media"
      },
      {
        "source": "../../types",
        "resolvedPath": "src\\app\\components\\MediaLoader\\types.ts"
      }
    ]
  },
  "src\\app\\components\\MediaLoader\\utils\\buildSettings.ts": {
    "incomingDependencies": [
      "src\\app\\components\\MediaLoader\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "#app/lib/utilities/onClient",
        "resolvedPath": "src\\app\\lib\\utilities\\onClient"
      },
      {
        "source": "#app/lib/utilities/isLive",
        "resolvedPath": "src\\app\\lib\\utilities\\isLive"
      },
      {
        "source": "#app/lib/utilities/blockHandlers",
        "resolvedPath": "src\\app\\lib\\utilities\\blockHandlers"
      },
      {
        "source": "../types",
        "resolvedPath": "src\\app\\components\\MediaLoader\\types.ts"
      },
      {
        "source": "../configs",
        "resolvedPath": "src\\app\\components\\MediaLoader\\configs\\index.ts"
      }
    ]
  },
  "src\\app\\components\\MediaLoader\\utils\\getCaptionBlock.ts": {
    "incomingDependencies": [
      "src\\app\\components\\MediaLoader\\configs\\aresMedia.ts",
      "src\\app\\components\\MediaLoader\\configs\\clipMedia.ts",
      "src\\app\\components\\MediaLoader\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "#app/lib/utilities/blockHandlers",
        "resolvedPath": "src\\app\\lib\\utilities\\blockHandlers"
      },
      {
        "source": "#app/models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global"
      },
      {
        "source": "../types",
        "resolvedPath": "src\\app\\components\\MediaLoader\\types.ts"
      }
    ]
  },
  "src\\app\\components\\MediaLoader\\utils\\getProducerFromServiceName.ts": {
    "incomingDependencies": [
      "src\\app\\components\\MediaLoader\\index.tsx"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\components\\MediaLoader\\utils\\shouldDisplayAds\\index.ts": {
    "incomingDependencies": [
      "src\\app\\components\\MediaLoader\\configs\\aresMedia.ts",
      "src\\app\\components\\MediaLoader\\configs\\clipMedia.ts"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\components\\MediaLoader\\utils\\urlConstructors.ts": {
    "incomingDependencies": [
      "src\\app\\components\\MediaLoader\\configs\\aresMedia.ts",
      "src\\app\\components\\MediaLoader\\configs\\clipMedia.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "#app/lib/utilities/isLive",
        "resolvedPath": "src\\app\\lib\\utilities\\isLive"
      },
      {
        "source": "#app/routes/utils/parseAvRoute",
        "resolvedPath": "src\\app\\routes\\utils\\parseAvRoute"
      }
    ]
  },
  "src\\app\\components\\MessageBanner\\fixtures.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\components\\MessageBanner\\index.styles.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\MessageBanner\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      }
    ]
  },
  "src\\app\\components\\MessageBanner\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\Curation\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "#app/hooks/useViewTracker",
        "resolvedPath": "src\\app\\hooks\\useViewTracker"
      },
      {
        "source": "#app/models/types/eventTracking",
        "resolvedPath": "src\\app\\models\\types\\eventTracking"
      },
      {
        "source": "../Paragraph",
        "resolvedPath": "src\\app\\components\\Paragraph\\index.tsx"
      },
      {
        "source": "../Heading",
        "resolvedPath": "src\\app\\components\\Heading\\index.tsx"
      },
      {
        "source": "../Image",
        "resolvedPath": "src\\app\\components\\Image\\index.tsx"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\components\\MessageBanner\\index.styles.tsx"
      },
      {
        "source": "../icons",
        "resolvedPath": "src\\app\\components\\icons\\index.tsx"
      },
      {
        "source": "../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../CallToActionLink",
        "resolvedPath": "src\\app\\components\\CallToActionLink\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\Metadata\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\ArticleMetadata\\index.jsx",
      "src\\app\\pages\\FeatureIdxPage\\FeatureIdxPage.jsx",
      "src\\app\\pages\\FrontPage\\FrontPage.jsx",
      "src\\app\\pages\\HomePage\\HomePage.tsx",
      "src\\app\\pages\\LiveRadioPage\\LiveRadioPage.tsx",
      "src\\app\\pages\\MostReadPage\\MostReadPage.jsx",
      "src\\app\\pages\\OnDemandAudioPage\\OnDemandAudioPage.tsx",
      "src\\app\\pages\\OnDemandTvPage\\OnDemandTvPage.tsx",
      "src\\app\\pages\\TopicPage\\TopicPage.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "react-helmet",
        "resolvedPath": "node_modules\\@types\\react\\-helmet"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext"
      },
      {
        "source": "../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "./utils",
        "resolvedPath": "src\\app\\components\\Metadata\\utils\\index.tsx"
      },
      {
        "source": "./types",
        "resolvedPath": "src\\app\\components\\Metadata\\types.ts"
      }
    ]
  },
  "src\\app\\components\\Metadata\\types.ts": {
    "incomingDependencies": [
      "src\\app\\components\\Metadata\\index.tsx",
      "src\\app\\components\\Metadata\\utils\\index.tsx"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\components\\Metadata\\utils\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\Metadata\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "#app/models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global"
      },
      {
        "source": "#app/lib/utilities/getEnvConfig",
        "resolvedPath": "src\\app\\lib\\utilities\\getEnvConfig"
      },
      {
        "source": "../types",
        "resolvedPath": "src\\app\\components\\Metadata\\types.ts"
      }
    ]
  },
  "src\\app\\components\\MostRead\\Amp\\getRemoteDataScript\\index.ts": {
    "incomingDependencies": [
      "src\\app\\components\\MostRead\\Amp\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../../models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global.ts"
      },
      {
        "source": "../../Canonical/Rank",
        "resolvedPath": "src\\app\\components\\MostRead\\Canonical\\Rank\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\MostRead\\Amp\\index.styles.ts": {
    "incomingDependencies": [
      "src\\app\\components\\MostRead\\Amp\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      }
    ]
  },
  "src\\app\\components\\MostRead\\Amp\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\MostRead\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "react-helmet",
        "resolvedPath": "node_modules\\@types\\react\\-helmet"
      },
      {
        "source": "#psammead/psammead-assets/src/amp-boilerplate",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-assets\\src\\amp-boilerplate"
      },
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../Canonical/Item",
        "resolvedPath": "src\\app\\components\\MostRead\\Canonical\\Item\\index.tsx"
      },
      {
        "source": "../Canonical/Rank",
        "resolvedPath": "src\\app\\components\\MostRead\\Canonical\\Rank\\index.tsx"
      },
      {
        "source": "../utilities/generateCSPHash",
        "resolvedPath": "src\\app\\components\\MostRead\\utilities\\generateCSPHash\\index.ts"
      },
      {
        "source": "../../../models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global.ts"
      },
      {
        "source": "../types",
        "resolvedPath": "src\\app\\components\\MostRead\\types.ts"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\components\\MostRead\\Amp\\index.styles.ts"
      },
      {
        "source": "./getRemoteDataScript",
        "resolvedPath": "src\\app\\components\\MostRead\\Amp\\getRemoteDataScript\\index.ts"
      }
    ]
  },
  "src\\app\\components\\MostRead\\Canonical\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\MostRead\\index.tsx",
      "src\\app\\pages\\MostReadPage\\MostReadPage.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "#lib/utilities/filterPopularStaleData/isDataStale",
        "resolvedPath": "src\\app\\lib\\utilities\\filterPopularStaleData\\isDataStale"
      },
      {
        "source": "#app/contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext"
      },
      {
        "source": "../../../hooks/useViewTracker",
        "resolvedPath": "src\\app\\hooks\\useViewTracker\\index.jsx"
      },
      {
        "source": "./Item",
        "resolvedPath": "src\\app\\components\\MostRead\\Canonical\\Item\\index.tsx"
      },
      {
        "source": "./List",
        "resolvedPath": "src\\app\\components\\MostRead\\Canonical\\List\\index.tsx"
      },
      {
        "source": "./Rank",
        "resolvedPath": "src\\app\\components\\MostRead\\Canonical\\Rank\\index.tsx"
      },
      {
        "source": "./LastUpdated",
        "resolvedPath": "src\\app\\components\\MostRead\\Canonical\\LastUpdated\\index.tsx"
      },
      {
        "source": "../types",
        "resolvedPath": "src\\app\\components\\MostRead\\types.ts"
      },
      {
        "source": "../../../models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global.ts"
      },
      {
        "source": "../../../models/types/theming",
        "resolvedPath": "src\\app\\models\\types\\theming.ts"
      }
    ]
  },
  "src\\app\\components\\MostRead\\Canonical\\Item\\index.styles.ts": {
    "incomingDependencies": [
      "src\\app\\components\\MostRead\\Canonical\\Item\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "../../../../legacy/psammead/psammead-styles/src/detection",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-styles\\src\\detection.js"
      }
    ]
  },
  "src\\app\\components\\MostRead\\Canonical\\Item\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\MostRead\\Amp\\index.tsx",
      "src\\app\\components\\MostRead\\Canonical\\index.tsx",
      "src\\app\\components\\MostRead\\utilities\\testHelpers.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "#hooks/useClickTrackerHandler",
        "resolvedPath": "src\\app\\hooks\\useClickTrackerHandler"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\components\\MostRead\\Canonical\\Item\\index.styles.ts"
      },
      {
        "source": "../../utilities/gridProps",
        "resolvedPath": "src\\app\\components\\MostRead\\utilities\\gridProps.ts"
      },
      {
        "source": "../../types",
        "resolvedPath": "src\\app\\components\\MostRead\\types.ts"
      },
      {
        "source": "../../../../models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global.ts"
      },
      {
        "source": "../../../../legacy/components/Grid",
        "resolvedPath": "src\\app\\legacy\\components\\Grid\\index.jsx"
      }
    ]
  },
  "src\\app\\components\\MostRead\\Canonical\\LastUpdated\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\MostRead\\Canonical\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "../../../../legacy/psammead/psammead-timestamp-container/src",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-timestamp-container\\src\\index.jsx"
      },
      {
        "source": "../../../../models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global.ts"
      },
      {
        "source": "../../../../models/types/theming",
        "resolvedPath": "src\\app\\models\\types\\theming.ts"
      }
    ]
  },
  "src\\app\\components\\MostRead\\Canonical\\List\\index.styles.ts": {
    "incomingDependencies": [
      "src\\app\\components\\MostRead\\Canonical\\List\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "../../../ThemeProvider/mediaQueries",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\mediaQueries.ts"
      }
    ]
  },
  "src\\app\\components\\MostRead\\Canonical\\List\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\MostRead\\Canonical\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "../../../../legacy/psammead/psammead-grid/src",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-grid\\src\\index.jsx"
      },
      {
        "source": "../../utilities/gridProps",
        "resolvedPath": "src\\app\\components\\MostRead\\utilities\\gridProps.ts"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\components\\MostRead\\Canonical\\List\\index.styles.ts"
      },
      {
        "source": "../../types",
        "resolvedPath": "src\\app\\components\\MostRead\\types.ts"
      },
      {
        "source": "../../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\MostRead\\Canonical\\Rank\\index.styles.ts": {
    "incomingDependencies": [
      "src\\app\\components\\MostRead\\Canonical\\Rank\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "../../utilities/rankMinWidth",
        "resolvedPath": "src\\app\\components\\MostRead\\utilities\\rankMinWidth.ts"
      },
      {
        "source": "../../../ThemeProvider/mediaQueries",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\mediaQueries.ts"
      },
      {
        "source": "../../../../models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global.ts"
      },
      {
        "source": "../../types",
        "resolvedPath": "src\\app\\components\\MostRead\\types.ts"
      },
      {
        "source": "../../../../legacy/psammead/psammead-styles/src/detection",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-styles\\src\\detection.js"
      }
    ]
  },
  "src\\app\\components\\MostRead\\Canonical\\Rank\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\MostRead\\Amp\\getRemoteDataScript\\index.ts",
      "src\\app\\components\\MostRead\\Amp\\index.tsx",
      "src\\app\\components\\MostRead\\Canonical\\index.tsx",
      "src\\app\\components\\MostRead\\utilities\\testHelpers.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "../../../../legacy/psammead/psammead-locales/src/numerals",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-locales\\src\\numerals\\index.js"
      },
      {
        "source": "../../../../models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global.ts"
      },
      {
        "source": "../../types",
        "resolvedPath": "src\\app\\components\\MostRead\\types.ts"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\components\\MostRead\\Canonical\\Rank\\index.styles.ts"
      }
    ]
  },
  "src\\app\\components\\MostRead\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\Curation\\index.tsx",
      "src\\app\\pages\\ArticlePage\\ArticlePage.tsx",
      "src\\app\\pages\\FrontPage\\FrontPage.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext"
      },
      {
        "source": "#hooks/useToggle",
        "resolvedPath": "src\\app\\hooks\\useToggle"
      },
      {
        "source": "#app/lib/utilities/getUrlHelpers/getMostReadUrls",
        "resolvedPath": "src\\app\\lib\\utilities\\getUrlHelpers\\getMostReadUrls"
      },
      {
        "source": "#app/lib/utilities/getEnvConfig",
        "resolvedPath": "src\\app\\lib\\utilities\\getEnvConfig"
      },
      {
        "source": "../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "./Canonical",
        "resolvedPath": "src\\app\\components\\MostRead\\Canonical\\index.tsx"
      },
      {
        "source": "./Amp",
        "resolvedPath": "src\\app\\components\\MostRead\\Amp\\index.tsx"
      },
      {
        "source": "./types",
        "resolvedPath": "src\\app\\components\\MostRead\\types.ts"
      },
      {
        "source": "./Section",
        "resolvedPath": "src\\app\\components\\MostRead\\Section\\index.tsx"
      },
      {
        "source": "./Label",
        "resolvedPath": "src\\app\\components\\MostRead\\Label\\index.tsx"
      },
      {
        "source": "../ThemeProvider/palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "../../lib/utilities/isLocal",
        "resolvedPath": "src\\app\\lib\\utilities\\isLocal\\index.js"
      },
      {
        "source": "../../routes/utils/pageTypes",
        "resolvedPath": "src\\app\\routes\\utils\\pageTypes.ts"
      },
      {
        "source": "../../models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global.ts"
      }
    ]
  },
  "src\\app\\components\\MostRead\\Label\\index.styles.ts": {
    "incomingDependencies": [
      "src\\app\\components\\MostRead\\Label\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      }
    ]
  },
  "src\\app\\components\\MostRead\\Label\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\MostRead\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\components\\MostRead\\Label\\index.styles.ts"
      },
      {
        "source": "../../../legacy/psammead/psammead-section-label/src",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-section-label\\src\\index.jsx"
      },
      {
        "source": "../../ThemeProvider/palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\MostRead\\Section\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\MostRead\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      }
    ]
  },
  "src\\app\\components\\MostRead\\types.ts": {
    "incomingDependencies": [
      "src\\app\\components\\MostRead\\Amp\\index.tsx",
      "src\\app\\components\\MostRead\\Canonical\\index.tsx",
      "src\\app\\components\\MostRead\\Canonical\\Item\\index.tsx",
      "src\\app\\components\\MostRead\\Canonical\\List\\index.tsx",
      "src\\app\\components\\MostRead\\Canonical\\Rank\\index.styles.ts",
      "src\\app\\components\\MostRead\\Canonical\\Rank\\index.tsx",
      "src\\app\\components\\MostRead\\index.tsx",
      "src\\app\\components\\MostRead\\utilities\\gridProps.ts",
      "src\\app\\components\\MostRead\\utilities\\rankMinWidth.ts",
      "src\\app\\components\\MostRead\\utilities\\testHelpers.tsx",
      "src\\app\\models\\types\\curationData.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global.ts"
      }
    ]
  },
  "src\\app\\components\\MostRead\\utilities\\generateCSPHash\\index.ts": {
    "incomingDependencies": [
      "src\\app\\components\\MostRead\\Amp\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "crypto",
        "resolvedPath": "crypto"
      }
    ]
  },
  "src\\app\\components\\MostRead\\utilities\\gridProps.ts": {
    "incomingDependencies": [
      "src\\app\\components\\MostRead\\Canonical\\Item\\index.tsx",
      "src\\app\\components\\MostRead\\Canonical\\List\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../types",
        "resolvedPath": "src\\app\\components\\MostRead\\types.ts"
      }
    ]
  },
  "src\\app\\components\\MostRead\\utilities\\rankMinWidth.ts": {
    "incomingDependencies": [
      "src\\app\\components\\MostRead\\Canonical\\Rank\\index.styles.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../ThemeProvider/spacings",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\spacings.ts"
      },
      {
        "source": "../types",
        "resolvedPath": "src\\app\\components\\MostRead\\types.ts"
      }
    ]
  },
  "src\\app\\components\\MostRead\\utilities\\testHelpers.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "#contexts/ToggleContext",
        "resolvedPath": "src\\app\\contexts\\ToggleContext"
      },
      {
        "source": "#storybook/withServicesDecorator/text-variants",
        "resolvedPath": ".storybook\\withServicesDecorator\\text-variants"
      },
      {
        "source": "../../../legacy/psammead/psammead-timestamp/src",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-timestamp\\src\\index.jsx"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../../ThemeProvider/fontScripts/latin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts"
      },
      {
        "source": "../Canonical/Item",
        "resolvedPath": "src\\app\\components\\MostRead\\Canonical\\Item\\index.tsx"
      },
      {
        "source": "../Canonical/Rank",
        "resolvedPath": "src\\app\\components\\MostRead\\Canonical\\Rank\\index.tsx"
      },
      {
        "source": "../../../models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global.ts"
      },
      {
        "source": "../../../models/types/theming",
        "resolvedPath": "src\\app\\models\\types\\theming.ts"
      },
      {
        "source": "../types",
        "resolvedPath": "src\\app\\components\\MostRead\\types.ts"
      }
    ]
  },
  "src\\app\\components\\OptimizelyRecommendations\\fixtureData.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "#models/blocks",
        "resolvedPath": "src\\app\\models\\blocks"
      }
    ]
  },
  "src\\app\\components\\OptimizelyRecommendations\\index.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "#containers/CpsRecommendations",
        "resolvedPath": "src\\app\\legacy\\containers\\CpsRecommendations"
      },
      {
        "source": "@optimizely/react-sdk",
        "resolvedPath": "@optimizely/react-sdk"
      },
      {
        "source": "#lib/config/optimizely",
        "resolvedPath": "src\\app\\lib\\config\\optimizely"
      },
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "#app/models/types/optimo",
        "resolvedPath": "src\\app\\models\\types\\optimo"
      }
    ]
  },
  "src\\app\\components\\PageLayoutWrapper\\index.styles.ts": {
    "incomingDependencies": [
      "src\\app\\components\\PageLayoutWrapper\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      }
    ]
  },
  "src\\app\\components\\PageLayoutWrapper\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\PageHandlers\\withPageWrapper\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "react-helmet",
        "resolvedPath": "node_modules\\@types\\react\\-helmet"
      },
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "#psammead/psammead-styles/src/global-styles",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-styles\\src\\global-styles"
      },
      {
        "source": "#app/models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global"
      },
      {
        "source": "../../legacy/containers/WebVitals",
        "resolvedPath": "src\\app\\legacy\\containers\\WebVitals\\index.jsx"
      },
      {
        "source": "../../legacy/containers/Header",
        "resolvedPath": "src\\app\\legacy\\containers\\Header\\index.jsx"
      },
      {
        "source": "../../legacy/containers/Footer",
        "resolvedPath": "src\\app\\legacy\\containers\\Footer\\index.jsx"
      },
      {
        "source": "../../legacy/containers/Manifest",
        "resolvedPath": "src\\app\\legacy\\containers\\Manifest\\index.jsx"
      },
      {
        "source": "../ServiceWorker",
        "resolvedPath": "src\\app\\components\\ServiceWorker\\index.tsx"
      },
      {
        "source": "../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../../contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext\\index.tsx"
      },
      {
        "source": "../ThemeProvider/fontFacesLazy",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontFacesLazy.ts"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\components\\PageLayoutWrapper\\index.styles.ts"
      }
    ]
  },
  "src\\app\\components\\Pagination\\buildBlocks.ts": {
    "incomingDependencies": [
      "src\\app\\components\\Pagination\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "ramda/src/pipe",
        "resolvedPath": "ramda/src/pipe"
      },
      {
        "source": "ramda/src/clone",
        "resolvedPath": "ramda/src/clone"
      },
      {
        "source": "#lib/utilities/findNClosestIndicies",
        "resolvedPath": "src\\app\\lib\\utilities\\findNClosestIndicies"
      }
    ]
  },
  "src\\app\\components\\Pagination\\index.styles.ts": {
    "incomingDependencies": [
      "src\\app\\components\\Pagination\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      }
    ]
  },
  "src\\app\\components\\Pagination\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\pages\\TopicPage\\TopicPage.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "#app/components/ThemeProvider/mediaQueries",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\mediaQueries"
      },
      {
        "source": "#app/contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "src\\app\\routes\\utils\\pageTypes"
      },
      {
        "source": "#app/models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global"
      },
      {
        "source": "../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "./buildBlocks",
        "resolvedPath": "src\\app\\components\\Pagination\\buildBlocks.ts"
      },
      {
        "source": "../icons",
        "resolvedPath": "src\\app\\components\\icons\\index.tsx"
      },
      {
        "source": "../VisuallyHiddenText",
        "resolvedPath": "src\\app\\components\\VisuallyHiddenText\\index.tsx"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\components\\Pagination\\index.styles.ts"
      }
    ]
  },
  "src\\app\\components\\Paragraph\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\EmbedConsentBanner\\ConsentBanner.tsx",
      "src\\app\\components\\Embeds\\Uploader\\index.tsx",
      "src\\app\\components\\MessageBanner\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "../../models/types/theming",
        "resolvedPath": "src\\app\\models\\types\\theming.ts"
      },
      {
        "source": "../Text",
        "resolvedPath": "src\\app\\components\\Text\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\react-testing-library-with-providers.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@testing-library/react",
        "resolvedPath": "@testing-library/react"
      },
      {
        "source": "../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext\\index.tsx"
      },
      {
        "source": "../contexts/ToggleContext",
        "resolvedPath": "src\\app\\contexts\\ToggleContext\\index.tsx"
      },
      {
        "source": "../contexts/UserContext",
        "resolvedPath": "src\\app\\contexts\\UserContext\\index.tsx"
      },
      {
        "source": "../contexts/EventTrackingContext",
        "resolvedPath": "src\\app\\contexts\\EventTrackingContext\\index.tsx"
      },
      {
        "source": "./ThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\index.tsx"
      },
      {
        "source": "../models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global.ts"
      },
      {
        "source": "./ATIAnalytics/types",
        "resolvedPath": "src\\app\\components\\ATIAnalytics\\types.ts"
      }
    ]
  },
  "src\\app\\components\\RelatedContentSection\\fixture\\index.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\components\\RelatedContentSection\\index.styles.ts": {
    "incomingDependencies": [
      "src\\app\\components\\RelatedContentSection\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      }
    ]
  },
  "src\\app\\components\\RelatedContentSection\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\pages\\ArticlePage\\ArticlePage.tsx",
      "src\\app\\pages\\MediaArticlePage\\MediaArticlePage.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "#psammead/psammead-section-label/src",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-section-label\\src"
      },
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "ramda/src/pathEq",
        "resolvedPath": "ramda/src/pathEq"
      },
      {
        "source": "ramda/src/path",
        "resolvedPath": "ramda/src/path"
      },
      {
        "source": "ramda/src/tail",
        "resolvedPath": "ramda/src/tail"
      },
      {
        "source": "ramda/src/slice",
        "resolvedPath": "ramda/src/slice"
      },
      {
        "source": "ramda/src/identity",
        "resolvedPath": "ramda/src/identity"
      },
      {
        "source": "ramda/src/last",
        "resolvedPath": "ramda/src/last"
      },
      {
        "source": "ramda/src/filter",
        "resolvedPath": "ramda/src/filter"
      },
      {
        "source": "ramda/src/pipe",
        "resolvedPath": "ramda/src/pipe"
      },
      {
        "source": "#hooks/useViewTracker",
        "resolvedPath": "src\\app\\hooks\\useViewTracker"
      },
      {
        "source": "../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\components\\RelatedContentSection\\index.styles.ts"
      },
      {
        "source": "../../lib/utilities/generatePromoId",
        "resolvedPath": "src\\app\\lib\\utilities\\generatePromoId\\index.ts"
      },
      {
        "source": "./RelatedContentItem",
        "resolvedPath": "src\\app\\components\\RelatedContentSection\\RelatedContentItem\\index.tsx"
      },
      {
        "source": "../../legacy/components/OptimoPromos/PromoList",
        "resolvedPath": "src\\app\\legacy\\components\\OptimoPromos\\PromoList\\index.jsx"
      },
      {
        "source": "../../legacy/components/OptimoPromos/PromoItem/index.styles",
        "resolvedPath": "src\\app\\legacy\\components\\OptimoPromos\\PromoItem\\index.styles.jsx"
      },
      {
        "source": "../../models/types/eventTracking",
        "resolvedPath": "src\\app\\models\\types\\eventTracking.ts"
      },
      {
        "source": "../../models/types/optimo",
        "resolvedPath": "src\\app\\models\\types\\optimo.ts"
      }
    ]
  },
  "src\\app\\components\\RelatedContentSection\\RelatedContentItem\\index.styles.ts": {
    "incomingDependencies": [
      "src\\app\\components\\RelatedContentSection\\RelatedContentItem\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      }
    ]
  },
  "src\\app\\components\\RelatedContentSection\\RelatedContentItem\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\RelatedContentSection\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "ramda/src/path",
        "resolvedPath": "ramda/src/path"
      },
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "#lib/utilities/srcSet",
        "resolvedPath": "src\\app\\lib\\utilities\\srcSet"
      },
      {
        "source": "#app/lib/utilities/ichefURL",
        "resolvedPath": "src\\app\\lib\\utilities\\ichefURL"
      },
      {
        "source": "#components/OptimoPromos",
        "resolvedPath": "src\\app\\legacy\\components\\OptimoPromos"
      },
      {
        "source": "ramda/src/isEmpty",
        "resolvedPath": "ramda/src/isEmpty"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\components\\RelatedContentSection\\RelatedContentItem\\index.styles.ts"
      },
      {
        "source": "../../../models/types/eventTracking",
        "resolvedPath": "src\\app\\models\\types\\eventTracking.ts"
      }
    ]
  },
  "src\\app\\components\\ServiceWorker\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\PageLayoutWrapper\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "react-helmet",
        "resolvedPath": "node_modules\\@types\\react\\-helmet"
      },
      {
        "source": "#lib/utilities/onClient",
        "resolvedPath": "src\\app\\lib\\utilities\\onClient"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "#app/lib/utilities/isLocal",
        "resolvedPath": "src\\app\\lib\\utilities\\isLocal"
      },
      {
        "source": "#app/lib/utilities/getEnvConfig",
        "resolvedPath": "src\\app\\lib\\utilities\\getEnvConfig"
      },
      {
        "source": "../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\Text\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\Billboard\\index.tsx",
      "src\\app\\components\\Byline\\index.tsx",
      "src\\app\\components\\CallToActionLink\\index.tsx",
      "src\\app\\components\\Caption\\index.tsx",
      "src\\app\\components\\Copyright\\index.tsx",
      "src\\app\\components\\DecoratedInline\\index.tsx",
      "src\\app\\components\\Disclaimer\\index.tsx",
      "src\\app\\components\\EmbedConsentBanner\\ConsentBanner.tsx",
      "src\\app\\components\\Embeds\\EmbedError\\index.tsx",
      "src\\app\\components\\Embeds\\Uploader\\index.tsx",
      "src\\app\\components\\Heading\\index.tsx",
      "src\\app\\components\\Paragraph\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "../../models/types/theming",
        "resolvedPath": "src\\app\\models\\types\\theming.ts"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\chameleonLogos\\afaanoromoo.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\afaanoromoo.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\chameleonLogos\\afrique.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\afrique.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\chameleonLogos\\amharic.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\amharic.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\chameleonLogos\\arabic.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\arabic.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\chameleonLogos\\azeri.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\azeri.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\chameleonLogos\\bangla.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\bengali.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\chameleonLogos\\burmese.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\burmese.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\chameleonLogos\\gahuza.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\gahuza.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\chameleonLogos\\gujarati.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\gujarati.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\chameleonLogos\\hausa.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\hausa.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\chameleonLogos\\hindi.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\hindi.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\chameleonLogos\\igbo.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\igbo.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\chameleonLogos\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\chameleonLogos\\afaanoromoo.tsx",
      "src\\app\\components\\ThemeProvider\\chameleonLogos\\afrique.tsx",
      "src\\app\\components\\ThemeProvider\\chameleonLogos\\amharic.tsx",
      "src\\app\\components\\ThemeProvider\\chameleonLogos\\arabic.tsx",
      "src\\app\\components\\ThemeProvider\\chameleonLogos\\azeri.tsx",
      "src\\app\\components\\ThemeProvider\\chameleonLogos\\bangla.tsx",
      "src\\app\\components\\ThemeProvider\\chameleonLogos\\burmese.tsx",
      "src\\app\\components\\ThemeProvider\\chameleonLogos\\gahuza.tsx",
      "src\\app\\components\\ThemeProvider\\chameleonLogos\\gujarati.tsx",
      "src\\app\\components\\ThemeProvider\\chameleonLogos\\hausa.tsx",
      "src\\app\\components\\ThemeProvider\\chameleonLogos\\hindi.tsx",
      "src\\app\\components\\ThemeProvider\\chameleonLogos\\igbo.tsx",
      "src\\app\\components\\ThemeProvider\\chameleonLogos\\indonesian.tsx",
      "src\\app\\components\\ThemeProvider\\chameleonLogos\\japanese.tsx",
      "src\\app\\components\\ThemeProvider\\chameleonLogos\\korean.tsx",
      "src\\app\\components\\ThemeProvider\\chameleonLogos\\kyrgyz.tsx",
      "src\\app\\components\\ThemeProvider\\chameleonLogos\\marathi.tsx",
      "src\\app\\components\\ThemeProvider\\chameleonLogos\\mundo.tsx",
      "src\\app\\components\\ThemeProvider\\chameleonLogos\\nepali.tsx",
      "src\\app\\components\\ThemeProvider\\chameleonLogos\\news.tsx",
      "src\\app\\components\\ThemeProvider\\chameleonLogos\\pashto.tsx",
      "src\\app\\components\\ThemeProvider\\chameleonLogos\\persian.tsx",
      "src\\app\\components\\ThemeProvider\\chameleonLogos\\pidgin.tsx",
      "src\\app\\components\\ThemeProvider\\chameleonLogos\\portuguese.tsx",
      "src\\app\\components\\ThemeProvider\\chameleonLogos\\punjabi.tsx",
      "src\\app\\components\\ThemeProvider\\chameleonLogos\\russian.tsx",
      "src\\app\\components\\ThemeProvider\\chameleonLogos\\serbian.tsx",
      "src\\app\\components\\ThemeProvider\\chameleonLogos\\sinhala.tsx",
      "src\\app\\components\\ThemeProvider\\chameleonLogos\\somali.tsx",
      "src\\app\\components\\ThemeProvider\\chameleonLogos\\sport.tsx",
      "src\\app\\components\\ThemeProvider\\chameleonLogos\\swahili.tsx",
      "src\\app\\components\\ThemeProvider\\chameleonLogos\\tamil.tsx",
      "src\\app\\components\\ThemeProvider\\chameleonLogos\\telugu.tsx",
      "src\\app\\components\\ThemeProvider\\chameleonLogos\\thai.tsx",
      "src\\app\\components\\ThemeProvider\\chameleonLogos\\tigrinya.tsx",
      "src\\app\\components\\ThemeProvider\\chameleonLogos\\turkish.tsx",
      "src\\app\\components\\ThemeProvider\\chameleonLogos\\ukrainian.tsx",
      "src\\app\\components\\ThemeProvider\\chameleonLogos\\urdu.tsx",
      "src\\app\\components\\ThemeProvider\\chameleonLogos\\uzbek.tsx",
      "src\\app\\components\\ThemeProvider\\chameleonLogos\\vietnamese.tsx",
      "src\\app\\components\\ThemeProvider\\chameleonLogos\\ws.tsx",
      "src\\app\\components\\ThemeProvider\\chameleonLogos\\yoruba.tsx",
      "src\\app\\components\\ThemeProvider\\chameleonLogos\\zhongwen.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "../../../models/types/theming",
        "resolvedPath": "src\\app\\models\\types\\theming.ts"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\chameleonLogos\\indonesian.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\indonesia.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\chameleonLogos\\japanese.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\japanese.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\chameleonLogos\\korean.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\korean.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\chameleonLogos\\kyrgyz.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\kyrgyz.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\chameleonLogos\\marathi.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\marathi.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\chameleonLogos\\mundo.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\mundo.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\chameleonLogos\\nepali.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\nepali.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\chameleonLogos\\news.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\news.ts",
      "src\\app\\components\\ThemeProvider\\themes\\ws.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\chameleonLogos\\pashto.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\pashto.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\chameleonLogos\\persian.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\persian.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\chameleonLogos\\pidgin.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\pidgin.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\chameleonLogos\\portuguese.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\portuguese.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\chameleonLogos\\punjabi.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\punjabi.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\chameleonLogos\\russian.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\russian.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\chameleonLogos\\serbian.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\serbian\\base.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\chameleonLogos\\sinhala.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\sinhala.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\chameleonLogos\\somali.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\somali.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\chameleonLogos\\sport.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\sport.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\chameleonLogos\\swahili.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\swahili.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\chameleonLogos\\tamil.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\tamil.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\chameleonLogos\\telugu.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\telugu.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\chameleonLogos\\thai.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\thai.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\chameleonLogos\\tigrinya.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\tigrinya.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\chameleonLogos\\turkish.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\turkce.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\chameleonLogos\\ukrainian.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\ukrainian.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\chameleonLogos\\urdu.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\urdu.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\chameleonLogos\\uzbek.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\uzbek\\base.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\chameleonLogos\\vietnamese.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\vietnamese.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\chameleonLogos\\ws.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\chameleonLogos\\yoruba.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\yoruba.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\chameleonLogos\\zhongwen.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\ukchina\\base.ts",
      "src\\app\\components\\ThemeProvider\\themes\\zhongwen\\base.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\index.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\defaultServiceVariants.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\index.tsx",
      "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "#app/models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\focusIndicator.ts": {
    "incomingDependencies": [
      "src\\app\\components\\EmbedConsentBanner\\ConsentBanner.styles.tsx",
      "src\\app\\components\\MediaLoader\\Placeholder\\index.styles.tsx",
      "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx",
      "src\\app\\legacy\\containers\\ConsentBanner\\Banner\\cookie.amp.jsx",
      "src\\app\\legacy\\psammead\\psammead-brand\\src\\index.jsx",
      "src\\app\\legacy\\psammead\\psammead-consent-banner\\src\\index.jsx",
      "src\\app\\legacy\\psammead\\psammead-navigation\\src\\index.jsx",
      "src\\app\\legacy\\psammead\\psammead-navigation\\src\\ScrollableNavigation\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "../../utilities/pixelsToRem",
        "resolvedPath": "src\\app\\utilities\\pixelsToRem\\index.ts"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\fontFaces.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\amharic.ts",
      "src\\app\\components\\ThemeProvider\\themes\\arabic.ts",
      "src\\app\\components\\ThemeProvider\\themes\\archive.ts",
      "src\\app\\components\\ThemeProvider\\themes\\bengali.ts",
      "src\\app\\components\\ThemeProvider\\themes\\burmese.ts",
      "src\\app\\components\\ThemeProvider\\themes\\cymrufyw.ts",
      "src\\app\\components\\ThemeProvider\\themes\\gujarati.ts",
      "src\\app\\components\\ThemeProvider\\themes\\mundo.ts",
      "src\\app\\components\\ThemeProvider\\themes\\naidheachdan.ts",
      "src\\app\\components\\ThemeProvider\\themes\\news.ts",
      "src\\app\\components\\ThemeProvider\\themes\\newsround.ts",
      "src\\app\\components\\ThemeProvider\\themes\\pashto.ts",
      "src\\app\\components\\ThemeProvider\\themes\\persian.ts",
      "src\\app\\components\\ThemeProvider\\themes\\portuguese.ts",
      "src\\app\\components\\ThemeProvider\\themes\\russian.ts",
      "src\\app\\components\\ThemeProvider\\themes\\scotland.ts",
      "src\\app\\components\\ThemeProvider\\themes\\sinhala.ts",
      "src\\app\\components\\ThemeProvider\\themes\\sport.ts",
      "src\\app\\components\\ThemeProvider\\themes\\tamil.ts",
      "src\\app\\components\\ThemeProvider\\themes\\telugu.ts",
      "src\\app\\components\\ThemeProvider\\themes\\tigrinya.ts",
      "src\\app\\components\\ThemeProvider\\themes\\turkce.ts",
      "src\\app\\components\\ThemeProvider\\themes\\urdu.ts",
      "src\\app\\components\\ThemeProvider\\themes\\ws.ts"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\components\\ThemeProvider\\fontFacesLazy.ts": {
    "incomingDependencies": [
      "src\\app\\components\\PageLayoutWrapper\\index.tsx"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\components\\ThemeProvider\\fontFamilies.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\fontVariants\\amharic.ts",
      "src\\app\\components\\ThemeProvider\\fontVariants\\bengali.ts",
      "src\\app\\components\\ThemeProvider\\fontVariants\\burmese.ts",
      "src\\app\\components\\ThemeProvider\\fontVariants\\chinese.ts",
      "src\\app\\components\\ThemeProvider\\fontVariants\\gujarati.ts",
      "src\\app\\components\\ThemeProvider\\fontVariants\\helmet.ts",
      "src\\app\\components\\ThemeProvider\\fontVariants\\hindi.ts",
      "src\\app\\components\\ThemeProvider\\fontVariants\\japanese.ts",
      "src\\app\\components\\ThemeProvider\\fontVariants\\korean.ts",
      "src\\app\\components\\ThemeProvider\\fontVariants\\marathi.ts",
      "src\\app\\components\\ThemeProvider\\fontVariants\\nepali.ts",
      "src\\app\\components\\ThemeProvider\\fontVariants\\punjabi.ts",
      "src\\app\\components\\ThemeProvider\\fontVariants\\reith.ts",
      "src\\app\\components\\ThemeProvider\\fontVariants\\reithQalam.ts",
      "src\\app\\components\\ThemeProvider\\fontVariants\\sinhala.ts",
      "src\\app\\components\\ThemeProvider\\fontVariants\\tamil.ts",
      "src\\app\\components\\ThemeProvider\\fontVariants\\telugu.ts",
      "src\\app\\components\\ThemeProvider\\fontVariants\\thai.ts",
      "src\\app\\components\\ThemeProvider\\fontVariants\\tigrinya.ts"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\components\\ThemeProvider\\fontMediaQueries.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\fontSizes.ts",
      "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../../utilities/pixelsToRem",
        "resolvedPath": "src\\app\\utilities\\pixelsToRem\\index.ts"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\fontScripts\\arabic.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\arabic.ts",
      "src\\app\\components\\ThemeProvider\\themes\\pashto.ts",
      "src\\app\\components\\ThemeProvider\\themes\\persian.ts",
      "src\\app\\components\\ThemeProvider\\themes\\urdu.ts",
      "src\\app\\legacy\\components\\RadioSchedule\\testHelpers\\helper.jsx",
      "src\\app\\lib\\config\\services\\arabic.ts",
      "src\\app\\lib\\config\\services\\pashto.ts",
      "src\\app\\lib\\config\\services\\persian.ts",
      "src\\app\\lib\\config\\services\\urdu.ts"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\components\\ThemeProvider\\fontScripts\\bengali.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\bengali.ts",
      "src\\app\\lib\\config\\services\\bengali.ts"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\components\\ThemeProvider\\fontScripts\\burmese.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\burmese.ts",
      "src\\app\\lib\\config\\services\\burmese.ts"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\components\\ThemeProvider\\fontScripts\\cyrillic.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\kyrgyz.ts",
      "src\\app\\components\\ThemeProvider\\themes\\russian.ts",
      "src\\app\\components\\ThemeProvider\\themes\\serbian\\cyr.ts",
      "src\\app\\components\\ThemeProvider\\themes\\ukrainian.ts",
      "src\\app\\components\\ThemeProvider\\themes\\uzbek\\cyr.ts",
      "src\\app\\lib\\config\\services\\kyrgyz.ts",
      "src\\app\\lib\\config\\services\\serbian.ts",
      "src\\app\\lib\\config\\services\\ukrainian.ts",
      "src\\app\\lib\\config\\services\\uzbek.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "./latin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\fontScripts\\devanagari.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\fontScripts\\gurmukhi.ts",
      "src\\app\\components\\ThemeProvider\\themes\\gujarati.ts",
      "src\\app\\components\\ThemeProvider\\themes\\hindi.ts",
      "src\\app\\components\\ThemeProvider\\themes\\marathi.ts",
      "src\\app\\components\\ThemeProvider\\themes\\nepali.ts",
      "src\\app\\components\\ThemeProvider\\themes\\telugu.ts",
      "src\\app\\lib\\config\\services\\gujarati.ts",
      "src\\app\\lib\\config\\services\\hindi.ts",
      "src\\app\\lib\\config\\services\\marathi.ts",
      "src\\app\\lib\\config\\services\\nepali.ts",
      "src\\app\\lib\\config\\services\\telugu.ts"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\components\\ThemeProvider\\fontScripts\\gurmukhi.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\punjabi.ts",
      "src\\app\\lib\\config\\services\\punjabi.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "./devanagari",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\devanagari.ts"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts": {
    "incomingDependencies": [
      "src\\app\\components\\MostRead\\utilities\\testHelpers.tsx",
      "src\\app\\components\\ThemeProvider\\fontScripts\\cyrillic.ts",
      "src\\app\\components\\ThemeProvider\\themes\\afaanoromoo.ts",
      "src\\app\\components\\ThemeProvider\\themes\\afrique.ts",
      "src\\app\\components\\ThemeProvider\\themes\\archive.ts",
      "src\\app\\components\\ThemeProvider\\themes\\gahuza.ts",
      "src\\app\\components\\ThemeProvider\\themes\\hausa.ts",
      "src\\app\\components\\ThemeProvider\\themes\\igbo.ts",
      "src\\app\\components\\ThemeProvider\\themes\\indonesia.ts",
      "src\\app\\components\\ThemeProvider\\themes\\news.ts",
      "src\\app\\components\\ThemeProvider\\themes\\newsround.ts",
      "src\\app\\components\\ThemeProvider\\themes\\pidgin.ts",
      "src\\app\\components\\ThemeProvider\\themes\\scotland.ts",
      "src\\app\\components\\ThemeProvider\\themes\\somali.ts",
      "src\\app\\components\\ThemeProvider\\themes\\sport.ts",
      "src\\app\\components\\ThemeProvider\\themes\\swahili.ts",
      "src\\app\\components\\ThemeProvider\\themes\\ws.ts",
      "src\\app\\components\\ThemeProvider\\themes\\yoruba.ts",
      "src\\app\\legacy\\components\\RadioSchedule\\testHelpers\\helper.jsx",
      "src\\app\\legacy\\psammead\\psammead-grid\\src\\testHelpers.jsx",
      "src\\app\\lib\\config\\services\\afaanoromoo.ts",
      "src\\app\\lib\\config\\services\\archive.ts",
      "src\\app\\lib\\config\\services\\gahuza.ts",
      "src\\app\\lib\\config\\services\\hausa.ts",
      "src\\app\\lib\\config\\services\\igbo.ts",
      "src\\app\\lib\\config\\services\\indonesia.ts",
      "src\\app\\lib\\config\\services\\news.ts",
      "src\\app\\lib\\config\\services\\newsround.ts",
      "src\\app\\lib\\config\\services\\pidgin.ts",
      "src\\app\\lib\\config\\services\\russian.ts",
      "src\\app\\lib\\config\\services\\scotland.ts",
      "src\\app\\lib\\config\\services\\somali.ts",
      "src\\app\\lib\\config\\services\\sport.ts",
      "src\\app\\lib\\config\\services\\swahili.ts",
      "src\\app\\lib\\config\\services\\ws.ts",
      "src\\app\\lib\\config\\services\\yoruba.ts"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\components\\ThemeProvider\\fontScripts\\latinWithDiacritics.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\azeri.ts",
      "src\\app\\components\\ThemeProvider\\themes\\cymrufyw.ts",
      "src\\app\\components\\ThemeProvider\\themes\\mundo.ts",
      "src\\app\\components\\ThemeProvider\\themes\\naidheachdan.ts",
      "src\\app\\components\\ThemeProvider\\themes\\portuguese.ts",
      "src\\app\\components\\ThemeProvider\\themes\\serbian\\lat.ts",
      "src\\app\\components\\ThemeProvider\\themes\\turkce.ts",
      "src\\app\\components\\ThemeProvider\\themes\\uzbek\\lat.ts",
      "src\\app\\components\\ThemeProvider\\themes\\vietnamese.ts",
      "src\\app\\lib\\config\\services\\afrique.ts",
      "src\\app\\lib\\config\\services\\azeri.ts",
      "src\\app\\lib\\config\\services\\cymrufyw.ts",
      "src\\app\\lib\\config\\services\\mundo.ts",
      "src\\app\\lib\\config\\services\\naidheachdan.ts",
      "src\\app\\lib\\config\\services\\portuguese.ts",
      "src\\app\\lib\\config\\services\\serbian.ts",
      "src\\app\\lib\\config\\services\\turkce.ts",
      "src\\app\\lib\\config\\services\\uzbek.ts",
      "src\\app\\lib\\config\\services\\vietnamese.ts"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\components\\ThemeProvider\\fontScripts\\noAscOrDesc.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\amharic.ts",
      "src\\app\\components\\ThemeProvider\\themes\\japanese.ts",
      "src\\app\\components\\ThemeProvider\\themes\\korean.ts",
      "src\\app\\components\\ThemeProvider\\themes\\tigrinya.ts",
      "src\\app\\components\\ThemeProvider\\themes\\ukchina\\base.ts",
      "src\\app\\components\\ThemeProvider\\themes\\zhongwen\\base.ts",
      "src\\app\\lib\\config\\services\\amharic.ts",
      "src\\app\\lib\\config\\services\\japanese.ts",
      "src\\app\\lib\\config\\services\\korean.ts",
      "src\\app\\lib\\config\\services\\tigrinya.ts",
      "src\\app\\lib\\config\\services\\ukchina.ts",
      "src\\app\\lib\\config\\services\\zhongwen.ts"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\components\\ThemeProvider\\fontScripts\\sinhalese.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\sinhala.ts",
      "src\\app\\lib\\config\\services\\sinhala.ts"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\components\\ThemeProvider\\fontScripts\\tamil.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\tamil.ts",
      "src\\app\\lib\\config\\services\\tamil.ts"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\components\\ThemeProvider\\fontScripts\\thai.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\thai.ts",
      "src\\app\\lib\\config\\services\\thai.ts"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\components\\ThemeProvider\\fontSizes.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../../utilities/pixelsToRem",
        "resolvedPath": "src\\app\\utilities\\pixelsToRem\\index.ts"
      },
      {
        "source": "./fontMediaQueries",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontMediaQueries.ts"
      },
      {
        "source": "../../models/types/theming",
        "resolvedPath": "src\\app\\models\\types\\theming.ts"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\fontVariants\\amharic.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\amharic.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../fontFamilies",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontFamilies.ts"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\fontVariants\\bengali.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\bengali.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../fontFamilies",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontFamilies.ts"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\fontVariants\\burmese.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\burmese.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../fontFamilies",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontFamilies.ts"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\fontVariants\\chinese.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\ukchina\\base.ts",
      "src\\app\\components\\ThemeProvider\\themes\\zhongwen\\base.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../fontFamilies",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontFamilies.ts"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\fontVariants\\gujarati.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\gujarati.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../fontFamilies",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontFamilies.ts"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\fontVariants\\helmet.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\afaanoromoo.ts",
      "src\\app\\components\\ThemeProvider\\themes\\afrique.ts",
      "src\\app\\components\\ThemeProvider\\themes\\azeri.ts",
      "src\\app\\components\\ThemeProvider\\themes\\gahuza.ts",
      "src\\app\\components\\ThemeProvider\\themes\\hausa.ts",
      "src\\app\\components\\ThemeProvider\\themes\\igbo.ts",
      "src\\app\\components\\ThemeProvider\\themes\\indonesia.ts",
      "src\\app\\components\\ThemeProvider\\themes\\kyrgyz.ts",
      "src\\app\\components\\ThemeProvider\\themes\\pidgin.ts",
      "src\\app\\components\\ThemeProvider\\themes\\serbian\\base.ts",
      "src\\app\\components\\ThemeProvider\\themes\\somali.ts",
      "src\\app\\components\\ThemeProvider\\themes\\swahili.ts",
      "src\\app\\components\\ThemeProvider\\themes\\ukrainian.ts",
      "src\\app\\components\\ThemeProvider\\themes\\uzbek\\base.ts",
      "src\\app\\components\\ThemeProvider\\themes\\vietnamese.ts",
      "src\\app\\components\\ThemeProvider\\themes\\yoruba.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../fontFamilies",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontFamilies.ts"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\fontVariants\\hindi.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\hindi.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../fontFamilies",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontFamilies.ts"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\fontVariants\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../models/types/theming",
        "resolvedPath": "src\\app\\models\\types\\theming.ts"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\fontVariants\\japanese.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\japanese.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../fontFamilies",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontFamilies.ts"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\fontVariants\\korean.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\korean.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../fontFamilies",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontFamilies.ts"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\fontVariants\\marathi.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\marathi.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../fontFamilies",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontFamilies.ts"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\fontVariants\\nepali.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\nepali.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../fontFamilies",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontFamilies.ts"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\fontVariants\\punjabi.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\punjabi.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../fontFamilies",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontFamilies.ts"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\fontVariants\\reith.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\archive.ts",
      "src\\app\\components\\ThemeProvider\\themes\\cymrufyw.ts",
      "src\\app\\components\\ThemeProvider\\themes\\mundo.ts",
      "src\\app\\components\\ThemeProvider\\themes\\naidheachdan.ts",
      "src\\app\\components\\ThemeProvider\\themes\\news.ts",
      "src\\app\\components\\ThemeProvider\\themes\\newsround.ts",
      "src\\app\\components\\ThemeProvider\\themes\\portuguese.ts",
      "src\\app\\components\\ThemeProvider\\themes\\russian.ts",
      "src\\app\\components\\ThemeProvider\\themes\\scotland.ts",
      "src\\app\\components\\ThemeProvider\\themes\\sport.ts",
      "src\\app\\components\\ThemeProvider\\themes\\turkce.ts",
      "src\\app\\components\\ThemeProvider\\themes\\ws.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../fontFamilies",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontFamilies.ts"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\fontVariants\\reithQalam.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\arabic.ts",
      "src\\app\\components\\ThemeProvider\\themes\\pashto.ts",
      "src\\app\\components\\ThemeProvider\\themes\\persian.ts",
      "src\\app\\components\\ThemeProvider\\themes\\urdu.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../fontFamilies",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontFamilies.ts"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\fontVariants\\sinhala.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\sinhala.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../fontFamilies",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontFamilies.ts"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\fontVariants\\tamil.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\tamil.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../fontFamilies",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontFamilies.ts"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\fontVariants\\telugu.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\telugu.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../fontFamilies",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontFamilies.ts"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\fontVariants\\thai.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\thai.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../fontFamilies",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontFamilies.ts"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\fontVariants\\tigrinya.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\tigrinya.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../fontFamilies",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontFamilies.ts"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\gridWidths.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../../models/types/theming",
        "resolvedPath": "src\\app\\models\\types\\theming.ts"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\react-testing-library-with-providers.tsx",
      "src\\app\\legacy\\containers\\ImageWithPlaceholder\\fixtureData.jsx",
      "src\\app\\legacy\\containers\\PageHandlers\\withContexts.jsx",
      "src\\app\\legacy\\containers\\SocialEmbed\\common\\testHelper.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "../../models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global.ts"
      },
      {
        "source": "./defaultServiceVariants",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\defaultServiceVariants.ts"
      },
      {
        "source": "./themes/loadableConfig",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\loadableConfig.ts"
      },
      {
        "source": "./themes/news",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\news.ts"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\mediaQueries.ts": {
    "incomingDependencies": [
      "src\\app\\components\\Ad\\Amp\\AdSlot\\index.tsx",
      "src\\app\\components\\Footer\\index.styles.ts",
      "src\\app\\components\\Footer\\List\\index.styles.ts",
      "src\\app\\components\\MostRead\\Canonical\\List\\index.styles.ts",
      "src\\app\\components\\MostRead\\Canonical\\Rank\\index.styles.ts",
      "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx",
      "src\\app\\lib\\styles.const\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../utilities/pixelsToRem",
        "resolvedPath": "src\\app\\utilities\\pixelsToRem\\index.ts"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\palette.ts": {
    "incomingDependencies": [
      "src\\app\\components\\BulletedList\\index.tsx",
      "src\\app\\components\\Curation\\index.tsx",
      "src\\app\\components\\MostRead\\index.tsx",
      "src\\app\\components\\MostRead\\Label\\index.tsx",
      "src\\app\\components\\ThemeProvider\\themes\\afaanoromoo.ts",
      "src\\app\\components\\ThemeProvider\\themes\\afrique.ts",
      "src\\app\\components\\ThemeProvider\\themes\\amharic.ts",
      "src\\app\\components\\ThemeProvider\\themes\\arabic.ts",
      "src\\app\\components\\ThemeProvider\\themes\\archive.ts",
      "src\\app\\components\\ThemeProvider\\themes\\azeri.ts",
      "src\\app\\components\\ThemeProvider\\themes\\bengali.ts",
      "src\\app\\components\\ThemeProvider\\themes\\burmese.ts",
      "src\\app\\components\\ThemeProvider\\themes\\cymrufyw.ts",
      "src\\app\\components\\ThemeProvider\\themes\\gahuza.ts",
      "src\\app\\components\\ThemeProvider\\themes\\gujarati.ts",
      "src\\app\\components\\ThemeProvider\\themes\\hausa.ts",
      "src\\app\\components\\ThemeProvider\\themes\\hindi.ts",
      "src\\app\\components\\ThemeProvider\\themes\\igbo.ts",
      "src\\app\\components\\ThemeProvider\\themes\\indonesia.ts",
      "src\\app\\components\\ThemeProvider\\themes\\japanese.ts",
      "src\\app\\components\\ThemeProvider\\themes\\korean.ts",
      "src\\app\\components\\ThemeProvider\\themes\\kyrgyz.ts",
      "src\\app\\components\\ThemeProvider\\themes\\marathi.ts",
      "src\\app\\components\\ThemeProvider\\themes\\mundo.ts",
      "src\\app\\components\\ThemeProvider\\themes\\naidheachdan.ts",
      "src\\app\\components\\ThemeProvider\\themes\\nepali.ts",
      "src\\app\\components\\ThemeProvider\\themes\\news.ts",
      "src\\app\\components\\ThemeProvider\\themes\\newsround.ts",
      "src\\app\\components\\ThemeProvider\\themes\\pashto.ts",
      "src\\app\\components\\ThemeProvider\\themes\\persian.ts",
      "src\\app\\components\\ThemeProvider\\themes\\pidgin.ts",
      "src\\app\\components\\ThemeProvider\\themes\\portuguese.ts",
      "src\\app\\components\\ThemeProvider\\themes\\punjabi.ts",
      "src\\app\\components\\ThemeProvider\\themes\\russian.ts",
      "src\\app\\components\\ThemeProvider\\themes\\scotland.ts",
      "src\\app\\components\\ThemeProvider\\themes\\serbian\\base.ts",
      "src\\app\\components\\ThemeProvider\\themes\\sinhala.ts",
      "src\\app\\components\\ThemeProvider\\themes\\somali.ts",
      "src\\app\\components\\ThemeProvider\\themes\\sport.ts",
      "src\\app\\components\\ThemeProvider\\themes\\swahili.ts",
      "src\\app\\components\\ThemeProvider\\themes\\tamil.ts",
      "src\\app\\components\\ThemeProvider\\themes\\telugu.ts",
      "src\\app\\components\\ThemeProvider\\themes\\thai.ts",
      "src\\app\\components\\ThemeProvider\\themes\\tigrinya.ts",
      "src\\app\\components\\ThemeProvider\\themes\\turkce.ts",
      "src\\app\\components\\ThemeProvider\\themes\\ukchina\\base.ts",
      "src\\app\\components\\ThemeProvider\\themes\\ukrainian.ts",
      "src\\app\\components\\ThemeProvider\\themes\\urdu.ts",
      "src\\app\\components\\ThemeProvider\\themes\\uzbek\\base.ts",
      "src\\app\\components\\ThemeProvider\\themes\\vietnamese.ts",
      "src\\app\\components\\ThemeProvider\\themes\\ws.ts",
      "src\\app\\components\\ThemeProvider\\themes\\yoruba.ts",
      "src\\app\\components\\ThemeProvider\\themes\\zhongwen\\base.ts",
      "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx",
      "src\\app\\legacy\\components\\RadioSchedule\\utilities\\index.js",
      "src\\app\\legacy\\containers\\CpsOnwardJourney\\index.jsx",
      "src\\app\\legacy\\psammead\\psammead-social-embed\\src\\CaptionWrapper\\index.jsx",
      "src\\app\\legacy\\psammead\\psammead-story-promo-list\\src\\index.jsx",
      "src\\app\\pages\\FrontPage\\FrontPage.jsx"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\components\\ThemeProvider\\spacings.ts": {
    "incomingDependencies": [
      "src\\app\\components\\Caption\\index.style.tsx",
      "src\\app\\components\\Footer\\index.styles.ts",
      "src\\app\\components\\MostRead\\utilities\\rankMinWidth.ts",
      "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx",
      "src\\app\\lib\\styles.const\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../utilities/pixelsToRem",
        "resolvedPath": "src\\app\\utilities\\pixelsToRem\\index.ts"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\afaanoromoo.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "../fontScripts/latin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts"
      },
      {
        "source": "../fontVariants/helmet",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontVariants\\helmet.ts"
      },
      {
        "source": "../withThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
      },
      {
        "source": "../chameleonLogos/afaanoromoo",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\afaanoromoo.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\afrique.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "../fontScripts/latin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts"
      },
      {
        "source": "../fontVariants/helmet",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontVariants\\helmet.ts"
      },
      {
        "source": "../withThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
      },
      {
        "source": "../chameleonLogos/afrique",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\afrique.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\amharic.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "../fontScripts/noAscOrDesc",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\noAscOrDesc.ts"
      },
      {
        "source": "../fontFaces",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontFaces.ts"
      },
      {
        "source": "../fontVariants/amharic",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontVariants\\amharic.ts"
      },
      {
        "source": "../withThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
      },
      {
        "source": "../chameleonLogos/amharic",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\amharic.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\arabic.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "../fontScripts/arabic",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\arabic.ts"
      },
      {
        "source": "../fontFaces",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontFaces.ts"
      },
      {
        "source": "../fontVariants/reithQalam",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontVariants\\reithQalam.ts"
      },
      {
        "source": "../withThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
      },
      {
        "source": "../chameleonLogos/arabic",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\arabic.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\archive.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "../fontScripts/latin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts"
      },
      {
        "source": "../fontFaces",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontFaces.ts"
      },
      {
        "source": "../fontVariants/reith",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontVariants\\reith.ts"
      },
      {
        "source": "../withThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
      },
      {
        "source": "../../../legacy/psammead/psammead-assets/src/svgs/archive",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\archive.jsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\azeri.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "../fontScripts/latinWithDiacritics",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latinWithDiacritics.ts"
      },
      {
        "source": "../fontVariants/helmet",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontVariants\\helmet.ts"
      },
      {
        "source": "../withThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
      },
      {
        "source": "../chameleonLogos/azeri",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\azeri.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\bengali.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "../fontScripts/bengali",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\bengali.ts"
      },
      {
        "source": "../fontFaces",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontFaces.ts"
      },
      {
        "source": "../fontVariants/bengali",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontVariants\\bengali.ts"
      },
      {
        "source": "../withThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
      },
      {
        "source": "../chameleonLogos/bangla",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\bangla.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\burmese.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "../fontScripts/burmese",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\burmese.ts"
      },
      {
        "source": "../fontFaces",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontFaces.ts"
      },
      {
        "source": "../fontVariants/burmese",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontVariants\\burmese.ts"
      },
      {
        "source": "../withThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
      },
      {
        "source": "../chameleonLogos/burmese",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\burmese.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\cymrufyw.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "../fontScripts/latinWithDiacritics",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latinWithDiacritics.ts"
      },
      {
        "source": "../fontFaces",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontFaces.ts"
      },
      {
        "source": "../fontVariants/reith",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontVariants\\reith.ts"
      },
      {
        "source": "../withThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
      },
      {
        "source": "../../../legacy/psammead/psammead-assets/src/svgs/cymrufyw",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\cymrufyw.jsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\gahuza.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "../fontScripts/latin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts"
      },
      {
        "source": "../fontVariants/helmet",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontVariants\\helmet.ts"
      },
      {
        "source": "../withThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
      },
      {
        "source": "../chameleonLogos/gahuza",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\gahuza.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\gujarati.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "../fontScripts/devanagari",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\devanagari.ts"
      },
      {
        "source": "../fontFaces",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontFaces.ts"
      },
      {
        "source": "../fontVariants/gujarati",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontVariants\\gujarati.ts"
      },
      {
        "source": "../withThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
      },
      {
        "source": "../chameleonLogos/gujarati",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\gujarati.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\hausa.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "../fontScripts/latin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts"
      },
      {
        "source": "../fontVariants/helmet",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontVariants\\helmet.ts"
      },
      {
        "source": "../withThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
      },
      {
        "source": "../chameleonLogos/hausa",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\hausa.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\hindi.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "../fontScripts/devanagari",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\devanagari.ts"
      },
      {
        "source": "../fontVariants/hindi",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontVariants\\hindi.ts"
      },
      {
        "source": "../withThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
      },
      {
        "source": "../chameleonLogos/hindi",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\hindi.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\igbo.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "../fontScripts/latin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts"
      },
      {
        "source": "../fontVariants/helmet",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontVariants\\helmet.ts"
      },
      {
        "source": "../withThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
      },
      {
        "source": "../chameleonLogos/igbo",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\igbo.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\indonesia.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "../fontScripts/latin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts"
      },
      {
        "source": "../fontVariants/helmet",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontVariants\\helmet.ts"
      },
      {
        "source": "../withThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
      },
      {
        "source": "../chameleonLogos/indonesian",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\indonesian.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\japanese.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "../fontScripts/noAscOrDesc",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\noAscOrDesc.ts"
      },
      {
        "source": "../fontVariants/japanese",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontVariants\\japanese.ts"
      },
      {
        "source": "../withThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
      },
      {
        "source": "../chameleonLogos/japanese",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\japanese.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\korean.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "../fontScripts/noAscOrDesc",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\noAscOrDesc.ts"
      },
      {
        "source": "../fontVariants/korean",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontVariants\\korean.ts"
      },
      {
        "source": "../withThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
      },
      {
        "source": "../chameleonLogos/korean",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\korean.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\kyrgyz.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "../fontScripts/cyrillic",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\cyrillic.ts"
      },
      {
        "source": "../fontVariants/helmet",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontVariants\\helmet.ts"
      },
      {
        "source": "../withThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
      },
      {
        "source": "../chameleonLogos/kyrgyz",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\kyrgyz.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\loadableConfig.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@loadable/component",
        "resolvedPath": "@loadable/component"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\marathi.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "../fontScripts/devanagari",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\devanagari.ts"
      },
      {
        "source": "../fontVariants/marathi",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontVariants\\marathi.ts"
      },
      {
        "source": "../withThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
      },
      {
        "source": "../chameleonLogos/marathi",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\marathi.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\mundo.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "../fontScripts/latinWithDiacritics",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latinWithDiacritics.ts"
      },
      {
        "source": "../fontFaces",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontFaces.ts"
      },
      {
        "source": "../withThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
      },
      {
        "source": "../fontVariants/reith",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontVariants\\reith.ts"
      },
      {
        "source": "../chameleonLogos/mundo",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\mundo.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\naidheachdan.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "../fontScripts/latinWithDiacritics",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latinWithDiacritics.ts"
      },
      {
        "source": "../fontFaces",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontFaces.ts"
      },
      {
        "source": "../fontVariants/reith",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontVariants\\reith.ts"
      },
      {
        "source": "../withThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
      },
      {
        "source": "../../../legacy/psammead/psammead-assets/src/svgs/naidheachdan",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\naidheachdan.jsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\nepali.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "../fontScripts/devanagari",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\devanagari.ts"
      },
      {
        "source": "../fontVariants/nepali",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontVariants\\nepali.ts"
      },
      {
        "source": "../withThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
      },
      {
        "source": "../chameleonLogos/nepali",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\nepali.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\news.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\index.tsx",
      "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "../fontScripts/latin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts"
      },
      {
        "source": "../fontFaces",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontFaces.ts"
      },
      {
        "source": "../fontVariants/reith",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontVariants\\reith.ts"
      },
      {
        "source": "../withThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
      },
      {
        "source": "../chameleonLogos/news",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\news.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\newsround.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "../fontScripts/latin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts"
      },
      {
        "source": "../fontFaces",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontFaces.ts"
      },
      {
        "source": "../fontVariants/reith",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontVariants\\reith.ts"
      },
      {
        "source": "../withThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
      },
      {
        "source": "../../../legacy/psammead/psammead-assets/src/svgs/newsround",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\newsround.jsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\pashto.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "../fontScripts/arabic",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\arabic.ts"
      },
      {
        "source": "../fontFaces",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontFaces.ts"
      },
      {
        "source": "../fontVariants/reithQalam",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontVariants\\reithQalam.ts"
      },
      {
        "source": "../withThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
      },
      {
        "source": "../chameleonLogos/pashto",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\pashto.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\persian.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "../fontScripts/arabic",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\arabic.ts"
      },
      {
        "source": "../fontFaces",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontFaces.ts"
      },
      {
        "source": "../fontVariants/reithQalam",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontVariants\\reithQalam.ts"
      },
      {
        "source": "../withThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
      },
      {
        "source": "../chameleonLogos/persian",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\persian.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\pidgin.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "../fontScripts/latin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts"
      },
      {
        "source": "../fontVariants/helmet",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontVariants\\helmet.ts"
      },
      {
        "source": "../withThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
      },
      {
        "source": "../chameleonLogos/pidgin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\pidgin.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\portuguese.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "../fontScripts/latinWithDiacritics",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latinWithDiacritics.ts"
      },
      {
        "source": "../fontFaces",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontFaces.ts"
      },
      {
        "source": "../fontVariants/reith",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontVariants\\reith.ts"
      },
      {
        "source": "../withThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
      },
      {
        "source": "../chameleonLogos/portuguese",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\portuguese.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\punjabi.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "../fontScripts/gurmukhi",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\gurmukhi.ts"
      },
      {
        "source": "../fontVariants/punjabi",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontVariants\\punjabi.ts"
      },
      {
        "source": "../withThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
      },
      {
        "source": "../chameleonLogos/punjabi",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\punjabi.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\russian.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "../fontScripts/cyrillic",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\cyrillic.ts"
      },
      {
        "source": "../fontFaces",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontFaces.ts"
      },
      {
        "source": "../fontVariants/reith",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontVariants\\reith.ts"
      },
      {
        "source": "../withThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
      },
      {
        "source": "../chameleonLogos/russian",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\russian.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\scotland.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "../fontScripts/latin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts"
      },
      {
        "source": "../fontFaces",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontFaces.ts"
      },
      {
        "source": "../fontVariants/reith",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontVariants\\reith.ts"
      },
      {
        "source": "../withThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
      },
      {
        "source": "../../../legacy/psammead/psammead-assets/src/svgs/scotland",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\scotland.jsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\serbian\\base.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\serbian\\cyr.ts",
      "src\\app\\components\\ThemeProvider\\themes\\serbian\\lat.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "../../fontVariants/helmet",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontVariants\\helmet.ts"
      },
      {
        "source": "../../chameleonLogos/serbian",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\serbian.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\serbian\\cyr.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "ramda",
        "resolvedPath": "ramda"
      },
      {
        "source": "../../fontScripts/cyrillic",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\cyrillic.ts"
      },
      {
        "source": "../../withThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
      },
      {
        "source": "./base",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\serbian\\base.ts"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\serbian\\lat.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "ramda",
        "resolvedPath": "ramda"
      },
      {
        "source": "../../fontScripts/latinWithDiacritics",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latinWithDiacritics.ts"
      },
      {
        "source": "../../withThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
      },
      {
        "source": "./base",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\serbian\\base.ts"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\sinhala.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "../fontScripts/sinhalese",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\sinhalese.ts"
      },
      {
        "source": "../fontFaces",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontFaces.ts"
      },
      {
        "source": "../fontVariants/sinhala",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontVariants\\sinhala.ts"
      },
      {
        "source": "../withThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
      },
      {
        "source": "../chameleonLogos/sinhala",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\sinhala.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\somali.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "../fontScripts/latin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts"
      },
      {
        "source": "../fontVariants/helmet",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontVariants\\helmet.ts"
      },
      {
        "source": "../withThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
      },
      {
        "source": "../chameleonLogos/somali",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\somali.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\sport.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "../fontScripts/latin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts"
      },
      {
        "source": "../fontFaces",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontFaces.ts"
      },
      {
        "source": "../fontVariants/reith",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontVariants\\reith.ts"
      },
      {
        "source": "../withThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
      },
      {
        "source": "../chameleonLogos/sport",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\sport.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\swahili.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "../fontScripts/latin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts"
      },
      {
        "source": "../fontVariants/helmet",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontVariants\\helmet.ts"
      },
      {
        "source": "../withThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
      },
      {
        "source": "../chameleonLogos/swahili",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\swahili.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\tamil.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "../fontScripts/tamil",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\tamil.ts"
      },
      {
        "source": "../fontFaces",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontFaces.ts"
      },
      {
        "source": "../fontVariants/tamil",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontVariants\\tamil.ts"
      },
      {
        "source": "../withThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
      },
      {
        "source": "../chameleonLogos/tamil",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\tamil.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\telugu.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "../fontScripts/devanagari",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\devanagari.ts"
      },
      {
        "source": "../fontFaces",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontFaces.ts"
      },
      {
        "source": "../fontVariants/telugu",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontVariants\\telugu.ts"
      },
      {
        "source": "../withThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
      },
      {
        "source": "../chameleonLogos/telugu",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\telugu.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\thai.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "../fontScripts/thai",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\thai.ts"
      },
      {
        "source": "../fontVariants/thai",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontVariants\\thai.ts"
      },
      {
        "source": "../withThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
      },
      {
        "source": "../chameleonLogos/thai",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\thai.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\tigrinya.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "../fontScripts/noAscOrDesc",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\noAscOrDesc.ts"
      },
      {
        "source": "../fontFaces",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontFaces.ts"
      },
      {
        "source": "../fontVariants/tigrinya",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontVariants\\tigrinya.ts"
      },
      {
        "source": "../withThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
      },
      {
        "source": "../chameleonLogos/tigrinya",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\tigrinya.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\turkce.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "../fontScripts/latinWithDiacritics",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latinWithDiacritics.ts"
      },
      {
        "source": "../fontFaces",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontFaces.ts"
      },
      {
        "source": "../fontVariants/reith",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontVariants\\reith.ts"
      },
      {
        "source": "../withThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
      },
      {
        "source": "../chameleonLogos/turkish",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\turkish.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\ukchina\\base.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\ukchina\\simp.ts",
      "src\\app\\components\\ThemeProvider\\themes\\ukchina\\trad.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "../../fontScripts/noAscOrDesc",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\noAscOrDesc.ts"
      },
      {
        "source": "../../fontVariants/chinese",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontVariants\\chinese.ts"
      },
      {
        "source": "../../chameleonLogos/zhongwen",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\zhongwen.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\ukchina\\simp.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../../withThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
      },
      {
        "source": "./base",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\ukchina\\base.ts"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\ukchina\\trad.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../../withThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
      },
      {
        "source": "./base",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\ukchina\\base.ts"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\ukrainian.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "../fontScripts/cyrillic",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\cyrillic.ts"
      },
      {
        "source": "../fontVariants/helmet",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontVariants\\helmet.ts"
      },
      {
        "source": "../withThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
      },
      {
        "source": "../chameleonLogos/ukrainian",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\ukrainian.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\urdu.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "../fontScripts/arabic",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\arabic.ts"
      },
      {
        "source": "../fontFaces",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontFaces.ts"
      },
      {
        "source": "../fontVariants/reithQalam",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontVariants\\reithQalam.ts"
      },
      {
        "source": "../withThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
      },
      {
        "source": "../chameleonLogos/urdu",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\urdu.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\uzbek\\base.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\uzbek\\cyr.ts",
      "src\\app\\components\\ThemeProvider\\themes\\uzbek\\lat.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "../../fontVariants/helmet",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontVariants\\helmet.ts"
      },
      {
        "source": "../../chameleonLogos/uzbek",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\uzbek.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\uzbek\\cyr.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "ramda",
        "resolvedPath": "ramda"
      },
      {
        "source": "../../fontScripts/cyrillic",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\cyrillic.ts"
      },
      {
        "source": "../../withThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
      },
      {
        "source": "./base",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\uzbek\\base.ts"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\uzbek\\lat.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "ramda",
        "resolvedPath": "ramda"
      },
      {
        "source": "../../fontScripts/latinWithDiacritics",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latinWithDiacritics.ts"
      },
      {
        "source": "../../withThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
      },
      {
        "source": "./base",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\uzbek\\base.ts"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\vietnamese.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "../fontScripts/latinWithDiacritics",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latinWithDiacritics.ts"
      },
      {
        "source": "../fontVariants/helmet",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontVariants\\helmet.ts"
      },
      {
        "source": "../withThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
      },
      {
        "source": "../chameleonLogos/vietnamese",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\vietnamese.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\ws.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "../fontScripts/latin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts"
      },
      {
        "source": "../fontFaces",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontFaces.ts"
      },
      {
        "source": "../fontVariants/reith",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontVariants\\reith.ts"
      },
      {
        "source": "../withThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
      },
      {
        "source": "../chameleonLogos/news",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\news.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\yoruba.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "../fontScripts/latin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts"
      },
      {
        "source": "../fontVariants/helmet",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontVariants\\helmet.ts"
      },
      {
        "source": "../withThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
      },
      {
        "source": "../chameleonLogos/yoruba",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\yoruba.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\zhongwen\\base.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\zhongwen\\simp.ts",
      "src\\app\\components\\ThemeProvider\\themes\\zhongwen\\trad.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "../../fontScripts/noAscOrDesc",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\noAscOrDesc.ts"
      },
      {
        "source": "../../fontVariants/chinese",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontVariants\\chinese.ts"
      },
      {
        "source": "../../chameleonLogos/zhongwen",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\chameleonLogos\\zhongwen.tsx"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\zhongwen\\simp.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../../withThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
      },
      {
        "source": "./base",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\zhongwen\\base.ts"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\themes\\zhongwen\\trad.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../../withThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
      },
      {
        "source": "./base",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\zhongwen\\base.ts"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\afaanoromoo.ts",
      "src\\app\\components\\ThemeProvider\\themes\\afrique.ts",
      "src\\app\\components\\ThemeProvider\\themes\\amharic.ts",
      "src\\app\\components\\ThemeProvider\\themes\\arabic.ts",
      "src\\app\\components\\ThemeProvider\\themes\\archive.ts",
      "src\\app\\components\\ThemeProvider\\themes\\azeri.ts",
      "src\\app\\components\\ThemeProvider\\themes\\bengali.ts",
      "src\\app\\components\\ThemeProvider\\themes\\burmese.ts",
      "src\\app\\components\\ThemeProvider\\themes\\cymrufyw.ts",
      "src\\app\\components\\ThemeProvider\\themes\\gahuza.ts",
      "src\\app\\components\\ThemeProvider\\themes\\gujarati.ts",
      "src\\app\\components\\ThemeProvider\\themes\\hausa.ts",
      "src\\app\\components\\ThemeProvider\\themes\\hindi.ts",
      "src\\app\\components\\ThemeProvider\\themes\\igbo.ts",
      "src\\app\\components\\ThemeProvider\\themes\\indonesia.ts",
      "src\\app\\components\\ThemeProvider\\themes\\japanese.ts",
      "src\\app\\components\\ThemeProvider\\themes\\korean.ts",
      "src\\app\\components\\ThemeProvider\\themes\\kyrgyz.ts",
      "src\\app\\components\\ThemeProvider\\themes\\marathi.ts",
      "src\\app\\components\\ThemeProvider\\themes\\mundo.ts",
      "src\\app\\components\\ThemeProvider\\themes\\naidheachdan.ts",
      "src\\app\\components\\ThemeProvider\\themes\\nepali.ts",
      "src\\app\\components\\ThemeProvider\\themes\\news.ts",
      "src\\app\\components\\ThemeProvider\\themes\\newsround.ts",
      "src\\app\\components\\ThemeProvider\\themes\\pashto.ts",
      "src\\app\\components\\ThemeProvider\\themes\\persian.ts",
      "src\\app\\components\\ThemeProvider\\themes\\pidgin.ts",
      "src\\app\\components\\ThemeProvider\\themes\\portuguese.ts",
      "src\\app\\components\\ThemeProvider\\themes\\punjabi.ts",
      "src\\app\\components\\ThemeProvider\\themes\\russian.ts",
      "src\\app\\components\\ThemeProvider\\themes\\scotland.ts",
      "src\\app\\components\\ThemeProvider\\themes\\serbian\\cyr.ts",
      "src\\app\\components\\ThemeProvider\\themes\\serbian\\lat.ts",
      "src\\app\\components\\ThemeProvider\\themes\\sinhala.ts",
      "src\\app\\components\\ThemeProvider\\themes\\somali.ts",
      "src\\app\\components\\ThemeProvider\\themes\\sport.ts",
      "src\\app\\components\\ThemeProvider\\themes\\swahili.ts",
      "src\\app\\components\\ThemeProvider\\themes\\tamil.ts",
      "src\\app\\components\\ThemeProvider\\themes\\telugu.ts",
      "src\\app\\components\\ThemeProvider\\themes\\thai.ts",
      "src\\app\\components\\ThemeProvider\\themes\\tigrinya.ts",
      "src\\app\\components\\ThemeProvider\\themes\\turkce.ts",
      "src\\app\\components\\ThemeProvider\\themes\\ukchina\\simp.ts",
      "src\\app\\components\\ThemeProvider\\themes\\ukchina\\trad.ts",
      "src\\app\\components\\ThemeProvider\\themes\\ukrainian.ts",
      "src\\app\\components\\ThemeProvider\\themes\\urdu.ts",
      "src\\app\\components\\ThemeProvider\\themes\\uzbek\\cyr.ts",
      "src\\app\\components\\ThemeProvider\\themes\\uzbek\\lat.ts",
      "src\\app\\components\\ThemeProvider\\themes\\vietnamese.ts",
      "src\\app\\components\\ThemeProvider\\themes\\ws.ts",
      "src\\app\\components\\ThemeProvider\\themes\\yoruba.ts",
      "src\\app\\components\\ThemeProvider\\themes\\zhongwen\\simp.ts",
      "src\\app\\components\\ThemeProvider\\themes\\zhongwen\\trad.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "./focusIndicator",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\focusIndicator.ts"
      },
      {
        "source": "../../contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext\\index.tsx"
      },
      {
        "source": "./palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "./mediaQueries",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\mediaQueries.ts"
      },
      {
        "source": "./spacings",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\spacings.ts"
      },
      {
        "source": "./fontSizes",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontSizes.ts"
      },
      {
        "source": "./fontVariants",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontVariants\\index.tsx"
      },
      {
        "source": "./fontMediaQueries",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontMediaQueries.ts"
      },
      {
        "source": "./gridWidths",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\gridWidths.ts"
      },
      {
        "source": "../../routes/utils/pageTypes",
        "resolvedPath": "src\\app\\routes\\utils\\pageTypes.ts"
      },
      {
        "source": "../../models/types/theming",
        "resolvedPath": "src\\app\\models\\types\\theming.ts"
      },
      {
        "source": "../../models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global.ts"
      }
    ]
  },
  "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "../../../models/types/storybook",
        "resolvedPath": "src\\app\\models\\types\\storybook.ts"
      },
      {
        "source": "../defaultServiceVariants",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\defaultServiceVariants.ts"
      },
      {
        "source": "../themes/afaanoromoo",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\afaanoromoo.ts"
      },
      {
        "source": "../themes/afrique",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\afrique.ts"
      },
      {
        "source": "../themes/amharic",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\amharic.ts"
      },
      {
        "source": "../themes/arabic",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\arabic.ts"
      },
      {
        "source": "../themes/archive",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\archive.ts"
      },
      {
        "source": "../themes/azeri",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\azeri.ts"
      },
      {
        "source": "../themes/bengali",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\bengali.ts"
      },
      {
        "source": "../themes/burmese",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\burmese.ts"
      },
      {
        "source": "../themes/cymrufyw",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\cymrufyw.ts"
      },
      {
        "source": "../themes/gahuza",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\gahuza.ts"
      },
      {
        "source": "../themes/gujarati",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\gujarati.ts"
      },
      {
        "source": "../themes/hausa",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\hausa.ts"
      },
      {
        "source": "../themes/hindi",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\hindi.ts"
      },
      {
        "source": "../themes/igbo",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\igbo.ts"
      },
      {
        "source": "../themes/indonesia",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\indonesia.ts"
      },
      {
        "source": "../themes/japanese",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\japanese.ts"
      },
      {
        "source": "../themes/korean",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\korean.ts"
      },
      {
        "source": "../themes/kyrgyz",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\kyrgyz.ts"
      },
      {
        "source": "../themes/marathi",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\marathi.ts"
      },
      {
        "source": "../themes/mundo",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\mundo.ts"
      },
      {
        "source": "../themes/naidheachdan",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\naidheachdan.ts"
      },
      {
        "source": "../themes/nepali",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\nepali.ts"
      },
      {
        "source": "../themes/news",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\news.ts"
      },
      {
        "source": "../themes/newsround",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\newsround.ts"
      },
      {
        "source": "../themes/pashto",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\pashto.ts"
      },
      {
        "source": "../themes/persian",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\persian.ts"
      },
      {
        "source": "../themes/pidgin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\pidgin.ts"
      },
      {
        "source": "../themes/portuguese",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\portuguese.ts"
      },
      {
        "source": "../themes/punjabi",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\punjabi.ts"
      },
      {
        "source": "../themes/russian",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\russian.ts"
      },
      {
        "source": "../themes/scotland",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\scotland.ts"
      },
      {
        "source": "../themes/serbian/cyr",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\serbian\\cyr.ts"
      },
      {
        "source": "../themes/serbian/lat",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\serbian\\lat.ts"
      },
      {
        "source": "../themes/sinhala",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\sinhala.ts"
      },
      {
        "source": "../themes/somali",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\somali.ts"
      },
      {
        "source": "../themes/sport",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\sport.ts"
      },
      {
        "source": "../themes/swahili",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\swahili.ts"
      },
      {
        "source": "../themes/tamil",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\tamil.ts"
      },
      {
        "source": "../themes/telugu",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\telugu.ts"
      },
      {
        "source": "../themes/thai",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\thai.ts"
      },
      {
        "source": "../themes/tigrinya",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\tigrinya.ts"
      },
      {
        "source": "../themes/turkce",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\turkce.ts"
      },
      {
        "source": "../themes/ukchina/simp",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\ukchina\\simp.ts"
      },
      {
        "source": "../themes/ukchina/trad",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\ukchina\\trad.ts"
      },
      {
        "source": "../themes/ukrainian",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\ukrainian.ts"
      },
      {
        "source": "../themes/urdu",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\urdu.ts"
      },
      {
        "source": "../themes/uzbek/cyr",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\uzbek\\cyr.ts"
      },
      {
        "source": "../themes/uzbek/lat",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\uzbek\\lat.ts"
      },
      {
        "source": "../themes/vietnamese",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\vietnamese.ts"
      },
      {
        "source": "../themes/yoruba",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\yoruba.ts"
      },
      {
        "source": "../themes/zhongwen/simp",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\zhongwen\\simp.ts"
      },
      {
        "source": "../themes/zhongwen/trad",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\themes\\zhongwen\\trad.ts"
      }
    ]
  },
  "src\\app\\components\\VisuallyHiddenText\\index.styles.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\VisuallyHiddenText\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      }
    ]
  },
  "src\\app\\components\\VisuallyHiddenText\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\Byline\\index.tsx",
      "src\\app\\components\\Caption\\index.tsx",
      "src\\app\\components\\Copyright\\index.tsx",
      "src\\app\\components\\Curation\\CurationPromo\\index.tsx",
      "src\\app\\components\\Curation\\HierarchicalGrid\\index.tsx",
      "src\\app\\components\\Curation\\index.tsx",
      "src\\app\\components\\LiveLabel\\Text\\index.tsx",
      "src\\app\\components\\LiveRegion\\index.tsx",
      "src\\app\\components\\MediaLoader\\Placeholder\\PlayButton\\index.tsx",
      "src\\app\\components\\Pagination\\index.tsx",
      "src\\app\\legacy\\components\\OptimoPromos\\Content\\index.jsx",
      "src\\app\\legacy\\components\\RadioSchedule\\ScheduleItemHeader\\index.jsx",
      "src\\app\\legacy\\containers\\EpisodeList\\RecentAudioEpisodes\\index.jsx",
      "src\\app\\legacy\\containers\\EpisodeList\\RecentVideoEpisodes\\index.jsx",
      "src\\app\\legacy\\containers\\OnDemandHeading\\index.jsx",
      "src\\app\\legacy\\containers\\PodcastExternalLinks\\index.jsx",
      "src\\app\\legacy\\containers\\StoryPromo\\LinkContents\\index.jsx",
      "src\\app\\legacy\\containers\\VisuallyHiddenHeadline\\index.jsx",
      "src\\app\\legacy\\psammead\\psammead-brand\\src\\index.jsx",
      "src\\app\\legacy\\psammead\\psammead-bulletin\\src\\index.jsx",
      "src\\app\\legacy\\psammead\\psammead-navigation\\src\\DropdownNavigation\\index.jsx",
      "src\\app\\legacy\\psammead\\psammead-navigation\\src\\index.jsx",
      "src\\app\\legacy\\psammead\\psammead-story-promo\\src\\IndexAlsos\\index.jsx",
      "src\\app\\pages\\FrontPage\\FrontPage.jsx",
      "src\\app\\pages\\OnDemandTvPage\\OnDemandTvPage.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\components\\VisuallyHiddenText\\index.styles.tsx"
      }
    ]
  },
  "src\\app\\contexts\\EventTrackingContext\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\react-testing-library-with-providers.tsx",
      "src\\app\\hooks\\useClickTrackerHandler\\index.jsx",
      "src\\app\\hooks\\useViewTracker\\index.jsx",
      "src\\app\\legacy\\containers\\PageHandlers\\withContexts.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "../RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext\\index.tsx"
      },
      {
        "source": "../../hooks/useToggle",
        "resolvedPath": "src\\app\\hooks\\useToggle\\index.js"
      },
      {
        "source": "../../routes/utils/pageTypes",
        "resolvedPath": "src\\app\\routes\\utils\\pageTypes.ts"
      },
      {
        "source": "../../models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global.ts"
      },
      {
        "source": "../../components/ATIAnalytics/params",
        "resolvedPath": "src\\app\\components\\ATIAnalytics\\params\\index.ts"
      },
      {
        "source": "../ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../../components/ATIAnalytics/types",
        "resolvedPath": "src\\app\\components\\ATIAnalytics\\types.ts"
      }
    ]
  },
  "src\\app\\contexts\\RequestContext\\getEnv\\index.ts": {
    "incomingDependencies": [
      "src\\app\\contexts\\RequestContext\\index.tsx"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\contexts\\RequestContext\\getMetaUrls\\index.ts": {
    "incomingDependencies": [
      "src\\app\\contexts\\RequestContext\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../lib/regex.const",
        "resolvedPath": "src\\app\\lib\\regex.const.js"
      }
    ]
  },
  "src\\app\\contexts\\RequestContext\\getOriginContext\\index.ts": {
    "incomingDependencies": [
      "src\\app\\contexts\\RequestContext\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../lib/utilities/getEnvConfig",
        "resolvedPath": "src\\app\\lib\\utilities\\getEnvConfig\\index.ts"
      }
    ]
  },
  "src\\app\\contexts\\RequestContext\\getStatsDestination\\index.ts": {
    "incomingDependencies": [
      "src\\app\\contexts\\RequestContext\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "#app/models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global"
      }
    ]
  },
  "src\\app\\contexts\\RequestContext\\getStatsPageIdentifier\\index.ts": {
    "incomingDependencies": [
      "src\\app\\contexts\\RequestContext\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "#app/models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global"
      },
      {
        "source": "../../../routes/utils/pageTypes",
        "resolvedPath": "src\\app\\routes\\utils\\pageTypes.ts"
      }
    ]
  },
  "src\\app\\contexts\\RequestContext\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\ATIAnalytics\\params\\index.ts",
      "src\\app\\components\\ATIAnalytics\\params\\indexPage\\buildParams.ts",
      "src\\app\\components\\ATIAnalytics\\params\\topicPage\\buildParams.ts",
      "src\\app\\components\\ATIAnalytics\\params\\tvRadioPage\\buildParams.ts",
      "src\\app\\components\\ATIAnalytics\\types.ts",
      "src\\app\\components\\ChartbeatAnalytics\\index.tsx",
      "src\\app\\components\\Curation\\CurationPromo\\index.tsx",
      "src\\app\\components\\Curation\\HierarchicalGrid\\index.tsx",
      "src\\app\\components\\Disclaimer\\index.tsx",
      "src\\app\\components\\Embeds\\OEmbed\\index.tsx",
      "src\\app\\components\\Embeds\\UnsupportedEmbed\\index.tsx",
      "src\\app\\components\\FrostedGlassPromo\\index.tsx",
      "src\\app\\components\\FrostedGlassPromo\\withData.tsx",
      "src\\app\\components\\Header\\ScriptLink\\index.tsx",
      "src\\app\\components\\Image\\index.tsx",
      "src\\app\\components\\ImageWithCaption\\index.tsx",
      "src\\app\\components\\PageLayoutWrapper\\index.tsx",
      "src\\app\\components\\react-testing-library-with-providers.tsx",
      "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx",
      "src\\app\\contexts\\EventTrackingContext\\index.tsx",
      "src\\app\\contexts\\UserContext\\Chartbeat\\index.tsx",
      "src\\app\\legacy\\containers\\ConsentBanner\\index.canonical.jsx",
      "src\\app\\legacy\\containers\\CpsRecommendations\\ErrorBoundary.tsx",
      "src\\app\\legacy\\containers\\CpsRecommendations\\RecommendationsPromo\\index.jsx",
      "src\\app\\legacy\\containers\\PageHandlers\\withContexts.jsx",
      "src\\app\\legacy\\containers\\PageHandlers\\withData\\index.jsx",
      "src\\app\\legacy\\psammead\\psammead-image\\src\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "#app/models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global"
      },
      {
        "source": "./getStatsDestination",
        "resolvedPath": "src\\app\\contexts\\RequestContext\\getStatsDestination\\index.ts"
      },
      {
        "source": "./getStatsPageIdentifier",
        "resolvedPath": "src\\app\\contexts\\RequestContext\\getStatsPageIdentifier\\index.ts"
      },
      {
        "source": "./getOriginContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext\\getOriginContext\\index.ts"
      },
      {
        "source": "./getEnv",
        "resolvedPath": "src\\app\\contexts\\RequestContext\\getEnv\\index.ts"
      },
      {
        "source": "./getMetaUrls",
        "resolvedPath": "src\\app\\contexts\\RequestContext\\getMetaUrls\\index.ts"
      }
    ]
  },
  "src\\app\\contexts\\ServiceContext\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\Ad\\Amp\\index.tsx",
      "src\\app\\components\\Ad\\Canonical\\index.tsx",
      "src\\app\\components\\ATIAnalytics\\index.tsx",
      "src\\app\\components\\Byline\\index.tsx",
      "src\\app\\components\\ChartbeatAnalytics\\index.tsx",
      "src\\app\\components\\Copyright\\index.tsx",
      "src\\app\\components\\Curation\\CurationPromo\\index.tsx",
      "src\\app\\components\\Curation\\HierarchicalGrid\\index.tsx",
      "src\\app\\components\\Curation\\Subhead\\index.tsx",
      "src\\app\\components\\Disclaimer\\index.tsx",
      "src\\app\\components\\EmbedConsentBanner\\ConsentBanner.tsx",
      "src\\app\\components\\Embeds\\OEmbed\\index.tsx",
      "src\\app\\components\\Embeds\\UnsupportedEmbed\\index.tsx",
      "src\\app\\components\\Embeds\\Uploader\\index.tsx",
      "src\\app\\components\\Header\\ScriptLink\\index.tsx",
      "src\\app\\components\\InlineLink\\index.tsx",
      "src\\app\\components\\LinkedData\\index.tsx",
      "src\\app\\components\\LiveLabel\\Text\\index.tsx",
      "src\\app\\components\\MessageBanner\\index.tsx",
      "src\\app\\components\\Metadata\\index.tsx",
      "src\\app\\components\\MostRead\\Amp\\index.tsx",
      "src\\app\\components\\MostRead\\Canonical\\List\\index.tsx",
      "src\\app\\components\\MostRead\\index.tsx",
      "src\\app\\components\\MostRead\\Label\\index.tsx",
      "src\\app\\components\\MostRead\\utilities\\testHelpers.tsx",
      "src\\app\\components\\PageLayoutWrapper\\index.tsx",
      "src\\app\\components\\Pagination\\index.tsx",
      "src\\app\\components\\react-testing-library-with-providers.tsx",
      "src\\app\\components\\RelatedContentSection\\index.tsx",
      "src\\app\\components\\ServiceWorker\\index.tsx",
      "src\\app\\contexts\\EventTrackingContext\\index.tsx",
      "src\\app\\hooks\\useClickTrackerHandler\\index.jsx",
      "src\\app\\hooks\\useViewTracker\\index.jsx",
      "src\\app\\legacy\\components\\Grid\\index.jsx",
      "src\\app\\legacy\\components\\OptimoPromos\\Content\\index.jsx",
      "src\\app\\legacy\\components\\OptimoPromos\\index.jsx",
      "src\\app\\legacy\\components\\Promo\\index.jsx",
      "src\\app\\legacy\\components\\Promo\\timestamp.jsx",
      "src\\app\\legacy\\components\\RadioSchedule\\index.jsx",
      "src\\app\\legacy\\components\\RadioSchedule\\ProgramCard\\index.jsx",
      "src\\app\\legacy\\components\\RadioSchedule\\ScheduleItemHeader\\index.jsx",
      "src\\app\\legacy\\components\\RadioSchedule\\StartTime\\index.jsx",
      "src\\app\\legacy\\components\\RadioSchedule\\testHelpers\\helper.jsx",
      "src\\app\\legacy\\components\\ScrollablePromo\\index.jsx",
      "src\\app\\legacy\\components\\ScrollablePromo\\Promo\\index.jsx",
      "src\\app\\legacy\\components\\ScrollablePromo\\PromoList\\index.jsx",
      "src\\app\\legacy\\containers\\ArticleMetadata\\index.jsx",
      "src\\app\\legacy\\containers\\ArticleTimestamp\\index.jsx",
      "src\\app\\legacy\\containers\\Brand\\index.jsx",
      "src\\app\\legacy\\containers\\Bulletin\\index.jsx",
      "src\\app\\legacy\\containers\\ConsentBanner\\Banner\\index.amp.jsx",
      "src\\app\\legacy\\containers\\ConsentBanner\\Banner\\index.canonical.jsx",
      "src\\app\\legacy\\containers\\ConsentBanner\\Banner\\Text.jsx",
      "src\\app\\legacy\\containers\\CpsFeaturesAnalysis\\index.jsx",
      "src\\app\\legacy\\containers\\CpsOnwardJourney\\index.jsx",
      "src\\app\\legacy\\containers\\CpsRecommendations\\index.jsx",
      "src\\app\\legacy\\containers\\CpsRecommendations\\RecommendationsPromo\\index.jsx",
      "src\\app\\legacy\\containers\\CpsRecommendations\\RecommendationsPromoList\\index.jsx",
      "src\\app\\legacy\\containers\\EpisodeList\\RecentAudioEpisodes\\index.jsx",
      "src\\app\\legacy\\containers\\EpisodeList\\RecentVideoEpisodes\\index.jsx",
      "src\\app\\legacy\\containers\\FauxHeadline\\index.jsx",
      "src\\app\\legacy\\containers\\Footer\\index.jsx",
      "src\\app\\legacy\\containers\\Fragment\\index.jsx",
      "src\\app\\legacy\\containers\\Gist\\index.jsx",
      "src\\app\\legacy\\containers\\Header\\index.jsx",
      "src\\app\\legacy\\containers\\Headings\\index.jsx",
      "src\\app\\legacy\\containers\\ImageWithPlaceholder\\fixtureData.jsx",
      "src\\app\\legacy\\containers\\IndexHeading\\index.jsx",
      "src\\app\\legacy\\containers\\IndexPageSection\\index.jsx",
      "src\\app\\legacy\\containers\\InlineContainer\\index.jsx",
      "src\\app\\legacy\\containers\\InlineLink\\index.jsx",
      "src\\app\\legacy\\containers\\Manifest\\index.jsx",
      "src\\app\\legacy\\containers\\Navigation\\index.jsx",
      "src\\app\\legacy\\containers\\OnDemandFooterTimestamp\\index.jsx",
      "src\\app\\legacy\\containers\\OnDemandHeading\\index.jsx",
      "src\\app\\legacy\\containers\\OnDemandImage\\index.jsx",
      "src\\app\\legacy\\containers\\OnDemandParagraph\\index.jsx",
      "src\\app\\legacy\\containers\\PageHandlers\\withContexts.jsx",
      "src\\app\\legacy\\containers\\PageHandlers\\withData\\index.jsx",
      "src\\app\\legacy\\containers\\PageHandlers\\withOptimizelyProvider\\index.jsx",
      "src\\app\\legacy\\containers\\Paragraph\\index.jsx",
      "src\\app\\legacy\\containers\\PodcastExternalLinks\\index.jsx",
      "src\\app\\legacy\\containers\\PodcastPromo\\Inline.jsx",
      "src\\app\\legacy\\containers\\PodcastPromo\\SecondaryColumn.jsx",
      "src\\app\\legacy\\containers\\RadioSchedule\\Canonical\\index.jsx",
      "src\\app\\legacy\\containers\\RadioSchedule\\index.jsx",
      "src\\app\\legacy\\containers\\RadioSchedule\\utilities\\testHelpers.jsx",
      "src\\app\\legacy\\containers\\RelatedTopics\\index.jsx",
      "src\\app\\legacy\\containers\\SocialEmbed\\common\\testHelper.jsx",
      "src\\app\\legacy\\containers\\SocialEmbed\\index.jsx",
      "src\\app\\legacy\\containers\\StoryPromo\\index.jsx",
      "src\\app\\legacy\\containers\\StoryPromo\\IndexAlsos\\index.jsx",
      "src\\app\\legacy\\containers\\StoryPromo\\LinkContents\\index.jsx",
      "src\\app\\lib\\utilities\\episodeAvailability\\ErrorMessage\\index.jsx",
      "src\\app\\pages\\ArticlePage\\ArticlePage.tsx",
      "src\\app\\pages\\ArticlePage\\PagePromoSections\\TopStoriesSection\\index.tsx",
      "src\\app\\pages\\ErrorPage\\ErrorPage.jsx",
      "src\\app\\pages\\FeatureIdxPage\\FeatureIdxPage.jsx",
      "src\\app\\pages\\FrontPage\\FrontPage.jsx",
      "src\\app\\pages\\HomePage\\HomePage.tsx",
      "src\\app\\pages\\LiveRadioPage\\LiveRadioPage.tsx",
      "src\\app\\pages\\MediaArticlePage\\MediaArticlePage.tsx",
      "src\\app\\pages\\MediaArticlePage\\PagePromoSections\\LatestMediaSection\\index.tsx",
      "src\\app\\pages\\MostReadPage\\MostReadPage.jsx",
      "src\\app\\pages\\OnDemandAudioPage\\OnDemandAudioPage.tsx",
      "src\\app\\pages\\OnDemandTvPage\\OnDemandTvPage.tsx",
      "src\\app\\pages\\TopicPage\\TopicDescription\\index.jsx",
      "src\\app\\pages\\TopicPage\\TopicPage.jsx",
      "src\\app\\pages\\TopicPage\\TopicTitle\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "../../lib/config/services/loadableConfig",
        "resolvedPath": "src\\app\\lib\\config\\services\\loadableConfig.ts"
      },
      {
        "source": "../../lib/utilities/variantHandler",
        "resolvedPath": "src\\app\\lib\\utilities\\variantHandler\\index.js"
      },
      {
        "source": "../../lib/utilities/langHandler",
        "resolvedPath": "src\\app\\lib\\utilities\\langHandler\\index.js"
      },
      {
        "source": "../../models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global.ts"
      },
      {
        "source": "../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      }
    ]
  },
  "src\\app\\contexts\\ServiceContext\\__mocks__\\index.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "../../../lib/utilities/langHandler",
        "resolvedPath": "src\\app\\lib\\utilities\\langHandler\\index.js"
      },
      {
        "source": "../../../lib/utilities/variantHandler",
        "resolvedPath": "src\\app\\lib\\utilities\\variantHandler\\index.js"
      },
      {
        "source": "../../../../server/utilities/serviceConfigs",
        "resolvedPath": "src\\server\\utilities\\serviceConfigs\\index.ts"
      },
      {
        "source": "../../../models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global.ts"
      }
    ]
  },
  "src\\app\\contexts\\ToggleContext\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\react-testing-library-with-providers.tsx",
      "src\\app\\legacy\\containers\\PageHandlers\\withContexts.jsx",
      "src\\app\\legacy\\containers\\SocialEmbed\\common\\testHelper.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "#lib/config/toggles",
        "resolvedPath": "src\\app\\lib\\config\\toggles"
      },
      {
        "source": "#app/models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global"
      },
      {
        "source": "#app/lib/utilities/getEnvConfig",
        "resolvedPath": "src\\app\\lib\\utilities\\getEnvConfig"
      },
      {
        "source": "./reducer",
        "resolvedPath": "src\\app\\contexts\\ToggleContext\\reducer.tsx"
      }
    ]
  },
  "src\\app\\contexts\\ToggleContext\\reducer.tsx": {
    "incomingDependencies": [
      "src\\app\\contexts\\ToggleContext\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "#app/models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global"
      },
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      }
    ]
  },
  "src\\app\\contexts\\ToggleContext\\utils\\constructTogglesEndpoint\\index.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "#app/lib/utilities/getEnvConfig",
        "resolvedPath": "src\\app\\lib\\utilities\\getEnvConfig"
      },
      {
        "source": "#app/models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global"
      }
    ]
  },
  "src\\app\\contexts\\UserContext\\Chartbeat\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\contexts\\UserContext\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "../../../hooks/useToggle",
        "resolvedPath": "src\\app\\hooks\\useToggle\\index.js"
      },
      {
        "source": "../../../components/ChartbeatAnalytics/canonical",
        "resolvedPath": "src\\app\\components\\ChartbeatAnalytics\\canonical\\index.tsx"
      },
      {
        "source": "../../RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext\\index.tsx"
      },
      {
        "source": "../../../components/ChartbeatAnalytics/types",
        "resolvedPath": "src\\app\\components\\ChartbeatAnalytics\\types.ts"
      }
    ]
  },
  "src\\app\\contexts\\UserContext\\cookies\\index.ts": {
    "incomingDependencies": [
      "src\\app\\contexts\\UserContext\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "js-cookie",
        "resolvedPath": "js-cookie"
      }
    ]
  },
  "src\\app\\contexts\\UserContext\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\components\\ChartbeatAnalytics\\index.tsx",
      "src\\app\\components\\react-testing-library-with-providers.tsx",
      "src\\app\\legacy\\containers\\PageHandlers\\withContexts.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "uuid",
        "resolvedPath": "uuid"
      },
      {
        "source": "js-cookie",
        "resolvedPath": "js-cookie"
      },
      {
        "source": "#app/lib/utilities/onClient",
        "resolvedPath": "src\\app\\lib\\utilities\\onClient"
      },
      {
        "source": "#app/lib/utilities/isOperaProxy",
        "resolvedPath": "src\\app\\lib\\utilities\\isOperaProxy"
      },
      {
        "source": "#app/lib/utilities/setCookie",
        "resolvedPath": "src\\app\\lib\\utilities\\setCookie"
      },
      {
        "source": "./cookies",
        "resolvedPath": "src\\app\\contexts\\UserContext\\cookies\\index.ts"
      },
      {
        "source": "./Chartbeat",
        "resolvedPath": "src\\app\\contexts\\UserContext\\Chartbeat\\index.tsx"
      }
    ]
  },
  "src\\app\\contexts\\utils\\withContext\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\lib\\config\\services\\afaanoromoo.ts",
      "src\\app\\lib\\config\\services\\afrique.ts",
      "src\\app\\lib\\config\\services\\amharic.ts",
      "src\\app\\lib\\config\\services\\arabic.ts",
      "src\\app\\lib\\config\\services\\archive.ts",
      "src\\app\\lib\\config\\services\\azeri.ts",
      "src\\app\\lib\\config\\services\\bengali.ts",
      "src\\app\\lib\\config\\services\\burmese.ts",
      "src\\app\\lib\\config\\services\\cymrufyw.ts",
      "src\\app\\lib\\config\\services\\gahuza.ts",
      "src\\app\\lib\\config\\services\\gujarati.ts",
      "src\\app\\lib\\config\\services\\hausa.ts",
      "src\\app\\lib\\config\\services\\hindi.ts",
      "src\\app\\lib\\config\\services\\igbo.ts",
      "src\\app\\lib\\config\\services\\indonesia.ts",
      "src\\app\\lib\\config\\services\\japanese.ts",
      "src\\app\\lib\\config\\services\\korean.ts",
      "src\\app\\lib\\config\\services\\kyrgyz.ts",
      "src\\app\\lib\\config\\services\\marathi.ts",
      "src\\app\\lib\\config\\services\\mundo.ts",
      "src\\app\\lib\\config\\services\\naidheachdan.ts",
      "src\\app\\lib\\config\\services\\nepali.ts",
      "src\\app\\lib\\config\\services\\news.ts",
      "src\\app\\lib\\config\\services\\newsround.ts",
      "src\\app\\lib\\config\\services\\pashto.ts",
      "src\\app\\lib\\config\\services\\persian.ts",
      "src\\app\\lib\\config\\services\\pidgin.ts",
      "src\\app\\lib\\config\\services\\portuguese.ts",
      "src\\app\\lib\\config\\services\\punjabi.ts",
      "src\\app\\lib\\config\\services\\russian.ts",
      "src\\app\\lib\\config\\services\\scotland.ts",
      "src\\app\\lib\\config\\services\\serbian.ts",
      "src\\app\\lib\\config\\services\\sinhala.ts",
      "src\\app\\lib\\config\\services\\somali.ts",
      "src\\app\\lib\\config\\services\\sport.ts",
      "src\\app\\lib\\config\\services\\swahili.ts",
      "src\\app\\lib\\config\\services\\tamil.ts",
      "src\\app\\lib\\config\\services\\telugu.ts",
      "src\\app\\lib\\config\\services\\thai.ts",
      "src\\app\\lib\\config\\services\\tigrinya.ts",
      "src\\app\\lib\\config\\services\\turkce.ts",
      "src\\app\\lib\\config\\services\\ukchina.ts",
      "src\\app\\lib\\config\\services\\ukrainian.ts",
      "src\\app\\lib\\config\\services\\urdu.ts",
      "src\\app\\lib\\config\\services\\uzbek.ts",
      "src\\app\\lib\\config\\services\\vietnamese.ts",
      "src\\app\\lib\\config\\services\\ws.ts",
      "src\\app\\lib\\config\\services\\yoruba.ts",
      "src\\app\\lib\\config\\services\\zhongwen.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      }
    ]
  },
  "src\\app\\hooks\\useAdroidDetection\\index.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      }
    ]
  },
  "src\\app\\hooks\\useClickTrackerHandler\\clickTypes.js": {
    "incomingDependencies": [
      "src\\app\\hooks\\useClickTrackerHandler\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "ramda/src/pathSatisfies",
        "resolvedPath": "ramda/src/pathSatisfies"
      },
      {
        "source": "ramda/src/startsWith",
        "resolvedPath": "ramda/src/startsWith"
      }
    ]
  },
  "src\\app\\hooks\\useClickTrackerHandler\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\components\\EmbedConsentBanner\\index.tsx",
      "src\\app\\components\\FrostedGlassPromo\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "ramda/src/path",
        "resolvedPath": "ramda/src/path"
      },
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "../../contexts/EventTrackingContext",
        "resolvedPath": "src\\app\\contexts\\EventTrackingContext\\index.tsx"
      },
      {
        "source": "../useTrackingToggle",
        "resolvedPath": "src\\app\\hooks\\useTrackingToggle\\index.jsx"
      },
      {
        "source": "../../lib/config/optimizely",
        "resolvedPath": "src\\app\\lib\\config\\optimizely\\index.js"
      },
      {
        "source": "../../components/ATIAnalytics/beacon/index",
        "resolvedPath": "src\\app\\components\\ATIAnalytics\\beacon\\index.ts"
      },
      {
        "source": "../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "./clickTypes",
        "resolvedPath": "src\\app\\hooks\\useClickTrackerHandler\\clickTypes.js"
      }
    ]
  },
  "src\\app\\hooks\\useImageColour\\colorthief.js": {
    "incomingDependencies": [
      "src\\app\\hooks\\useImageColour\\index.js"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\hooks\\useImageColour\\index.js": {
    "incomingDependencies": [
      "src\\app\\components\\FrostedGlassPromo\\FrostedGlassPanel.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "./colorthief",
        "resolvedPath": "src\\app\\hooks\\useImageColour\\colorthief.js"
      },
      {
        "source": "./utils",
        "resolvedPath": "src\\app\\hooks\\useImageColour\\utils.js"
      }
    ]
  },
  "src\\app\\hooks\\useImageColour\\utils.js": {
    "incomingDependencies": [
      "src\\app\\hooks\\useImageColour\\index.js"
    ],
    "outgoingDependencies": [
      {
        "source": "ramda/src/is",
        "resolvedPath": "ramda/src/is"
      }
    ]
  },
  "src\\app\\hooks\\useLocation\\index.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      }
    ]
  },
  "src\\app\\hooks\\useMediaQuery\\index.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      }
    ]
  },
  "src\\app\\hooks\\useOperaMiniDetection\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\components\\Ad\\Canonical\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      }
    ]
  },
  "src\\app\\hooks\\useOptimizelyMvtVariation\\activateExperiment\\index.js": {
    "incomingDependencies": [
      "src\\app\\hooks\\useOptimizelyMvtVariation\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "#lib/utilities/onClient",
        "resolvedPath": "src\\app\\lib\\utilities\\onClient"
      }
    ]
  },
  "src\\app\\hooks\\useOptimizelyMvtVariation\\index.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@optimizely/react-sdk",
        "resolvedPath": "@optimizely/react-sdk"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext"
      },
      {
        "source": "./activateExperiment",
        "resolvedPath": "src\\app\\hooks\\useOptimizelyMvtVariation\\activateExperiment\\index.js"
      }
    ]
  },
  "src\\app\\hooks\\useOptimizelyScrollDepth\\index.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@optimizely/react-sdk",
        "resolvedPath": "@optimizely/react-sdk"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext"
      },
      {
        "source": "#hooks/useOptimizelyVariation",
        "resolvedPath": "src\\app\\hooks\\useOptimizelyVariation"
      },
      {
        "source": "#lib/config/optimizely",
        "resolvedPath": "src\\app\\lib\\config\\optimizely"
      }
    ]
  },
  "src\\app\\hooks\\useOptimizelyVariation\\index.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@optimizely/react-sdk",
        "resolvedPath": "@optimizely/react-sdk"
      }
    ]
  },
  "src\\app\\hooks\\useToggle\\index.js": {
    "incomingDependencies": [
      "src\\app\\components\\ChartbeatAnalytics\\index.tsx",
      "src\\app\\components\\Disclaimer\\index.tsx",
      "src\\app\\contexts\\EventTrackingContext\\index.tsx",
      "src\\app\\contexts\\UserContext\\Chartbeat\\index.tsx",
      "src\\app\\pages\\MediaArticlePage\\MediaArticlePage.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "#contexts/ToggleContext",
        "resolvedPath": "src\\app\\contexts\\ToggleContext"
      }
    ]
  },
  "src\\app\\hooks\\useTrackingToggle\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\hooks\\useClickTrackerHandler\\index.jsx",
      "src\\app\\hooks\\useViewTracker\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "#hooks/useToggle",
        "resolvedPath": "src\\app\\hooks\\useToggle"
      }
    ]
  },
  "src\\app\\hooks\\useViewTracker\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\components\\EmbedConsentBanner\\ConsentBanner.tsx",
      "src\\app\\components\\MostRead\\Canonical\\index.tsx",
      "src\\app\\pages\\MediaArticlePage\\PagePromoSections\\LatestMediaSection\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "ramda/src/path",
        "resolvedPath": "ramda/src/path"
      },
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "ramda/src/prop",
        "resolvedPath": "ramda/src/prop"
      },
      {
        "source": "../../components/ATIAnalytics/beacon",
        "resolvedPath": "src\\app\\components\\ATIAnalytics\\beacon\\index.ts"
      },
      {
        "source": "../../contexts/EventTrackingContext",
        "resolvedPath": "src\\app\\contexts\\EventTrackingContext\\index.tsx"
      },
      {
        "source": "../useTrackingToggle",
        "resolvedPath": "src\\app\\hooks\\useTrackingToggle\\index.jsx"
      },
      {
        "source": "../../lib/config/optimizely",
        "resolvedPath": "src\\app\\lib\\config\\optimizely\\index.js"
      },
      {
        "source": "../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      }
    ]
  },
  "src\\app\\legacy\\components\\AmpGeo\\index.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "#app/lib/utilities/cookieCountries",
        "resolvedPath": "src\\app\\lib\\utilities\\cookieCountries"
      }
    ]
  },
  "src\\app\\legacy\\components\\ErrorMain\\index.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/psammead-inline-link/src",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-inline-link\\src"
      },
      {
        "source": "#psammead/psammead-paragraph/src",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-paragraph\\src"
      },
      {
        "source": "#psammead/psammead-styles/src/font-styles",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-styles\\src\\font-styles"
      },
      {
        "source": "#psammead/gel-foundations/src/typography",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\typography"
      },
      {
        "source": "#lib/utilities/idSanitiser",
        "resolvedPath": "src\\app\\lib\\utilities\\idSanitiser"
      },
      {
        "source": "#components/Grid",
        "resolvedPath": "src\\app\\legacy\\components\\Grid"
      }
    ]
  },
  "src\\app\\legacy\\components\\FrontPageSection\\index.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\breakpoints"
      }
    ]
  },
  "src\\app\\legacy\\components\\Grid\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\components\\Disclaimer\\index.tsx",
      "src\\app\\components\\MostRead\\Canonical\\Item\\index.tsx",
      "src\\app\\legacy\\containers\\CpsRecommendations\\RecommendationsPromo\\index.jsx",
      "src\\app\\legacy\\containers\\CpsRecommendations\\RecommendationsPromoList\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/psammead-grid/src",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-grid\\src"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\breakpoints"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\spacings"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      }
    ]
  },
  "src\\app\\legacy\\components\\IfAboveIE9Comment\\index.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      }
    ]
  },
  "src\\app\\legacy\\components\\InlineSpan\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\InlineContainer\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\spacings"
      }
    ]
  },
  "src\\app\\legacy\\components\\OptimoPromos\\Content\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\components\\OptimoPromos\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "moment",
        "resolvedPath": "moment"
      },
      {
        "source": "#app/lib/utilities/formatDuration",
        "resolvedPath": "src\\app\\lib\\utilities\\formatDuration"
      },
      {
        "source": "../../../../components/VisuallyHiddenText",
        "resolvedPath": "src\\app\\components\\VisuallyHiddenText\\index.tsx"
      },
      {
        "source": "../../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../PromoContext",
        "resolvedPath": "src\\app\\legacy\\components\\OptimoPromos\\PromoContext.jsx"
      }
    ]
  },
  "src\\app\\legacy\\components\\OptimoPromos\\Image\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\components\\OptimoPromos\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext"
      },
      {
        "source": "../../../../components/Image",
        "resolvedPath": "src\\app\\components\\Image\\index.tsx"
      }
    ]
  },
  "src\\app\\legacy\\components\\OptimoPromos\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\pages\\MediaArticlePage\\PagePromoSections\\LatestMediaSection\\LatestMediaIndicator\\index.tsx",
      "src\\app\\pages\\MediaArticlePage\\PagePromoSections\\LatestMediaSection\\LatestMediaItem\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "#components/Promo/timestamp",
        "resolvedPath": "src\\app\\legacy\\components\\Promo\\timestamp"
      },
      {
        "source": "#app/components/LiveLabel",
        "resolvedPath": "src\\app\\components\\LiveLabel"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "./Title",
        "resolvedPath": "src\\app\\legacy\\components\\OptimoPromos\\Title\\index.jsx"
      },
      {
        "source": "./Link",
        "resolvedPath": "src\\app\\legacy\\components\\OptimoPromos\\Link\\index.jsx"
      },
      {
        "source": "./MediaIndicator",
        "resolvedPath": "src\\app\\legacy\\components\\OptimoPromos\\MediaIndicator\\index.jsx"
      },
      {
        "source": "./Content",
        "resolvedPath": "src\\app\\legacy\\components\\OptimoPromos\\Content\\index.jsx"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\legacy\\components\\OptimoPromos\\index.styles.jsx"
      },
      {
        "source": "./Image",
        "resolvedPath": "src\\app\\legacy\\components\\OptimoPromos\\Image\\index.jsx"
      },
      {
        "source": "./PromoContext",
        "resolvedPath": "src\\app\\legacy\\components\\OptimoPromos\\PromoContext.jsx"
      }
    ]
  },
  "src\\app\\legacy\\components\\OptimoPromos\\index.styles.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\components\\OptimoPromos\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\breakpoints"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\spacings"
      }
    ]
  },
  "src\\app\\legacy\\components\\OptimoPromos\\Link\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\components\\OptimoPromos\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "#containers/StoryPromo/useCombinedClickTrackerHandler",
        "resolvedPath": "src\\app\\legacy\\containers\\StoryPromo\\useCombinedClickTrackerHandler"
      },
      {
        "source": "../../../../lib/utilities/makeRelativeUrlPath",
        "resolvedPath": "src\\app\\lib\\utilities\\makeRelativeUrlPath\\index.js"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\legacy\\components\\OptimoPromos\\Link\\index.styles.jsx"
      },
      {
        "source": "../PromoContext",
        "resolvedPath": "src\\app\\legacy\\components\\OptimoPromos\\PromoContext.jsx"
      }
    ]
  },
  "src\\app\\legacy\\components\\OptimoPromos\\Link\\index.styles.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\components\\OptimoPromos\\Link\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      }
    ]
  },
  "src\\app\\legacy\\components\\OptimoPromos\\MediaIndicator\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\components\\OptimoPromos\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "#psammead/psammead-assets/src/svgs",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\legacy\\components\\OptimoPromos\\MediaIndicator\\index.styles.jsx"
      },
      {
        "source": "../PromoContext",
        "resolvedPath": "src\\app\\legacy\\components\\OptimoPromos\\PromoContext.jsx"
      }
    ]
  },
  "src\\app\\legacy\\components\\OptimoPromos\\MediaIndicator\\index.styles.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\components\\OptimoPromos\\MediaIndicator\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\spacings"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      }
    ]
  },
  "src\\app\\legacy\\components\\OptimoPromos\\PromoContext.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\components\\OptimoPromos\\Content\\index.jsx",
      "src\\app\\legacy\\components\\OptimoPromos\\index.jsx",
      "src\\app\\legacy\\components\\OptimoPromos\\Link\\index.jsx",
      "src\\app\\legacy\\components\\OptimoPromos\\MediaIndicator\\index.jsx",
      "src\\app\\legacy\\components\\OptimoPromos\\Title\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      }
    ]
  },
  "src\\app\\legacy\\components\\OptimoPromos\\PromoItem\\index.styles.jsx": {
    "incomingDependencies": [
      "src\\app\\components\\RelatedContentSection\\index.tsx",
      "src\\app\\pages\\MediaArticlePage\\PagePromoSections\\LatestMediaSection\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\spacings"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      }
    ]
  },
  "src\\app\\legacy\\components\\OptimoPromos\\PromoList\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\components\\RelatedContentSection\\index.tsx",
      "src\\app\\pages\\MediaArticlePage\\PagePromoSections\\LatestMediaSection\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\legacy\\components\\OptimoPromos\\PromoList\\index.styles.jsx"
      }
    ]
  },
  "src\\app\\legacy\\components\\OptimoPromos\\PromoList\\index.styles.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\components\\OptimoPromos\\PromoList\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      }
    ]
  },
  "src\\app\\legacy\\components\\OptimoPromos\\Title\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\components\\OptimoPromos\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\legacy\\components\\OptimoPromos\\Title\\index.styles.jsx"
      },
      {
        "source": "../PromoContext",
        "resolvedPath": "src\\app\\legacy\\components\\OptimoPromos\\PromoContext.jsx"
      }
    ]
  },
  "src\\app\\legacy\\components\\OptimoPromos\\Title\\index.styles.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\components\\OptimoPromos\\Title\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "#psammead/psammead-styles/src/font-styles",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-styles\\src\\font-styles"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      }
    ]
  },
  "src\\app\\legacy\\components\\PageLayout\\IndexMarginStyles.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\components\\PageLayout\\IndexPageContainer.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\spacings"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\breakpoints"
      }
    ]
  },
  "src\\app\\legacy\\components\\PageLayout\\IndexPageContainer.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\breakpoints"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\spacings"
      },
      {
        "source": "./IndexMarginStyles",
        "resolvedPath": "src\\app\\legacy\\components\\PageLayout\\IndexMarginStyles.jsx"
      }
    ]
  },
  "src\\app\\legacy\\components\\Promo\\a.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\components\\Promo\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      }
    ]
  },
  "src\\app\\legacy\\components\\Promo\\body.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\components\\Promo\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/psammead-styles/src/font-styles",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-styles\\src\\font-styles"
      },
      {
        "source": "#psammead/gel-foundations/src/typography",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\typography"
      }
    ]
  },
  "src\\app\\legacy\\components\\Promo\\footer.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\components\\Promo\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/psammead-styles/src/font-styles",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-styles\\src\\font-styles"
      },
      {
        "source": "#psammead/gel-foundations/src/typography",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\typography"
      }
    ]
  },
  "src\\app\\legacy\\components\\Promo\\heading.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\components\\Promo\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      }
    ]
  },
  "src\\app\\legacy\\components\\Promo\\image.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\components\\Promo\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\spacings"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\breakpoints"
      },
      {
        "source": "../../../components/Image",
        "resolvedPath": "src\\app\\components\\Image\\index.tsx"
      }
    ]
  },
  "src\\app\\legacy\\components\\Promo\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\components\\Curation\\HierarchicalGrid\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "ramda/src/partition",
        "resolvedPath": "ramda/src/partition"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "./image",
        "resolvedPath": "src\\app\\legacy\\components\\Promo\\image.jsx"
      },
      {
        "source": "./media-icon",
        "resolvedPath": "src\\app\\legacy\\components\\Promo\\media-icon.jsx"
      },
      {
        "source": "./heading",
        "resolvedPath": "src\\app\\legacy\\components\\Promo\\heading.jsx"
      },
      {
        "source": "./body",
        "resolvedPath": "src\\app\\legacy\\components\\Promo\\body.jsx"
      },
      {
        "source": "./footer",
        "resolvedPath": "src\\app\\legacy\\components\\Promo\\footer.jsx"
      },
      {
        "source": "./a",
        "resolvedPath": "src\\app\\legacy\\components\\Promo\\a.jsx"
      },
      {
        "source": "./timestamp",
        "resolvedPath": "src\\app\\legacy\\components\\Promo\\timestamp.jsx"
      }
    ]
  },
  "src\\app\\legacy\\components\\Promo\\media-icon.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\components\\Promo\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "moment-timezone",
        "resolvedPath": "moment-timezone"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\spacings"
      },
      {
        "source": "#psammead/gel-foundations/src/typography",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\typography"
      },
      {
        "source": "#psammead/psammead-styles/src/font-styles",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-styles\\src\\font-styles"
      },
      {
        "source": "#psammead/psammead-assets/src/svgs",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs"
      },
      {
        "source": "#lib/utilities/formatDuration",
        "resolvedPath": "src\\app\\lib\\utilities\\formatDuration"
      }
    ]
  },
  "src\\app\\legacy\\components\\Promo\\timestamp.jsx": {
    "incomingDependencies": [
      "src\\app\\components\\FrostedGlassPromo\\withData.tsx",
      "src\\app\\legacy\\components\\Promo\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "#psammead/psammead-timestamp-container/src",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-timestamp-container\\src"
      },
      {
        "source": "#lib/utilities/isTenHoursAgo",
        "resolvedPath": "src\\app\\lib\\utilities\\isTenHoursAgo"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      }
    ]
  },
  "src\\app\\legacy\\components\\RadioSchedule\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\components\\RadioSchedule\\testHelpers\\helper.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\breakpoints"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\spacings"
      },
      {
        "source": "#psammead/psammead-styles/src/detection",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-styles\\src\\detection"
      },
      {
        "source": "#psammead/psammead-grid/src",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-grid\\src"
      },
      {
        "source": "#app/hooks/useViewTracker",
        "resolvedPath": "src\\app\\hooks\\useViewTracker"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "./ProgramCard",
        "resolvedPath": "src\\app\\legacy\\components\\RadioSchedule\\ProgramCard\\index.jsx"
      },
      {
        "source": "./StartTime",
        "resolvedPath": "src\\app\\legacy\\components\\RadioSchedule\\StartTime\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\components\\RadioSchedule\\ProgramCard\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\components\\RadioSchedule\\index.jsx",
      "src\\app\\legacy\\components\\RadioSchedule\\testHelpers\\helper.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/psammead-assets/src/svgs",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\spacings"
      },
      {
        "source": "#psammead/psammead-styles/src/font-styles",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-styles\\src\\font-styles"
      },
      {
        "source": "#psammead/gel-foundations/src/typography",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\typography"
      },
      {
        "source": "#psammead/psammead-timestamp-container/src/utilities",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-timestamp-container\\src\\utilities"
      },
      {
        "source": "../../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../ScheduleItemHeader",
        "resolvedPath": "src\\app\\legacy\\components\\RadioSchedule\\ScheduleItemHeader\\index.jsx"
      },
      {
        "source": "../utilities",
        "resolvedPath": "src\\app\\legacy\\components\\RadioSchedule\\utilities\\index.js"
      }
    ]
  },
  "src\\app\\legacy\\components\\RadioSchedule\\ScheduleItemHeader\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\components\\RadioSchedule\\ProgramCard\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "#psammead/psammead-timestamp-container/src/utilities",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-timestamp-container\\src\\utilities"
      },
      {
        "source": "#psammead/psammead-detokeniser/src",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-detokeniser\\src"
      },
      {
        "source": "#app/components/LiveLabel",
        "resolvedPath": "src\\app\\components\\LiveLabel"
      },
      {
        "source": "#psammead/psammead-story-promo/src",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-story-promo\\src"
      },
      {
        "source": "#psammead/psammead-styles/src/font-styles",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-styles\\src\\font-styles"
      },
      {
        "source": "#psammead/gel-foundations/src/typography",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\typography"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\spacings"
      },
      {
        "source": "#app/hooks/useClickTrackerHandler",
        "resolvedPath": "src\\app\\hooks\\useClickTrackerHandler"
      },
      {
        "source": "../../../../components/VisuallyHiddenText",
        "resolvedPath": "src\\app\\components\\VisuallyHiddenText\\index.tsx"
      },
      {
        "source": "../../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../utilities",
        "resolvedPath": "src\\app\\legacy\\components\\RadioSchedule\\utilities\\index.js"
      }
    ]
  },
  "src\\app\\legacy\\components\\RadioSchedule\\StartTime\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\components\\RadioSchedule\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\spacings"
      },
      {
        "source": "#psammead/gel-foundations/src/typography",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\typography"
      },
      {
        "source": "#psammead/psammead-styles/src/font-styles",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-styles\\src\\font-styles"
      },
      {
        "source": "#psammead/psammead-assets/src/svgs",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs"
      },
      {
        "source": "#psammead/psammead-timestamp-container/src",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-timestamp-container\\src"
      },
      {
        "source": "../../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      }
    ]
  },
  "src\\app\\legacy\\components\\RadioSchedule\\testHelpers\\helper.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "#storybook/withServicesDecorator/text-variants",
        "resolvedPath": ".storybook\\withServicesDecorator\\text-variants"
      },
      {
        "source": "../../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../../../../components/ThemeProvider/fontScripts/latin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts"
      },
      {
        "source": "../../../../components/ThemeProvider/fontScripts/arabic",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\arabic.ts"
      },
      {
        "source": "../ProgramCard",
        "resolvedPath": "src\\app\\legacy\\components\\RadioSchedule\\ProgramCard\\index.jsx"
      },
      {
        "source": "../index",
        "resolvedPath": "src\\app\\legacy\\components\\RadioSchedule\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\components\\RadioSchedule\\utilities\\index.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\components\\RadioSchedule\\ProgramCard\\index.jsx",
      "src\\app\\legacy\\components\\RadioSchedule\\ScheduleItemHeader\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "#psammead/psammead-timestamp-container/src/utilities",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-timestamp-container\\src\\utilities"
      },
      {
        "source": "../../../../components/ThemeProvider/palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      }
    ]
  },
  "src\\app\\legacy\\components\\ScrollablePromo\\fixtures.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\components\\ScrollablePromo\\helpers\\fixtureData.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\components\\ScrollablePromo\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\pages\\MediaArticlePage\\MediaArticlePage.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\spacings"
      },
      {
        "source": "#psammead/gel-foundations/src/typography",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\typography"
      },
      {
        "source": "#psammead/psammead-styles/src/font-styles",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-styles\\src\\font-styles"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "ramda/src/path",
        "resolvedPath": "ramda/src/path"
      },
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "ramda/src/isEmpty",
        "resolvedPath": "ramda/src/isEmpty"
      },
      {
        "source": "ramda/src/tail",
        "resolvedPath": "ramda/src/tail"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\breakpoints"
      },
      {
        "source": "#components/Grid",
        "resolvedPath": "src\\app\\legacy\\components\\Grid"
      },
      {
        "source": "#hooks/useViewTracker",
        "resolvedPath": "src\\app\\hooks\\useViewTracker"
      },
      {
        "source": "#hooks/useClickTrackerHandler",
        "resolvedPath": "src\\app\\hooks\\useClickTrackerHandler"
      },
      {
        "source": "#lib/utilities/idSanitiser",
        "resolvedPath": "src\\app\\lib\\utilities\\idSanitiser"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "./Promo",
        "resolvedPath": "src\\app\\legacy\\components\\ScrollablePromo\\Promo\\index.jsx"
      },
      {
        "source": "./PromoList",
        "resolvedPath": "src\\app\\legacy\\components\\ScrollablePromo\\PromoList\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\components\\ScrollablePromo\\Promo\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\components\\ScrollablePromo\\index.jsx",
      "src\\app\\legacy\\components\\ScrollablePromo\\PromoList\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "ramda/src/path",
        "resolvedPath": "ramda/src/path"
      },
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "#psammead/gel-foundations/src/typography",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\typography"
      },
      {
        "source": "#psammead/psammead-styles/src/font-styles",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-styles\\src\\font-styles"
      },
      {
        "source": "#psammead/psammead-story-promo/src",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-story-promo\\src"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\spacings"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\breakpoints"
      },
      {
        "source": "#lib/utilities/blockHandlers",
        "resolvedPath": "src\\app\\lib\\utilities\\blockHandlers"
      },
      {
        "source": "#hooks/useOperaMiniDetection",
        "resolvedPath": "src\\app\\hooks\\useOperaMiniDetection"
      },
      {
        "source": "#components/Promo/timestamp",
        "resolvedPath": "src\\app\\legacy\\components\\Promo\\timestamp"
      },
      {
        "source": "../../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      }
    ]
  },
  "src\\app\\legacy\\components\\ScrollablePromo\\PromoList\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\components\\ScrollablePromo\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\spacings"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\breakpoints"
      },
      {
        "source": "#hooks/useOperaMiniDetection",
        "resolvedPath": "src\\app\\hooks\\useOperaMiniDetection"
      },
      {
        "source": "../../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../Promo",
        "resolvedPath": "src\\app\\legacy\\components\\ScrollablePromo\\Promo\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\components\\SkipLinkWrapper\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\CpsOnwardJourney\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/psammead-detokeniser/src",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-detokeniser\\src"
      },
      {
        "source": "#psammead/psammead-styles/src/font-styles",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-styles\\src\\font-styles"
      },
      {
        "source": "#psammead/gel-foundations/src/typography",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\typography"
      },
      {
        "source": "../../../lib/styles.const",
        "resolvedPath": "src\\app\\lib\\styles.const\\index.ts"
      }
    ]
  },
  "src\\app\\legacy\\containers\\App\\App.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\App\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react-router-config",
        "resolvedPath": "node_modules\\@types\\react\\-router-config"
      },
      {
        "source": "ramda/src/pick",
        "resolvedPath": "ramda/src/pick"
      },
      {
        "source": "ramda/src/mergeAll",
        "resolvedPath": "ramda/src/mergeAll"
      },
      {
        "source": "ramda/src/path",
        "resolvedPath": "ramda/src/path"
      },
      {
        "source": "#app/routes/utils/fetchPageData/utils/getRouteProps",
        "resolvedPath": "src\\app\\routes\\utils\\fetchPageData\\utils\\getRouteProps"
      },
      {
        "source": "#app/routes",
        "resolvedPath": "src\\app\\routes"
      }
    ]
  },
  "src\\app\\legacy\\containers\\App\\index.jsx": {
    "incomingDependencies": [
      "src\\client.js"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "react-router-dom",
        "resolvedPath": "node_modules\\@types\\react\\-router-dom"
      },
      {
        "source": "./App",
        "resolvedPath": "src\\app\\legacy\\containers\\App\\App.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\ArticleMetadata\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\pages\\MediaArticlePage\\MediaArticlePage.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "#lib/utilities/getBrandedImage",
        "resolvedPath": "src\\app\\lib\\utilities\\getBrandedImage"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../../../components/Metadata",
        "resolvedPath": "src\\app\\components\\Metadata\\index.tsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\ArticleTimestamp\\helpers.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\ArticleTimestamp\\index.jsx",
      "src\\app\\legacy\\containers\\ArticleTimestamp\\shouldDisplayLastUpdatedTimestamp.js"
    ],
    "outgoingDependencies": [
      {
        "source": "moment-timezone",
        "resolvedPath": "moment-timezone"
      },
      {
        "source": "#lib/utilities/isTenHoursAgo",
        "resolvedPath": "src\\app\\lib\\utilities\\isTenHoursAgo"
      },
      {
        "source": "./timeFormats",
        "resolvedPath": "src\\app\\legacy\\containers\\ArticleTimestamp\\timeFormats.js"
      }
    ]
  },
  "src\\app\\legacy\\containers\\ArticleTimestamp\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\pages\\MediaArticlePage\\MediaArticlePage.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "#psammead/psammead-timestamp-container/src",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-timestamp-container\\src"
      },
      {
        "source": "#components/Grid",
        "resolvedPath": "src\\app\\legacy\\components\\Grid"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "./timeFormats",
        "resolvedPath": "src\\app\\legacy\\containers\\ArticleTimestamp\\timeFormats.js"
      },
      {
        "source": "./helpers",
        "resolvedPath": "src\\app\\legacy\\containers\\ArticleTimestamp\\helpers.js"
      },
      {
        "source": "./shouldDisplayLastUpdatedTimestamp",
        "resolvedPath": "src\\app\\legacy\\containers\\ArticleTimestamp\\shouldDisplayLastUpdatedTimestamp.js"
      }
    ]
  },
  "src\\app\\legacy\\containers\\ArticleTimestamp\\shouldDisplayLastUpdatedTimestamp.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\ArticleTimestamp\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "./helpers",
        "resolvedPath": "src\\app\\legacy\\containers\\ArticleTimestamp\\helpers.js"
      }
    ]
  },
  "src\\app\\legacy\\containers\\ArticleTimestamp\\testHelpers.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\ArticleTimestamp\\timeFormatTests\\testUtils.js"
    ],
    "outgoingDependencies": [
      {
        "source": "moment-timezone",
        "resolvedPath": "moment-timezone"
      }
    ]
  },
  "src\\app\\legacy\\containers\\ArticleTimestamp\\timeFormats.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\ArticleTimestamp\\helpers.js",
      "src\\app\\legacy\\containers\\ArticleTimestamp\\index.jsx",
      "src\\app\\legacy\\containers\\ArticleTimestamp\\timeFormatTests\\testUtils.js"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\containers\\ArticleTimestamp\\timeFormatTests\\generateTimeFormats.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "fs",
        "resolvedPath": "fs"
      },
      {
        "source": "path",
        "resolvedPath": "path"
      },
      {
        "source": "./testUtils",
        "resolvedPath": "src\\app\\legacy\\containers\\ArticleTimestamp\\timeFormatTests\\testUtils.js"
      },
      {
        "source": "../../../../../server/utilities/serviceConfigs",
        "resolvedPath": "src\\server\\utilities\\serviceConfigs\\index.ts"
      }
    ]
  },
  "src\\app\\legacy\\containers\\ArticleTimestamp\\timeFormatTests\\testUtils.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\ArticleTimestamp\\timeFormatTests\\generateTimeFormats.js"
    ],
    "outgoingDependencies": [
      {
        "source": "moment-timezone",
        "resolvedPath": "moment-timezone"
      },
      {
        "source": "../testHelpers",
        "resolvedPath": "src\\app\\legacy\\containers\\ArticleTimestamp\\testHelpers.js"
      },
      {
        "source": "../timeFormats",
        "resolvedPath": "src\\app\\legacy\\containers\\ArticleTimestamp\\timeFormats.js"
      }
    ]
  },
  "src\\app\\legacy\\containers\\Blocks\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\BulletedList\\index.jsx",
      "src\\app\\legacy\\containers\\BulletedListItem\\index.jsx",
      "src\\app\\legacy\\containers\\FauxHeadline\\index.jsx",
      "src\\app\\legacy\\containers\\Headings\\index.jsx",
      "src\\app\\legacy\\containers\\InlineContainer\\index.jsx",
      "src\\app\\legacy\\containers\\InlineLink\\index.jsx",
      "src\\app\\legacy\\containers\\Paragraph\\index.jsx",
      "src\\app\\legacy\\containers\\Text\\index.jsx",
      "src\\app\\pages\\MediaArticlePage\\MediaArticlePage.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "ramda/src/path",
        "resolvedPath": "ramda/src/path"
      }
    ]
  },
  "src\\app\\legacy\\containers\\Brand\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\Footer\\index.jsx",
      "src\\app\\legacy\\containers\\Header\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/psammead-brand/src",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-brand\\src"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\BulletedList\\fixtures.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\containers\\BulletedList\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\Gist\\index.jsx",
      "src\\app\\legacy\\containers\\Text\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "ramda/src/pick",
        "resolvedPath": "ramda/src/pick"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\spacings"
      },
      {
        "source": "#components/Grid",
        "resolvedPath": "src\\app\\legacy\\components\\Grid"
      },
      {
        "source": "#hooks/useViewTracker",
        "resolvedPath": "src\\app\\hooks\\useViewTracker"
      },
      {
        "source": "#hooks/useClickTrackerHandler",
        "resolvedPath": "src\\app\\hooks\\useClickTrackerHandler"
      },
      {
        "source": "../../../components/BulletedList",
        "resolvedPath": "src\\app\\components\\BulletedList\\index.tsx"
      },
      {
        "source": "../Blocks",
        "resolvedPath": "src\\app\\legacy\\containers\\Blocks\\index.jsx"
      },
      {
        "source": "../BulletedListItem",
        "resolvedPath": "src\\app\\legacy\\containers\\BulletedListItem\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\BulletedListItem\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\BulletedList\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "../../../components/BulletedList",
        "resolvedPath": "src\\app\\components\\BulletedList\\index.tsx"
      },
      {
        "source": "../Blocks",
        "resolvedPath": "src\\app\\legacy\\containers\\Blocks\\index.jsx"
      },
      {
        "source": "../Fragment",
        "resolvedPath": "src\\app\\legacy\\containers\\Fragment\\index.jsx"
      },
      {
        "source": "../InlineLink",
        "resolvedPath": "src\\app\\legacy\\containers\\InlineLink\\index.jsx"
      },
      {
        "source": "../InlineContainer",
        "resolvedPath": "src\\app\\legacy\\containers\\InlineContainer\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\Bulletin\\fixtureData.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\containers\\Bulletin\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\FrontPageStoryRows\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "#psammead/psammead-bulletin/src",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-bulletin\\src"
      },
      {
        "source": "#lib/utilities/srcSet",
        "resolvedPath": "src\\app\\lib\\utilities\\srcSet"
      },
      {
        "source": "#lib/utilities/ichefURL",
        "resolvedPath": "src\\app\\lib\\utilities\\ichefURL"
      },
      {
        "source": "#lib/utilities/imageSrcHelpers/originCode",
        "resolvedPath": "src\\app\\lib\\utilities\\imageSrcHelpers\\originCode"
      },
      {
        "source": "#lib/utilities/imageSrcHelpers/locator",
        "resolvedPath": "src\\app\\lib\\utilities\\imageSrcHelpers\\locator"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../ImageWithPlaceholder",
        "resolvedPath": "src\\app\\legacy\\containers\\ImageWithPlaceholder\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\ComscoreAnalytics\\Amp\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\ComscoreAnalytics\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      }
    ]
  },
  "src\\app\\legacy\\containers\\ComscoreAnalytics\\Canonical\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\ComscoreAnalytics\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "react-helmet",
        "resolvedPath": "node_modules\\@types\\react\\-helmet"
      },
      {
        "source": "#contexts/UserContext",
        "resolvedPath": "src\\app\\contexts\\UserContext"
      },
      {
        "source": "#app/lib/utilities/getEnvConfig",
        "resolvedPath": "src\\app\\lib\\utilities\\getEnvConfig"
      }
    ]
  },
  "src\\app\\legacy\\containers\\ComscoreAnalytics\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\pages\\MediaArticlePage\\MediaArticlePage.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext"
      },
      {
        "source": "#hooks/useToggle",
        "resolvedPath": "src\\app\\hooks\\useToggle"
      },
      {
        "source": "./Amp",
        "resolvedPath": "src\\app\\legacy\\containers\\ComscoreAnalytics\\Amp\\index.jsx"
      },
      {
        "source": "./Canonical",
        "resolvedPath": "src\\app\\legacy\\containers\\ComscoreAnalytics\\Canonical\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\ConsentBanner\\Banner\\cookie.amp.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\ConsentBanner\\Banner\\index.amp.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "react-helmet",
        "resolvedPath": "node_modules\\@types\\react\\-helmet"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/typography",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\typography"
      },
      {
        "source": "#psammead/psammead-styles/src/font-styles",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-styles\\src\\font-styles"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\breakpoints"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\spacings"
      },
      {
        "source": "../../../../components/ThemeProvider/focusIndicator",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\focusIndicator.ts"
      }
    ]
  },
  "src\\app\\legacy\\containers\\ConsentBanner\\Banner\\getDataAttribute.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\ConsentBanner\\Banner\\index.amp.jsx",
      "src\\app\\legacy\\containers\\ConsentBanner\\Banner\\index.canonical.jsx"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\containers\\ConsentBanner\\Banner\\index.amp.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\ConsentBanner\\index.amp.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "#psammead/psammead-consent-banner/src",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-consent-banner\\src"
      },
      {
        "source": "#app/legacy/psammead/psammead-assets/src/svgs",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs"
      },
      {
        "source": "#app/components/VisuallyHiddenText",
        "resolvedPath": "src\\app\\components\\VisuallyHiddenText"
      },
      {
        "source": "../../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "./cookie.amp",
        "resolvedPath": "src\\app\\legacy\\containers\\ConsentBanner\\Banner\\cookie.amp.jsx"
      },
      {
        "source": "./Text",
        "resolvedPath": "src\\app\\legacy\\containers\\ConsentBanner\\Banner\\Text.jsx"
      },
      {
        "source": "./getDataAttribute",
        "resolvedPath": "src\\app\\legacy\\containers\\ConsentBanner\\Banner\\getDataAttribute.js"
      }
    ]
  },
  "src\\app\\legacy\\containers\\ConsentBanner\\Banner\\index.canonical.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\ConsentBanner\\index.canonical.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/psammead-consent-banner/src",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-consent-banner\\src"
      },
      {
        "source": "../../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "./Text",
        "resolvedPath": "src\\app\\legacy\\containers\\ConsentBanner\\Banner\\Text.jsx"
      },
      {
        "source": "./getDataAttribute",
        "resolvedPath": "src\\app\\legacy\\containers\\ConsentBanner\\Banner\\getDataAttribute.js"
      }
    ]
  },
  "src\\app\\legacy\\containers\\ConsentBanner\\Banner\\Text.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\ConsentBanner\\Banner\\index.amp.jsx",
      "src\\app\\legacy\\containers\\ConsentBanner\\Banner\\index.canonical.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "#psammead/psammead-consent-banner/src",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-consent-banner\\src"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext"
      },
      {
        "source": "../../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\ConsentBanner\\index.amp.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\ConsentBanner\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#components/AmpGeo",
        "resolvedPath": "src\\app\\legacy\\components\\AmpGeo"
      },
      {
        "source": "./Banner/index.amp",
        "resolvedPath": "src\\app\\legacy\\containers\\ConsentBanner\\Banner\\index.amp.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\ConsentBanner\\index.canonical.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\ConsentBanner\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "#contexts/UserContext",
        "resolvedPath": "src\\app\\contexts\\UserContext"
      },
      {
        "source": "./Banner/index.canonical",
        "resolvedPath": "src\\app\\legacy\\containers\\ConsentBanner\\Banner\\index.canonical.jsx"
      },
      {
        "source": "./useConsentBanners",
        "resolvedPath": "src\\app\\legacy\\containers\\ConsentBanner\\useConsentBanners\\index.js"
      },
      {
        "source": "../../../contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext\\index.tsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\ConsentBanner\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\Header\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext"
      },
      {
        "source": "./index.canonical",
        "resolvedPath": "src\\app\\legacy\\containers\\ConsentBanner\\index.canonical.jsx"
      },
      {
        "source": "./index.amp",
        "resolvedPath": "src\\app\\legacy\\containers\\ConsentBanner\\index.amp.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\ConsentBanner\\useConsentBanners\\getCookieOvenEndpoints.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\ConsentBanner\\useConsentBanners\\setCookieOven.js"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\containers\\ConsentBanner\\useConsentBanners\\index.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\ConsentBanner\\index.canonical.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "js-cookie",
        "resolvedPath": "js-cookie"
      },
      {
        "source": "#lib/utilities/setCookie",
        "resolvedPath": "src\\app\\lib\\utilities\\setCookie"
      },
      {
        "source": "./setCookieOven",
        "resolvedPath": "src\\app\\legacy\\containers\\ConsentBanner\\useConsentBanners\\setCookieOven.js"
      }
    ]
  },
  "src\\app\\legacy\\containers\\ConsentBanner\\useConsentBanners\\setCookieOven.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\ConsentBanner\\useConsentBanners\\index.js"
    ],
    "outgoingDependencies": [
      {
        "source": "isomorphic-fetch",
        "resolvedPath": "isomorphic-fetch"
      },
      {
        "source": "ramda/src/path",
        "resolvedPath": "ramda/src/path"
      },
      {
        "source": "./getCookieOvenEndpoints",
        "resolvedPath": "src\\app\\legacy\\containers\\ConsentBanner\\useConsentBanners\\getCookieOvenEndpoints.js"
      }
    ]
  },
  "src\\app\\legacy\\containers\\CpsFeaturesAnalysis\\index.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "#psammead/psammead-story-promo-list/src",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-story-promo-list\\src"
      },
      {
        "source": "#hooks/useViewTracker",
        "resolvedPath": "src\\app\\hooks\\useViewTracker"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\breakpoints"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\spacings"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../CpsOnwardJourney",
        "resolvedPath": "src\\app\\legacy\\containers\\CpsOnwardJourney\\index.jsx"
      },
      {
        "source": "../../../components/FrostedGlassPromo/lazy",
        "resolvedPath": "src\\app\\components\\FrostedGlassPromo\\lazy.tsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\CpsOnwardJourney\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\CpsFeaturesAnalysis\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "#psammead/psammead-section-label/src",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-section-label\\src"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\breakpoints"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\spacings"
      },
      {
        "source": "#components/Grid",
        "resolvedPath": "src\\app\\legacy\\components\\Grid"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../../components/SkipLinkWrapper",
        "resolvedPath": "src\\app\\legacy\\components\\SkipLinkWrapper\\index.jsx"
      },
      {
        "source": "../../../components/ThemeProvider/palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      }
    ]
  },
  "src\\app\\legacy\\containers\\CpsRecommendations\\ErrorBoundary.tsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\CpsRecommendations\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "#app/models/types/optimo",
        "resolvedPath": "src\\app\\models\\types\\optimo"
      },
      {
        "source": "../../../lib/logger.node",
        "resolvedPath": "src\\app\\lib\\logger.node.js"
      },
      {
        "source": "../../../lib/logger.const",
        "resolvedPath": "src\\app\\lib\\logger.const.js"
      },
      {
        "source": "../../../contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext\\index.tsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\CpsRecommendations\\index.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\breakpoints"
      },
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "ramda/src/path",
        "resolvedPath": "ramda/src/path"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\spacings"
      },
      {
        "source": "#psammead/psammead-section-label/src",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-section-label\\src"
      },
      {
        "source": "#components/SkipLinkWrapper",
        "resolvedPath": "src\\app\\legacy\\components\\SkipLinkWrapper"
      },
      {
        "source": "#hooks/useToggle",
        "resolvedPath": "src\\app\\hooks\\useToggle"
      },
      {
        "source": "#components/Grid",
        "resolvedPath": "src\\app\\legacy\\components\\Grid"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "./RecommendationsPromoList",
        "resolvedPath": "src\\app\\legacy\\containers\\CpsRecommendations\\RecommendationsPromoList\\index.jsx"
      },
      {
        "source": "./RecommendationsPromo",
        "resolvedPath": "src\\app\\legacy\\containers\\CpsRecommendations\\RecommendationsPromo\\index.jsx"
      },
      {
        "source": "./ErrorBoundary",
        "resolvedPath": "src\\app\\legacy\\containers\\CpsRecommendations\\ErrorBoundary.tsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\CpsRecommendations\\newsFixture.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\containers\\CpsRecommendations\\RecommendationsPromo\\fixture.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../../../../models/types/onwardJourney",
        "resolvedPath": "src\\app\\models\\types\\onwardJourney.ts"
      }
    ]
  },
  "src\\app\\legacy\\containers\\CpsRecommendations\\RecommendationsPromo\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\CpsRecommendations\\index.jsx",
      "src\\app\\legacy\\containers\\CpsRecommendations\\RecommendationsPromoList\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\spacings"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\breakpoints"
      },
      {
        "source": "#psammead/psammead-styles/src/font-styles",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-styles\\src\\font-styles"
      },
      {
        "source": "#psammead/gel-foundations/src/typography",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\typography"
      },
      {
        "source": "../../../../contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext\\index.tsx"
      },
      {
        "source": "../../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../../../components/Grid",
        "resolvedPath": "src\\app\\legacy\\components\\Grid\\index.jsx"
      },
      {
        "source": "../RecommendationsPromoImage",
        "resolvedPath": "src\\app\\legacy\\containers\\CpsRecommendations\\RecommendationsPromoImage\\index.jsx"
      },
      {
        "source": "../../StoryPromo/useCombinedClickTrackerHandler",
        "resolvedPath": "src\\app\\legacy\\containers\\StoryPromo\\useCombinedClickTrackerHandler.js"
      },
      {
        "source": "./utility",
        "resolvedPath": "src\\app\\legacy\\containers\\CpsRecommendations\\RecommendationsPromo\\utility\\index.ts"
      }
    ]
  },
  "src\\app\\legacy\\containers\\CpsRecommendations\\RecommendationsPromo\\utility\\index.ts": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\CpsRecommendations\\RecommendationsPromo\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "ramda/src/path",
        "resolvedPath": "ramda/src/path"
      },
      {
        "source": "ramda/src/hasPath",
        "resolvedPath": "ramda/src/hasPath"
      },
      {
        "source": "../../../../../lib/utilities/imageSrcHelpers/originCode",
        "resolvedPath": "src\\app\\lib\\utilities\\imageSrcHelpers\\originCode.js"
      },
      {
        "source": "../../../../../lib/utilities/imageSrcHelpers/locator",
        "resolvedPath": "src\\app\\lib\\utilities\\imageSrcHelpers\\locator.js"
      },
      {
        "source": "../../../../../models/types/onwardJourney",
        "resolvedPath": "src\\app\\models\\types\\onwardJourney.ts"
      }
    ]
  },
  "src\\app\\legacy\\containers\\CpsRecommendations\\RecommendationsPromoImage\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\CpsRecommendations\\RecommendationsPromo\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "#psammead/psammead-image-placeholder/src",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-image-placeholder\\src"
      },
      {
        "source": "#lib/utilities/srcSet",
        "resolvedPath": "src\\app\\lib\\utilities\\srcSet"
      },
      {
        "source": "#lib/utilities/ichefURL",
        "resolvedPath": "src\\app\\lib\\utilities\\ichefURL"
      },
      {
        "source": "../../ImageWithPlaceholder",
        "resolvedPath": "src\\app\\legacy\\containers\\ImageWithPlaceholder\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\CpsRecommendations\\RecommendationsPromoList\\getEventTrackingData.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\CpsRecommendations\\RecommendationsPromoList\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "#lib/utilities/getStoryPromoInfo",
        "resolvedPath": "src\\app\\lib\\utilities\\getStoryPromoInfo"
      },
      {
        "source": "#app/lib/utilities/getEnvConfig",
        "resolvedPath": "src\\app\\lib\\utilities\\getEnvConfig"
      }
    ]
  },
  "src\\app\\legacy\\containers\\CpsRecommendations\\RecommendationsPromoList\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\CpsRecommendations\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "#psammead/psammead-story-promo-list/src",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-story-promo-list\\src"
      },
      {
        "source": "#hooks/useViewTracker",
        "resolvedPath": "src\\app\\hooks\\useViewTracker"
      },
      {
        "source": "@optimizely/react-sdk",
        "resolvedPath": "@optimizely/react-sdk"
      },
      {
        "source": "../../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../../../components/Grid",
        "resolvedPath": "src\\app\\legacy\\components\\Grid\\index.jsx"
      },
      {
        "source": "../RecommendationsPromo",
        "resolvedPath": "src\\app\\legacy\\containers\\CpsRecommendations\\RecommendationsPromo\\index.jsx"
      },
      {
        "source": "./getEventTrackingData",
        "resolvedPath": "src\\app\\legacy\\containers\\CpsRecommendations\\RecommendationsPromoList\\getEventTrackingData.js"
      }
    ]
  },
  "src\\app\\legacy\\containers\\EpisodeList\\DateTimeDuration.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\EpisodeList\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/typography",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\typography"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\spacings"
      },
      {
        "source": "#psammead/psammead-styles/src/font-styles",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-styles\\src\\font-styles"
      },
      {
        "source": "./helpers",
        "resolvedPath": "src\\app\\legacy\\containers\\EpisodeList\\helpers.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\EpisodeList\\Description.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\EpisodeList\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/typography",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\typography"
      },
      {
        "source": "#psammead/psammead-styles/src/font-styles",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-styles\\src\\font-styles"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\spacings"
      },
      {
        "source": "./helpers",
        "resolvedPath": "src\\app\\legacy\\containers\\EpisodeList\\helpers.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\EpisodeList\\Episode.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\EpisodeList\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\spacings"
      },
      {
        "source": "ramda/src/tail",
        "resolvedPath": "ramda/src/tail"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\breakpoints"
      },
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "./Image",
        "resolvedPath": "src\\app\\legacy\\containers\\EpisodeList\\Image.jsx"
      },
      {
        "source": "./helpers",
        "resolvedPath": "src\\app\\legacy\\containers\\EpisodeList\\helpers.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\EpisodeList\\helpers.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\EpisodeList\\DateTimeDuration.jsx",
      "src\\app\\legacy\\containers\\EpisodeList\\Description.jsx",
      "src\\app\\legacy\\containers\\EpisodeList\\Episode.jsx",
      "src\\app\\legacy\\containers\\EpisodeList\\Image.jsx",
      "src\\app\\legacy\\containers\\EpisodeList\\index.jsx",
      "src\\app\\legacy\\containers\\EpisodeList\\Link.jsx",
      "src\\app\\legacy\\containers\\EpisodeList\\Title.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      }
    ]
  },
  "src\\app\\legacy\\containers\\EpisodeList\\Image.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\EpisodeList\\Episode.jsx",
      "src\\app\\legacy\\containers\\EpisodeList\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "ramda/src/omit",
        "resolvedPath": "ramda/src/omit"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/psammead-assets/src/svgs",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs"
      },
      {
        "source": "#psammead/gel-foundations/src/typography",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\typography"
      },
      {
        "source": "#psammead/psammead-styles/src/font-styles",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-styles\\src\\font-styles"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\spacings"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\breakpoints"
      },
      {
        "source": "#psammead/psammead-image-placeholder/src",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-image-placeholder\\src"
      },
      {
        "source": "./helpers",
        "resolvedPath": "src\\app\\legacy\\containers\\EpisodeList\\helpers.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\EpisodeList\\index.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\spacings"
      },
      {
        "source": "./helpers",
        "resolvedPath": "src\\app\\legacy\\containers\\EpisodeList\\helpers.jsx"
      },
      {
        "source": "./Episode",
        "resolvedPath": "src\\app\\legacy\\containers\\EpisodeList\\Episode.jsx"
      },
      {
        "source": "./Link",
        "resolvedPath": "src\\app\\legacy\\containers\\EpisodeList\\Link.jsx"
      },
      {
        "source": "./Title",
        "resolvedPath": "src\\app\\legacy\\containers\\EpisodeList\\Title.jsx"
      },
      {
        "source": "./Description",
        "resolvedPath": "src\\app\\legacy\\containers\\EpisodeList\\Description.jsx"
      },
      {
        "source": "./DateTimeDuration",
        "resolvedPath": "src\\app\\legacy\\containers\\EpisodeList\\DateTimeDuration.jsx"
      },
      {
        "source": "./Image",
        "resolvedPath": "src\\app\\legacy\\containers\\EpisodeList\\Image.jsx"
      },
      {
        "source": "./MediaIndicator",
        "resolvedPath": "src\\app\\legacy\\containers\\EpisodeList\\MediaIndicator.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\EpisodeList\\Link.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\EpisodeList\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "./MediaIndicator",
        "resolvedPath": "src\\app\\legacy\\containers\\EpisodeList\\MediaIndicator.jsx"
      },
      {
        "source": "./helpers",
        "resolvedPath": "src\\app\\legacy\\containers\\EpisodeList\\helpers.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\EpisodeList\\MediaIndicator.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\EpisodeList\\index.jsx",
      "src\\app\\legacy\\containers\\EpisodeList\\Link.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      }
    ]
  },
  "src\\app\\legacy\\containers\\EpisodeList\\RecentAudioEpisodes\\fixtures.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\containers\\EpisodeList\\RecentAudioEpisodes\\index.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "#psammead/psammead-timestamp-container/src/utilities",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-timestamp-container\\src\\utilities"
      },
      {
        "source": "#psammead/psammead-timestamp-container/src",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-timestamp-container\\src"
      },
      {
        "source": "#psammead/psammead-section-label/src",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-section-label\\src"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\spacings"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\breakpoints"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext"
      },
      {
        "source": "#containers/EpisodeList",
        "resolvedPath": "src\\app\\legacy\\containers\\EpisodeList"
      },
      {
        "source": "#hooks/useViewTracker",
        "resolvedPath": "src\\app\\hooks\\useViewTracker"
      },
      {
        "source": "#hooks/useClickTrackerHandler",
        "resolvedPath": "src\\app\\hooks\\useClickTrackerHandler"
      },
      {
        "source": "../../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../../../../components/VisuallyHiddenText",
        "resolvedPath": "src\\app\\components\\VisuallyHiddenText\\index.tsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\EpisodeList\\RecentVideoEpisodes\\fixtures.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\containers\\EpisodeList\\RecentVideoEpisodes\\index.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "#psammead/psammead-timestamp-container/src",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-timestamp-container\\src"
      },
      {
        "source": "#psammead/psammead-timestamp-container/src/utilities",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-timestamp-container\\src\\utilities"
      },
      {
        "source": "#psammead/psammead-section-label/src",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-section-label\\src"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\spacings"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\breakpoints"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext"
      },
      {
        "source": "#containers/EpisodeList",
        "resolvedPath": "src\\app\\legacy\\containers\\EpisodeList"
      },
      {
        "source": "../../../../components/VisuallyHiddenText",
        "resolvedPath": "src\\app\\components\\VisuallyHiddenText\\index.tsx"
      },
      {
        "source": "../../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\EpisodeList\\Title.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\EpisodeList\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/typography",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\typography"
      },
      {
        "source": "#psammead/psammead-styles/src/font-styles",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-styles\\src\\font-styles"
      },
      {
        "source": "./helpers",
        "resolvedPath": "src\\app\\legacy\\containers\\EpisodeList\\helpers.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\FauxHeadline\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\pages\\MediaArticlePage\\MediaArticlePage.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "ramda/src/path",
        "resolvedPath": "ramda/src/path"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\spacings"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\breakpoints"
      },
      {
        "source": "#psammead/psammead-headings/src",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-headings\\src"
      },
      {
        "source": "#components/Grid",
        "resolvedPath": "src\\app\\legacy\\components\\Grid"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../Fragment",
        "resolvedPath": "src\\app\\legacy\\containers\\Fragment\\index.jsx"
      },
      {
        "source": "../Blocks",
        "resolvedPath": "src\\app\\legacy\\containers\\Blocks\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\Footer\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\components\\PageLayoutWrapper\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\breakpoints"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext"
      },
      {
        "source": "#app/components/Footer",
        "resolvedPath": "src\\app\\components\\Footer"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../Brand",
        "resolvedPath": "src\\app\\legacy\\containers\\Brand\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\Fragment\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\BulletedListItem\\index.jsx",
      "src\\app\\legacy\\containers\\FauxHeadline\\index.jsx",
      "src\\app\\legacy\\containers\\Headings\\index.jsx",
      "src\\app\\legacy\\containers\\InlineContainer\\index.jsx",
      "src\\app\\legacy\\containers\\InlineLink\\index.jsx",
      "src\\app\\legacy\\containers\\Paragraph\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "#psammead/psammead-styles/src/font-styles",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-styles\\src\\font-styles"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\FrontPageStoryRows\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\IndexPageSection\\index.jsx",
      "src\\app\\legacy\\containers\\IndexPageSection\\utilities\\rowDetails.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "#psammead/psammead-story-promo-list/src",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-story-promo-list\\src"
      },
      {
        "source": "#components/Grid",
        "resolvedPath": "src\\app\\legacy\\components\\Grid"
      },
      {
        "source": "./storyColumns",
        "resolvedPath": "src\\app\\legacy\\containers\\FrontPageStoryRows\\storyColumns.jsx"
      },
      {
        "source": "../Bulletin",
        "resolvedPath": "src\\app\\legacy\\containers\\Bulletin\\index.jsx"
      },
      {
        "source": "../StoryPromo",
        "resolvedPath": "src\\app\\legacy\\containers\\StoryPromo\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\FrontPageStoryRows\\storyColumns.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\FrontPageStoryRows\\index.jsx"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\containers\\FrontPageStoryRows\\testHelpers.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "ramda/src/take",
        "resolvedPath": "ramda/src/take"
      },
      {
        "source": "uuid",
        "resolvedPath": "uuid"
      },
      {
        "source": "#data/serbian/frontpage/lat",
        "resolvedPath": "data\\serbian\\frontpage\\lat"
      },
      {
        "source": "#data/urdu/frontpage",
        "resolvedPath": "data\\urdu\\frontpage"
      }
    ]
  },
  "src\\app\\legacy\\containers\\Gist\\fixtures.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\containers\\Gist\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\pages\\MediaArticlePage\\MediaArticlePage.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\spacings"
      },
      {
        "source": "#psammead/psammead-styles/src/font-styles",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-styles\\src\\font-styles"
      },
      {
        "source": "#psammead/gel-foundations/src/typography",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\typography"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\breakpoints"
      },
      {
        "source": "#containers/Blocks",
        "resolvedPath": "src\\app\\legacy\\containers\\Blocks"
      },
      {
        "source": "#containers/Text",
        "resolvedPath": "src\\app\\legacy\\containers\\Text"
      },
      {
        "source": "#components/Grid",
        "resolvedPath": "src\\app\\legacy\\components\\Grid"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../BulletedList",
        "resolvedPath": "src\\app\\legacy\\containers\\BulletedList\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\Header\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\components\\PageLayoutWrapper\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "#psammead/psammead-brand/src/SkipLink",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-brand\\src\\SkipLink"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext"
      },
      {
        "source": "#hooks/useOperaMiniDetection",
        "resolvedPath": "src\\app\\hooks\\useOperaMiniDetection"
      },
      {
        "source": "#app/components/Header/ScriptLink",
        "resolvedPath": "src\\app\\components\\Header\\ScriptLink"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "src\\app\\routes\\utils\\pageTypes"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../ConsentBanner",
        "resolvedPath": "src\\app\\legacy\\containers\\ConsentBanner\\index.jsx"
      },
      {
        "source": "../Navigation",
        "resolvedPath": "src\\app\\legacy\\containers\\Navigation\\index.jsx"
      },
      {
        "source": "../Brand",
        "resolvedPath": "src\\app\\legacy\\containers\\Brand\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\Headings\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\pages\\MediaArticlePage\\MediaArticlePage.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/psammead-headings/src",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-headings\\src"
      },
      {
        "source": "#lib/utilities/idSanitiser",
        "resolvedPath": "src\\app\\lib\\utilities\\idSanitiser"
      },
      {
        "source": "#components/Grid",
        "resolvedPath": "src\\app\\legacy\\components\\Grid"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../Fragment",
        "resolvedPath": "src\\app\\legacy\\containers\\Fragment\\index.jsx"
      },
      {
        "source": "../InlineContainer",
        "resolvedPath": "src\\app\\legacy\\containers\\InlineContainer\\index.jsx"
      },
      {
        "source": "../Blocks",
        "resolvedPath": "src\\app\\legacy\\containers\\Blocks\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\Headings\\testHelpers.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\containers\\ImageWithPlaceholder\\fixtureData.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "src\\app\\routes\\utils\\pageTypes"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\containers\\ImageWithPlaceholder\\index.jsx"
      },
      {
        "source": "../../../components/ThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\index.tsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\ImageWithPlaceholder\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\Bulletin\\index.jsx",
      "src\\app\\legacy\\containers\\CpsRecommendations\\RecommendationsPromoImage\\index.jsx",
      "src\\app\\legacy\\containers\\ImageWithPlaceholder\\fixtureData.jsx",
      "src\\app\\legacy\\containers\\OnDemandImage\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "react-lazyload",
        "resolvedPath": "node_modules\\@types\\react\\-lazyload"
      },
      {
        "source": "#psammead/psammead-image-placeholder/src",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-image-placeholder\\src"
      },
      {
        "source": "#psammead/psammead-image/src",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-image\\src"
      },
      {
        "source": "react-helmet",
        "resolvedPath": "node_modules\\@types\\react\\-helmet"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext"
      }
    ]
  },
  "src\\app\\legacy\\containers\\IndexHeading\\index.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/psammead-heading-index/src",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-heading-index\\src"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\breakpoints"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\spacings"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\IndexPageSection\\index.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#lib/utilities/makeRelativeUrlPath",
        "resolvedPath": "src\\app\\lib\\utilities\\makeRelativeUrlPath"
      },
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\breakpoints"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\spacings"
      },
      {
        "source": "#psammead/psammead-section-label/src",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-section-label\\src"
      },
      {
        "source": "#psammead/psammead-story-promo-list/src",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-story-promo-list\\src"
      },
      {
        "source": "#components/Grid",
        "resolvedPath": "src\\app\\legacy\\components\\Grid"
      },
      {
        "source": "#lib/utilities/idSanitiser",
        "resolvedPath": "src\\app\\lib\\utilities\\idSanitiser"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "./UsefulLinks",
        "resolvedPath": "src\\app\\legacy\\containers\\IndexPageSection\\UsefulLinks\\index.jsx"
      },
      {
        "source": "./utilities/filterAllowedItems",
        "resolvedPath": "src\\app\\legacy\\containers\\IndexPageSection\\utilities\\filterAllowedItems.jsx"
      },
      {
        "source": "./utilities/storyRowsSplitter",
        "resolvedPath": "src\\app\\legacy\\containers\\IndexPageSection\\utilities\\storyRowsSplitter.jsx"
      },
      {
        "source": "./utilities/rowDetails",
        "resolvedPath": "src\\app\\legacy\\containers\\IndexPageSection\\utilities\\rowDetails.jsx"
      },
      {
        "source": "../FrontPageStoryRows",
        "resolvedPath": "src\\app\\legacy\\containers\\FrontPageStoryRows\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\IndexPageSection\\UsefulLinks\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\IndexPageSection\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\breakpoints"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\spacings"
      },
      {
        "source": "#psammead/psammead-useful-links/src",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-useful-links\\src"
      }
    ]
  },
  "src\\app\\legacy\\containers\\IndexPageSection\\UsefulLinks\\usefulItems.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\containers\\IndexPageSection\\utilities\\filterAllowedItems.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\IndexPageSection\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "ramda/src/dropWhile",
        "resolvedPath": "ramda/src/dropWhile"
      },
      {
        "source": "#lib/utilities/getStoryPromoInfo",
        "resolvedPath": "src\\app\\lib\\utilities\\getStoryPromoInfo"
      }
    ]
  },
  "src\\app\\legacy\\containers\\IndexPageSection\\utilities\\rowDetails.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\IndexPageSection\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "ramda/src/flatten",
        "resolvedPath": "ramda/src/flatten"
      },
      {
        "source": "../../FrontPageStoryRows",
        "resolvedPath": "src\\app\\legacy\\containers\\FrontPageStoryRows\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\IndexPageSection\\utilities\\storyRowsSplitter.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\IndexPageSection\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "ramda/src/splitEvery",
        "resolvedPath": "ramda/src/splitEvery"
      }
    ]
  },
  "src\\app\\legacy\\containers\\InlineContainer\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\BulletedListItem\\index.jsx",
      "src\\app\\legacy\\containers\\Headings\\index.jsx",
      "src\\app\\legacy\\containers\\Paragraph\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../Blocks",
        "resolvedPath": "src\\app\\legacy\\containers\\Blocks\\index.jsx"
      },
      {
        "source": "../Fragment",
        "resolvedPath": "src\\app\\legacy\\containers\\Fragment\\index.jsx"
      },
      {
        "source": "../InlineLink",
        "resolvedPath": "src\\app\\legacy\\containers\\InlineLink\\index.jsx"
      },
      {
        "source": "../../components/InlineSpan",
        "resolvedPath": "src\\app\\legacy\\components\\InlineSpan\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\InlineLink\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\BulletedListItem\\index.jsx",
      "src\\app\\legacy\\containers\\InlineContainer\\index.jsx",
      "src\\app\\legacy\\containers\\Paragraph\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "#psammead/psammead-inline-link/src",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-inline-link\\src"
      },
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "#lib/utilities/makeRelativeUrlPath",
        "resolvedPath": "src\\app\\lib\\utilities\\makeRelativeUrlPath"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../Blocks",
        "resolvedPath": "src\\app\\legacy\\containers\\Blocks\\index.jsx"
      },
      {
        "source": "../Fragment",
        "resolvedPath": "src\\app\\legacy\\containers\\Fragment\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\Manifest\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\components\\PageLayoutWrapper\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "react-helmet",
        "resolvedPath": "node_modules\\@types\\react\\-helmet"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\Navigation\\index.amp.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\Navigation\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "#psammead/psammead-navigation/src",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-navigation\\src"
      },
      {
        "source": "#psammead/psammead-navigation/src/ScrollableNavigation",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-navigation\\src\\ScrollableNavigation"
      },
      {
        "source": "#psammead/psammead-navigation/src/DropdownNavigation",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-navigation\\src\\DropdownNavigation"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\breakpoints"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      }
    ]
  },
  "src\\app\\legacy\\containers\\Navigation\\index.canonical.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\Navigation\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/psammead-navigation/src",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-navigation\\src"
      },
      {
        "source": "#psammead/psammead-navigation/src/ScrollableNavigation",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-navigation\\src\\ScrollableNavigation"
      },
      {
        "source": "#psammead/psammead-navigation/src/DropdownNavigation",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-navigation\\src\\DropdownNavigation"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\breakpoints"
      },
      {
        "source": "#hooks/useMediaQuery",
        "resolvedPath": "src\\app\\hooks\\useMediaQuery"
      },
      {
        "source": "#app/contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext"
      }
    ]
  },
  "src\\app\\legacy\\containers\\Navigation\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\Header\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "#psammead/psammead-navigation/src",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-navigation\\src"
      },
      {
        "source": "#psammead/psammead-navigation/src/DropdownNavigation",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-navigation\\src\\DropdownNavigation"
      },
      {
        "source": "#app/hooks/useClickTrackerHandler",
        "resolvedPath": "src\\app\\hooks\\useClickTrackerHandler"
      },
      {
        "source": "#app/hooks/useViewTracker",
        "resolvedPath": "src\\app\\hooks\\useViewTracker"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "./index.canonical",
        "resolvedPath": "src\\app\\legacy\\containers\\Navigation\\index.canonical.jsx"
      },
      {
        "source": "./index.amp",
        "resolvedPath": "src\\app\\legacy\\containers\\Navigation\\index.amp.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\Navigation\\testHelpers.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      }
    ]
  },
  "src\\app\\legacy\\containers\\NielsenAnalytics\\Amp\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\NielsenAnalytics\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      }
    ]
  },
  "src\\app\\legacy\\containers\\NielsenAnalytics\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\pages\\MediaArticlePage\\MediaArticlePage.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext"
      },
      {
        "source": "#hooks/useToggle",
        "resolvedPath": "src\\app\\hooks\\useToggle"
      },
      {
        "source": "./Amp",
        "resolvedPath": "src\\app\\legacy\\containers\\NielsenAnalytics\\Amp\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\OnDemandFooterTimestamp\\index.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/typography",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\typography"
      },
      {
        "source": "#psammead/psammead-styles/src/font-styles",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-styles\\src\\font-styles"
      },
      {
        "source": "#psammead/psammead-timestamp-container/src/utilities",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-timestamp-container\\src\\utilities"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\breakpoints"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\OnDemandHeading\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\OnDemandHeading\\StyledRadioHeadingContainer.jsx",
      "src\\app\\legacy\\containers\\OnDemandHeading\\StyledTvHeadingContainer.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/psammead-headings/src",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-headings\\src"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\breakpoints"
      },
      {
        "source": "#psammead/psammead-timestamp-container/src/utilities",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-timestamp-container\\src\\utilities"
      },
      {
        "source": "#psammead/gel-foundations/src/typography",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\typography"
      },
      {
        "source": "#psammead/psammead-styles/src/font-styles",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-styles\\src\\font-styles"
      },
      {
        "source": "../../../components/VisuallyHiddenText",
        "resolvedPath": "src\\app\\components\\VisuallyHiddenText\\index.tsx"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\OnDemandHeading\\StyledRadioHeadingContainer.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\spacings"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\breakpoints"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\containers\\OnDemandHeading\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\OnDemandHeading\\StyledTvHeadingContainer.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\spacings"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\breakpoints"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\legacy\\containers\\OnDemandHeading\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\OnDemandImage\\index.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "ramda/src/is",
        "resolvedPath": "ramda/src/is"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\spacings"
      },
      {
        "source": "#lib/utilities/srcSet",
        "resolvedPath": "src\\app\\lib\\utilities\\srcSet"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../ImageWithPlaceholder",
        "resolvedPath": "src\\app\\legacy\\containers\\ImageWithPlaceholder\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\OnDemandParagraph\\index.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\spacings"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\breakpoints"
      },
      {
        "source": "#psammead/psammead-paragraph/src",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-paragraph\\src"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\OptimizelyArticleCompleteTracking\\index.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@optimizely/react-sdk",
        "resolvedPath": "@optimizely/react-sdk"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext"
      },
      {
        "source": "#hooks/useOptimizelyVariation",
        "resolvedPath": "src\\app\\hooks\\useOptimizelyVariation"
      },
      {
        "source": "#lib/config/optimizely",
        "resolvedPath": "src\\app\\lib\\config\\optimizely"
      }
    ]
  },
  "src\\app\\legacy\\containers\\OptimizelyPageViewTracking\\index.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@optimizely/react-sdk",
        "resolvedPath": "@optimizely/react-sdk"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext"
      },
      {
        "source": "#hooks/useOptimizelyScrollDepth",
        "resolvedPath": "src\\app\\hooks\\useOptimizelyScrollDepth"
      },
      {
        "source": "#hooks/useOptimizelyVariation",
        "resolvedPath": "src\\app\\hooks\\useOptimizelyVariation"
      },
      {
        "source": "#lib/config/optimizely",
        "resolvedPath": "src\\app\\lib\\config\\optimizely"
      }
    ]
  },
  "src\\app\\legacy\\containers\\PageHandlers\\withContexts.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "../../../components/ThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\index.tsx"
      },
      {
        "source": "../../../contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext\\index.tsx"
      },
      {
        "source": "../../../contexts/ToggleContext",
        "resolvedPath": "src\\app\\contexts\\ToggleContext\\index.tsx"
      },
      {
        "source": "../../../contexts/UserContext",
        "resolvedPath": "src\\app\\contexts\\UserContext\\index.tsx"
      },
      {
        "source": "../../../contexts/EventTrackingContext",
        "resolvedPath": "src\\app\\contexts\\EventTrackingContext\\index.tsx"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\PageHandlers\\withData\\index.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "#pages/ErrorPage/ErrorPage",
        "resolvedPath": "src\\app\\pages\\ErrorPage\\ErrorPage"
      },
      {
        "source": "../../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../../../../contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext\\index.tsx"
      },
      {
        "source": "./shouldRender",
        "resolvedPath": "src\\app\\legacy\\containers\\PageHandlers\\withData\\shouldRender\\index.js"
      }
    ]
  },
  "src\\app\\legacy\\containers\\PageHandlers\\withData\\shouldRender\\index.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\PageHandlers\\withData\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "#lib/utilities/passport",
        "resolvedPath": "src\\app\\lib\\utilities\\passport"
      },
      {
        "source": "#lib/statusCodes.const",
        "resolvedPath": "src\\app\\lib\\statusCodes.const"
      },
      {
        "source": "../../../../../routes/utils/pageTypes",
        "resolvedPath": "src\\app\\routes\\utils\\pageTypes.ts"
      }
    ]
  },
  "src\\app\\legacy\\containers\\PageHandlers\\withError\\index.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "#pages/ErrorPage/ErrorPage",
        "resolvedPath": "src\\app\\pages\\ErrorPage\\ErrorPage"
      }
    ]
  },
  "src\\app\\legacy\\containers\\PageHandlers\\withHashChangeHandler\\index.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "ramda/src/path",
        "resolvedPath": "ramda/src/path"
      },
      {
        "source": "ramda/src/pipe",
        "resolvedPath": "ramda/src/pipe"
      },
      {
        "source": "./isHashChangeOnSamePath",
        "resolvedPath": "src\\app\\legacy\\containers\\PageHandlers\\withHashChangeHandler\\isHashChangeOnSamePath.js"
      }
    ]
  },
  "src\\app\\legacy\\containers\\PageHandlers\\withHashChangeHandler\\isHashChangeOnSamePath.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\PageHandlers\\withHashChangeHandler\\index.jsx"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\containers\\PageHandlers\\withOptimizelyProvider\\index.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@optimizely/react-sdk",
        "resolvedPath": "@optimizely/react-sdk"
      },
      {
        "source": "#lib/utilities/isLive",
        "resolvedPath": "src\\app\\lib\\utilities\\isLive"
      },
      {
        "source": "#lib/utilities/onClient",
        "resolvedPath": "src\\app\\lib\\utilities\\onClient"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\breakpoints"
      },
      {
        "source": "#app/lib/utilities/getEnvConfig",
        "resolvedPath": "src\\app\\lib\\utilities\\getEnvConfig"
      },
      {
        "source": "js-cookie",
        "resolvedPath": "js-cookie"
      },
      {
        "source": "#app/lib/utilities/isOperaProxy",
        "resolvedPath": "src\\app\\lib\\utilities\\isOperaProxy"
      },
      {
        "source": "../../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\PageHandlers\\withPageWrapper\\index.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "../../../../components/PageLayoutWrapper",
        "resolvedPath": "src\\app\\components\\PageLayoutWrapper\\index.tsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\Paragraph\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\Text\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "#psammead/psammead-paragraph/src",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-paragraph\\src"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\breakpoints"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\spacings"
      },
      {
        "source": "#components/Grid",
        "resolvedPath": "src\\app\\legacy\\components\\Grid"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../Blocks",
        "resolvedPath": "src\\app\\legacy\\containers\\Blocks\\index.jsx"
      },
      {
        "source": "../Fragment",
        "resolvedPath": "src\\app\\legacy\\containers\\Fragment\\index.jsx"
      },
      {
        "source": "../InlineLink",
        "resolvedPath": "src\\app\\legacy\\containers\\InlineLink\\index.jsx"
      },
      {
        "source": "../InlineContainer",
        "resolvedPath": "src\\app\\legacy\\containers\\InlineContainer\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\PodcastExternalLinks\\index.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/psammead-styles/src/font-styles",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-styles\\src\\font-styles"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\breakpoints"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\spacings"
      },
      {
        "source": "#psammead/gel-foundations/src/typography",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\typography"
      },
      {
        "source": "#hooks/useViewTracker",
        "resolvedPath": "src\\app\\hooks\\useViewTracker"
      },
      {
        "source": "#hooks/useClickTrackerHandler",
        "resolvedPath": "src\\app\\hooks\\useClickTrackerHandler"
      },
      {
        "source": "#app/lib/utilities/idSanitiser",
        "resolvedPath": "src\\app\\lib\\utilities\\idSanitiser"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "./Link",
        "resolvedPath": "src\\app\\legacy\\containers\\PodcastExternalLinks\\Link.jsx"
      },
      {
        "source": "../../../components/VisuallyHiddenText",
        "resolvedPath": "src\\app\\components\\VisuallyHiddenText\\index.tsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\PodcastExternalLinks\\Link.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\PodcastExternalLinks\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/psammead-styles/src/font-styles",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-styles\\src\\font-styles"
      },
      {
        "source": "#psammead/gel-foundations/src/typography",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\typography"
      }
    ]
  },
  "src\\app\\legacy\\containers\\PodcastPromo\\components\\card-content.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\PodcastPromo\\components\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\spacings"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\breakpoints"
      }
    ]
  },
  "src\\app\\legacy\\containers\\PodcastPromo\\components\\card-description.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\PodcastPromo\\components\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/typography",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\typography"
      },
      {
        "source": "#psammead/psammead-styles/src/font-styles",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-styles\\src\\font-styles"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\spacings"
      }
    ]
  },
  "src\\app\\legacy\\containers\\PodcastPromo\\components\\card-episodes-text.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\PodcastPromo\\components\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/psammead-assets/src/svgs",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs"
      },
      {
        "source": "#psammead/gel-foundations/src/typography",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\typography"
      },
      {
        "source": "#psammead/psammead-styles/src/font-styles",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-styles\\src\\font-styles"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\spacings"
      }
    ]
  },
  "src\\app\\legacy\\containers\\PodcastPromo\\components\\card-image-wrapper.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\PodcastPromo\\components\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\spacings"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\breakpoints"
      }
    ]
  },
  "src\\app\\legacy\\containers\\PodcastPromo\\components\\card-link.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\PodcastPromo\\components\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      }
    ]
  },
  "src\\app\\legacy\\containers\\PodcastPromo\\components\\card-title.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\PodcastPromo\\components\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\spacings"
      },
      {
        "source": "#psammead/gel-foundations/src/typography",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\typography"
      },
      {
        "source": "#psammead/psammead-styles/src/font-styles",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-styles\\src\\font-styles"
      }
    ]
  },
  "src\\app\\legacy\\containers\\PodcastPromo\\components\\card.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\PodcastPromo\\components\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\breakpoints"
      }
    ]
  },
  "src\\app\\legacy\\containers\\PodcastPromo\\components\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\PodcastPromo\\Inline.jsx",
      "src\\app\\legacy\\containers\\PodcastPromo\\SecondaryColumn.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\spacings"
      },
      {
        "source": "./title",
        "resolvedPath": "src\\app\\legacy\\containers\\PodcastPromo\\components\\title.jsx"
      },
      {
        "source": "./card",
        "resolvedPath": "src\\app\\legacy\\containers\\PodcastPromo\\components\\card.jsx"
      },
      {
        "source": "./card-content",
        "resolvedPath": "src\\app\\legacy\\containers\\PodcastPromo\\components\\card-content.jsx"
      },
      {
        "source": "./card-link",
        "resolvedPath": "src\\app\\legacy\\containers\\PodcastPromo\\components\\card-link.jsx"
      },
      {
        "source": "./card-image-wrapper",
        "resolvedPath": "src\\app\\legacy\\containers\\PodcastPromo\\components\\card-image-wrapper.jsx"
      },
      {
        "source": "./card-title",
        "resolvedPath": "src\\app\\legacy\\containers\\PodcastPromo\\components\\card-title.jsx"
      },
      {
        "source": "./card-description",
        "resolvedPath": "src\\app\\legacy\\containers\\PodcastPromo\\components\\card-description.jsx"
      },
      {
        "source": "./card-episodes-text",
        "resolvedPath": "src\\app\\legacy\\containers\\PodcastPromo\\components\\card-episodes-text.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\PodcastPromo\\components\\title.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\PodcastPromo\\components\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/psammead-assets/src/svgs",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\spacings"
      },
      {
        "source": "#psammead/gel-foundations/src/typography",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\typography"
      },
      {
        "source": "#psammead/psammead-styles/src/font-styles",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-styles\\src\\font-styles"
      }
    ]
  },
  "src\\app\\legacy\\containers\\PodcastPromo\\index.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "./SecondaryColumn",
        "resolvedPath": "src\\app\\legacy\\containers\\PodcastPromo\\SecondaryColumn.jsx"
      },
      {
        "source": "./Inline",
        "resolvedPath": "src\\app\\legacy\\containers\\PodcastPromo\\Inline.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\PodcastPromo\\Inline.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\PodcastPromo\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\spacings"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\breakpoints"
      },
      {
        "source": "#psammead/gel-foundations/src/typography",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\typography"
      },
      {
        "source": "#psammead/psammead-styles/src/font-styles",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-styles\\src\\font-styles"
      },
      {
        "source": "#hooks/useViewTracker",
        "resolvedPath": "src\\app\\hooks\\useViewTracker"
      },
      {
        "source": "#hooks/useClickTrackerHandler",
        "resolvedPath": "src\\app\\hooks\\useClickTrackerHandler"
      },
      {
        "source": "#containers/ImageWithPlaceholder",
        "resolvedPath": "src\\app\\legacy\\containers\\ImageWithPlaceholder"
      },
      {
        "source": "#components/SkipLinkWrapper",
        "resolvedPath": "src\\app\\legacy\\components\\SkipLinkWrapper"
      },
      {
        "source": "#psammead/psammead-assets/src/svgs",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "src\\app\\routes\\utils\\pageTypes"
      },
      {
        "source": "#app/contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext"
      },
      {
        "source": "#app/components/ThemeProvider/mediaQueries",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\mediaQueries"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "./components",
        "resolvedPath": "src\\app\\legacy\\containers\\PodcastPromo\\components\\index.jsx"
      },
      {
        "source": "./shared",
        "resolvedPath": "src\\app\\legacy\\containers\\PodcastPromo\\shared.js"
      }
    ]
  },
  "src\\app\\legacy\\containers\\PodcastPromo\\SecondaryColumn.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\PodcastPromo\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\spacings"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\breakpoints"
      },
      {
        "source": "#hooks/useViewTracker",
        "resolvedPath": "src\\app\\hooks\\useViewTracker"
      },
      {
        "source": "#hooks/useClickTrackerHandler",
        "resolvedPath": "src\\app\\hooks\\useClickTrackerHandler"
      },
      {
        "source": "#containers/ImageWithPlaceholder",
        "resolvedPath": "src\\app\\legacy\\containers\\ImageWithPlaceholder"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "./components",
        "resolvedPath": "src\\app\\legacy\\containers\\PodcastPromo\\components\\index.jsx"
      },
      {
        "source": "./shared",
        "resolvedPath": "src\\app\\legacy\\containers\\PodcastPromo\\shared.js"
      }
    ]
  },
  "src\\app\\legacy\\containers\\PodcastPromo\\shared.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\PodcastPromo\\Inline.jsx",
      "src\\app\\legacy\\containers\\PodcastPromo\\SecondaryColumn.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "ramda/src/path",
        "resolvedPath": "ramda/src/path"
      },
      {
        "source": "#lib/utilities/makeRelativeUrlPath",
        "resolvedPath": "src\\app\\lib\\utilities\\makeRelativeUrlPath"
      },
      {
        "source": "#lib/utilities/srcSet",
        "resolvedPath": "src\\app\\lib\\utilities\\srcSet"
      }
    ]
  },
  "src\\app\\legacy\\containers\\RadioSchedule\\Canonical\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\RadioSchedule\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "isomorphic-fetch",
        "resolvedPath": "isomorphic-fetch"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "moment",
        "resolvedPath": "moment"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\breakpoints"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\spacings"
      },
      {
        "source": "#psammead/gel-foundations/src/typography",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\typography"
      },
      {
        "source": "#psammead/psammead-styles/src/font-styles",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-styles\\src\\font-styles"
      },
      {
        "source": "#psammead/psammead-section-label/src",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-section-label\\src"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext"
      },
      {
        "source": "#components/RadioSchedule",
        "resolvedPath": "src\\app\\legacy\\components\\RadioSchedule"
      },
      {
        "source": "#lib/logger.web",
        "resolvedPath": "src\\app\\lib\\logger.web"
      },
      {
        "source": "#lib/logger.const",
        "resolvedPath": "src\\app\\lib\\logger.const"
      },
      {
        "source": "../../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../utilities/processRadioSchedule",
        "resolvedPath": "src\\app\\legacy\\containers\\RadioSchedule\\utilities\\processRadioSchedule.js"
      }
    ]
  },
  "src\\app\\legacy\\containers\\RadioSchedule\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\RadioSchedule\\utilities\\testHelpers.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext"
      },
      {
        "source": "#hooks/useLocation",
        "resolvedPath": "src\\app\\hooks\\useLocation"
      },
      {
        "source": "#hooks/useToggle",
        "resolvedPath": "src\\app\\hooks\\useToggle"
      },
      {
        "source": "#lib/utilities/getUrlHelpers/getRadioSchedulesUrls",
        "resolvedPath": "src\\app\\lib\\utilities\\getUrlHelpers\\getRadioSchedulesUrls"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "./Canonical",
        "resolvedPath": "src\\app\\legacy\\containers\\RadioSchedule\\Canonical\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\RadioSchedule\\utilities\\evaluateScheduleData.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\RadioSchedule\\utilities\\processRadioSchedule.js"
    ],
    "outgoingDependencies": [
      {
        "source": "ramda/src/findLastIndex",
        "resolvedPath": "ramda/src/findLastIndex"
      },
      {
        "source": "ramda/src/propSatisfies",
        "resolvedPath": "ramda/src/propSatisfies"
      },
      {
        "source": "ramda/src/path",
        "resolvedPath": "ramda/src/path"
      }
    ]
  },
  "src\\app\\legacy\\containers\\RadioSchedule\\utilities\\processRadioSchedule.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\RadioSchedule\\Canonical\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "ramda/src/path",
        "resolvedPath": "ramda/src/path"
      },
      {
        "source": "#lib/logger.node",
        "resolvedPath": "src\\app\\lib\\logger.node"
      },
      {
        "source": "#lib/logger.const",
        "resolvedPath": "src\\app\\lib\\logger.const"
      },
      {
        "source": "./evaluateScheduleData",
        "resolvedPath": "src\\app\\legacy\\containers\\RadioSchedule\\utilities\\evaluateScheduleData.js"
      }
    ]
  },
  "src\\app\\legacy\\containers\\RadioSchedule\\utilities\\testHelpers.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "react-router-dom",
        "resolvedPath": "node_modules\\@types\\react\\-router-dom"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext"
      },
      {
        "source": "#contexts/ToggleContext",
        "resolvedPath": "src\\app\\contexts\\ToggleContext"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "src\\app\\routes\\utils\\pageTypes"
      },
      {
        "source": "../../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "..",
        "resolvedPath": "src\\app\\legacy\\containers\\RadioSchedule\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\RelatedTopics\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\pages\\MediaArticlePage\\MediaArticlePage.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "#psammead/psammead-topic-tags/src",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-topic-tags\\src"
      },
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "#psammead/psammead-section-label/src",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-section-label\\src"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\spacings"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\breakpoints"
      },
      {
        "source": "#app/contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext"
      },
      {
        "source": "#hooks/useClickTrackerHandler",
        "resolvedPath": "src\\app\\hooks\\useClickTrackerHandler"
      },
      {
        "source": "#hooks/useViewTracker",
        "resolvedPath": "src\\app\\hooks\\useViewTracker"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\SocialEmbed\\common\\fixtures.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\containers\\SocialEmbed\\common\\styles.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\SocialEmbed\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\spacings"
      }
    ]
  },
  "src\\app\\legacy\\containers\\SocialEmbed\\common\\testHelper.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "src\\app\\routes\\utils\\pageTypes"
      },
      {
        "source": "../../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../../../../contexts/ToggleContext",
        "resolvedPath": "src\\app\\contexts\\ToggleContext\\index.tsx"
      },
      {
        "source": "../../../../components/ThemeProvider",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\index.tsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\SocialEmbed\\common\\translations.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\SocialEmbed\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      }
    ]
  },
  "src\\app\\legacy\\containers\\SocialEmbed\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\pages\\MediaArticlePage\\MediaArticlePage.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "#psammead/psammead-social-embed/src",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-social-embed\\src"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext"
      },
      {
        "source": "#components/Grid",
        "resolvedPath": "src\\app\\legacy\\components\\Grid"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "src\\app\\routes\\utils\\pageTypes"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "./common/translations",
        "resolvedPath": "src\\app\\legacy\\containers\\SocialEmbed\\common\\translations.js"
      },
      {
        "source": "./common/styles",
        "resolvedPath": "src\\app\\legacy\\containers\\SocialEmbed\\common\\styles.js"
      },
      {
        "source": "./sourceHelpers",
        "resolvedPath": "src\\app\\legacy\\containers\\SocialEmbed\\sourceHelpers.js"
      }
    ]
  },
  "src\\app\\legacy\\containers\\SocialEmbed\\sourceHelpers.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\SocialEmbed\\index.jsx"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\containers\\StoryPromo\\helpers\\fixtureData.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "src\\app\\routes\\utils\\pageTypes"
      },
      {
        "source": "../IndexAlsos/relatedItems",
        "resolvedPath": "src\\app\\legacy\\containers\\StoryPromo\\IndexAlsos\\relatedItems.js"
      }
    ]
  },
  "src\\app\\legacy\\containers\\StoryPromo\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\FrontPageStoryRows\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/psammead-story-promo/src",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-story-promo\\src"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\breakpoints"
      },
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "#app/components/LiveLabel",
        "resolvedPath": "src\\app\\components\\LiveLabel"
      },
      {
        "source": "#psammead/psammead-image-placeholder/src",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-image-placeholder\\src"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext"
      },
      {
        "source": "#lib/utilities/srcSet",
        "resolvedPath": "src\\app\\lib\\utilities\\srcSet"
      },
      {
        "source": "#lib/utilities/ichefURL",
        "resolvedPath": "src\\app\\lib\\utilities\\ichefURL"
      },
      {
        "source": "#lib/utilities/imageSrcHelpers/originCode",
        "resolvedPath": "src\\app\\lib\\utilities\\imageSrcHelpers\\originCode"
      },
      {
        "source": "#lib/utilities/imageSrcHelpers/locator",
        "resolvedPath": "src\\app\\lib\\utilities\\imageSrcHelpers\\locator"
      },
      {
        "source": "#lib/utilities/getStoryPromoInfo",
        "resolvedPath": "src\\app\\lib\\utilities\\getStoryPromoInfo"
      },
      {
        "source": "#lib/logger.node",
        "resolvedPath": "src\\app\\lib\\logger.node"
      },
      {
        "source": "#lib/logger.const",
        "resolvedPath": "src\\app\\lib\\logger.const"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "src\\app\\routes\\utils\\pageTypes"
      },
      {
        "source": "#components/Promo/timestamp",
        "resolvedPath": "src\\app\\legacy\\components\\Promo\\timestamp"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "./LinkContents",
        "resolvedPath": "src\\app\\legacy\\containers\\StoryPromo\\LinkContents\\index.jsx"
      },
      {
        "source": "./MediaIndicator",
        "resolvedPath": "src\\app\\legacy\\containers\\StoryPromo\\MediaIndicator\\index.jsx"
      },
      {
        "source": "./IndexAlsos",
        "resolvedPath": "src\\app\\legacy\\containers\\StoryPromo\\IndexAlsos\\index.jsx"
      },
      {
        "source": "./utilities",
        "resolvedPath": "src\\app\\legacy\\containers\\StoryPromo\\utilities\\index.js"
      },
      {
        "source": "../../../components/Image",
        "resolvedPath": "src\\app\\components\\Image\\index.tsx"
      },
      {
        "source": "./useCombinedClickTrackerHandler",
        "resolvedPath": "src\\app\\legacy\\containers\\StoryPromo\\useCombinedClickTrackerHandler.js"
      }
    ]
  },
  "src\\app\\legacy\\containers\\StoryPromo\\IndexAlsos\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\StoryPromo\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "#psammead/psammead-media-indicator/src",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-media-indicator\\src"
      },
      {
        "source": "#psammead/psammead-story-promo/src/IndexAlsos",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-story-promo\\src\\IndexAlsos"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "src\\app\\routes\\utils\\pageTypes"
      },
      {
        "source": "../../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\StoryPromo\\IndexAlsos\\relatedItems.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\StoryPromo\\helpers\\fixtureData.js"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\containers\\StoryPromo\\LinkContents\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\StoryPromo\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "moment-timezone",
        "resolvedPath": "moment-timezone"
      },
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "#lib/utilities/formatDuration",
        "resolvedPath": "src\\app\\lib\\utilities\\formatDuration"
      },
      {
        "source": "#lib/utilities/getStoryPromoInfo",
        "resolvedPath": "src\\app\\lib\\utilities\\getStoryPromoInfo"
      },
      {
        "source": "../../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../utilities",
        "resolvedPath": "src\\app\\legacy\\containers\\StoryPromo\\utilities\\index.js"
      },
      {
        "source": "../../../../components/VisuallyHiddenText",
        "resolvedPath": "src\\app\\components\\VisuallyHiddenText\\index.tsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\StoryPromo\\MediaIndicator\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\StoryPromo\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "moment-timezone",
        "resolvedPath": "moment-timezone"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/psammead-media-indicator/src",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-media-indicator\\src"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\spacings"
      },
      {
        "source": "ramda/src/path",
        "resolvedPath": "ramda/src/path"
      },
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "#lib/utilities/formatDuration",
        "resolvedPath": "src\\app\\lib\\utilities\\formatDuration"
      },
      {
        "source": "../utilities",
        "resolvedPath": "src\\app\\legacy\\containers\\StoryPromo\\utilities\\index.js"
      }
    ]
  },
  "src\\app\\legacy\\containers\\StoryPromo\\useCombinedClickTrackerHandler.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\CpsRecommendations\\RecommendationsPromo\\index.jsx",
      "src\\app\\legacy\\containers\\StoryPromo\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "ramda/src/path",
        "resolvedPath": "ramda/src/path"
      },
      {
        "source": "#hooks/useClickTrackerHandler",
        "resolvedPath": "src\\app\\hooks\\useClickTrackerHandler"
      }
    ]
  },
  "src\\app\\legacy\\containers\\StoryPromo\\utilities\\index.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\StoryPromo\\index.jsx",
      "src\\app\\legacy\\containers\\StoryPromo\\LinkContents\\index.jsx",
      "src\\app\\legacy\\containers\\StoryPromo\\MediaIndicator\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "src\\app\\routes\\utils\\pageTypes"
      }
    ]
  },
  "src\\app\\legacy\\containers\\Text\\fixtures.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\containers\\Text\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\pages\\MediaArticlePage\\MediaArticlePage.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "../Paragraph",
        "resolvedPath": "src\\app\\legacy\\containers\\Paragraph\\index.jsx"
      },
      {
        "source": "../BulletedList",
        "resolvedPath": "src\\app\\legacy\\containers\\BulletedList\\index.jsx"
      },
      {
        "source": "../Blocks",
        "resolvedPath": "src\\app\\legacy\\containers\\Blocks\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\VisuallyHiddenHeadline\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\pages\\MediaArticlePage\\MediaArticlePage.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "ramda/src/path",
        "resolvedPath": "ramda/src/path"
      },
      {
        "source": "../../../components/VisuallyHiddenText",
        "resolvedPath": "src\\app\\components\\VisuallyHiddenText\\index.tsx"
      }
    ]
  },
  "src\\app\\legacy\\containers\\WebVitals\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\components\\PageLayoutWrapper\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@bbc/web-vitals",
        "resolvedPath": "@bbc/web-vitals"
      },
      {
        "source": "#hooks/useToggle",
        "resolvedPath": "src\\app\\hooks\\useToggle"
      },
      {
        "source": "#contexts/UserContext",
        "resolvedPath": "src\\app\\contexts\\UserContext"
      },
      {
        "source": "#app/lib/utilities/getEnvConfig",
        "resolvedPath": "src\\app\\lib\\utilities\\getEnvConfig"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\gel-foundations\\src\\breakpoints.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\gel-foundations\\src\\getTypeSizes.js",
      "src\\app\\legacy\\psammead\\gel-foundations\\src\\typography.js"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\gel-foundations\\src\\getTypeSizes.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\gel-foundations\\src\\typography.js"
    ],
    "outgoingDependencies": [
      {
        "source": "./breakpoints",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\breakpoints.js"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\gel-foundations\\src\\spacings.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\gel-foundations\\src\\typography.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "./breakpoints",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\breakpoints.js"
      },
      {
        "source": "./getTypeSizes",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\getTypeSizes.js"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\moment-timezone-include\\src\\index.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\moment-timezone-include\\src\\postInstall\\index.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\moment-timezone-include\\src\\replaceOriginalTimezoneData\\index.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\moment-timezone-include\\src\\writeNewTimezoneData\\index.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\moment-timezone-include\\src\\writeToNestedFile\\index.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\amp-boilerplate.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\afaanoromoo.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\afrique.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\amharic.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\arabic.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\archive.jsx": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\archive.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\azeri.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\bbcBlocks.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\bbcBlocksDarkMode.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\bengali.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\burmese.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\coreIcons.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\spacings"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\cymrufyw.jsx": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\cymrufyw.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\gahuza.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\gujarati.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\hausa.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\hindi.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\igbo.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\indonesia.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\japanese.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\korean.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\kyrgyz.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\learningenglish.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\marathi.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\mediaIcons.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\spacings"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\mundo.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\naidheachdan.jsx": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\naidheachdan.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\navigationIcons.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\nepali.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\news.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\newsround.jsx": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\newsround.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\pashto.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\persian.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\pidgin.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\portuguese.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\punjabi.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\russian.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\scotland.jsx": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\themes\\scotland.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\serbian.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\sinhala.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\somali.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\sport.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\swahili.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\tamil.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\telugu.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\thai.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\tigrinya.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\turkce.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\ukchina.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\ukrainian.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\urdu.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\uzbek.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\vietnamese.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\weather.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\yoruba.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs\\zhongwen.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\psammead-brand\\src\\index.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\breakpoints"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\spacings"
      },
      {
        "source": "../../../../components/ThemeProvider/focusIndicator",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\focusIndicator.ts"
      },
      {
        "source": "../../../../components/VisuallyHiddenText",
        "resolvedPath": "src\\app\\components\\VisuallyHiddenText\\index.tsx"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-brand\\src\\SkipLink\\index.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\breakpoints"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\spacings"
      },
      {
        "source": "#psammead/gel-foundations/src/typography",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\typography"
      },
      {
        "source": "#psammead/psammead-styles/src/font-styles",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-styles\\src\\font-styles"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-bulletin\\src\\ImageStyles.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\psammead-bulletin\\src\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\breakpoints"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\spacings"
      },
      {
        "source": "#psammead/psammead-styles/src/detection",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-styles\\src\\detection"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-bulletin\\src\\index.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\breakpoints"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\spacings"
      },
      {
        "source": "#psammead/psammead-styles/src/font-styles",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-styles\\src\\font-styles"
      },
      {
        "source": "#psammead/gel-foundations/src/typography",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\typography"
      },
      {
        "source": "#psammead/psammead-assets/src/svgs",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs"
      },
      {
        "source": "#app/components/LiveLabel",
        "resolvedPath": "src\\app\\components\\LiveLabel"
      },
      {
        "source": "#psammead/psammead-story-promo/src",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-story-promo\\src"
      },
      {
        "source": "../../../../components/VisuallyHiddenText",
        "resolvedPath": "src\\app\\components\\VisuallyHiddenText\\index.tsx"
      },
      {
        "source": "./ImageStyles",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-bulletin\\src\\ImageStyles.jsx"
      },
      {
        "source": "./TextStyles",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-bulletin\\src\\TextStyles.jsx"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-bulletin\\src\\TextStyles.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\psammead-bulletin\\src\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\breakpoints"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\spacings"
      },
      {
        "source": "#psammead/psammead-styles/src/detection",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-styles\\src\\detection"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-calendars\\src\\calendars\\jalaali.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\psammead-calendars\\src\\index.js"
    ],
    "outgoingDependencies": [
      {
        "source": "jalaali-js",
        "resolvedPath": "jalaali-js"
      },
      {
        "source": "#psammead/psammead-locales/src/numerals",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-locales\\src\\numerals"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-calendars\\src\\index.js": {
    "incomingDependencies": [
      "src\\app\\lib\\config\\services\\pashto.ts",
      "src\\app\\lib\\config\\services\\persian.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "./calendars/jalaali",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-calendars\\src\\calendars\\jalaali.js"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-consent-banner\\src\\index.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/typography",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\typography"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\breakpoints"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\spacings"
      },
      {
        "source": "#psammead/psammead-styles/src/font-styles",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-styles\\src\\font-styles"
      },
      {
        "source": "../../../../components/ThemeProvider/focusIndicator",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\focusIndicator.ts"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-detokeniser\\src\\index.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\psammead-grid\\src\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\components\\MostRead\\Canonical\\List\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\spacings"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\breakpoints"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-grid\\src\\testHelpers.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/psammead-paragraph/src",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-paragraph\\src"
      },
      {
        "source": "#psammead/psammead-image/src",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-image\\src"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\spacings"
      },
      {
        "source": "#psammead/psammead-media-indicator/src",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-media-indicator\\src"
      },
      {
        "source": "../../../../components/ThemeProvider/fontScripts/latin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-heading-index\\src\\index.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/typography",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\typography"
      },
      {
        "source": "#psammead/psammead-styles/src/font-styles",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-styles\\src\\font-styles"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-headings\\src\\index.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\spacings"
      },
      {
        "source": "#psammead/gel-foundations/src/typography",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\typography"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\breakpoints"
      },
      {
        "source": "#psammead/psammead-styles/src/font-styles",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-styles\\src\\font-styles"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-image\\src\\index.amp.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "ramda/src/omit",
        "resolvedPath": "ramda/src/omit"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-image\\src\\index.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "../../../../contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext\\index.tsx"
      },
      {
        "source": "../../../../routes/utils/pageTypes",
        "resolvedPath": "src\\app\\routes\\utils\\pageTypes.ts"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-image\\src\\testHelpers\\fixtureData.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\psammead-image\\src\\testHelpers\\snapshotTests.jsx",
      "src\\app\\legacy\\psammead\\psammead-image\\src\\testHelpers\\stories.jsx"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\psammead-image\\src\\testHelpers\\snapshotTests.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "#psammead/psammead-test-helpers/src",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-test-helpers\\src"
      },
      {
        "source": "./fixtureData",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-image\\src\\testHelpers\\fixtureData.js"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-image\\src\\testHelpers\\stories.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@storybook/react",
        "resolvedPath": "@storybook/react"
      },
      {
        "source": "../../README.md",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-image\\README.md"
      },
      {
        "source": "./fixtureData",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-image\\src\\testHelpers\\fixtureData.js"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-image-placeholder\\src\\index.amp.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "#psammead/psammead-assets/src/svgs",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\breakpoints"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-image-placeholder\\src\\index.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/psammead-assets/src/svgs",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\breakpoints"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-inline-link\\src\\index.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-locales\\moment\\am.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\psammead-locales\\moment\\ar.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\psammead-locales\\moment\\az.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\psammead-locales\\moment\\bn.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\psammead-locales\\moment\\en-gb.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\psammead-locales\\moment\\es.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\psammead-locales\\moment\\gu.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\psammead-locales\\moment\\ha.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\psammead-locales\\moment\\hi.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\psammead-locales\\moment\\ig.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\psammead-locales\\moment\\ky.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\psammead-locales\\moment\\mr.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\psammead-locales\\moment\\ne.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\psammead-locales\\moment\\om.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\psammead-locales\\moment\\pa-in.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\psammead-locales\\moment\\pcm.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\psammead-locales\\moment\\ps.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\psammead-locales\\moment\\pt-br.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\psammead-locales\\moment\\ru.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\psammead-locales\\moment\\rw.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\psammead-locales\\moment\\si.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\psammead-locales\\moment\\so.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\psammead-locales\\moment\\sr-cyrl.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\psammead-locales\\moment\\sr.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\psammead-locales\\moment\\sw.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\psammead-locales\\moment\\ta.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\psammead-locales\\moment\\th.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\psammead-locales\\moment\\ti.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\psammead-locales\\moment\\uk.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\psammead-locales\\moment\\ur.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\psammead-locales\\moment\\uz.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\psammead-locales\\moment\\yo.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\psammead-locales\\src\\numerals\\index.js": {
    "incomingDependencies": [
      "src\\app\\components\\MostRead\\Canonical\\Rank\\index.tsx"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\psammead-media-indicator\\src\\index.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\spacings"
      },
      {
        "source": "#psammead/gel-foundations/src/typography",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\typography"
      },
      {
        "source": "#psammead/psammead-styles/src/font-styles",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-styles\\src\\font-styles"
      },
      {
        "source": "#psammead/psammead-assets/src/svgs",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-navigation\\src\\DropdownNavigation\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\psammead-navigation\\src\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/psammead-assets/src/svgs",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-assets\\src\\svgs"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\spacings"
      },
      {
        "source": "react-helmet",
        "resolvedPath": "node_modules\\@types\\react\\-helmet"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\breakpoints"
      },
      {
        "source": "#psammead/gel-foundations/src/typography",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\typography"
      },
      {
        "source": "#psammead/psammead-styles/src/font-styles",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-styles\\src\\font-styles"
      },
      {
        "source": "../../../../../components/VisuallyHiddenText",
        "resolvedPath": "src\\app\\components\\VisuallyHiddenText\\index.tsx"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-navigation\\src\\index.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\spacings"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\breakpoints"
      },
      {
        "source": "#psammead/gel-foundations/src/typography",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\typography"
      },
      {
        "source": "#psammead/psammead-styles/src/font-styles",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-styles\\src\\font-styles"
      },
      {
        "source": "./DropdownNavigation",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-navigation\\src\\DropdownNavigation\\index.jsx"
      },
      {
        "source": "../../../../components/ThemeProvider/focusIndicator",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\focusIndicator.ts"
      },
      {
        "source": "../../../../components/VisuallyHiddenText",
        "resolvedPath": "src\\app\\components\\VisuallyHiddenText\\index.tsx"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-navigation\\src\\ScrollableNavigation\\index.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\spacings"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\breakpoints"
      },
      {
        "source": "../../../../../components/ThemeProvider/focusIndicator",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\focusIndicator.ts"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-navigation\\testHelpers\\arabic.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\psammead-navigation\\testHelpers\\igbo.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\psammead-navigation\\testHelpers\\news.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\psammead-navigation\\testHelpers\\pidgin.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\psammead-navigation\\testHelpers\\yoruba.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\psammead-paragraph\\src\\index.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\spacings"
      },
      {
        "source": "#psammead/gel-foundations/src/typography",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\typography"
      },
      {
        "source": "#psammead/psammead-styles/src/font-styles",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-styles\\src\\font-styles"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-section-label\\src\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\components\\MostRead\\Label\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\breakpoints"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\spacings"
      },
      {
        "source": "#app/components/ThemeProvider/palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette"
      },
      {
        "source": "./titles",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-section-label\\src\\titles.jsx"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-section-label\\src\\titles.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\psammead-section-label\\src\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\breakpoints"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\spacings"
      },
      {
        "source": "#psammead/gel-foundations/src/typography",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\typography"
      },
      {
        "source": "#psammead/psammead-styles/src/font-styles",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-styles\\src\\font-styles"
      },
      {
        "source": "#app/components/ThemeProvider/palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-social-embed\\src\\Amp\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\psammead-social-embed\\src\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "react-helmet",
        "resolvedPath": "node_modules\\@types\\react\\-helmet"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-social-embed\\src\\Canonical\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\psammead-social-embed\\src\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#app/contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "src\\app\\routes\\utils\\pageTypes"
      },
      {
        "source": "./useScript",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-social-embed\\src\\Canonical\\useScript.js"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-social-embed\\src\\Canonical\\useScript.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\psammead-social-embed\\src\\Canonical\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-social-embed\\src\\CaptionWrapper\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\psammead-social-embed\\src\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/psammead-styles/src/font-styles",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-styles\\src\\font-styles"
      },
      {
        "source": "#psammead/gel-foundations/src/typography",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\typography"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\spacings"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "src\\app\\routes\\utils\\pageTypes"
      },
      {
        "source": "../../../../../lib/styles.const",
        "resolvedPath": "src\\app\\lib\\styles.const\\index.ts"
      },
      {
        "source": "../../../../../components/ThemeProvider/palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-social-embed\\src\\fixtures\\index.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "./instagram.json",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-social-embed\\src\\fixtures\\instagram.json"
      },
      {
        "source": "./twitter.json",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-social-embed\\src\\fixtures\\twitter.json"
      },
      {
        "source": "./youtube.json",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-social-embed\\src\\fixtures\\youtube.json"
      },
      {
        "source": "./facebook.json",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-social-embed\\src\\fixtures\\facebook.json"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-social-embed\\src\\index.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext"
      },
      {
        "source": "../../../../components/EmbedConsentBanner",
        "resolvedPath": "src\\app\\components\\EmbedConsentBanner\\index.tsx"
      },
      {
        "source": "./SkipLinkWrapper",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-social-embed\\src\\SkipLinkWrapper\\index.jsx"
      },
      {
        "source": "./CaptionWrapper",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-social-embed\\src\\CaptionWrapper\\index.jsx"
      },
      {
        "source": "./Notice",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-social-embed\\src\\Notice\\index.jsx"
      },
      {
        "source": "./Canonical",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-social-embed\\src\\Canonical\\index.jsx"
      },
      {
        "source": "./Amp",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-social-embed\\src\\Amp\\index.jsx"
      },
      {
        "source": "./utilities",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-social-embed\\src\\utilities\\index.js"
      },
      {
        "source": "../../../../routes/utils/pageTypes",
        "resolvedPath": "src\\app\\routes\\utils\\pageTypes.ts"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-social-embed\\src\\Notice\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\psammead-social-embed\\src\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/psammead-styles/src/font-styles",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-styles\\src\\font-styles"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\spacings"
      },
      {
        "source": "#psammead/gel-foundations/src/typography",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\typography"
      },
      {
        "source": "../utilities",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-social-embed\\src\\utilities\\index.js"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-social-embed\\src\\SkipLinkWrapper\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\psammead-social-embed\\src\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/psammead-styles/src/font-styles",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-styles\\src\\font-styles"
      },
      {
        "source": "#psammead/gel-foundations/src/typography",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\typography"
      },
      {
        "source": "../utilities",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-social-embed\\src\\utilities\\index.js"
      },
      {
        "source": "../../../../../lib/styles.const",
        "resolvedPath": "src\\app\\lib\\styles.const\\index.ts"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-social-embed\\src\\utilities\\index.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\psammead-social-embed\\src\\index.jsx",
      "src\\app\\legacy\\psammead\\psammead-social-embed\\src\\Notice\\index.jsx",
      "src\\app\\legacy\\psammead\\psammead-social-embed\\src\\SkipLinkWrapper\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "src\\app\\routes\\utils\\pageTypes"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-story-promo\\src\\ImageStyles.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\psammead-story-promo\\src\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\spacings"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\breakpoints"
      },
      {
        "source": "#psammead/psammead-styles/src/detection",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-styles\\src\\detection"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-story-promo\\src\\index.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\spacings"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\breakpoints"
      },
      {
        "source": "#psammead/gel-foundations/src/typography",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\typography"
      },
      {
        "source": "#psammead/psammead-styles/src/font-styles",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-styles\\src\\font-styles"
      },
      {
        "source": "#psammead/psammead-styles/src/detection",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-styles\\src\\detection"
      },
      {
        "source": "./ImageStyles",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-story-promo\\src\\ImageStyles.jsx"
      },
      {
        "source": "./TextStyles",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-story-promo\\src\\TextStyles.jsx"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-story-promo\\src\\IndexAlsos\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\psammead-story-promo\\testHelpers\\IndexAlsosContainer.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\spacings"
      },
      {
        "source": "#psammead/gel-foundations/src/typography",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\typography"
      },
      {
        "source": "#psammead/psammead-styles/src/font-styles",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-styles\\src\\font-styles"
      },
      {
        "source": "../../../../../components/VisuallyHiddenText",
        "resolvedPath": "src\\app\\components\\VisuallyHiddenText\\index.tsx"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-story-promo\\src\\TextStyles.jsx": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\psammead-story-promo\\src\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\spacings"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\breakpoints"
      },
      {
        "source": "#psammead/psammead-styles/src/detection",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-styles\\src\\detection"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-story-promo\\testHelpers\\IndexAlsosContainer.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "#psammead/psammead-media-indicator/src",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-media-indicator\\src"
      },
      {
        "source": "../src/IndexAlsos/index",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-story-promo\\src\\IndexAlsos\\index.jsx"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-story-promo\\testHelpers\\relatedItems.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\psammead-story-promo-list\\src\\index.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\spacings"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\breakpoints"
      },
      {
        "source": "../../../../components/ThemeProvider/palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-story-promo-list\\testHelpers\\fixtureData.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\psammead-styles\\src\\detection.js": {
    "incomingDependencies": [
      "src\\app\\components\\MostRead\\Canonical\\Item\\index.styles.ts",
      "src\\app\\components\\MostRead\\Canonical\\Rank\\index.styles.ts"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\psammead-styles\\src\\font-families.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\psammead-styles\\src\\font-styles.js"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\psammead-styles\\src\\font-styles.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "./font-families",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-styles\\src\\font-families.js"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-styles\\src\\global-styles.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-test-helpers\\src\\index.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "@testing-library/react",
        "resolvedPath": "@testing-library/react"
      },
      {
        "source": "ramda/src/clone",
        "resolvedPath": "ramda/src/clone"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-timestamp\\src\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\components\\MostRead\\utilities\\testHelpers.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\spacings"
      },
      {
        "source": "#psammead/gel-foundations/src/typography",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\typography"
      },
      {
        "source": "#psammead/psammead-styles/src/font-styles",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-styles\\src\\font-styles"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-timestamp-container\\src\\helpers\\testHelpers.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\legacy\\psammead\\psammead-timestamp-container\\src\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\components\\MostRead\\Canonical\\LastUpdated\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "#psammead/psammead-timestamp/src",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-timestamp\\src"
      },
      {
        "source": "./utilities",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-timestamp-container\\src\\utilities\\index.js"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-timestamp-container\\src\\utilities\\index.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\psammead\\psammead-timestamp-container\\src\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "moment-timezone",
        "resolvedPath": "moment-timezone"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-topic-tags\\src\\index.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#app/components/ThemeProvider/palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\spacings"
      },
      {
        "source": "#psammead/psammead-styles/src/font-styles",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-styles\\src\\font-styles"
      },
      {
        "source": "#psammead/gel-foundations/src/typography",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\typography"
      }
    ]
  },
  "src\\app\\legacy\\psammead\\psammead-useful-links\\src\\index.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/psammead-styles/src/font-styles",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-styles\\src\\font-styles"
      },
      {
        "source": "#psammead/psammead-styles/src/detection",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-styles\\src\\detection"
      },
      {
        "source": "#psammead/gel-foundations/src/typography",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\typography"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\spacings"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\breakpoints"
      }
    ]
  },
  "src\\app\\lib\\analyticsUtils\\analytics.const.js": {
    "incomingDependencies": [
      "src\\app\\lib\\analyticsUtils\\index.js"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\lib\\analyticsUtils\\getAmpDestination\\index.js": {
    "incomingDependencies": [
      "src\\app\\lib\\analyticsUtils\\index.js"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\lib\\analyticsUtils\\index.js": {
    "incomingDependencies": [
      "src\\app\\components\\ATIAnalytics\\atiUrl\\index.ts",
      "src\\app\\components\\ATIAnalytics\\params\\genericPage\\buildParams.ts",
      "src\\app\\components\\ATIAnalytics\\params\\indexPage\\buildParams.ts",
      "src\\app\\components\\ATIAnalytics\\params\\topicPage\\buildParams.ts",
      "src\\app\\components\\ATIAnalytics\\params\\tvRadioPage\\buildParams.ts",
      "src\\app\\components\\ChartbeatAnalytics\\utils\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "js-cookie",
        "resolvedPath": "js-cookie"
      },
      {
        "source": "uuid",
        "resolvedPath": "uuid"
      },
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "ramda/src/path",
        "resolvedPath": "ramda/src/path"
      },
      {
        "source": "url-parse",
        "resolvedPath": "url-parse"
      },
      {
        "source": "../utilities/onClient",
        "resolvedPath": "src\\app\\lib\\utilities\\onClient\\index.js"
      },
      {
        "source": "../utilities/isOperaProxy",
        "resolvedPath": "src\\app\\lib\\utilities\\isOperaProxy\\index.js"
      },
      {
        "source": "./analytics.const",
        "resolvedPath": "src\\app\\lib\\analyticsUtils\\analytics.const.js"
      },
      {
        "source": "./getAmpDestination",
        "resolvedPath": "src\\app\\lib\\analyticsUtils\\getAmpDestination\\index.js"
      }
    ]
  },
  "src\\app\\lib\\analyticsUtils\\indexPage\\index.js": {
    "incomingDependencies": [
      "src\\app\\components\\ATIAnalytics\\params\\indexPage\\buildParams.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "src\\app\\routes\\utils\\pageTypes"
      }
    ]
  },
  "src\\app\\lib\\analyticsUtils\\sendBeacon\\index.js": {
    "incomingDependencies": [
      "src\\app\\components\\ATIAnalytics\\beacon\\index.ts",
      "src\\app\\components\\ATIAnalytics\\canonical\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../../utilities/onClient",
        "resolvedPath": "src\\app\\lib\\utilities\\onClient\\index.js"
      },
      {
        "source": "../../logger.node",
        "resolvedPath": "src\\app\\lib\\logger.node.js"
      },
      {
        "source": "../../logger.const",
        "resolvedPath": "src\\app\\lib\\logger.const.js"
      },
      {
        "source": "isomorphic-fetch",
        "resolvedPath": "isomorphic-fetch"
      }
    ]
  },
  "src\\app\\lib\\config\\optimizely\\index.js": {
    "incomingDependencies": [
      "src\\app\\hooks\\useClickTrackerHandler\\index.jsx",
      "src\\app\\hooks\\useViewTracker\\index.jsx"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\lib\\config\\services\\afaanoromoo.ts": {
    "incomingDependencies": [
      "src\\server\\utilities\\serviceConfigs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../components/ThemeProvider/fontScripts/latin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts"
      },
      {
        "source": "#psammead/moment-timezone-include/tz/Africa/Addis_Ababa",
        "resolvedPath": "src\\app\\legacy\\psammead\\moment-timezone-include\\tz\\Africa\\Addis_Ababa"
      },
      {
        "source": "#psammead/psammead-locales/moment/om",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-locales\\moment\\om"
      },
      {
        "source": "../../../contexts/utils/withContext",
        "resolvedPath": "src\\app\\contexts\\utils\\withContext\\index.jsx"
      },
      {
        "source": "../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      }
    ]
  },
  "src\\app\\lib\\config\\services\\afrique.ts": {
    "incomingDependencies": [
      "src\\server\\utilities\\serviceConfigs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../components/ThemeProvider/fontScripts/latinWithDiacritics",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latinWithDiacritics.ts"
      },
      {
        "source": "#psammead/moment-timezone-include/tz/GMT",
        "resolvedPath": "src\\app\\legacy\\psammead\\moment-timezone-include\\tz\\GMT"
      },
      {
        "source": "../../../contexts/utils/withContext",
        "resolvedPath": "src\\app\\contexts\\utils\\withContext\\index.jsx"
      },
      {
        "source": "moment/locale/fr",
        "resolvedPath": "moment/locale/fr"
      },
      {
        "source": "../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      }
    ]
  },
  "src\\app\\lib\\config\\services\\amharic.ts": {
    "incomingDependencies": [
      "src\\server\\utilities\\serviceConfigs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../components/ThemeProvider/fontScripts/noAscOrDesc",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\noAscOrDesc.ts"
      },
      {
        "source": "#psammead/moment-timezone-include/tz/Africa/Addis_Ababa",
        "resolvedPath": "src\\app\\legacy\\psammead\\moment-timezone-include\\tz\\Africa\\Addis_Ababa"
      },
      {
        "source": "#psammead/psammead-locales/moment/am",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-locales\\moment\\am"
      },
      {
        "source": "../../../contexts/utils/withContext",
        "resolvedPath": "src\\app\\contexts\\utils\\withContext\\index.jsx"
      },
      {
        "source": "../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      }
    ]
  },
  "src\\app\\lib\\config\\services\\arabic.ts": {
    "incomingDependencies": [
      "src\\server\\utilities\\serviceConfigs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../components/ThemeProvider/fontScripts/arabic",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\arabic.ts"
      },
      {
        "source": "#psammead/psammead-locales/moment/ar",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-locales\\moment\\ar"
      },
      {
        "source": "#psammead/moment-timezone-include/tz/GMT",
        "resolvedPath": "src\\app\\legacy\\psammead\\moment-timezone-include\\tz\\GMT"
      },
      {
        "source": "../../../contexts/utils/withContext",
        "resolvedPath": "src\\app\\contexts\\utils\\withContext\\index.jsx"
      },
      {
        "source": "../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      }
    ]
  },
  "src\\app\\lib\\config\\services\\archive.ts": {
    "incomingDependencies": [
      "src\\server\\utilities\\serviceConfigs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../components/ThemeProvider/fontScripts/latin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts"
      },
      {
        "source": "#psammead/psammead-locales/moment/en-gb",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-locales\\moment\\en-gb"
      },
      {
        "source": "#psammead/moment-timezone-include/tz/Europe/London",
        "resolvedPath": "src\\app\\legacy\\psammead\\moment-timezone-include\\tz\\Europe\\London"
      },
      {
        "source": "../../../contexts/utils/withContext",
        "resolvedPath": "src\\app\\contexts\\utils\\withContext\\index.jsx"
      },
      {
        "source": "../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      }
    ]
  },
  "src\\app\\lib\\config\\services\\azeri.ts": {
    "incomingDependencies": [
      "src\\server\\utilities\\serviceConfigs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "#psammead/moment-timezone-include/tz/Asia/Baku",
        "resolvedPath": "src\\app\\legacy\\psammead\\moment-timezone-include\\tz\\Asia\\Baku"
      },
      {
        "source": "#psammead/psammead-locales/moment/az",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-locales\\moment\\az"
      },
      {
        "source": "../../../components/ThemeProvider/fontScripts/latinWithDiacritics",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latinWithDiacritics.ts"
      },
      {
        "source": "../../../contexts/utils/withContext",
        "resolvedPath": "src\\app\\contexts\\utils\\withContext\\index.jsx"
      },
      {
        "source": "../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      }
    ]
  },
  "src\\app\\lib\\config\\services\\bengali.ts": {
    "incomingDependencies": [
      "src\\server\\utilities\\serviceConfigs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../components/ThemeProvider/fontScripts/bengali",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\bengali.ts"
      },
      {
        "source": "#psammead/moment-timezone-include/tz/Asia/Dhaka",
        "resolvedPath": "src\\app\\legacy\\psammead\\moment-timezone-include\\tz\\Asia\\Dhaka"
      },
      {
        "source": "#psammead/psammead-locales/moment/bn",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-locales\\moment\\bn"
      },
      {
        "source": "../../../contexts/utils/withContext",
        "resolvedPath": "src\\app\\contexts\\utils\\withContext\\index.jsx"
      },
      {
        "source": "../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      }
    ]
  },
  "src\\app\\lib\\config\\services\\burmese.ts": {
    "incomingDependencies": [
      "src\\server\\utilities\\serviceConfigs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../components/ThemeProvider/fontScripts/burmese",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\burmese.ts"
      },
      {
        "source": "#psammead/moment-timezone-include/tz/GMT",
        "resolvedPath": "src\\app\\legacy\\psammead\\moment-timezone-include\\tz\\GMT"
      },
      {
        "source": "../../../contexts/utils/withContext",
        "resolvedPath": "src\\app\\contexts\\utils\\withContext\\index.jsx"
      },
      {
        "source": "moment/locale/my",
        "resolvedPath": "moment/locale/my"
      },
      {
        "source": "../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      }
    ]
  },
  "src\\app\\lib\\config\\services\\cymrufyw.ts": {
    "incomingDependencies": [
      "src\\server\\utilities\\serviceConfigs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "#psammead/moment-timezone-include/tz/Europe/London",
        "resolvedPath": "src\\app\\legacy\\psammead\\moment-timezone-include\\tz\\Europe\\London"
      },
      {
        "source": "../../../components/ThemeProvider/fontScripts/latinWithDiacritics",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latinWithDiacritics.ts"
      },
      {
        "source": "../../../contexts/utils/withContext",
        "resolvedPath": "src\\app\\contexts\\utils\\withContext\\index.jsx"
      },
      {
        "source": "moment/locale/cy",
        "resolvedPath": "moment/locale/cy"
      },
      {
        "source": "../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      }
    ]
  },
  "src\\app\\lib\\config\\services\\gahuza.ts": {
    "incomingDependencies": [
      "src\\server\\utilities\\serviceConfigs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../components/ThemeProvider/fontScripts/latin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts"
      },
      {
        "source": "#psammead/moment-timezone-include/tz/GMT",
        "resolvedPath": "src\\app\\legacy\\psammead\\moment-timezone-include\\tz\\GMT"
      },
      {
        "source": "#psammead/psammead-locales/moment/rw",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-locales\\moment\\rw"
      },
      {
        "source": "../../../contexts/utils/withContext",
        "resolvedPath": "src\\app\\contexts\\utils\\withContext\\index.jsx"
      },
      {
        "source": "../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      }
    ]
  },
  "src\\app\\lib\\config\\services\\gujarati.ts": {
    "incomingDependencies": [
      "src\\server\\utilities\\serviceConfigs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../components/ThemeProvider/fontScripts/devanagari",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\devanagari.ts"
      },
      {
        "source": "#psammead/moment-timezone-include/tz/Asia/Kolkata",
        "resolvedPath": "src\\app\\legacy\\psammead\\moment-timezone-include\\tz\\Asia\\Kolkata"
      },
      {
        "source": "#psammead/psammead-locales/moment/gu",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-locales\\moment\\gu"
      },
      {
        "source": "../../../contexts/utils/withContext",
        "resolvedPath": "src\\app\\contexts\\utils\\withContext\\index.jsx"
      },
      {
        "source": "../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      }
    ]
  },
  "src\\app\\lib\\config\\services\\hausa.ts": {
    "incomingDependencies": [
      "src\\server\\utilities\\serviceConfigs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../components/ThemeProvider/fontScripts/latin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts"
      },
      {
        "source": "#psammead/moment-timezone-include/tz/GMT",
        "resolvedPath": "src\\app\\legacy\\psammead\\moment-timezone-include\\tz\\GMT"
      },
      {
        "source": "#psammead/psammead-locales/moment/ha",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-locales\\moment\\ha"
      },
      {
        "source": "../../../contexts/utils/withContext",
        "resolvedPath": "src\\app\\contexts\\utils\\withContext\\index.jsx"
      },
      {
        "source": "../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      }
    ]
  },
  "src\\app\\lib\\config\\services\\hindi.ts": {
    "incomingDependencies": [
      "src\\server\\utilities\\serviceConfigs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../components/ThemeProvider/fontScripts/devanagari",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\devanagari.ts"
      },
      {
        "source": "#psammead/moment-timezone-include/tz/Asia/Kolkata",
        "resolvedPath": "src\\app\\legacy\\psammead\\moment-timezone-include\\tz\\Asia\\Kolkata"
      },
      {
        "source": "#psammead/psammead-locales/moment/hi",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-locales\\moment\\hi"
      },
      {
        "source": "../../../contexts/utils/withContext",
        "resolvedPath": "src\\app\\contexts\\utils\\withContext\\index.jsx"
      },
      {
        "source": "../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      }
    ]
  },
  "src\\app\\lib\\config\\services\\igbo.ts": {
    "incomingDependencies": [
      "src\\server\\utilities\\serviceConfigs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../components/ThemeProvider/fontScripts/latin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts"
      },
      {
        "source": "#psammead/psammead-locales/moment/ig",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-locales\\moment\\ig"
      },
      {
        "source": "#psammead/moment-timezone-include/tz/Africa/Lagos",
        "resolvedPath": "src\\app\\legacy\\psammead\\moment-timezone-include\\tz\\Africa\\Lagos"
      },
      {
        "source": "../../../contexts/utils/withContext",
        "resolvedPath": "src\\app\\contexts\\utils\\withContext\\index.jsx"
      },
      {
        "source": "../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      }
    ]
  },
  "src\\app\\lib\\config\\services\\indonesia.ts": {
    "incomingDependencies": [
      "src\\server\\utilities\\serviceConfigs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../components/ThemeProvider/fontScripts/latin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts"
      },
      {
        "source": "#psammead/moment-timezone-include/tz/Asia/Jakarta",
        "resolvedPath": "src\\app\\legacy\\psammead\\moment-timezone-include\\tz\\Asia\\Jakarta"
      },
      {
        "source": "moment/locale/id",
        "resolvedPath": "moment/locale/id"
      },
      {
        "source": "../../../contexts/utils/withContext",
        "resolvedPath": "src\\app\\contexts\\utils\\withContext\\index.jsx"
      },
      {
        "source": "../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      }
    ]
  },
  "src\\app\\lib\\config\\services\\japanese.ts": {
    "incomingDependencies": [
      "src\\server\\utilities\\serviceConfigs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../components/ThemeProvider/fontScripts/noAscOrDesc",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\noAscOrDesc.ts"
      },
      {
        "source": "#psammead/moment-timezone-include/tz/Asia/Tokyo",
        "resolvedPath": "src\\app\\legacy\\psammead\\moment-timezone-include\\tz\\Asia\\Tokyo"
      },
      {
        "source": "moment/locale/ja",
        "resolvedPath": "moment/locale/ja"
      },
      {
        "source": "../../../contexts/utils/withContext",
        "resolvedPath": "src\\app\\contexts\\utils\\withContext\\index.jsx"
      },
      {
        "source": "../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      }
    ]
  },
  "src\\app\\lib\\config\\services\\korean.ts": {
    "incomingDependencies": [
      "src\\server\\utilities\\serviceConfigs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../components/ThemeProvider/fontScripts/noAscOrDesc",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\noAscOrDesc.ts"
      },
      {
        "source": "#psammead/moment-timezone-include/tz/Asia/Seoul",
        "resolvedPath": "src\\app\\legacy\\psammead\\moment-timezone-include\\tz\\Asia\\Seoul"
      },
      {
        "source": "../../../contexts/utils/withContext",
        "resolvedPath": "src\\app\\contexts\\utils\\withContext\\index.jsx"
      },
      {
        "source": "moment/locale/ko",
        "resolvedPath": "moment/locale/ko"
      },
      {
        "source": "../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      }
    ]
  },
  "src\\app\\lib\\config\\services\\kyrgyz.ts": {
    "incomingDependencies": [
      "src\\server\\utilities\\serviceConfigs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../components/ThemeProvider/fontScripts/cyrillic",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\cyrillic.ts"
      },
      {
        "source": "#psammead/moment-timezone-include/tz/GMT",
        "resolvedPath": "src\\app\\legacy\\psammead\\moment-timezone-include\\tz\\GMT"
      },
      {
        "source": "#psammead/psammead-locales/moment/ky",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-locales\\moment\\ky"
      },
      {
        "source": "../../../contexts/utils/withContext",
        "resolvedPath": "src\\app\\contexts\\utils\\withContext\\index.jsx"
      },
      {
        "source": "../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      }
    ]
  },
  "src\\app\\lib\\config\\services\\loadableConfig.ts": {
    "incomingDependencies": [
      "src\\app\\contexts\\ServiceContext\\index.tsx",
      "src\\app\\routes\\utils\\fetchPageData\\utils\\getRouteProps\\fallbackServiceParam\\index.js",
      "src\\app\\routes\\utils\\regex\\index.js"
    ],
    "outgoingDependencies": [
      {
        "source": "@loadable/component",
        "resolvedPath": "@loadable/component"
      }
    ]
  },
  "src\\app\\lib\\config\\services\\marathi.ts": {
    "incomingDependencies": [
      "src\\server\\utilities\\serviceConfigs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../components/ThemeProvider/fontScripts/devanagari",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\devanagari.ts"
      },
      {
        "source": "#psammead/moment-timezone-include/tz/Asia/Kolkata",
        "resolvedPath": "src\\app\\legacy\\psammead\\moment-timezone-include\\tz\\Asia\\Kolkata"
      },
      {
        "source": "#psammead/psammead-locales/moment/mr",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-locales\\moment\\mr"
      },
      {
        "source": "../../../contexts/utils/withContext",
        "resolvedPath": "src\\app\\contexts\\utils\\withContext\\index.jsx"
      },
      {
        "source": "../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      }
    ]
  },
  "src\\app\\lib\\config\\services\\mundo.ts": {
    "incomingDependencies": [
      "src\\server\\utilities\\serviceConfigs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../components/ThemeProvider/fontScripts/latinWithDiacritics",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latinWithDiacritics.ts"
      },
      {
        "source": "#psammead/moment-timezone-include/tz/GMT",
        "resolvedPath": "src\\app\\legacy\\psammead\\moment-timezone-include\\tz\\GMT"
      },
      {
        "source": "#psammead/psammead-locales/moment/es",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-locales\\moment\\es"
      },
      {
        "source": "../../../contexts/utils/withContext",
        "resolvedPath": "src\\app\\contexts\\utils\\withContext\\index.jsx"
      },
      {
        "source": "../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      }
    ]
  },
  "src\\app\\lib\\config\\services\\naidheachdan.ts": {
    "incomingDependencies": [
      "src\\server\\utilities\\serviceConfigs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../components/ThemeProvider/fontScripts/latinWithDiacritics",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latinWithDiacritics.ts"
      },
      {
        "source": "#psammead/moment-timezone-include/tz/Europe/London",
        "resolvedPath": "src\\app\\legacy\\psammead\\moment-timezone-include\\tz\\Europe\\London"
      },
      {
        "source": "../../../contexts/utils/withContext",
        "resolvedPath": "src\\app\\contexts\\utils\\withContext\\index.jsx"
      },
      {
        "source": "moment/locale/gd",
        "resolvedPath": "moment/locale/gd"
      },
      {
        "source": "../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      }
    ]
  },
  "src\\app\\lib\\config\\services\\nepali.ts": {
    "incomingDependencies": [
      "src\\server\\utilities\\serviceConfigs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../components/ThemeProvider/fontScripts/devanagari",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\devanagari.ts"
      },
      {
        "source": "#psammead/moment-timezone-include/tz/Asia/Kathmandu",
        "resolvedPath": "src\\app\\legacy\\psammead\\moment-timezone-include\\tz\\Asia\\Kathmandu"
      },
      {
        "source": "#psammead/psammead-locales/moment/ne",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-locales\\moment\\ne"
      },
      {
        "source": "../../../contexts/utils/withContext",
        "resolvedPath": "src\\app\\contexts\\utils\\withContext\\index.jsx"
      },
      {
        "source": "../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      }
    ]
  },
  "src\\app\\lib\\config\\services\\news.ts": {
    "incomingDependencies": [
      "src\\server\\utilities\\serviceConfigs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../components/ThemeProvider/fontScripts/latin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts"
      },
      {
        "source": "#psammead/psammead-locales/moment/en-gb",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-locales\\moment\\en-gb"
      },
      {
        "source": "#psammead/moment-timezone-include/tz/Europe/London",
        "resolvedPath": "src\\app\\legacy\\psammead\\moment-timezone-include\\tz\\Europe\\London"
      },
      {
        "source": "../../../contexts/utils/withContext",
        "resolvedPath": "src\\app\\contexts\\utils\\withContext\\index.jsx"
      },
      {
        "source": "../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      }
    ]
  },
  "src\\app\\lib\\config\\services\\newsround.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../../../components/ThemeProvider/fontScripts/latin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts"
      },
      {
        "source": "#psammead/psammead-locales/moment/en-gb",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-locales\\moment\\en-gb"
      },
      {
        "source": "#psammead/moment-timezone-include/tz/Europe/London",
        "resolvedPath": "src\\app\\legacy\\psammead\\moment-timezone-include\\tz\\Europe\\London"
      },
      {
        "source": "../../../contexts/utils/withContext",
        "resolvedPath": "src\\app\\contexts\\utils\\withContext\\index.jsx"
      },
      {
        "source": "../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      },
      {
        "source": "../../../models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global.ts"
      }
    ]
  },
  "src\\app\\lib\\config\\services\\pashto.ts": {
    "incomingDependencies": [
      "src\\server\\utilities\\serviceConfigs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../components/ThemeProvider/fontScripts/arabic",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\arabic.ts"
      },
      {
        "source": "#psammead/psammead-locales/moment/ps",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-locales\\moment\\ps"
      },
      {
        "source": "#psammead/moment-timezone-include/tz/GMT",
        "resolvedPath": "src\\app\\legacy\\psammead\\moment-timezone-include\\tz\\GMT"
      },
      {
        "source": "../../../legacy/psammead/psammead-calendars/src",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-calendars\\src\\index.js"
      },
      {
        "source": "../../../contexts/utils/withContext",
        "resolvedPath": "src\\app\\contexts\\utils\\withContext\\index.jsx"
      },
      {
        "source": "../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      }
    ]
  },
  "src\\app\\lib\\config\\services\\persian.ts": {
    "incomingDependencies": [
      "src\\server\\utilities\\serviceConfigs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../components/ThemeProvider/fontScripts/arabic",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\arabic.ts"
      },
      {
        "source": "moment/locale/fa",
        "resolvedPath": "moment/locale/fa"
      },
      {
        "source": "#psammead/moment-timezone-include/tz/GMT",
        "resolvedPath": "src\\app\\legacy\\psammead\\moment-timezone-include\\tz\\GMT"
      },
      {
        "source": "../../../legacy/psammead/psammead-calendars/src",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-calendars\\src\\index.js"
      },
      {
        "source": "../../../contexts/utils/withContext",
        "resolvedPath": "src\\app\\contexts\\utils\\withContext\\index.jsx"
      },
      {
        "source": "../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      }
    ]
  },
  "src\\app\\lib\\config\\services\\pidgin.ts": {
    "incomingDependencies": [
      "src\\server\\utilities\\serviceConfigs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../components/ThemeProvider/fontScripts/latin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts"
      },
      {
        "source": "#psammead/psammead-locales/moment/pcm",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-locales\\moment\\pcm"
      },
      {
        "source": "#psammead/moment-timezone-include/tz/Africa/Lagos",
        "resolvedPath": "src\\app\\legacy\\psammead\\moment-timezone-include\\tz\\Africa\\Lagos"
      },
      {
        "source": "../../../contexts/utils/withContext",
        "resolvedPath": "src\\app\\contexts\\utils\\withContext\\index.jsx"
      },
      {
        "source": "../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      }
    ]
  },
  "src\\app\\lib\\config\\services\\portuguese.ts": {
    "incomingDependencies": [
      "src\\server\\utilities\\serviceConfigs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../components/ThemeProvider/fontScripts/latinWithDiacritics",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latinWithDiacritics.ts"
      },
      {
        "source": "#psammead/moment-timezone-include/tz/America/Sao_Paulo",
        "resolvedPath": "src\\app\\legacy\\psammead\\moment-timezone-include\\tz\\America\\Sao_Paulo"
      },
      {
        "source": "#psammead/psammead-locales/moment/pt-br",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-locales\\moment\\pt-br"
      },
      {
        "source": "../../../contexts/utils/withContext",
        "resolvedPath": "src\\app\\contexts\\utils\\withContext\\index.jsx"
      },
      {
        "source": "../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      }
    ]
  },
  "src\\app\\lib\\config\\services\\punjabi.ts": {
    "incomingDependencies": [
      "src\\server\\utilities\\serviceConfigs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../components/ThemeProvider/fontScripts/gurmukhi",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\gurmukhi.ts"
      },
      {
        "source": "#psammead/psammead-locales/moment/pa-in",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-locales\\moment\\pa-in"
      },
      {
        "source": "#psammead/moment-timezone-include/tz/Asia/Kolkata",
        "resolvedPath": "src\\app\\legacy\\psammead\\moment-timezone-include\\tz\\Asia\\Kolkata"
      },
      {
        "source": "../../../contexts/utils/withContext",
        "resolvedPath": "src\\app\\contexts\\utils\\withContext\\index.jsx"
      },
      {
        "source": "../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      }
    ]
  },
  "src\\app\\lib\\config\\services\\russian.ts": {
    "incomingDependencies": [
      "src\\app\\lib\\config\\services\\ukrainian.ts",
      "src\\server\\utilities\\serviceConfigs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../components/ThemeProvider/fontScripts/latin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts"
      },
      {
        "source": "#psammead/moment-timezone-include/tz/GMT",
        "resolvedPath": "src\\app\\legacy\\psammead\\moment-timezone-include\\tz\\GMT"
      },
      {
        "source": "#psammead/psammead-locales/moment/ru",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-locales\\moment\\ru"
      },
      {
        "source": "../../../contexts/utils/withContext",
        "resolvedPath": "src\\app\\contexts\\utils\\withContext\\index.jsx"
      },
      {
        "source": "../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      }
    ]
  },
  "src\\app\\lib\\config\\services\\scotland.ts": {
    "incomingDependencies": [
      "src\\server\\utilities\\serviceConfigs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../components/ThemeProvider/fontScripts/latin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts"
      },
      {
        "source": "#psammead/psammead-locales/moment/en-gb",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-locales\\moment\\en-gb"
      },
      {
        "source": "#psammead/moment-timezone-include/tz/Europe/London",
        "resolvedPath": "src\\app\\legacy\\psammead\\moment-timezone-include\\tz\\Europe\\London"
      },
      {
        "source": "../../../contexts/utils/withContext",
        "resolvedPath": "src\\app\\contexts\\utils\\withContext\\index.jsx"
      },
      {
        "source": "../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      }
    ]
  },
  "src\\app\\lib\\config\\services\\serbian.ts": {
    "incomingDependencies": [
      "src\\server\\utilities\\serviceConfigs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../components/ThemeProvider/fontScripts/latinWithDiacritics",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latinWithDiacritics.ts"
      },
      {
        "source": "../../../components/ThemeProvider/fontScripts/cyrillic",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\cyrillic.ts"
      },
      {
        "source": "#psammead/moment-timezone-include/tz/GMT",
        "resolvedPath": "src\\app\\legacy\\psammead\\moment-timezone-include\\tz\\GMT"
      },
      {
        "source": "#psammead/psammead-locales/moment/sr-cyrl",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-locales\\moment\\sr-cyrl"
      },
      {
        "source": "#psammead/psammead-locales/moment/sr",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-locales\\moment\\sr"
      },
      {
        "source": "../../../contexts/utils/withContext",
        "resolvedPath": "src\\app\\contexts\\utils\\withContext\\index.jsx"
      },
      {
        "source": "../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      },
      {
        "source": "../../../models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global.ts"
      }
    ]
  },
  "src\\app\\lib\\config\\services\\sinhala.ts": {
    "incomingDependencies": [
      "src\\server\\utilities\\serviceConfigs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../components/ThemeProvider/fontScripts/sinhalese",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\sinhalese.ts"
      },
      {
        "source": "#psammead/moment-timezone-include/tz/GMT",
        "resolvedPath": "src\\app\\legacy\\psammead\\moment-timezone-include\\tz\\GMT"
      },
      {
        "source": "#psammead/psammead-locales/moment/si",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-locales\\moment\\si"
      },
      {
        "source": "../../../contexts/utils/withContext",
        "resolvedPath": "src\\app\\contexts\\utils\\withContext\\index.jsx"
      },
      {
        "source": "../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      }
    ]
  },
  "src\\app\\lib\\config\\services\\somali.ts": {
    "incomingDependencies": [
      "src\\server\\utilities\\serviceConfigs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../components/ThemeProvider/fontScripts/latin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts"
      },
      {
        "source": "#psammead/moment-timezone-include/tz/Africa/Mogadishu",
        "resolvedPath": "src\\app\\legacy\\psammead\\moment-timezone-include\\tz\\Africa\\Mogadishu"
      },
      {
        "source": "#psammead/psammead-locales/moment/so",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-locales\\moment\\so"
      },
      {
        "source": "../../../contexts/utils/withContext",
        "resolvedPath": "src\\app\\contexts\\utils\\withContext\\index.jsx"
      },
      {
        "source": "../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      }
    ]
  },
  "src\\app\\lib\\config\\services\\sport.ts": {
    "incomingDependencies": [
      "src\\server\\utilities\\serviceConfigs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../components/ThemeProvider/fontScripts/latin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts"
      },
      {
        "source": "#psammead/psammead-locales/moment/en-gb",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-locales\\moment\\en-gb"
      },
      {
        "source": "#psammead/moment-timezone-include/tz/Europe/London",
        "resolvedPath": "src\\app\\legacy\\psammead\\moment-timezone-include\\tz\\Europe\\London"
      },
      {
        "source": "../../../contexts/utils/withContext",
        "resolvedPath": "src\\app\\contexts\\utils\\withContext\\index.jsx"
      },
      {
        "source": "../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      }
    ]
  },
  "src\\app\\lib\\config\\services\\swahili.ts": {
    "incomingDependencies": [
      "src\\server\\utilities\\serviceConfigs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../components/ThemeProvider/fontScripts/latin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts"
      },
      {
        "source": "#psammead/moment-timezone-include/tz/Africa/Nairobi",
        "resolvedPath": "src\\app\\legacy\\psammead\\moment-timezone-include\\tz\\Africa\\Nairobi"
      },
      {
        "source": "#psammead/psammead-locales/moment/sw",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-locales\\moment\\sw"
      },
      {
        "source": "../../../contexts/utils/withContext",
        "resolvedPath": "src\\app\\contexts\\utils\\withContext\\index.jsx"
      },
      {
        "source": "../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      }
    ]
  },
  "src\\app\\lib\\config\\services\\tamil.ts": {
    "incomingDependencies": [
      "src\\server\\utilities\\serviceConfigs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../components/ThemeProvider/fontScripts/tamil",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\tamil.ts"
      },
      {
        "source": "#psammead/moment-timezone-include/tz/GMT",
        "resolvedPath": "src\\app\\legacy\\psammead\\moment-timezone-include\\tz\\GMT"
      },
      {
        "source": "#psammead/psammead-locales/moment/ta",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-locales\\moment\\ta"
      },
      {
        "source": "../../../contexts/utils/withContext",
        "resolvedPath": "src\\app\\contexts\\utils\\withContext\\index.jsx"
      },
      {
        "source": "../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      }
    ]
  },
  "src\\app\\lib\\config\\services\\telugu.ts": {
    "incomingDependencies": [
      "src\\server\\utilities\\serviceConfigs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../components/ThemeProvider/fontScripts/devanagari",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\devanagari.ts"
      },
      {
        "source": "#psammead/moment-timezone-include/tz/Asia/Kolkata",
        "resolvedPath": "src\\app\\legacy\\psammead\\moment-timezone-include\\tz\\Asia\\Kolkata"
      },
      {
        "source": "../../../contexts/utils/withContext",
        "resolvedPath": "src\\app\\contexts\\utils\\withContext\\index.jsx"
      },
      {
        "source": "moment/locale/te",
        "resolvedPath": "moment/locale/te"
      },
      {
        "source": "../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      }
    ]
  },
  "src\\app\\lib\\config\\services\\thai.ts": {
    "incomingDependencies": [
      "src\\server\\utilities\\serviceConfigs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../components/ThemeProvider/fontScripts/thai",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\thai.ts"
      },
      {
        "source": "#psammead/moment-timezone-include/tz/Asia/Bangkok",
        "resolvedPath": "src\\app\\legacy\\psammead\\moment-timezone-include\\tz\\Asia\\Bangkok"
      },
      {
        "source": "#psammead/psammead-locales/moment/th",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-locales\\moment\\th"
      },
      {
        "source": "../../../contexts/utils/withContext",
        "resolvedPath": "src\\app\\contexts\\utils\\withContext\\index.jsx"
      },
      {
        "source": "../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      }
    ]
  },
  "src\\app\\lib\\config\\services\\tigrinya.ts": {
    "incomingDependencies": [
      "src\\server\\utilities\\serviceConfigs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../components/ThemeProvider/fontScripts/noAscOrDesc",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\noAscOrDesc.ts"
      },
      {
        "source": "#psammead/moment-timezone-include/tz/Africa/Addis_Ababa",
        "resolvedPath": "src\\app\\legacy\\psammead\\moment-timezone-include\\tz\\Africa\\Addis_Ababa"
      },
      {
        "source": "#psammead/psammead-locales/moment/ti",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-locales\\moment\\ti"
      },
      {
        "source": "../../../contexts/utils/withContext",
        "resolvedPath": "src\\app\\contexts\\utils\\withContext\\index.jsx"
      },
      {
        "source": "../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      }
    ]
  },
  "src\\app\\lib\\config\\services\\turkce.ts": {
    "incomingDependencies": [
      "src\\server\\utilities\\serviceConfigs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../components/ThemeProvider/fontScripts/latinWithDiacritics",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latinWithDiacritics.ts"
      },
      {
        "source": "#psammead/moment-timezone-include/tz/Asia/Istanbul",
        "resolvedPath": "src\\app\\legacy\\psammead\\moment-timezone-include\\tz\\Asia\\Istanbul"
      },
      {
        "source": "../../../contexts/utils/withContext",
        "resolvedPath": "src\\app\\contexts\\utils\\withContext\\index.jsx"
      },
      {
        "source": "moment/locale/tr",
        "resolvedPath": "moment/locale/tr"
      },
      {
        "source": "../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      }
    ]
  },
  "src\\app\\lib\\config\\services\\ukchina.ts": {
    "incomingDependencies": [
      "src\\server\\utilities\\serviceConfigs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../components/ThemeProvider/fontScripts/noAscOrDesc",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\noAscOrDesc.ts"
      },
      {
        "source": "#psammead/moment-timezone-include/tz/GMT",
        "resolvedPath": "src\\app\\legacy\\psammead\\moment-timezone-include\\tz\\GMT"
      },
      {
        "source": "moment/locale/zh-cn",
        "resolvedPath": "moment/locale/zh-cn"
      },
      {
        "source": "../../../contexts/utils/withContext",
        "resolvedPath": "src\\app\\contexts\\utils\\withContext\\index.jsx"
      },
      {
        "source": "../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      },
      {
        "source": "../../../models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global.ts"
      }
    ]
  },
  "src\\app\\lib\\config\\services\\ukrainian.ts": {
    "incomingDependencies": [
      "src\\server\\utilities\\serviceConfigs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../components/ThemeProvider/fontScripts/cyrillic",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\cyrillic.ts"
      },
      {
        "source": "#psammead/moment-timezone-include/tz/GMT",
        "resolvedPath": "src\\app\\legacy\\psammead\\moment-timezone-include\\tz\\GMT"
      },
      {
        "source": "#psammead/psammead-locales/moment/uk",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-locales\\moment\\uk"
      },
      {
        "source": "../../../contexts/utils/withContext",
        "resolvedPath": "src\\app\\contexts\\utils\\withContext\\index.jsx"
      },
      {
        "source": "./russian",
        "resolvedPath": "src\\app\\lib\\config\\services\\russian.ts"
      },
      {
        "source": "../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      },
      {
        "source": "../../../models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global.ts"
      }
    ]
  },
  "src\\app\\lib\\config\\services\\urdu.ts": {
    "incomingDependencies": [
      "src\\server\\utilities\\serviceConfigs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../components/ThemeProvider/fontScripts/arabic",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\arabic.ts"
      },
      {
        "source": "#psammead/moment-timezone-include/tz/Asia/Karachi",
        "resolvedPath": "src\\app\\legacy\\psammead\\moment-timezone-include\\tz\\Asia\\Karachi"
      },
      {
        "source": "#psammead/psammead-locales/moment/ur",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-locales\\moment\\ur"
      },
      {
        "source": "../../../contexts/utils/withContext",
        "resolvedPath": "src\\app\\contexts\\utils\\withContext\\index.jsx"
      },
      {
        "source": "../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      }
    ]
  },
  "src\\app\\lib\\config\\services\\uzbek.ts": {
    "incomingDependencies": [
      "src\\server\\utilities\\serviceConfigs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../components/ThemeProvider/fontScripts/latinWithDiacritics",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latinWithDiacritics.ts"
      },
      {
        "source": "../../../components/ThemeProvider/fontScripts/cyrillic",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\cyrillic.ts"
      },
      {
        "source": "#psammead/moment-timezone-include/tz/GMT",
        "resolvedPath": "src\\app\\legacy\\psammead\\moment-timezone-include\\tz\\GMT"
      },
      {
        "source": "#psammead/psammead-locales/moment/uz",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-locales\\moment\\uz"
      },
      {
        "source": "../../../contexts/utils/withContext",
        "resolvedPath": "src\\app\\contexts\\utils\\withContext\\index.jsx"
      },
      {
        "source": "../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      },
      {
        "source": "../../../models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global.ts"
      }
    ]
  },
  "src\\app\\lib\\config\\services\\vietnamese.ts": {
    "incomingDependencies": [
      "src\\server\\utilities\\serviceConfigs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../components/ThemeProvider/fontScripts/latinWithDiacritics",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latinWithDiacritics.ts"
      },
      {
        "source": "#psammead/moment-timezone-include/tz/Asia/Ho_Chi_Minh",
        "resolvedPath": "src\\app\\legacy\\psammead\\moment-timezone-include\\tz\\Asia\\Ho_Chi_Minh"
      },
      {
        "source": "moment/locale/vi",
        "resolvedPath": "moment/locale/vi"
      },
      {
        "source": "../../../contexts/utils/withContext",
        "resolvedPath": "src\\app\\contexts\\utils\\withContext\\index.jsx"
      },
      {
        "source": "../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      }
    ]
  },
  "src\\app\\lib\\config\\services\\ws.ts": {
    "incomingDependencies": [
      "src\\server\\utilities\\serviceConfigs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../components/ThemeProvider/fontScripts/latin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts"
      },
      {
        "source": "#psammead/psammead-locales/moment/en-gb",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-locales\\moment\\en-gb"
      },
      {
        "source": "#psammead/moment-timezone-include/tz/Europe/London",
        "resolvedPath": "src\\app\\legacy\\psammead\\moment-timezone-include\\tz\\Europe\\London"
      },
      {
        "source": "../../../contexts/utils/withContext",
        "resolvedPath": "src\\app\\contexts\\utils\\withContext\\index.jsx"
      },
      {
        "source": "../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      }
    ]
  },
  "src\\app\\lib\\config\\services\\yoruba.ts": {
    "incomingDependencies": [
      "src\\server\\utilities\\serviceConfigs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../components/ThemeProvider/fontScripts/latin",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\latin.ts"
      },
      {
        "source": "#psammead/psammead-locales/moment/yo",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-locales\\moment\\yo"
      },
      {
        "source": "#psammead/moment-timezone-include/tz/Africa/Lagos",
        "resolvedPath": "src\\app\\legacy\\psammead\\moment-timezone-include\\tz\\Africa\\Lagos"
      },
      {
        "source": "../../../contexts/utils/withContext",
        "resolvedPath": "src\\app\\contexts\\utils\\withContext\\index.jsx"
      },
      {
        "source": "../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      }
    ]
  },
  "src\\app\\lib\\config\\services\\zhongwen.ts": {
    "incomingDependencies": [
      "src\\server\\utilities\\serviceConfigs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../components/ThemeProvider/fontScripts/noAscOrDesc",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\fontScripts\\noAscOrDesc.ts"
      },
      {
        "source": "#psammead/moment-timezone-include/tz/GMT",
        "resolvedPath": "src\\app\\legacy\\psammead\\moment-timezone-include\\tz\\GMT"
      },
      {
        "source": "moment/locale/zh-cn",
        "resolvedPath": "moment/locale/zh-cn"
      },
      {
        "source": "../../../contexts/utils/withContext",
        "resolvedPath": "src\\app\\contexts\\utils\\withContext\\index.jsx"
      },
      {
        "source": "../../../models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      },
      {
        "source": "../../../models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global.ts"
      }
    ]
  },
  "src\\app\\lib\\config\\toggles\\const.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\lib\\config\\toggles\\index.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "./localConfig",
        "resolvedPath": "src\\app\\lib\\config\\toggles\\localConfig.js"
      },
      {
        "source": "./testConfig",
        "resolvedPath": "src\\app\\lib\\config\\toggles\\testConfig.js"
      },
      {
        "source": "./liveConfig",
        "resolvedPath": "src\\app\\lib\\config\\toggles\\liveConfig.js"
      }
    ]
  },
  "src\\app\\lib\\config\\toggles\\liveConfig.js": {
    "incomingDependencies": [
      "src\\app\\lib\\config\\toggles\\index.js"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\lib\\config\\toggles\\localConfig.js": {
    "incomingDependencies": [
      "src\\app\\lib\\config\\toggles\\index.js"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\lib\\config\\toggles\\testConfig.js": {
    "incomingDependencies": [
      "src\\app\\lib\\config\\toggles\\index.js"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\lib\\joinUsTemplate.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\lib\\logger.const.js": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\CpsRecommendations\\ErrorBoundary.tsx",
      "src\\app\\lib\\analyticsUtils\\sendBeacon\\index.js",
      "src\\app\\routes\\article\\getInitialData\\index.ts",
      "src\\app\\routes\\frontPage\\getInitialData\\index.js",
      "src\\app\\routes\\homePage\\getInitialData\\index.ts",
      "src\\app\\routes\\mostRead\\getInitialData\\index.js",
      "src\\app\\routes\\topic\\getInitialData\\index.js",
      "src\\app\\routes\\utils\\fetchDataFromBFF\\index.ts"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\lib\\logger.node.js": {
    "incomingDependencies": [
      "src\\app\\components\\MediaLoader\\index.tsx",
      "src\\app\\legacy\\containers\\CpsRecommendations\\ErrorBoundary.tsx",
      "src\\app\\lib\\analyticsUtils\\sendBeacon\\index.js",
      "src\\app\\routes\\article\\getInitialData\\index.ts",
      "src\\app\\routes\\article\\utils\\getOnwardsData.ts",
      "src\\app\\routes\\frontPage\\getInitialData\\index.js",
      "src\\app\\routes\\homePage\\getInitialData\\index.ts",
      "src\\app\\routes\\mostRead\\getInitialData\\index.js",
      "src\\app\\routes\\topic\\getInitialData\\index.js",
      "src\\app\\routes\\utils\\fetchDataFromBFF\\index.ts",
      "src\\testHelpers\\loggerMock.js"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\lib\\logger.web.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\lib\\noJs.const.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\lib\\regex.const.js": {
    "incomingDependencies": [
      "src\\app\\contexts\\RequestContext\\getMetaUrls\\index.ts"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\lib\\seoUtils\\getItemList\\index.ts": {
    "incomingDependencies": [
      "src\\app\\pages\\HomePage\\HomePage.tsx",
      "src\\app\\pages\\TopicPage\\TopicPage.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../models/types/curationData",
        "resolvedPath": "src\\app\\models\\types\\curationData.ts"
      }
    ]
  },
  "src\\app\\lib\\seoUtils\\getLiveBlogPostingSchema\\fixtures.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\lib\\seoUtils\\getLiveBlogPostingSchema\\index.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "#app/lib/utilities/ichefURL",
        "resolvedPath": "src\\app\\lib\\utilities\\ichefURL"
      },
      {
        "source": "#app/models/types/optimo",
        "resolvedPath": "src\\app\\models\\types\\optimo"
      },
      {
        "source": "../../../../../ws-nextjs-app/pages/[service]/live/[id]/Post/types",
        "resolvedPath": "ws-nextjs-app\\pages\\[service]\\live\\[id]\\Post\\types.ts"
      }
    ]
  },
  "src\\app\\lib\\seoUtils\\testHelpers.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../../models/types/curationData",
        "resolvedPath": "src\\app\\models\\types\\curationData.ts"
      }
    ]
  },
  "src\\app\\lib\\statusCodes.const.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\lib\\styles.const\\index.ts": {
    "incomingDependencies": [
      "src\\app\\components\\Ad\\MPU\\index.tsx",
      "src\\app\\legacy\\components\\SkipLinkWrapper\\index.jsx",
      "src\\app\\legacy\\psammead\\psammead-social-embed\\src\\CaptionWrapper\\index.jsx",
      "src\\app\\legacy\\psammead\\psammead-social-embed\\src\\SkipLinkWrapper\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "../../components/ThemeProvider/mediaQueries",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\mediaQueries.ts"
      },
      {
        "source": "../../components/ThemeProvider/spacings",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\spacings.ts"
      }
    ]
  },
  "src\\app\\lib\\utilities\\blockHandlers\\index.js": {
    "incomingDependencies": [
      "src\\app\\components\\ImageWithCaption\\index.tsx",
      "src\\app\\pages\\MediaArticlePage\\MediaArticlePage.tsx"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\lib\\utilities\\cookieCountries\\index.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\lib\\utilities\\episodeAvailability\\ErrorMessage\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\lib\\utilities\\episodeAvailability\\withMediaError\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\spacings"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\breakpoints"
      },
      {
        "source": "#app/components/MediaLoader/Message",
        "resolvedPath": "src\\app\\components\\MediaLoader\\Message"
      },
      {
        "source": "..",
        "resolvedPath": "src\\app\\lib\\utilities\\episodeAvailability\\index.js"
      },
      {
        "source": "../../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      }
    ]
  },
  "src\\app\\lib\\utilities\\episodeAvailability\\index.js": {
    "incomingDependencies": [
      "src\\app\\lib\\utilities\\episodeAvailability\\ErrorMessage\\index.jsx",
      "src\\app\\lib\\utilities\\episodeAvailability\\withMediaError\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "ramda/src/path",
        "resolvedPath": "ramda/src/path"
      },
      {
        "source": "#lib/logger.node",
        "resolvedPath": "src\\app\\lib\\logger.node"
      },
      {
        "source": "#lib/logger.const",
        "resolvedPath": "src\\app\\lib\\logger.const"
      }
    ]
  },
  "src\\app\\lib\\utilities\\episodeAvailability\\withMediaError\\index.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "..",
        "resolvedPath": "src\\app\\lib\\utilities\\episodeAvailability\\index.js"
      },
      {
        "source": "../ErrorMessage",
        "resolvedPath": "src\\app\\lib\\utilities\\episodeAvailability\\ErrorMessage\\index.jsx"
      }
    ]
  },
  "src\\app\\lib\\utilities\\filterPopularStaleData\\index.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "#lib/logger.node",
        "resolvedPath": "src\\app\\lib\\logger.node"
      },
      {
        "source": "#lib/logger.const",
        "resolvedPath": "src\\app\\lib\\logger.const"
      },
      {
        "source": "./isDataStale",
        "resolvedPath": "src\\app\\lib\\utilities\\filterPopularStaleData\\isDataStale.js"
      },
      {
        "source": "../isLive",
        "resolvedPath": "src\\app\\lib\\utilities\\isLive\\index.js"
      }
    ]
  },
  "src\\app\\lib\\utilities\\filterPopularStaleData\\isDataStale.js": {
    "incomingDependencies": [
      "src\\app\\lib\\utilities\\filterPopularStaleData\\index.js"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\lib\\utilities\\findNClosestIndicies\\index.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\lib\\utilities\\findNthIndex\\index.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "ramda/src/is",
        "resolvedPath": "ramda/src/is"
      }
    ]
  },
  "src\\app\\lib\\utilities\\formatDuration\\index.js": {
    "incomingDependencies": [
      "src\\app\\components\\Curation\\HierarchicalGrid\\index.tsx",
      "src\\app\\pages\\MediaArticlePage\\PagePromoSections\\LatestMediaSection\\LatestMediaIndicator\\index.tsx"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\lib\\utilities\\generatePromoId\\index.ts": {
    "incomingDependencies": [
      "src\\app\\components\\RelatedContentSection\\index.tsx",
      "src\\app\\pages\\ArticlePage\\PagePromoSections\\TopStoriesSection\\index.tsx",
      "src\\app\\pages\\MediaArticlePage\\PagePromoSections\\LatestMediaSection\\index.tsx"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\lib\\utilities\\getBrandedImage\\index.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../getEnvConfig",
        "resolvedPath": "src\\app\\lib\\utilities\\getEnvConfig\\index.ts"
      }
    ]
  },
  "src\\app\\lib\\utilities\\getEnvConfig\\index.ts": {
    "incomingDependencies": [
      "src\\app\\contexts\\RequestContext\\getOriginContext\\index.ts",
      "src\\app\\lib\\utilities\\getBrandedImage\\index.js",
      "src\\app\\lib\\utilities\\getToggles\\index.js",
      "src\\app\\lib\\utilities\\getToggles\\withCache.js",
      "src\\app\\lib\\utilities\\ichefURL\\index.js",
      "src\\app\\lib\\utilities\\isLive\\index.js",
      "src\\app\\lib\\utilities\\isLocal\\index.js",
      "src\\app\\lib\\utilities\\isTest\\index.js"
    ],
    "outgoingDependencies": [
      {
        "source": "#app/models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global"
      },
      {
        "source": "../onClient",
        "resolvedPath": "src\\app\\lib\\utilities\\onClient\\index.js"
      }
    ]
  },
  "src\\app\\lib\\utilities\\getFetchTimeouts\\index.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\lib\\utilities\\getMasterbrand\\index.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      }
    ]
  },
  "src\\app\\lib\\utilities\\getMediaId\\index.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\lib\\utilities\\getStoryPromoInfo\\index.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "../makeRelativeUrlPath",
        "resolvedPath": "src\\app\\lib\\utilities\\makeRelativeUrlPath\\index.js"
      }
    ]
  },
  "src\\app\\lib\\utilities\\getToggles\\index.js": {
    "incomingDependencies": [
      "src\\app\\lib\\utilities\\getToggles\\withCache.js"
    ],
    "outgoingDependencies": [
      {
        "source": "#lib/config/toggles",
        "resolvedPath": "src\\app\\lib\\config\\toggles"
      },
      {
        "source": "#contexts/ToggleContext/utils/constructTogglesEndpoint",
        "resolvedPath": "src\\app\\contexts\\ToggleContext\\utils\\constructTogglesEndpoint"
      },
      {
        "source": "#lib/logger.node",
        "resolvedPath": "src\\app\\lib\\logger.node"
      },
      {
        "source": "#lib/logger.const",
        "resolvedPath": "src\\app\\lib\\logger.const"
      },
      {
        "source": "#contexts/RequestContext/getOriginContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext\\getOriginContext"
      },
      {
        "source": "../getEnvConfig",
        "resolvedPath": "src\\app\\lib\\utilities\\getEnvConfig\\index.ts"
      }
    ]
  },
  "src\\app\\lib\\utilities\\getToggles\\withCache.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "lru-cache",
        "resolvedPath": "lru-cache"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\lib\\utilities\\getToggles\\index.js"
      },
      {
        "source": "../getEnvConfig",
        "resolvedPath": "src\\app\\lib\\utilities\\getEnvConfig\\index.ts"
      }
    ]
  },
  "src\\app\\lib\\utilities\\getUrlHelpers\\getMostReadUrls\\index.js": {
    "incomingDependencies": [
      "src\\app\\lib\\utilities\\getUrlHelpers\\index.js"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\lib\\utilities\\getUrlHelpers\\getRadioSchedulesUrls\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\lib\\utilities\\getUrlHelpers\\index.js"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\lib\\utilities\\getUrlHelpers\\getRecommendationsUrl\\index.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\lib\\utilities\\getUrlHelpers\\getSecondaryColumnUrl\\index.js": {
    "incomingDependencies": [
      "src\\app\\lib\\utilities\\getUrlHelpers\\index.js"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\lib\\utilities\\getUrlHelpers\\index.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "./getMostReadUrls",
        "resolvedPath": "src\\app\\lib\\utilities\\getUrlHelpers\\getMostReadUrls\\index.js"
      },
      {
        "source": "./getRadioSchedulesUrls",
        "resolvedPath": "src\\app\\lib\\utilities\\getUrlHelpers\\getRadioSchedulesUrls\\index.jsx"
      },
      {
        "source": "./getSecondaryColumnUrl",
        "resolvedPath": "src\\app\\lib\\utilities\\getUrlHelpers\\getSecondaryColumnUrl\\index.js"
      }
    ]
  },
  "src\\app\\lib\\utilities\\ichefURL\\index.js": {
    "incomingDependencies": [
      "src\\app\\components\\Byline\\utilities\\bylineExtractor\\index.tsx",
      "src\\app\\components\\FrostedGlassPromo\\withData.tsx",
      "src\\app\\components\\ImageWithCaption\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../getEnvConfig",
        "resolvedPath": "src\\app\\lib\\utilities\\getEnvConfig\\index.ts"
      }
    ]
  },
  "src\\app\\lib\\utilities\\idSanitiser\\index.js": {
    "incomingDependencies": [
      "src\\app\\components\\Embeds\\Uploader\\index.tsx"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\lib\\utilities\\imageSrcHelpers\\locator.js": {
    "incomingDependencies": [
      "src\\app\\components\\FrostedGlassPromo\\withData.tsx",
      "src\\app\\legacy\\containers\\CpsRecommendations\\RecommendationsPromo\\utility\\index.ts"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\lib\\utilities\\imageSrcHelpers\\originCode.js": {
    "incomingDependencies": [
      "src\\app\\components\\FrostedGlassPromo\\withData.tsx",
      "src\\app\\legacy\\containers\\CpsRecommendations\\RecommendationsPromo\\utility\\index.ts"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\lib\\utilities\\isLive\\index.js": {
    "incomingDependencies": [
      "src\\app\\components\\Ad\\Canonical\\index.tsx",
      "src\\app\\lib\\utilities\\filterPopularStaleData\\index.js"
    ],
    "outgoingDependencies": [
      {
        "source": "../getEnvConfig",
        "resolvedPath": "src\\app\\lib\\utilities\\getEnvConfig\\index.ts"
      }
    ]
  },
  "src\\app\\lib\\utilities\\isLocal\\index.js": {
    "incomingDependencies": [
      "src\\app\\components\\MostRead\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../getEnvConfig",
        "resolvedPath": "src\\app\\lib\\utilities\\getEnvConfig\\index.ts"
      }
    ]
  },
  "src\\app\\lib\\utilities\\isOperaProxy\\index.js": {
    "incomingDependencies": [
      "src\\app\\lib\\analyticsUtils\\index.js"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\lib\\utilities\\isTenHoursAgo\\index.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\lib\\utilities\\isTest\\index.js": {
    "incomingDependencies": [
      "src\\app\\routes\\topic\\getInitialData\\index.js"
    ],
    "outgoingDependencies": [
      {
        "source": "../getEnvConfig",
        "resolvedPath": "src\\app\\lib\\utilities\\getEnvConfig\\index.ts"
      }
    ]
  },
  "src\\app\\lib\\utilities\\langHandler\\index.js": {
    "incomingDependencies": [
      "src\\app\\contexts\\ServiceContext\\index.tsx",
      "src\\app\\contexts\\ServiceContext\\__mocks__\\index.tsx"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\lib\\utilities\\logging\\index.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "#lib/logger.const",
        "resolvedPath": "src\\app\\lib\\logger.const"
      }
    ]
  },
  "src\\app\\lib\\utilities\\logging\\pathWithLogging\\index.js": {
    "incomingDependencies": [
      "src\\app\\routes\\onDemandAudio\\getInitialData\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "ramda/src/isNil",
        "resolvedPath": "ramda/src/isNil"
      },
      {
        "source": "ramda/src/path",
        "resolvedPath": "ramda/src/path"
      },
      {
        "source": "ramda/src/curry",
        "resolvedPath": "ramda/src/curry"
      },
      {
        "source": "#lib/logger.node",
        "resolvedPath": "src\\app\\lib\\logger.node"
      }
    ]
  },
  "src\\app\\lib\\utilities\\makeRelativeUrlPath\\index.js": {
    "incomingDependencies": [
      "src\\app\\components\\FrostedGlassPromo\\index.tsx",
      "src\\app\\legacy\\components\\OptimoPromos\\Link\\index.jsx",
      "src\\app\\lib\\utilities\\getStoryPromoInfo\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "url-parse",
        "resolvedPath": "url-parse"
      }
    ]
  },
  "src\\app\\lib\\utilities\\onClient\\index.js": {
    "incomingDependencies": [
      "src\\app\\components\\ChartbeatAnalytics\\utils\\index.ts",
      "src\\app\\lib\\analyticsUtils\\index.js",
      "src\\app\\lib\\analyticsUtils\\sendBeacon\\index.js",
      "src\\app\\lib\\utilities\\getEnvConfig\\index.ts",
      "src\\app\\lib\\utilities\\pageAnchor\\index.js"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\lib\\utilities\\pageAnchor\\index.js": {
    "incomingDependencies": [
      "src\\app\\components\\ImageWithCaption\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../onClient",
        "resolvedPath": "src\\app\\lib\\utilities\\onClient\\index.js"
      }
    ]
  },
  "src\\app\\lib\\utilities\\parseAssetData\\index.ts": {
    "incomingDependencies": [
      "src\\app\\pages\\MediaArticlePage\\MediaArticlePage.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "#app/models/types/optimo",
        "resolvedPath": "src\\app\\models\\types\\optimo"
      }
    ]
  },
  "src\\app\\lib\\utilities\\passport\\index.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      }
    ]
  },
  "src\\app\\lib\\utilities\\serialiseForScript\\index.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\lib\\utilities\\setCookie\\index.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "js-cookie",
        "resolvedPath": "js-cookie"
      }
    ]
  },
  "src\\app\\lib\\utilities\\srcSet\\index.js": {
    "incomingDependencies": [
      "src\\app\\components\\FrostedGlassPromo\\withData.tsx",
      "src\\app\\components\\ImageWithCaption\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "#lib/utilities/ichefURL",
        "resolvedPath": "src\\app\\lib\\utilities\\ichefURL"
      }
    ]
  },
  "src\\app\\lib\\utilities\\srcSet\\placeholder.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\lib\\utilities\\urlParser\\index.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "url-parse",
        "resolvedPath": "url-parse"
      }
    ]
  },
  "src\\app\\lib\\utilities\\variantHandler\\index.js": {
    "incomingDependencies": [
      "src\\app\\contexts\\ServiceContext\\index.tsx",
      "src\\app\\contexts\\ServiceContext\\__mocks__\\index.tsx"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\models\\blocks\\index.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\models\\types\\curationData.ts": {
    "incomingDependencies": [
      "src\\app\\lib\\seoUtils\\getItemList\\index.ts",
      "src\\app\\lib\\seoUtils\\testHelpers.ts",
      "src\\app\\pages\\HomePage\\HomePage.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "#app/components/Embeds/types",
        "resolvedPath": "src\\app\\components\\Embeds\\types"
      },
      {
        "source": "#app/models/types/radioSchedule",
        "resolvedPath": "src\\app\\models\\types\\radioSchedule"
      },
      {
        "source": "../../components/MostRead/types",
        "resolvedPath": "src\\app\\components\\MostRead\\types.ts"
      }
    ]
  },
  "src\\app\\models\\types\\eventTracking.ts": {
    "incomingDependencies": [
      "src\\app\\components\\FrostedGlassPromo\\index.tsx",
      "src\\app\\components\\FrostedGlassPromo\\types.ts",
      "src\\app\\components\\RelatedContentSection\\index.tsx",
      "src\\app\\components\\RelatedContentSection\\RelatedContentItem\\index.tsx",
      "src\\app\\pages\\MediaArticlePage\\PagePromoSections\\LatestMediaSection\\index.tsx",
      "src\\app\\pages\\MediaArticlePage\\PagePromoSections\\LatestMediaSection\\types.ts"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\models\\types\\fetch.ts": {
    "incomingDependencies": [
      "src\\app\\routes\\article\\getInitialData\\index.ts",
      "src\\app\\routes\\homePage\\getInitialData\\index.ts",
      "src\\app\\routes\\utils\\fetchDataFromBFF\\index.ts",
      "src\\app\\routes\\utils\\handleError\\index.ts"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\models\\types\\global.ts": {
    "incomingDependencies": [
      "src\\app\\components\\Ad\\Amp\\AdSlot\\index.tsx",
      "src\\app\\components\\Ad\\Amp\\index.tsx",
      "src\\app\\components\\Ad\\utilities\\getAdsAriaLabel\\index.ts",
      "src\\app\\components\\ATIAnalytics\\params\\index.ts",
      "src\\app\\components\\ATIAnalytics\\types.ts",
      "src\\app\\components\\ChartbeatAnalytics\\types.ts",
      "src\\app\\components\\ChartbeatAnalytics\\utils\\index.ts",
      "src\\app\\components\\EmbedConsentBanner\\index.tsx",
      "src\\app\\components\\MostRead\\Amp\\getRemoteDataScript\\index.ts",
      "src\\app\\components\\MostRead\\Amp\\index.tsx",
      "src\\app\\components\\MostRead\\Canonical\\index.tsx",
      "src\\app\\components\\MostRead\\Canonical\\Item\\index.tsx",
      "src\\app\\components\\MostRead\\Canonical\\LastUpdated\\index.tsx",
      "src\\app\\components\\MostRead\\Canonical\\Rank\\index.styles.ts",
      "src\\app\\components\\MostRead\\Canonical\\Rank\\index.tsx",
      "src\\app\\components\\MostRead\\index.tsx",
      "src\\app\\components\\MostRead\\types.ts",
      "src\\app\\components\\MostRead\\utilities\\testHelpers.tsx",
      "src\\app\\components\\react-testing-library-with-providers.tsx",
      "src\\app\\components\\ThemeProvider\\index.tsx",
      "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx",
      "src\\app\\contexts\\EventTrackingContext\\index.tsx",
      "src\\app\\contexts\\ServiceContext\\index.tsx",
      "src\\app\\contexts\\ServiceContext\\__mocks__\\index.tsx",
      "src\\app\\lib\\config\\services\\newsround.ts",
      "src\\app\\lib\\config\\services\\serbian.ts",
      "src\\app\\lib\\config\\services\\ukchina.ts",
      "src\\app\\lib\\config\\services\\ukrainian.ts",
      "src\\app\\lib\\config\\services\\uzbek.ts",
      "src\\app\\lib\\config\\services\\zhongwen.ts",
      "src\\app\\models\\types\\initialData.ts",
      "src\\app\\models\\types\\optimo.ts",
      "src\\app\\models\\types\\pageDataParams.ts",
      "src\\app\\models\\types\\serviceConfig.ts",
      "src\\app\\models\\types\\storybook.ts",
      "src\\app\\routes\\article\\getInitialData\\index.ts",
      "src\\app\\routes\\homePage\\getInitialData\\page-config.ts",
      "src\\app\\routes\\topic\\getInitialData\\page-config.ts",
      "src\\app\\routes\\utils\\fetchDataFromBFF\\index.ts",
      "src\\server\\utilities\\serviceConfigs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../routes/utils/pageTypes",
        "resolvedPath": "src\\app\\routes\\utils\\pageTypes.ts"
      }
    ]
  },
  "src\\app\\models\\types\\initialData.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "./global",
        "resolvedPath": "src\\app\\models\\types\\global.ts"
      }
    ]
  },
  "src\\app\\models\\types\\media.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\models\\types\\metadata.ts": {
    "incomingDependencies": [
      "src\\app\\components\\Byline\\utilities\\categoryName\\index.ts",
      "src\\app\\components\\ChartbeatAnalytics\\types.ts",
      "src\\app\\components\\ChartbeatAnalytics\\utils\\index.ts",
      "src\\app\\models\\types\\optimo.ts"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\models\\types\\onwardJourney.ts": {
    "incomingDependencies": [
      "src\\app\\legacy\\containers\\CpsRecommendations\\RecommendationsPromo\\fixture.ts",
      "src\\app\\legacy\\containers\\CpsRecommendations\\RecommendationsPromo\\utility\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "./optimo",
        "resolvedPath": "src\\app\\models\\types\\optimo.ts"
      }
    ]
  },
  "src\\app\\models\\types\\optimo.ts": {
    "incomingDependencies": [
      "src\\app\\components\\FrostedGlassPromo\\withData.tsx",
      "src\\app\\components\\RelatedContentSection\\index.tsx",
      "src\\app\\models\\types\\onwardJourney.ts",
      "src\\app\\pages\\MediaArticlePage\\types.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "#app/components/ATIAnalytics/types",
        "resolvedPath": "src\\app\\components\\ATIAnalytics\\types"
      },
      {
        "source": "#app/components/Metadata/types",
        "resolvedPath": "src\\app\\components\\Metadata\\types"
      },
      {
        "source": "#app/components/MostRead/types",
        "resolvedPath": "src\\app\\components\\MostRead\\types"
      },
      {
        "source": "#app/pages/ArticlePage/PagePromoSections/TopStoriesSection/types",
        "resolvedPath": "src\\app\\pages\\ArticlePage\\PagePromoSections\\TopStoriesSection\\types"
      },
      {
        "source": "#app/pages/MediaArticlePage/PagePromoSections/LatestMediaSection/types",
        "resolvedPath": "src\\app\\pages\\MediaArticlePage\\PagePromoSections\\LatestMediaSection\\types"
      },
      {
        "source": "./global",
        "resolvedPath": "src\\app\\models\\types\\global.ts"
      },
      {
        "source": "./metadata",
        "resolvedPath": "src\\app\\models\\types\\metadata.ts"
      }
    ]
  },
  "src\\app\\models\\types\\pageDataParams.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "querystring",
        "resolvedPath": "querystring"
      },
      {
        "source": "./global",
        "resolvedPath": "src\\app\\models\\types\\global.ts"
      }
    ]
  },
  "src\\app\\models\\types\\radioSchedule.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\models\\types\\serviceConfig.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ATIAnalytics\\params\\index.ts",
      "src\\app\\components\\ATIAnalytics\\params\\indexPage\\buildParams.ts",
      "src\\app\\components\\ATIAnalytics\\params\\topicPage\\buildParams.ts",
      "src\\app\\components\\ATIAnalytics\\params\\tvRadioPage\\buildParams.ts",
      "src\\app\\components\\ATIAnalytics\\types.ts",
      "src\\app\\contexts\\ServiceContext\\index.tsx",
      "src\\app\\lib\\config\\services\\afaanoromoo.ts",
      "src\\app\\lib\\config\\services\\afrique.ts",
      "src\\app\\lib\\config\\services\\amharic.ts",
      "src\\app\\lib\\config\\services\\arabic.ts",
      "src\\app\\lib\\config\\services\\archive.ts",
      "src\\app\\lib\\config\\services\\azeri.ts",
      "src\\app\\lib\\config\\services\\bengali.ts",
      "src\\app\\lib\\config\\services\\burmese.ts",
      "src\\app\\lib\\config\\services\\cymrufyw.ts",
      "src\\app\\lib\\config\\services\\gahuza.ts",
      "src\\app\\lib\\config\\services\\gujarati.ts",
      "src\\app\\lib\\config\\services\\hausa.ts",
      "src\\app\\lib\\config\\services\\hindi.ts",
      "src\\app\\lib\\config\\services\\igbo.ts",
      "src\\app\\lib\\config\\services\\indonesia.ts",
      "src\\app\\lib\\config\\services\\japanese.ts",
      "src\\app\\lib\\config\\services\\korean.ts",
      "src\\app\\lib\\config\\services\\kyrgyz.ts",
      "src\\app\\lib\\config\\services\\marathi.ts",
      "src\\app\\lib\\config\\services\\mundo.ts",
      "src\\app\\lib\\config\\services\\naidheachdan.ts",
      "src\\app\\lib\\config\\services\\nepali.ts",
      "src\\app\\lib\\config\\services\\news.ts",
      "src\\app\\lib\\config\\services\\newsround.ts",
      "src\\app\\lib\\config\\services\\pashto.ts",
      "src\\app\\lib\\config\\services\\persian.ts",
      "src\\app\\lib\\config\\services\\pidgin.ts",
      "src\\app\\lib\\config\\services\\portuguese.ts",
      "src\\app\\lib\\config\\services\\punjabi.ts",
      "src\\app\\lib\\config\\services\\russian.ts",
      "src\\app\\lib\\config\\services\\scotland.ts",
      "src\\app\\lib\\config\\services\\serbian.ts",
      "src\\app\\lib\\config\\services\\sinhala.ts",
      "src\\app\\lib\\config\\services\\somali.ts",
      "src\\app\\lib\\config\\services\\sport.ts",
      "src\\app\\lib\\config\\services\\swahili.ts",
      "src\\app\\lib\\config\\services\\tamil.ts",
      "src\\app\\lib\\config\\services\\telugu.ts",
      "src\\app\\lib\\config\\services\\thai.ts",
      "src\\app\\lib\\config\\services\\tigrinya.ts",
      "src\\app\\lib\\config\\services\\turkce.ts",
      "src\\app\\lib\\config\\services\\ukchina.ts",
      "src\\app\\lib\\config\\services\\ukrainian.ts",
      "src\\app\\lib\\config\\services\\urdu.ts",
      "src\\app\\lib\\config\\services\\uzbek.ts",
      "src\\app\\lib\\config\\services\\vietnamese.ts",
      "src\\app\\lib\\config\\services\\ws.ts",
      "src\\app\\lib\\config\\services\\yoruba.ts",
      "src\\app\\lib\\config\\services\\zhongwen.ts",
      "src\\server\\utilities\\serviceConfigs\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "./global",
        "resolvedPath": "src\\app\\models\\types\\global.ts"
      },
      {
        "source": "./translations",
        "resolvedPath": "src\\app\\models\\types\\translations.ts"
      }
    ]
  },
  "src\\app\\models\\types\\storybook.ts": {
    "incomingDependencies": [
      "src\\app\\components\\ThemeProvider\\__mocks__\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "./global",
        "resolvedPath": "src\\app\\models\\types\\global.ts"
      }
    ]
  },
  "src\\app\\models\\types\\theming.ts": {
    "incomingDependencies": [
      "src\\app\\components\\Heading\\index.tsx",
      "src\\app\\components\\InlineLink\\index.tsx",
      "src\\app\\components\\MostRead\\Canonical\\index.tsx",
      "src\\app\\components\\MostRead\\Canonical\\LastUpdated\\index.tsx",
      "src\\app\\components\\MostRead\\utilities\\testHelpers.tsx",
      "src\\app\\components\\Paragraph\\index.tsx",
      "src\\app\\components\\Text\\index.tsx",
      "src\\app\\components\\ThemeProvider\\chameleonLogos\\index.tsx",
      "src\\app\\components\\ThemeProvider\\fontSizes.ts",
      "src\\app\\components\\ThemeProvider\\fontVariants\\index.tsx",
      "src\\app\\components\\ThemeProvider\\gridWidths.ts",
      "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\models\\types\\translations.ts": {
    "incomingDependencies": [
      "src\\app\\components\\EmbedConsentBanner\\ConsentBanner.tsx",
      "src\\app\\models\\types\\serviceConfig.ts"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\pages\\ArticlePage\\ArticlePage.styles.ts": {
    "incomingDependencies": [
      "src\\app\\pages\\ArticlePage\\ArticlePage.tsx",
      "src\\app\\pages\\ArticlePage\\SecondaryColumn.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "../../utilities/pixelsToRem",
        "resolvedPath": "src\\app\\utilities\\pixelsToRem\\index.ts"
      }
    ]
  },
  "src\\app\\pages\\ArticlePage\\ArticlePage.tsx": {
    "incomingDependencies": [
      "src\\app\\pages\\ArticlePage\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "#hooks/useToggle",
        "resolvedPath": "src\\app\\hooks\\useToggle"
      },
      {
        "source": "#app/models/blocks",
        "resolvedPath": "src\\app\\models\\blocks"
      },
      {
        "source": "#containers/ArticleMetadata",
        "resolvedPath": "src\\app\\legacy\\containers\\ArticleMetadata"
      },
      {
        "source": "#contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext"
      },
      {
        "source": "#containers/Headings",
        "resolvedPath": "src\\app\\legacy\\containers\\Headings"
      },
      {
        "source": "#containers/VisuallyHiddenHeadline",
        "resolvedPath": "src\\app\\legacy\\containers\\VisuallyHiddenHeadline"
      },
      {
        "source": "#containers/Gist",
        "resolvedPath": "src\\app\\legacy\\containers\\Gist"
      },
      {
        "source": "#containers/Text",
        "resolvedPath": "src\\app\\legacy\\containers\\Text"
      },
      {
        "source": "#containers/Blocks",
        "resolvedPath": "src\\app\\legacy\\containers\\Blocks"
      },
      {
        "source": "#containers/ArticleTimestamp",
        "resolvedPath": "src\\app\\legacy\\containers\\ArticleTimestamp"
      },
      {
        "source": "#containers/ComscoreAnalytics",
        "resolvedPath": "src\\app\\legacy\\containers\\ComscoreAnalytics"
      },
      {
        "source": "#containers/SocialEmbed",
        "resolvedPath": "src\\app\\legacy\\containers\\SocialEmbed"
      },
      {
        "source": "#app/components/MediaLoader",
        "resolvedPath": "src\\app\\components\\MediaLoader"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "src\\app\\routes\\utils\\pageTypes"
      },
      {
        "source": "#lib/utilities/parseAssetData",
        "resolvedPath": "src\\app\\lib\\utilities\\parseAssetData"
      },
      {
        "source": "#lib/utilities/blockHandlers",
        "resolvedPath": "src\\app\\lib\\utilities\\blockHandlers"
      },
      {
        "source": "#containers/RelatedTopics",
        "resolvedPath": "src\\app\\legacy\\containers\\RelatedTopics"
      },
      {
        "source": "#containers/NielsenAnalytics",
        "resolvedPath": "src\\app\\legacy\\containers\\NielsenAnalytics"
      },
      {
        "source": "#containers/CpsRecommendations",
        "resolvedPath": "src\\app\\legacy\\containers\\CpsRecommendations"
      },
      {
        "source": "#containers/PodcastPromo/Inline",
        "resolvedPath": "src\\app\\legacy\\containers\\PodcastPromo\\Inline"
      },
      {
        "source": "#app/models/types/optimo",
        "resolvedPath": "src\\app\\models\\types\\optimo"
      },
      {
        "source": "#components/ScrollablePromo",
        "resolvedPath": "src\\app\\legacy\\components\\ScrollablePromo"
      },
      {
        "source": "../../components/ImageWithCaption",
        "resolvedPath": "src\\app\\components\\ImageWithCaption\\index.tsx"
      },
      {
        "source": "../../components/Ad",
        "resolvedPath": "src\\app\\components\\Ad\\index.tsx"
      },
      {
        "source": "../../components/Embeds/EmbedImages",
        "resolvedPath": "src\\app\\components\\Embeds\\EmbedImages\\index.tsx"
      },
      {
        "source": "../../components/Embeds/EmbedHtml",
        "resolvedPath": "src\\app\\components\\Embeds\\EmbedHtml\\index.tsx"
      },
      {
        "source": "../../components/MostRead",
        "resolvedPath": "src\\app\\components\\MostRead\\index.tsx"
      },
      {
        "source": "../../components/ATIAnalytics",
        "resolvedPath": "src\\app\\components\\ATIAnalytics\\index.tsx"
      },
      {
        "source": "../../components/ChartbeatAnalytics",
        "resolvedPath": "src\\app\\components\\ChartbeatAnalytics\\index.tsx"
      },
      {
        "source": "../../components/LinkedData",
        "resolvedPath": "src\\app\\components\\LinkedData\\index.tsx"
      },
      {
        "source": "../../components/Byline",
        "resolvedPath": "src\\app\\components\\Byline\\index.tsx"
      },
      {
        "source": "../../components/Embeds/OEmbed",
        "resolvedPath": "src\\app\\components\\Embeds\\OEmbed\\index.tsx"
      },
      {
        "source": "../../components/Embeds/UnsupportedEmbed",
        "resolvedPath": "src\\app\\components\\Embeds\\UnsupportedEmbed\\index.tsx"
      },
      {
        "source": "../../components/Embeds/Uploader",
        "resolvedPath": "src\\app\\components\\Embeds\\Uploader\\index.tsx"
      },
      {
        "source": "../../components/Byline/utilities",
        "resolvedPath": "src\\app\\components\\Byline\\utilities\\index.ts"
      },
      {
        "source": "../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../../components/RelatedContentSection",
        "resolvedPath": "src\\app\\components\\RelatedContentSection\\index.tsx"
      },
      {
        "source": "../../components/Disclaimer",
        "resolvedPath": "src\\app\\components\\Disclaimer\\index.tsx"
      },
      {
        "source": "./SecondaryColumn",
        "resolvedPath": "src\\app\\pages\\ArticlePage\\SecondaryColumn.tsx"
      },
      {
        "source": "./ArticlePage.styles",
        "resolvedPath": "src\\app\\pages\\ArticlePage\\ArticlePage.styles.ts"
      },
      {
        "source": "./types",
        "resolvedPath": "src\\app\\pages\\ArticlePage\\types.ts"
      }
    ]
  },
  "src\\app\\pages\\ArticlePage\\fixtureData.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "#app/models/types/optimo",
        "resolvedPath": "src\\app\\models\\types\\optimo"
      },
      {
        "source": "#models/blocks",
        "resolvedPath": "src\\app\\models\\blocks"
      }
    ]
  },
  "src\\app\\pages\\ArticlePage\\index.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "./ArticlePage",
        "resolvedPath": "src\\app\\pages\\ArticlePage\\ArticlePage.tsx"
      },
      {
        "source": "../utils/applyBasicPageHandlers",
        "resolvedPath": "src\\app\\pages\\utils\\applyBasicPageHandlers.js"
      }
    ]
  },
  "src\\app\\pages\\ArticlePage\\PagePromoSections\\constants.ts": {
    "incomingDependencies": [
      "src\\app\\pages\\ArticlePage\\PagePromoSections\\TopStoriesSection\\index.styles.ts",
      "src\\app\\pages\\ArticlePage\\PagePromoSections\\TopStoriesSection\\TopStoriesItem\\index.styles.ts"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\pages\\ArticlePage\\PagePromoSections\\TopStoriesSection\\fixture\\index.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../types",
        "resolvedPath": "src\\app\\pages\\ArticlePage\\PagePromoSections\\TopStoriesSection\\types.ts"
      }
    ]
  },
  "src\\app\\pages\\ArticlePage\\PagePromoSections\\TopStoriesSection\\index.styles.ts": {
    "incomingDependencies": [
      "src\\app\\pages\\ArticlePage\\PagePromoSections\\TopStoriesSection\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "../constants",
        "resolvedPath": "src\\app\\pages\\ArticlePage\\PagePromoSections\\constants.ts"
      }
    ]
  },
  "src\\app\\pages\\ArticlePage\\PagePromoSections\\TopStoriesSection\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\pages\\ArticlePage\\SecondaryColumn.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "#hooks/useViewTracker",
        "resolvedPath": "src\\app\\hooks\\useViewTracker"
      },
      {
        "source": "#app/models/types/eventTracking",
        "resolvedPath": "src\\app\\models\\types\\eventTracking"
      },
      {
        "source": "#psammead/psammead-section-label/src",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-section-label\\src"
      },
      {
        "source": "#components/OptimoPromos/PromoItem/index.styles",
        "resolvedPath": "src\\app\\legacy\\components\\OptimoPromos\\PromoItem\\index.styles"
      },
      {
        "source": "#components/OptimoPromos/PromoList",
        "resolvedPath": "src\\app\\legacy\\components\\OptimoPromos\\PromoList"
      },
      {
        "source": "../../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\pages\\ArticlePage\\PagePromoSections\\TopStoriesSection\\index.styles.ts"
      },
      {
        "source": "./TopStoriesItem",
        "resolvedPath": "src\\app\\pages\\ArticlePage\\PagePromoSections\\TopStoriesSection\\TopStoriesItem\\index.tsx"
      },
      {
        "source": "../../../../lib/utilities/generatePromoId",
        "resolvedPath": "src\\app\\lib\\utilities\\generatePromoId\\index.ts"
      },
      {
        "source": "./types",
        "resolvedPath": "src\\app\\pages\\ArticlePage\\PagePromoSections\\TopStoriesSection\\types.ts"
      }
    ]
  },
  "src\\app\\pages\\ArticlePage\\PagePromoSections\\TopStoriesSection\\TopStoriesItem\\index.styles.ts": {
    "incomingDependencies": [
      "src\\app\\pages\\ArticlePage\\PagePromoSections\\TopStoriesSection\\TopStoriesItem\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "../../constants",
        "resolvedPath": "src\\app\\pages\\ArticlePage\\PagePromoSections\\constants.ts"
      }
    ]
  },
  "src\\app\\pages\\ArticlePage\\PagePromoSections\\TopStoriesSection\\TopStoriesItem\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\pages\\ArticlePage\\PagePromoSections\\TopStoriesSection\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "#lib/utilities/getStoryPromoInfo",
        "resolvedPath": "src\\app\\lib\\utilities\\getStoryPromoInfo"
      },
      {
        "source": "#components/OptimoPromos",
        "resolvedPath": "src\\app\\legacy\\components\\OptimoPromos"
      },
      {
        "source": "#app/models/types/eventTracking",
        "resolvedPath": "src\\app\\models\\types\\eventTracking"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\pages\\ArticlePage\\PagePromoSections\\TopStoriesSection\\TopStoriesItem\\index.styles.ts"
      },
      {
        "source": "../types",
        "resolvedPath": "src\\app\\pages\\ArticlePage\\PagePromoSections\\TopStoriesSection\\types.ts"
      }
    ]
  },
  "src\\app\\pages\\ArticlePage\\PagePromoSections\\TopStoriesSection\\types.ts": {
    "incomingDependencies": [
      "src\\app\\pages\\ArticlePage\\PagePromoSections\\TopStoriesSection\\fixture\\index.ts",
      "src\\app\\pages\\ArticlePage\\PagePromoSections\\TopStoriesSection\\index.tsx",
      "src\\app\\pages\\ArticlePage\\PagePromoSections\\TopStoriesSection\\TopStoriesItem\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "#app/models/types/metadata",
        "resolvedPath": "src\\app\\models\\types\\metadata"
      },
      {
        "source": "#app/models/types/optimo",
        "resolvedPath": "src\\app\\models\\types\\optimo"
      }
    ]
  },
  "src\\app\\pages\\ArticlePage\\SecondaryColumn.tsx": {
    "incomingDependencies": [
      "src\\app\\pages\\ArticlePage\\ArticlePage.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "#containers/CpsFeaturesAnalysis",
        "resolvedPath": "src\\app\\legacy\\containers\\CpsFeaturesAnalysis"
      },
      {
        "source": "#app/models/types/optimo",
        "resolvedPath": "src\\app\\models\\types\\optimo"
      },
      {
        "source": "./PagePromoSections/TopStoriesSection",
        "resolvedPath": "src\\app\\pages\\ArticlePage\\PagePromoSections\\TopStoriesSection\\index.tsx"
      },
      {
        "source": "./ArticlePage.styles",
        "resolvedPath": "src\\app\\pages\\ArticlePage\\ArticlePage.styles.ts"
      }
    ]
  },
  "src\\app\\pages\\ArticlePage\\types.ts": {
    "incomingDependencies": [
      "src\\app\\pages\\ArticlePage\\ArticlePage.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "#app/models/types/optimo",
        "resolvedPath": "src\\app\\models\\types\\optimo"
      }
    ]
  },
  "src\\app\\pages\\ErrorPage\\ErrorPage.jsx": {
    "incomingDependencies": [
      "src\\app\\pages\\ErrorPage\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "react-helmet",
        "resolvedPath": "node_modules\\@types\\react\\-helmet"
      },
      {
        "source": "#components/ErrorMain",
        "resolvedPath": "src\\app\\legacy\\components\\ErrorMain"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      }
    ]
  },
  "src\\app\\pages\\ErrorPage\\index.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "ramda/src/pipe",
        "resolvedPath": "ramda/src/pipe"
      },
      {
        "source": "#containers/PageHandlers/withContexts",
        "resolvedPath": "src\\app\\legacy\\containers\\PageHandlers\\withContexts"
      },
      {
        "source": "#containers/PageHandlers/withPageWrapper",
        "resolvedPath": "src\\app\\legacy\\containers\\PageHandlers\\withPageWrapper"
      },
      {
        "source": "./ErrorPage",
        "resolvedPath": "src\\app\\pages\\ErrorPage\\ErrorPage.jsx"
      }
    ]
  },
  "src\\app\\pages\\FeatureIdxPage\\FeatureIdxPage.jsx": {
    "incomingDependencies": [
      "src\\app\\pages\\FeatureIdxPage\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "ramda/src/path",
        "resolvedPath": "ramda/src/path"
      },
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "#containers/IndexHeading",
        "resolvedPath": "src\\app\\legacy\\containers\\IndexHeading"
      },
      {
        "source": "#components/PageLayout/IndexPageContainer",
        "resolvedPath": "src\\app\\legacy\\components\\PageLayout\\IndexPageContainer"
      },
      {
        "source": "#containers/IndexPageSection",
        "resolvedPath": "src\\app\\legacy\\containers\\IndexPageSection"
      },
      {
        "source": "#containers/ComscoreAnalytics",
        "resolvedPath": "src\\app\\legacy\\containers\\ComscoreAnalytics"
      },
      {
        "source": "../../components/Ad",
        "resolvedPath": "src\\app\\components\\Ad\\index.tsx"
      },
      {
        "source": "../../components/Ad/MPU",
        "resolvedPath": "src\\app\\components\\Ad\\MPU\\index.tsx"
      },
      {
        "source": "../../components/ATIAnalytics",
        "resolvedPath": "src\\app\\components\\ATIAnalytics\\index.tsx"
      },
      {
        "source": "../../components/ChartbeatAnalytics",
        "resolvedPath": "src\\app\\components\\ChartbeatAnalytics\\index.tsx"
      },
      {
        "source": "../../components/Metadata",
        "resolvedPath": "src\\app\\components\\Metadata\\index.tsx"
      },
      {
        "source": "../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../../components/LinkedData",
        "resolvedPath": "src\\app\\components\\LinkedData\\index.tsx"
      },
      {
        "source": "./flattenGroups",
        "resolvedPath": "src\\app\\pages\\FeatureIdxPage\\flattenGroups.js"
      }
    ]
  },
  "src\\app\\pages\\FeatureIdxPage\\flattenGroups.js": {
    "incomingDependencies": [
      "src\\app\\pages\\FeatureIdxPage\\FeatureIdxPage.jsx"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\pages\\FeatureIdxPage\\index.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "./FeatureIdxPage",
        "resolvedPath": "src\\app\\pages\\FeatureIdxPage\\FeatureIdxPage.jsx"
      },
      {
        "source": "../utils/applyBasicPageHandlers",
        "resolvedPath": "src\\app\\pages\\utils\\applyBasicPageHandlers.js"
      }
    ]
  },
  "src\\app\\pages\\FrontPage\\FrontPage.jsx": {
    "incomingDependencies": [
      "src\\app\\pages\\FrontPage\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "ramda/src/path",
        "resolvedPath": "ramda/src/path"
      },
      {
        "source": "ramda/src/findIndex",
        "resolvedPath": "ramda/src/findIndex"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\breakpoints"
      },
      {
        "source": "#containers/ComscoreAnalytics",
        "resolvedPath": "src\\app\\legacy\\containers\\ComscoreAnalytics"
      },
      {
        "source": "#components/PageLayout/IndexPageContainer",
        "resolvedPath": "src\\app\\legacy\\components\\PageLayout\\IndexPageContainer"
      },
      {
        "source": "#containers/IndexPageSection",
        "resolvedPath": "src\\app\\legacy\\containers\\IndexPageSection"
      },
      {
        "source": "#containers/RadioSchedule",
        "resolvedPath": "src\\app\\legacy\\containers\\RadioSchedule"
      },
      {
        "source": "#lib/styles.const",
        "resolvedPath": "src\\app\\lib\\styles.const"
      },
      {
        "source": "../../components/Ad",
        "resolvedPath": "src\\app\\components\\Ad\\index.tsx"
      },
      {
        "source": "../../components/Ad/MPU",
        "resolvedPath": "src\\app\\components\\Ad\\MPU\\index.tsx"
      },
      {
        "source": "../../components/MostRead",
        "resolvedPath": "src\\app\\components\\MostRead\\index.tsx"
      },
      {
        "source": "../../components/ATIAnalytics",
        "resolvedPath": "src\\app\\components\\ATIAnalytics\\index.tsx"
      },
      {
        "source": "../../components/ChartbeatAnalytics",
        "resolvedPath": "src\\app\\components\\ChartbeatAnalytics\\index.tsx"
      },
      {
        "source": "../../components/Metadata",
        "resolvedPath": "src\\app\\components\\Metadata\\index.tsx"
      },
      {
        "source": "../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../../components/ThemeProvider/palette",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\palette.ts"
      },
      {
        "source": "../../components/LinkedData",
        "resolvedPath": "src\\app\\components\\LinkedData\\index.tsx"
      },
      {
        "source": "../../components/VisuallyHiddenText",
        "resolvedPath": "src\\app\\components\\VisuallyHiddenText\\index.tsx"
      }
    ]
  },
  "src\\app\\pages\\FrontPage\\index.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "./FrontPage",
        "resolvedPath": "src\\app\\pages\\FrontPage\\FrontPage.jsx"
      },
      {
        "source": "../utils/applyBasicPageHandlers",
        "resolvedPath": "src\\app\\pages\\utils\\applyBasicPageHandlers.js"
      }
    ]
  },
  "src\\app\\pages\\HomePage\\HomePage.tsx": {
    "incomingDependencies": [
      "src\\app\\pages\\HomePage\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "#app/components/VisuallyHiddenText",
        "resolvedPath": "src\\app\\components\\VisuallyHiddenText"
      },
      {
        "source": "../../components/ATIAnalytics",
        "resolvedPath": "src\\app\\components\\ATIAnalytics\\index.tsx"
      },
      {
        "source": "../../models/types/curationData",
        "resolvedPath": "src\\app\\models\\types\\curationData.ts"
      },
      {
        "source": "../../components/ATIAnalytics/types",
        "resolvedPath": "src\\app\\components\\ATIAnalytics\\types.ts"
      },
      {
        "source": "../../components/Curation",
        "resolvedPath": "src\\app\\components\\Curation\\index.tsx"
      },
      {
        "source": "../../components/Ad",
        "resolvedPath": "src\\app\\components\\Ad\\index.tsx"
      },
      {
        "source": "../../components/Ad/MPU",
        "resolvedPath": "src\\app\\components\\Ad\\MPU\\index.tsx"
      },
      {
        "source": "../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\pages\\HomePage\\index.styles.tsx"
      },
      {
        "source": "../../components/Metadata",
        "resolvedPath": "src\\app\\components\\Metadata\\index.tsx"
      },
      {
        "source": "../../components/LinkedData",
        "resolvedPath": "src\\app\\components\\LinkedData\\index.tsx"
      },
      {
        "source": "../../lib/seoUtils/getItemList",
        "resolvedPath": "src\\app\\lib\\seoUtils\\getItemList\\index.ts"
      },
      {
        "source": "../../components/ChartbeatAnalytics",
        "resolvedPath": "src\\app\\components\\ChartbeatAnalytics\\index.tsx"
      },
      {
        "source": "../utils/getNthCurationByStyleAndProminence",
        "resolvedPath": "src\\app\\pages\\utils\\getNthCurationByStyleAndProminence\\index.ts"
      },
      {
        "source": "../utils/getIndexOfFirstNonBanner",
        "resolvedPath": "src\\app\\pages\\utils\\getIndexOfFirstNonBanner\\index.ts"
      }
    ]
  },
  "src\\app\\pages\\HomePage\\index.styles.tsx": {
    "incomingDependencies": [
      "src\\app\\pages\\HomePage\\HomePage.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      }
    ]
  },
  "src\\app\\pages\\HomePage\\index.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "./HomePage",
        "resolvedPath": "src\\app\\pages\\HomePage\\HomePage.tsx"
      },
      {
        "source": "../utils/applyBasicPageHandlers",
        "resolvedPath": "src\\app\\pages\\utils\\applyBasicPageHandlers.js"
      }
    ]
  },
  "src\\app\\pages\\index.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "@loadable/component",
        "resolvedPath": "@loadable/component"
      }
    ]
  },
  "src\\app\\pages\\LiveRadioPage\\index.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "./LiveRadioPage",
        "resolvedPath": "src\\app\\pages\\LiveRadioPage\\LiveRadioPage.tsx"
      },
      {
        "source": "../utils/applyBasicPageHandlers",
        "resolvedPath": "src\\app\\pages\\utils\\applyBasicPageHandlers.js"
      }
    ]
  },
  "src\\app\\pages\\LiveRadioPage\\LiveRadioPage.tsx": {
    "incomingDependencies": [
      "src\\app\\pages\\LiveRadioPage\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "#psammead/psammead-headings/src",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-headings\\src"
      },
      {
        "source": "#psammead/psammead-paragraph/src",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-paragraph\\src"
      },
      {
        "source": "#containers/RadioSchedule",
        "resolvedPath": "src\\app\\legacy\\containers\\RadioSchedule"
      },
      {
        "source": "#containers/ComscoreAnalytics",
        "resolvedPath": "src\\app\\legacy\\containers\\ComscoreAnalytics"
      },
      {
        "source": "#components/Grid",
        "resolvedPath": "src\\app\\legacy\\components\\Grid"
      },
      {
        "source": "#app/components/MediaLoader",
        "resolvedPath": "src\\app\\components\\MediaLoader"
      },
      {
        "source": "../../components/ATIAnalytics",
        "resolvedPath": "src\\app\\components\\ATIAnalytics\\index.tsx"
      },
      {
        "source": "../../components/ChartbeatAnalytics",
        "resolvedPath": "src\\app\\components\\ChartbeatAnalytics\\index.tsx"
      },
      {
        "source": "../../components/Metadata",
        "resolvedPath": "src\\app\\components\\Metadata\\index.tsx"
      },
      {
        "source": "../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../../components/LinkedData",
        "resolvedPath": "src\\app\\components\\LinkedData\\index.tsx"
      },
      {
        "source": "./types",
        "resolvedPath": "src\\app\\pages\\LiveRadioPage\\types.ts"
      }
    ]
  },
  "src\\app\\pages\\LiveRadioPage\\types.ts": {
    "incomingDependencies": [
      "src\\app\\pages\\LiveRadioPage\\LiveRadioPage.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "#app/components/ChartbeatAnalytics/types",
        "resolvedPath": "src\\app\\components\\ChartbeatAnalytics\\types"
      },
      {
        "source": "#app/models/types/media",
        "resolvedPath": "src\\app\\models\\types\\media"
      }
    ]
  },
  "src\\app\\pages\\MediaArticlePage\\fixtureData.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\pages\\MediaArticlePage\\index.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "./MediaArticlePage",
        "resolvedPath": "src\\app\\pages\\MediaArticlePage\\MediaArticlePage.tsx"
      },
      {
        "source": "../utils/applyBasicPageHandlers",
        "resolvedPath": "src\\app\\pages\\utils\\applyBasicPageHandlers.js"
      }
    ]
  },
  "src\\app\\pages\\MediaArticlePage\\MediaArticlePage.styles.ts": {
    "incomingDependencies": [
      "src\\app\\pages\\MediaArticlePage\\MediaArticlePage.tsx",
      "src\\app\\pages\\MediaArticlePage\\SecondaryColumn.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "../../utilities/pixelsToRem",
        "resolvedPath": "src\\app\\utilities\\pixelsToRem\\index.ts"
      }
    ]
  },
  "src\\app\\pages\\MediaArticlePage\\MediaArticlePage.tsx": {
    "incomingDependencies": [
      "src\\app\\pages\\MediaArticlePage\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "#app/components/Embeds/types",
        "resolvedPath": "src\\app\\components\\Embeds\\types"
      },
      {
        "source": "#app/components/MediaLoader",
        "resolvedPath": "src\\app\\components\\MediaLoader"
      },
      {
        "source": "#app/components/MediaLoader/types",
        "resolvedPath": "src\\app\\components\\MediaLoader\\types"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "src\\app\\routes\\utils\\pageTypes"
      },
      {
        "source": "#app/components/LinkedData/types",
        "resolvedPath": "src\\app\\components\\LinkedData\\types"
      },
      {
        "source": "#app/models/types/optimo",
        "resolvedPath": "src\\app\\models\\types\\optimo"
      },
      {
        "source": "#app/contexts/RequestContext",
        "resolvedPath": "src\\app\\contexts\\RequestContext"
      },
      {
        "source": "#app/models/types/media",
        "resolvedPath": "src\\app\\models\\types\\media"
      },
      {
        "source": "../../hooks/useToggle",
        "resolvedPath": "src\\app\\hooks\\useToggle\\index.js"
      },
      {
        "source": "../../lib/utilities/parseAssetData",
        "resolvedPath": "src\\app\\lib\\utilities\\parseAssetData\\index.ts"
      },
      {
        "source": "../../lib/utilities/blockHandlers",
        "resolvedPath": "src\\app\\lib\\utilities\\blockHandlers\\index.js"
      },
      {
        "source": "../../legacy/components/ScrollablePromo",
        "resolvedPath": "src\\app\\legacy\\components\\ScrollablePromo\\index.jsx"
      },
      {
        "source": "../../legacy/containers/Headings",
        "resolvedPath": "src\\app\\legacy\\containers\\Headings\\index.jsx"
      },
      {
        "source": "../../legacy/containers/VisuallyHiddenHeadline",
        "resolvedPath": "src\\app\\legacy\\containers\\VisuallyHiddenHeadline\\index.jsx"
      },
      {
        "source": "../../legacy/containers/Gist",
        "resolvedPath": "src\\app\\legacy\\containers\\Gist\\index.jsx"
      },
      {
        "source": "../../legacy/containers/Text",
        "resolvedPath": "src\\app\\legacy\\containers\\Text\\index.jsx"
      },
      {
        "source": "../../components/ImageWithCaption",
        "resolvedPath": "src\\app\\components\\ImageWithCaption\\index.tsx"
      },
      {
        "source": "../../legacy/containers/Blocks",
        "resolvedPath": "src\\app\\legacy\\containers\\Blocks\\index.jsx"
      },
      {
        "source": "../../legacy/containers/ArticleTimestamp",
        "resolvedPath": "src\\app\\legacy\\containers\\ArticleTimestamp\\index.jsx"
      },
      {
        "source": "../../components/ATIAnalytics",
        "resolvedPath": "src\\app\\components\\ATIAnalytics\\index.tsx"
      },
      {
        "source": "../../components/ChartbeatAnalytics",
        "resolvedPath": "src\\app\\components\\ChartbeatAnalytics\\index.tsx"
      },
      {
        "source": "../../legacy/containers/ComscoreAnalytics",
        "resolvedPath": "src\\app\\legacy\\containers\\ComscoreAnalytics\\index.jsx"
      },
      {
        "source": "../../legacy/containers/SocialEmbed",
        "resolvedPath": "src\\app\\legacy\\containers\\SocialEmbed\\index.jsx"
      },
      {
        "source": "../../legacy/containers/FauxHeadline",
        "resolvedPath": "src\\app\\legacy\\containers\\FauxHeadline\\index.jsx"
      },
      {
        "source": "../../legacy/containers/RelatedTopics",
        "resolvedPath": "src\\app\\legacy\\containers\\RelatedTopics\\index.jsx"
      },
      {
        "source": "../../legacy/containers/NielsenAnalytics",
        "resolvedPath": "src\\app\\legacy\\containers\\NielsenAnalytics\\index.jsx"
      },
      {
        "source": "../../legacy/containers/ArticleMetadata",
        "resolvedPath": "src\\app\\legacy\\containers\\ArticleMetadata\\index.jsx"
      },
      {
        "source": "../../components/Embeds/EmbedImages",
        "resolvedPath": "src\\app\\components\\Embeds\\EmbedImages\\index.tsx"
      },
      {
        "source": "../../components/Embeds/EmbedHtml",
        "resolvedPath": "src\\app\\components\\Embeds\\EmbedHtml\\index.tsx"
      },
      {
        "source": "../../components/Embeds/OEmbed",
        "resolvedPath": "src\\app\\components\\Embeds\\OEmbed\\index.tsx"
      },
      {
        "source": "../../components/LinkedData",
        "resolvedPath": "src\\app\\components\\LinkedData\\index.tsx"
      },
      {
        "source": "../../components/Byline",
        "resolvedPath": "src\\app\\components\\Byline\\index.tsx"
      },
      {
        "source": "../../components/Byline/utilities",
        "resolvedPath": "src\\app\\components\\Byline\\utilities\\index.ts"
      },
      {
        "source": "../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../../components/RelatedContentSection",
        "resolvedPath": "src\\app\\components\\RelatedContentSection\\index.tsx"
      },
      {
        "source": "./SecondaryColumn",
        "resolvedPath": "src\\app\\pages\\MediaArticlePage\\SecondaryColumn.tsx"
      },
      {
        "source": "./MediaArticlePage.styles",
        "resolvedPath": "src\\app\\pages\\MediaArticlePage\\MediaArticlePage.styles.ts"
      },
      {
        "source": "./types",
        "resolvedPath": "src\\app\\pages\\MediaArticlePage\\types.ts"
      },
      {
        "source": "./utils/checkIsLiveMedia",
        "resolvedPath": "src\\app\\pages\\MediaArticlePage\\utils\\checkIsLiveMedia\\index.ts"
      }
    ]
  },
  "src\\app\\pages\\MediaArticlePage\\PagePromoSections\\LatestMediaSection\\index.styles.ts": {
    "incomingDependencies": [
      "src\\app\\pages\\MediaArticlePage\\PagePromoSections\\LatestMediaSection\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "../../../../utilities/pixelsToRem",
        "resolvedPath": "src\\app\\utilities\\pixelsToRem\\index.ts"
      }
    ]
  },
  "src\\app\\pages\\MediaArticlePage\\PagePromoSections\\LatestMediaSection\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\pages\\MediaArticlePage\\SecondaryColumn.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "#psammead/psammead-section-label/src",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-section-label\\src"
      },
      {
        "source": "../../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../../../../legacy/components/OptimoPromos/PromoItem/index.styles",
        "resolvedPath": "src\\app\\legacy\\components\\OptimoPromos\\PromoItem\\index.styles.jsx"
      },
      {
        "source": "../../../../legacy/components/OptimoPromos/PromoList",
        "resolvedPath": "src\\app\\legacy\\components\\OptimoPromos\\PromoList\\index.jsx"
      },
      {
        "source": "../../../../hooks/useViewTracker",
        "resolvedPath": "src\\app\\hooks\\useViewTracker\\index.jsx"
      },
      {
        "source": "../../../../lib/utilities/generatePromoId",
        "resolvedPath": "src\\app\\lib\\utilities\\generatePromoId\\index.ts"
      },
      {
        "source": "./LatestMediaItem",
        "resolvedPath": "src\\app\\pages\\MediaArticlePage\\PagePromoSections\\LatestMediaSection\\LatestMediaItem\\index.tsx"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\pages\\MediaArticlePage\\PagePromoSections\\LatestMediaSection\\index.styles.ts"
      },
      {
        "source": "./types",
        "resolvedPath": "src\\app\\pages\\MediaArticlePage\\PagePromoSections\\LatestMediaSection\\types.ts"
      },
      {
        "source": "../../../../models/types/eventTracking",
        "resolvedPath": "src\\app\\models\\types\\eventTracking.ts"
      }
    ]
  },
  "src\\app\\pages\\MediaArticlePage\\PagePromoSections\\LatestMediaSection\\LatestMediaIndicator\\index.styles.ts": {
    "incomingDependencies": [
      "src\\app\\pages\\MediaArticlePage\\PagePromoSections\\LatestMediaSection\\LatestMediaIndicator\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      }
    ]
  },
  "src\\app\\pages\\MediaArticlePage\\PagePromoSections\\LatestMediaSection\\LatestMediaIndicator\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\pages\\MediaArticlePage\\PagePromoSections\\LatestMediaSection\\LatestMediaItem\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "moment",
        "resolvedPath": "moment"
      },
      {
        "source": "../../../../../legacy/components/OptimoPromos",
        "resolvedPath": "src\\app\\legacy\\components\\OptimoPromos\\index.jsx"
      },
      {
        "source": "../../../../../lib/utilities/formatDuration",
        "resolvedPath": "src\\app\\lib\\utilities\\formatDuration\\index.js"
      },
      {
        "source": "../types",
        "resolvedPath": "src\\app\\pages\\MediaArticlePage\\PagePromoSections\\LatestMediaSection\\types.ts"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\pages\\MediaArticlePage\\PagePromoSections\\LatestMediaSection\\LatestMediaIndicator\\index.styles.ts"
      }
    ]
  },
  "src\\app\\pages\\MediaArticlePage\\PagePromoSections\\LatestMediaSection\\LatestMediaItem\\index.styles.ts": {
    "incomingDependencies": [
      "src\\app\\pages\\MediaArticlePage\\PagePromoSections\\LatestMediaSection\\LatestMediaItem\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      }
    ]
  },
  "src\\app\\pages\\MediaArticlePage\\PagePromoSections\\LatestMediaSection\\LatestMediaItem\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\pages\\MediaArticlePage\\PagePromoSections\\LatestMediaSection\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "../../../../../legacy/components/OptimoPromos",
        "resolvedPath": "src\\app\\legacy\\components\\OptimoPromos\\index.jsx"
      },
      {
        "source": "../types",
        "resolvedPath": "src\\app\\pages\\MediaArticlePage\\PagePromoSections\\LatestMediaSection\\types.ts"
      },
      {
        "source": "../LatestMediaIndicator",
        "resolvedPath": "src\\app\\pages\\MediaArticlePage\\PagePromoSections\\LatestMediaSection\\LatestMediaIndicator\\index.tsx"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\pages\\MediaArticlePage\\PagePromoSections\\LatestMediaSection\\LatestMediaItem\\index.styles.ts"
      }
    ]
  },
  "src\\app\\pages\\MediaArticlePage\\PagePromoSections\\LatestMediaSection\\types.ts": {
    "incomingDependencies": [
      "src\\app\\pages\\MediaArticlePage\\PagePromoSections\\LatestMediaSection\\index.tsx",
      "src\\app\\pages\\MediaArticlePage\\PagePromoSections\\LatestMediaSection\\LatestMediaIndicator\\index.tsx",
      "src\\app\\pages\\MediaArticlePage\\PagePromoSections\\LatestMediaSection\\LatestMediaItem\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../../models/types/eventTracking",
        "resolvedPath": "src\\app\\models\\types\\eventTracking.ts"
      }
    ]
  },
  "src\\app\\pages\\MediaArticlePage\\SecondaryColumn.tsx": {
    "incomingDependencies": [
      "src\\app\\pages\\MediaArticlePage\\MediaArticlePage.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "#app/models/types/optimo",
        "resolvedPath": "src\\app\\models\\types\\optimo"
      },
      {
        "source": "./PagePromoSections/LatestMediaSection",
        "resolvedPath": "src\\app\\pages\\MediaArticlePage\\PagePromoSections\\LatestMediaSection\\index.tsx"
      },
      {
        "source": "./MediaArticlePage.styles",
        "resolvedPath": "src\\app\\pages\\MediaArticlePage\\MediaArticlePage.styles.ts"
      }
    ]
  },
  "src\\app\\pages\\MediaArticlePage\\types.ts": {
    "incomingDependencies": [
      "src\\app\\pages\\MediaArticlePage\\MediaArticlePage.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../../models/types/optimo",
        "resolvedPath": "src\\app\\models\\types\\optimo.ts"
      }
    ]
  },
  "src\\app\\pages\\MediaArticlePage\\utils\\checkIsLiveMedia\\index.ts": {
    "incomingDependencies": [
      "src\\app\\pages\\MediaArticlePage\\MediaArticlePage.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "#app/components/MediaLoader/types",
        "resolvedPath": "src\\app\\components\\MediaLoader\\types"
      },
      {
        "source": "#app/lib/utilities/blockHandlers",
        "resolvedPath": "src\\app\\lib\\utilities\\blockHandlers"
      },
      {
        "source": "#app/models/types/optimo",
        "resolvedPath": "src\\app\\models\\types\\optimo"
      }
    ]
  },
  "src\\app\\pages\\MostReadPage\\index.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "./MostReadPage",
        "resolvedPath": "src\\app\\pages\\MostReadPage\\MostReadPage.jsx"
      },
      {
        "source": "../utils/applyBasicPageHandlers",
        "resolvedPath": "src\\app\\pages\\utils\\applyBasicPageHandlers.js"
      }
    ]
  },
  "src\\app\\pages\\MostReadPage\\MostReadPage.jsx": {
    "incomingDependencies": [
      "src\\app\\pages\\MostReadPage\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\breakpoints"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\spacings"
      },
      {
        "source": "#containers/ComscoreAnalytics",
        "resolvedPath": "src\\app\\legacy\\containers\\ComscoreAnalytics"
      },
      {
        "source": "#components/Grid",
        "resolvedPath": "src\\app\\legacy\\components\\Grid"
      },
      {
        "source": "#containers/IndexHeading",
        "resolvedPath": "src\\app\\legacy\\containers\\IndexHeading"
      },
      {
        "source": "#components/PageLayout/IndexPageContainer",
        "resolvedPath": "src\\app\\legacy\\components\\PageLayout\\IndexPageContainer"
      },
      {
        "source": "../../components/MostRead/Canonical",
        "resolvedPath": "src\\app\\components\\MostRead\\Canonical\\index.tsx"
      },
      {
        "source": "../../components/ATIAnalytics",
        "resolvedPath": "src\\app\\components\\ATIAnalytics\\index.tsx"
      },
      {
        "source": "../../components/ChartbeatAnalytics",
        "resolvedPath": "src\\app\\components\\ChartbeatAnalytics\\index.tsx"
      },
      {
        "source": "../../components/Metadata",
        "resolvedPath": "src\\app\\components\\Metadata\\index.tsx"
      },
      {
        "source": "../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../../components/LinkedData",
        "resolvedPath": "src\\app\\components\\LinkedData\\index.tsx"
      }
    ]
  },
  "src\\app\\pages\\OnDemandAudioPage\\index.styles.ts": {
    "incomingDependencies": [
      "src\\app\\pages\\OnDemandAudioPage\\OnDemandAudioPage.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "#app/components/ThemeProvider/mediaQueries",
        "resolvedPath": "src\\app\\components\\ThemeProvider\\mediaQueries"
      }
    ]
  },
  "src\\app\\pages\\OnDemandAudioPage\\index.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "ramda/src/pipe",
        "resolvedPath": "ramda/src/pipe"
      },
      {
        "source": "#lib/utilities/episodeAvailability/withMediaError",
        "resolvedPath": "src\\app\\lib\\utilities\\episodeAvailability\\withMediaError"
      },
      {
        "source": "./OnDemandAudioPage",
        "resolvedPath": "src\\app\\pages\\OnDemandAudioPage\\OnDemandAudioPage.tsx"
      },
      {
        "source": "../utils/applyBasicPageHandlers",
        "resolvedPath": "src\\app\\pages\\utils\\applyBasicPageHandlers.js"
      }
    ]
  },
  "src\\app\\pages\\OnDemandAudioPage\\OnDemandAudioPage.tsx": {
    "incomingDependencies": [
      "src\\app\\pages\\OnDemandAudioPage\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "ramda/src/path",
        "resolvedPath": "ramda/src/path"
      },
      {
        "source": "ramda/src/is",
        "resolvedPath": "ramda/src/is"
      },
      {
        "source": "#containers/ComscoreAnalytics",
        "resolvedPath": "src\\app\\legacy\\containers\\ComscoreAnalytics"
      },
      {
        "source": "#components/Grid",
        "resolvedPath": "src\\app\\legacy\\components\\Grid"
      },
      {
        "source": "#containers/OnDemandHeading/StyledRadioHeadingContainer",
        "resolvedPath": "src\\app\\legacy\\containers\\OnDemandHeading\\StyledRadioHeadingContainer"
      },
      {
        "source": "#containers/OnDemandParagraph",
        "resolvedPath": "src\\app\\legacy\\containers\\OnDemandParagraph"
      },
      {
        "source": "#containers/OnDemandImage",
        "resolvedPath": "src\\app\\legacy\\containers\\OnDemandImage"
      },
      {
        "source": "#lib/utilities/getMasterbrand",
        "resolvedPath": "src\\app\\lib\\utilities\\getMasterbrand"
      },
      {
        "source": "#containers/RadioSchedule",
        "resolvedPath": "src\\app\\legacy\\containers\\RadioSchedule"
      },
      {
        "source": "#containers/EpisodeList/RecentAudioEpisodes",
        "resolvedPath": "src\\app\\legacy\\containers\\EpisodeList\\RecentAudioEpisodes"
      },
      {
        "source": "#containers/OnDemandFooterTimestamp",
        "resolvedPath": "src\\app\\legacy\\containers\\OnDemandFooterTimestamp"
      },
      {
        "source": "#containers/PodcastExternalLinks",
        "resolvedPath": "src\\app\\legacy\\containers\\PodcastExternalLinks"
      },
      {
        "source": "#app/components/MediaLoader",
        "resolvedPath": "src\\app\\components\\MediaLoader"
      },
      {
        "source": "#app/models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global"
      },
      {
        "source": "#app/models/types/radioSchedule",
        "resolvedPath": "src\\app\\models\\types\\radioSchedule"
      },
      {
        "source": "#app/components/ChartbeatAnalytics/types",
        "resolvedPath": "src\\app\\components\\ChartbeatAnalytics\\types"
      },
      {
        "source": "#app/models/types/media",
        "resolvedPath": "src\\app\\models\\types\\media"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\pages\\OnDemandAudioPage\\index.styles.ts"
      },
      {
        "source": "../../components/ATIAnalytics",
        "resolvedPath": "src\\app\\components\\ATIAnalytics\\index.tsx"
      },
      {
        "source": "../../components/ChartbeatAnalytics",
        "resolvedPath": "src\\app\\components\\ChartbeatAnalytics\\index.tsx"
      },
      {
        "source": "../../components/Metadata",
        "resolvedPath": "src\\app\\components\\Metadata\\index.tsx"
      },
      {
        "source": "../../components/LinkedData",
        "resolvedPath": "src\\app\\components\\LinkedData\\index.tsx"
      },
      {
        "source": "../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      }
    ]
  },
  "src\\app\\pages\\OnDemandTvPage\\index.styles.ts": {
    "incomingDependencies": [
      "src\\app\\pages\\OnDemandTvPage\\OnDemandTvPage.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      }
    ]
  },
  "src\\app\\pages\\OnDemandTvPage\\index.tsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "ramda/src/pipe",
        "resolvedPath": "ramda/src/pipe"
      },
      {
        "source": "#lib/utilities/episodeAvailability/withMediaError",
        "resolvedPath": "src\\app\\lib\\utilities\\episodeAvailability\\withMediaError"
      },
      {
        "source": "./OnDemandTvPage",
        "resolvedPath": "src\\app\\pages\\OnDemandTvPage\\OnDemandTvPage.tsx"
      },
      {
        "source": "../utils/applyBasicPageHandlers",
        "resolvedPath": "src\\app\\pages\\utils\\applyBasicPageHandlers.js"
      }
    ]
  },
  "src\\app\\pages\\OnDemandTvPage\\OnDemandTvPage.tsx": {
    "incomingDependencies": [
      "src\\app\\pages\\OnDemandTvPage\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "#psammead/psammead-timestamp-container/src/utilities",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-timestamp-container\\src\\utilities"
      },
      {
        "source": "#containers/ComscoreAnalytics",
        "resolvedPath": "src\\app\\legacy\\containers\\ComscoreAnalytics"
      },
      {
        "source": "#components/Grid",
        "resolvedPath": "src\\app\\legacy\\components\\Grid"
      },
      {
        "source": "#containers/OnDemandHeading/StyledTvHeadingContainer",
        "resolvedPath": "src\\app\\legacy\\containers\\OnDemandHeading\\StyledTvHeadingContainer"
      },
      {
        "source": "#containers/OnDemandParagraph",
        "resolvedPath": "src\\app\\legacy\\containers\\OnDemandParagraph"
      },
      {
        "source": "#containers/EpisodeList/RecentVideoEpisodes",
        "resolvedPath": "src\\app\\legacy\\containers\\EpisodeList\\RecentVideoEpisodes"
      },
      {
        "source": "#containers/OnDemandFooterTimestamp",
        "resolvedPath": "src\\app\\legacy\\containers\\OnDemandFooterTimestamp"
      },
      {
        "source": "#app/models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global"
      },
      {
        "source": "#app/components/ChartbeatAnalytics/types",
        "resolvedPath": "src\\app\\components\\ChartbeatAnalytics\\types"
      },
      {
        "source": "#app/components/MediaLoader",
        "resolvedPath": "src\\app\\components\\MediaLoader"
      },
      {
        "source": "#app/models/types/media",
        "resolvedPath": "src\\app\\models\\types\\media"
      },
      {
        "source": "../../components/ATIAnalytics",
        "resolvedPath": "src\\app\\components\\ATIAnalytics\\index.tsx"
      },
      {
        "source": "../../components/ChartbeatAnalytics",
        "resolvedPath": "src\\app\\components\\ChartbeatAnalytics\\index.tsx"
      },
      {
        "source": "../../components/LinkedData",
        "resolvedPath": "src\\app\\components\\LinkedData\\index.tsx"
      },
      {
        "source": "../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "../../components/Metadata",
        "resolvedPath": "src\\app\\components\\Metadata\\index.tsx"
      },
      {
        "source": "../../components/VisuallyHiddenText",
        "resolvedPath": "src\\app\\components\\VisuallyHiddenText\\index.tsx"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\pages\\OnDemandTvPage\\index.styles.ts"
      }
    ]
  },
  "src\\app\\pages\\TopicPage\\fixtures.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\pages\\TopicPage\\index.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "./TopicPage",
        "resolvedPath": "src\\app\\pages\\TopicPage\\TopicPage.jsx"
      },
      {
        "source": "../utils/applyBasicPageHandlers",
        "resolvedPath": "src\\app\\pages\\utils\\applyBasicPageHandlers.js"
      }
    ]
  },
  "src\\app\\pages\\TopicPage\\index.styles.jsx": {
    "incomingDependencies": [
      "src\\app\\pages\\TopicPage\\TopicPage.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      }
    ]
  },
  "src\\app\\pages\\TopicPage\\TopicDescription\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\pages\\TopicPage\\TopicPage.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/psammead-styles/src/font-styles",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-styles\\src\\font-styles"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\breakpoints"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\spacings"
      },
      {
        "source": "#psammead/gel-foundations/src/typography",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\typography"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      }
    ]
  },
  "src\\app\\pages\\TopicPage\\TopicImage\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\pages\\TopicPage\\TopicPage.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/gel-foundations/src/spacings",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\spacings"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\breakpoints"
      }
    ]
  },
  "src\\app\\pages\\TopicPage\\TopicPage.jsx": {
    "incomingDependencies": [
      "src\\app\\pages\\TopicPage\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "ramda/src/path",
        "resolvedPath": "ramda/src/path"
      },
      {
        "source": "#app/components/Curation",
        "resolvedPath": "src\\app\\components\\Curation"
      },
      {
        "source": "../../components/Ad",
        "resolvedPath": "src\\app\\components\\Ad\\index.tsx"
      },
      {
        "source": "../../components/ATIAnalytics",
        "resolvedPath": "src\\app\\components\\ATIAnalytics\\index.tsx"
      },
      {
        "source": "../../components/ChartbeatAnalytics",
        "resolvedPath": "src\\app\\components\\ChartbeatAnalytics\\index.tsx"
      },
      {
        "source": "../../components/LinkedData",
        "resolvedPath": "src\\app\\components\\LinkedData\\index.tsx"
      },
      {
        "source": "./index.styles",
        "resolvedPath": "src\\app\\pages\\TopicPage\\index.styles.jsx"
      },
      {
        "source": "../../components/Metadata",
        "resolvedPath": "src\\app\\components\\Metadata\\index.tsx"
      },
      {
        "source": "../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      },
      {
        "source": "./TopicImage",
        "resolvedPath": "src\\app\\pages\\TopicPage\\TopicImage\\index.jsx"
      },
      {
        "source": "./TopicTitle",
        "resolvedPath": "src\\app\\pages\\TopicPage\\TopicTitle\\index.jsx"
      },
      {
        "source": "./TopicDescription",
        "resolvedPath": "src\\app\\pages\\TopicPage\\TopicDescription\\index.jsx"
      },
      {
        "source": "../../components/Pagination",
        "resolvedPath": "src\\app\\components\\Pagination\\index.tsx"
      },
      {
        "source": "../../lib/seoUtils/getItemList",
        "resolvedPath": "src\\app\\lib\\seoUtils\\getItemList\\index.ts"
      },
      {
        "source": "../utils/getNthCurationByStyleAndProminence",
        "resolvedPath": "src\\app\\pages\\utils\\getNthCurationByStyleAndProminence\\index.ts"
      }
    ]
  },
  "src\\app\\pages\\TopicPage\\TopicTitle\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\pages\\TopicPage\\TopicPage.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@emotion/styled",
        "resolvedPath": "@emotion/styled"
      },
      {
        "source": "#psammead/psammead-styles/src/font-styles",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-styles\\src\\font-styles"
      },
      {
        "source": "#psammead/gel-foundations/src/breakpoints",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\breakpoints"
      },
      {
        "source": "#psammead/gel-foundations/src/typography",
        "resolvedPath": "src\\app\\legacy\\psammead\\gel-foundations\\src\\typography"
      },
      {
        "source": "../../../contexts/ServiceContext",
        "resolvedPath": "src\\app\\contexts\\ServiceContext\\index.tsx"
      }
    ]
  },
  "src\\app\\pages\\utils\\applyBasicPageHandlers.js": {
    "incomingDependencies": [
      "src\\app\\pages\\ArticlePage\\index.tsx",
      "src\\app\\pages\\FeatureIdxPage\\index.jsx",
      "src\\app\\pages\\FrontPage\\index.jsx",
      "src\\app\\pages\\HomePage\\index.tsx",
      "src\\app\\pages\\LiveRadioPage\\index.tsx",
      "src\\app\\pages\\MediaArticlePage\\index.tsx",
      "src\\app\\pages\\MostReadPage\\index.jsx",
      "src\\app\\pages\\OnDemandAudioPage\\index.tsx",
      "src\\app\\pages\\OnDemandTvPage\\index.tsx",
      "src\\app\\pages\\TopicPage\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "ramda/src/pipe",
        "resolvedPath": "ramda/src/pipe"
      },
      {
        "source": "#containers/PageHandlers/withContexts",
        "resolvedPath": "src\\app\\legacy\\containers\\PageHandlers\\withContexts"
      },
      {
        "source": "#containers/PageHandlers/withPageWrapper",
        "resolvedPath": "src\\app\\legacy\\containers\\PageHandlers\\withPageWrapper"
      },
      {
        "source": "#containers/PageHandlers/withError",
        "resolvedPath": "src\\app\\legacy\\containers\\PageHandlers\\withError"
      },
      {
        "source": "#containers/PageHandlers/withData",
        "resolvedPath": "src\\app\\legacy\\containers\\PageHandlers\\withData"
      },
      {
        "source": "#containers/PageHandlers/withHashChangeHandler",
        "resolvedPath": "src\\app\\legacy\\containers\\PageHandlers\\withHashChangeHandler"
      }
    ]
  },
  "src\\app\\pages\\utils\\getIndexOfFirstNonBanner\\index.ts": {
    "incomingDependencies": [
      "src\\app\\pages\\HomePage\\HomePage.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "#app/models/types/curationData",
        "resolvedPath": "src\\app\\models\\types\\curationData"
      }
    ]
  },
  "src\\app\\pages\\utils\\getNthCurationByStyleAndProminence\\index.ts": {
    "incomingDependencies": [
      "src\\app\\pages\\HomePage\\HomePage.tsx",
      "src\\app\\pages\\TopicPage\\TopicPage.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "#app/models/types/curationData",
        "resolvedPath": "src\\app\\models\\types\\curationData"
      }
    ]
  },
  "src\\app\\pages\\__mocks__\\index.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\routes\\article\\getInitialData\\client.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\routes\\article\\getInitialData\\index.ts": {
    "incomingDependencies": [
      "src\\app\\routes\\article\\index.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "ramda/src/pipe",
        "resolvedPath": "ramda/src/pipe"
      },
      {
        "source": "../../../lib/logger.node",
        "resolvedPath": "src\\app\\lib\\logger.node.js"
      },
      {
        "source": "../../../models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global.ts"
      },
      {
        "source": "../utils/getOnwardsData",
        "resolvedPath": "src\\app\\routes\\article\\utils\\getOnwardsData.ts"
      },
      {
        "source": "../utils/addAnalyticsCounterName",
        "resolvedPath": "src\\app\\routes\\article\\utils\\addAnalyticsCounterName.ts"
      },
      {
        "source": "../utils/augmentWithDisclaimer",
        "resolvedPath": "src\\app\\routes\\article\\utils\\augmentWithDisclaimer.ts"
      },
      {
        "source": "../utils/paramChecks",
        "resolvedPath": "src\\app\\routes\\article\\utils\\paramChecks.ts"
      },
      {
        "source": "../../../models/types/fetch",
        "resolvedPath": "src\\app\\models\\types\\fetch.ts"
      },
      {
        "source": "../../utils/handleError",
        "resolvedPath": "src\\app\\routes\\utils\\handleError\\index.ts"
      },
      {
        "source": "../../utils/fetchDataFromBFF",
        "resolvedPath": "src\\app\\routes\\utils\\fetchDataFromBFF\\index.ts"
      },
      {
        "source": "../../../../server/utilities/getAgent",
        "resolvedPath": "src\\server\\utilities\\getAgent\\index.js"
      },
      {
        "source": "../../../lib/logger.const",
        "resolvedPath": "src\\app\\lib\\logger.const.js"
      },
      {
        "source": "../../utils/certsRequired",
        "resolvedPath": "src\\app\\routes\\utils\\certsRequired\\index.ts"
      }
    ]
  },
  "src\\app\\routes\\article\\index.tsx": {
    "incomingDependencies": [
      "src\\app\\routes\\index.js"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "#pages/index",
        "resolvedPath": "src\\app\\pages\\index"
      },
      {
        "source": "#app/routes/utils/regex",
        "resolvedPath": "src\\app\\routes\\utils\\regex"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "src\\app\\routes\\utils\\pageTypes"
      },
      {
        "source": "#app/models/types/optimo",
        "resolvedPath": "src\\app\\models\\types\\optimo"
      },
      {
        "source": "./getInitialData",
        "resolvedPath": "src\\app\\routes\\article\\getInitialData\\index.ts"
      }
    ]
  },
  "src\\app\\routes\\article\\utils\\addAnalyticsCounterName.ts": {
    "incomingDependencies": [
      "src\\app\\routes\\article\\getInitialData\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "ramda/src/assocPath",
        "resolvedPath": "ramda/src/assocPath"
      },
      {
        "source": "ramda/src/hasPath",
        "resolvedPath": "ramda/src/hasPath"
      },
      {
        "source": "#app/models/types/optimo",
        "resolvedPath": "src\\app\\models\\types\\optimo"
      }
    ]
  },
  "src\\app\\routes\\article\\utils\\augmentWithDisclaimer.ts": {
    "incomingDependencies": [
      "src\\app\\routes\\article\\getInitialData\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "ramda/src/pathEq",
        "resolvedPath": "ramda/src/pathEq"
      },
      {
        "source": "ramda/src/assocPath",
        "resolvedPath": "ramda/src/assocPath"
      },
      {
        "source": "ramda/src/insert",
        "resolvedPath": "ramda/src/insert"
      },
      {
        "source": "#app/models/types/optimo",
        "resolvedPath": "src\\app\\models\\types\\optimo"
      },
      {
        "source": "#app/models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global"
      },
      {
        "source": "./paramChecks",
        "resolvedPath": "src\\app\\routes\\article\\utils\\paramChecks.ts"
      }
    ]
  },
  "src\\app\\routes\\article\\utils\\getOnwardsData.ts": {
    "incomingDependencies": [
      "src\\app\\routes\\article\\getInitialData\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "https",
        "resolvedPath": "https"
      },
      {
        "source": "ramda/src/path",
        "resolvedPath": "ramda/src/path"
      },
      {
        "source": "ramda/src/isEmpty",
        "resolvedPath": "ramda/src/isEmpty"
      },
      {
        "source": "#lib/logger.const",
        "resolvedPath": "src\\app\\lib\\logger.const"
      },
      {
        "source": "#app/lib/utilities/getUrlHelpers/getRecommendationsUrl",
        "resolvedPath": "src\\app\\lib\\utilities\\getUrlHelpers\\getRecommendationsUrl"
      },
      {
        "source": "#app/lib/utilities/getFetchTimeouts",
        "resolvedPath": "src\\app\\lib\\utilities\\getFetchTimeouts"
      },
      {
        "source": "../../utils/fetchPageData",
        "resolvedPath": "src\\app\\routes\\utils\\fetchPageData\\index.js"
      },
      {
        "source": "../../../lib/logger.node",
        "resolvedPath": "src\\app\\lib\\logger.node.js"
      },
      {
        "source": "./hasArticleRecommendations",
        "resolvedPath": "src\\app\\routes\\article\\utils\\hasArticleRecommendations.ts"
      }
    ]
  },
  "src\\app\\routes\\article\\utils\\hasArticleRecommendations.ts": {
    "incomingDependencies": [
      "src\\app\\routes\\article\\utils\\getOnwardsData.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "#app/routes/utils/getConfig",
        "resolvedPath": "src\\app\\routes\\utils\\getConfig"
      }
    ]
  },
  "src\\app\\routes\\article\\utils\\paramChecks.ts": {
    "incomingDependencies": [
      "src\\app\\routes\\article\\getInitialData\\index.ts",
      "src\\app\\routes\\article\\utils\\augmentWithDisclaimer.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "#app/models/types/optimo",
        "resolvedPath": "src\\app\\models\\types\\optimo"
      }
    ]
  },
  "src\\app\\routes\\error\\getInitialData\\index.js": {
    "incomingDependencies": [
      "src\\app\\routes\\error\\index.js"
    ],
    "outgoingDependencies": [
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "src\\app\\routes\\utils\\pageTypes"
      },
      {
        "source": "react-router-config",
        "resolvedPath": "node_modules\\@types\\react\\-router-config"
      }
    ]
  },
  "src\\app\\routes\\error\\index.js": {
    "incomingDependencies": [
      "src\\app\\routes\\index.js"
    ],
    "outgoingDependencies": [
      {
        "source": "#pages",
        "resolvedPath": "src\\app\\pages"
      },
      {
        "source": "#app/routes/utils/regex",
        "resolvedPath": "src\\app\\routes\\utils\\regex"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "src\\app\\routes\\utils\\pageTypes"
      },
      {
        "source": "./getInitialData",
        "resolvedPath": "src\\app\\routes\\error\\getInitialData\\index.js"
      }
    ]
  },
  "src\\app\\routes\\errorNoRouteMatch\\index.js": {
    "incomingDependencies": [
      "src\\app\\routes\\index.js"
    ],
    "outgoingDependencies": [
      {
        "source": "#pages",
        "resolvedPath": "src\\app\\pages"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "src\\app\\routes\\utils\\pageTypes"
      }
    ]
  },
  "src\\app\\routes\\frontPage\\getInitialData\\index.js": {
    "incomingDependencies": [
      "src\\app\\routes\\frontPage\\index.js"
    ],
    "outgoingDependencies": [
      {
        "source": "ramda/src/pipe",
        "resolvedPath": "ramda/src/pipe"
      },
      {
        "source": "ramda/src/path",
        "resolvedPath": "ramda/src/path"
      },
      {
        "source": "#app/routes/utils/withRadioSchedule",
        "resolvedPath": "src\\app\\routes\\utils\\withRadioSchedule"
      },
      {
        "source": "#app/routes/utils/sharedDataTransformers/filterUnknownContentTypes",
        "resolvedPath": "src\\app\\routes\\utils\\sharedDataTransformers\\filterUnknownContentTypes"
      },
      {
        "source": "#app/routes/utils/sharedDataTransformers/filterEmptyGroupItems",
        "resolvedPath": "src\\app\\routes\\utils\\sharedDataTransformers\\filterEmptyGroupItems"
      },
      {
        "source": "#app/routes/utils/sharedDataTransformers/squashTopStories",
        "resolvedPath": "src\\app\\routes\\utils\\sharedDataTransformers\\squashTopStories"
      },
      {
        "source": "#app/routes/utils/sharedDataTransformers/addIdsToGroups",
        "resolvedPath": "src\\app\\routes\\utils\\sharedDataTransformers\\addIdsToGroups"
      },
      {
        "source": "#app/routes/utils/sharedDataTransformers/filterGroupsWithoutStraplines",
        "resolvedPath": "src\\app\\routes\\utils\\sharedDataTransformers\\filterGroupsWithoutStraplines"
      },
      {
        "source": "#app/routes/utils/handleError",
        "resolvedPath": "src\\app\\routes\\utils\\handleError"
      },
      {
        "source": "#app/routes/utils/fetchDataFromBFF",
        "resolvedPath": "src\\app\\routes\\utils\\fetchDataFromBFF"
      },
      {
        "source": "../../utils/fetchPageData/utils/getErrorStatusCode",
        "resolvedPath": "src\\app\\routes\\utils\\fetchPageData\\utils\\getErrorStatusCode.js"
      },
      {
        "source": "../../utils/pageTypes",
        "resolvedPath": "src\\app\\routes\\utils\\pageTypes.ts"
      },
      {
        "source": "../../../lib/logger.node",
        "resolvedPath": "src\\app\\lib\\logger.node.js"
      },
      {
        "source": "../../../lib/logger.const",
        "resolvedPath": "src\\app\\lib\\logger.const.js"
      }
    ]
  },
  "src\\app\\routes\\frontPage\\index.js": {
    "incomingDependencies": [
      "src\\app\\routes\\index.js"
    ],
    "outgoingDependencies": [
      {
        "source": "#pages",
        "resolvedPath": "src\\app\\pages"
      },
      {
        "source": "#app/routes/utils/regex",
        "resolvedPath": "src\\app\\routes\\utils\\regex"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "src\\app\\routes\\utils\\pageTypes"
      },
      {
        "source": "./getInitialData",
        "resolvedPath": "src\\app\\routes\\frontPage\\getInitialData\\index.js"
      }
    ]
  },
  "src\\app\\routes\\homePage\\getInitialData\\index.ts": {
    "incomingDependencies": [
      "src\\app\\routes\\homePage\\index.js"
    ],
    "outgoingDependencies": [
      {
        "source": "#app/models/types/initialData",
        "resolvedPath": "src\\app\\models\\types\\initialData"
      },
      {
        "source": "../../../lib/logger.node",
        "resolvedPath": "src\\app\\lib\\logger.node.js"
      },
      {
        "source": "../../../lib/logger.const",
        "resolvedPath": "src\\app\\lib\\logger.const.js"
      },
      {
        "source": "../../../models/types/fetch",
        "resolvedPath": "src\\app\\models\\types\\fetch.ts"
      },
      {
        "source": "../../utils/fetchDataFromBFF",
        "resolvedPath": "src\\app\\routes\\utils\\fetchDataFromBFF\\index.ts"
      },
      {
        "source": "../../utils/pageTypes",
        "resolvedPath": "src\\app\\routes\\utils\\pageTypes.ts"
      }
    ]
  },
  "src\\app\\routes\\homePage\\getInitialData\\page-config.ts": {
    "incomingDependencies": [
      "src\\app\\routes\\utils\\constructPageFetchUrl\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global.ts"
      }
    ]
  },
  "src\\app\\routes\\homePage\\index.js": {
    "incomingDependencies": [
      "src\\app\\routes\\index.js"
    ],
    "outgoingDependencies": [
      {
        "source": "#pages",
        "resolvedPath": "src\\app\\pages"
      },
      {
        "source": "#app/routes/utils/regex",
        "resolvedPath": "src\\app\\routes\\utils\\regex"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "src\\app\\routes\\utils\\pageTypes"
      },
      {
        "source": "./getInitialData",
        "resolvedPath": "src\\app\\routes\\homePage\\getInitialData\\index.ts"
      }
    ]
  },
  "src\\app\\routes\\index.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "./article",
        "resolvedPath": "src\\app\\routes\\article\\index.tsx"
      },
      {
        "source": "./frontPage",
        "resolvedPath": "src\\app\\routes\\frontPage\\index.js"
      },
      {
        "source": "./homePage",
        "resolvedPath": "src\\app\\routes\\homePage\\index.js"
      },
      {
        "source": "./liveRadio",
        "resolvedPath": "src\\app\\routes\\liveRadio\\index.js"
      },
      {
        "source": "./mostRead",
        "resolvedPath": "src\\app\\routes\\mostRead\\index.js"
      },
      {
        "source": "./podcast",
        "resolvedPath": "src\\app\\routes\\podcast\\index.js"
      },
      {
        "source": "./onDemandRadio",
        "resolvedPath": "src\\app\\routes\\onDemandRadio\\index.js"
      },
      {
        "source": "./onDemandTV",
        "resolvedPath": "src\\app\\routes\\onDemandTV\\index.js"
      },
      {
        "source": "./topic",
        "resolvedPath": "src\\app\\routes\\topic\\index.js"
      },
      {
        "source": "./error",
        "resolvedPath": "src\\app\\routes\\error\\index.js"
      },
      {
        "source": "./errorNoRouteMatch",
        "resolvedPath": "src\\app\\routes\\errorNoRouteMatch\\index.js"
      }
    ]
  },
  "src\\app\\routes\\liveRadio\\getInitialData\\index.js": {
    "incomingDependencies": [
      "src\\app\\routes\\liveRadio\\index.js"
    ],
    "outgoingDependencies": [
      {
        "source": "ramda/src/path",
        "resolvedPath": "ramda/src/path"
      },
      {
        "source": "#app/routes/utils/withRadioSchedule",
        "resolvedPath": "src\\app\\routes\\utils\\withRadioSchedule"
      },
      {
        "source": "../../utils/fetchPageData",
        "resolvedPath": "src\\app\\routes\\utils\\fetchPageData\\index.js"
      },
      {
        "source": "../../utils/overrideRendererOnTest",
        "resolvedPath": "src\\app\\routes\\utils\\overrideRendererOnTest\\index.js"
      },
      {
        "source": "../../utils/fetchPageData/utils/getErrorStatusCode",
        "resolvedPath": "src\\app\\routes\\utils\\fetchPageData\\utils\\getErrorStatusCode.js"
      },
      {
        "source": "../../utils/getRadioService",
        "resolvedPath": "src\\app\\routes\\utils\\getRadioService\\index.js"
      }
    ]
  },
  "src\\app\\routes\\liveRadio\\index.js": {
    "incomingDependencies": [
      "src\\app\\routes\\index.js"
    ],
    "outgoingDependencies": [
      {
        "source": "#pages",
        "resolvedPath": "src\\app\\pages"
      },
      {
        "source": "#app/routes/utils/regex",
        "resolvedPath": "src\\app\\routes\\utils\\regex"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "src\\app\\routes\\utils\\pageTypes"
      },
      {
        "source": "./getInitialData",
        "resolvedPath": "src\\app\\routes\\liveRadio\\getInitialData\\index.js"
      }
    ]
  },
  "src\\app\\routes\\mostRead\\getInitialData\\index.js": {
    "incomingDependencies": [
      "src\\app\\routes\\mostRead\\index.js"
    ],
    "outgoingDependencies": [
      {
        "source": "../../utils/fetchPageData/utils/getErrorStatusCode",
        "resolvedPath": "src\\app\\routes\\utils\\fetchPageData\\utils\\getErrorStatusCode.js"
      },
      {
        "source": "../../utils/pageTypes",
        "resolvedPath": "src\\app\\routes\\utils\\pageTypes.ts"
      },
      {
        "source": "../../utils/handleError",
        "resolvedPath": "src\\app\\routes\\utils\\handleError\\index.ts"
      },
      {
        "source": "../../utils/fetchDataFromBFF",
        "resolvedPath": "src\\app\\routes\\utils\\fetchDataFromBFF\\index.ts"
      },
      {
        "source": "../../../lib/logger.const",
        "resolvedPath": "src\\app\\lib\\logger.const.js"
      },
      {
        "source": "../../../lib/logger.node",
        "resolvedPath": "src\\app\\lib\\logger.node.js"
      }
    ]
  },
  "src\\app\\routes\\mostRead\\index.js": {
    "incomingDependencies": [
      "src\\app\\routes\\index.js"
    ],
    "outgoingDependencies": [
      {
        "source": "#pages",
        "resolvedPath": "src\\app\\pages"
      },
      {
        "source": "#app/routes/utils/regex",
        "resolvedPath": "src\\app\\routes\\utils\\regex"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "src\\app\\routes\\utils\\pageTypes"
      },
      {
        "source": "./getInitialData",
        "resolvedPath": "src\\app\\routes\\mostRead\\getInitialData\\index.js"
      }
    ]
  },
  "src\\app\\routes\\onDemandAudio\\getInitialData\\index.ts": {
    "incomingDependencies": [
      "src\\app\\routes\\onDemandRadio\\index.js",
      "src\\app\\routes\\podcast\\index.js"
    ],
    "outgoingDependencies": [
      {
        "source": "ramda/src/path",
        "resolvedPath": "ramda/src/path"
      },
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "#lib/logger.const",
        "resolvedPath": "src\\app\\lib\\logger.const"
      },
      {
        "source": "#lib/utilities/episodeAvailability",
        "resolvedPath": "src\\app\\lib\\utilities\\episodeAvailability"
      },
      {
        "source": "#app/routes/utils/withRadioSchedule",
        "resolvedPath": "src\\app\\routes\\utils\\withRadioSchedule"
      },
      {
        "source": "#app/models/types/initialData",
        "resolvedPath": "src\\app\\models\\types\\initialData"
      },
      {
        "source": "#app/models/types/media",
        "resolvedPath": "src\\app\\models\\types\\media"
      },
      {
        "source": "../../utils/fetchPageData",
        "resolvedPath": "src\\app\\routes\\utils\\fetchPageData\\index.js"
      },
      {
        "source": "../../utils/overrideRendererOnTest",
        "resolvedPath": "src\\app\\routes\\utils\\overrideRendererOnTest\\index.js"
      },
      {
        "source": "../../utils/getPlaceholderImageUrl",
        "resolvedPath": "src\\app\\routes\\utils\\getPlaceholderImageUrl\\index.js"
      },
      {
        "source": "../../../lib/utilities/logging/pathWithLogging",
        "resolvedPath": "src\\app\\lib\\utilities\\logging\\pathWithLogging\\index.js"
      },
      {
        "source": "../../utils/fetchPageData/utils/getErrorStatusCode",
        "resolvedPath": "src\\app\\routes\\utils\\fetchPageData\\utils\\getErrorStatusCode.js"
      },
      {
        "source": "../../utils/getRadioService",
        "resolvedPath": "src\\app\\routes\\utils\\getRadioService\\index.js"
      },
      {
        "source": "../../utils/processRecentEpisodes",
        "resolvedPath": "src\\app\\routes\\utils\\processRecentEpisodes\\index.jsx"
      },
      {
        "source": "../tempData/podcastExternalLinks",
        "resolvedPath": "src\\app\\routes\\onDemandAudio\\tempData\\podcastExternalLinks\\index.js"
      }
    ]
  },
  "src\\app\\routes\\onDemandAudio\\tempData\\podcastExternalLinks\\arabic.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\routes\\onDemandAudio\\tempData\\podcastExternalLinks\\burmese.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\routes\\onDemandAudio\\tempData\\podcastExternalLinks\\gahuza.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\routes\\onDemandAudio\\tempData\\podcastExternalLinks\\hausa.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\routes\\onDemandAudio\\tempData\\podcastExternalLinks\\hindi.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\routes\\onDemandAudio\\tempData\\podcastExternalLinks\\index.js": {
    "incomingDependencies": [
      "src\\app\\routes\\onDemandAudio\\getInitialData\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "#lib/logger.node",
        "resolvedPath": "src\\app\\lib\\logger.node"
      },
      {
        "source": "#lib/logger.const",
        "resolvedPath": "src\\app\\lib\\logger.const"
      }
    ]
  },
  "src\\app\\routes\\onDemandAudio\\tempData\\podcastExternalLinks\\indonesia.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\routes\\onDemandAudio\\tempData\\podcastExternalLinks\\kyrgyz.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\routes\\onDemandAudio\\tempData\\podcastExternalLinks\\marathi.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\routes\\onDemandAudio\\tempData\\podcastExternalLinks\\nepali.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\routes\\onDemandAudio\\tempData\\podcastExternalLinks\\persian.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\routes\\onDemandAudio\\tempData\\podcastExternalLinks\\portuguese.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\routes\\onDemandAudio\\tempData\\podcastExternalLinks\\russian.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\routes\\onDemandAudio\\tempData\\podcastExternalLinks\\ukrainian.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\routes\\onDemandAudio\\tempData\\podcastExternalLinks\\urdu.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\routes\\onDemandAudio\\tempData\\podcastExternalLinks\\zhongwen.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\routes\\onDemandRadio\\index.js": {
    "incomingDependencies": [
      "src\\app\\routes\\index.js"
    ],
    "outgoingDependencies": [
      {
        "source": "#pages",
        "resolvedPath": "src\\app\\pages"
      },
      {
        "source": "#app/routes/utils/regex",
        "resolvedPath": "src\\app\\routes\\utils\\regex"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "src\\app\\routes\\utils\\pageTypes"
      },
      {
        "source": "../onDemandAudio/getInitialData",
        "resolvedPath": "src\\app\\routes\\onDemandAudio\\getInitialData\\index.ts"
      }
    ]
  },
  "src\\app\\routes\\onDemandTV\\getInitialData\\index.js": {
    "incomingDependencies": [
      "src\\app\\routes\\onDemandTV\\index.js"
    ],
    "outgoingDependencies": [
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "#lib/utilities/logging/pathWithLogging",
        "resolvedPath": "src\\app\\lib\\utilities\\logging\\pathWithLogging"
      },
      {
        "source": "#lib/logger.const",
        "resolvedPath": "src\\app\\lib\\logger.const"
      },
      {
        "source": "#lib/utilities/episodeAvailability",
        "resolvedPath": "src\\app\\lib\\utilities\\episodeAvailability"
      },
      {
        "source": "#app/routes/utils/processRecentEpisodes",
        "resolvedPath": "src\\app\\routes\\utils\\processRecentEpisodes"
      },
      {
        "source": "../../utils/fetchPageData",
        "resolvedPath": "src\\app\\routes\\utils\\fetchPageData\\index.js"
      },
      {
        "source": "../../utils/overrideRendererOnTest",
        "resolvedPath": "src\\app\\routes\\utils\\overrideRendererOnTest\\index.js"
      },
      {
        "source": "../../utils/getPlaceholderImageUrl",
        "resolvedPath": "src\\app\\routes\\utils\\getPlaceholderImageUrl\\index.js"
      },
      {
        "source": "../../utils/fetchPageData/utils/getErrorStatusCode",
        "resolvedPath": "src\\app\\routes\\utils\\fetchPageData\\utils\\getErrorStatusCode.js"
      }
    ]
  },
  "src\\app\\routes\\onDemandTV\\index.js": {
    "incomingDependencies": [
      "src\\app\\routes\\index.js"
    ],
    "outgoingDependencies": [
      {
        "source": "#pages",
        "resolvedPath": "src\\app\\pages"
      },
      {
        "source": "#app/routes/utils/regex",
        "resolvedPath": "src\\app\\routes\\utils\\regex"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "src\\app\\routes\\utils\\pageTypes"
      },
      {
        "source": "./getInitialData",
        "resolvedPath": "src\\app\\routes\\onDemandTV\\getInitialData\\index.js"
      }
    ]
  },
  "src\\app\\routes\\podcast\\index.js": {
    "incomingDependencies": [
      "src\\app\\routes\\index.js"
    ],
    "outgoingDependencies": [
      {
        "source": "#pages",
        "resolvedPath": "src\\app\\pages"
      },
      {
        "source": "#app/routes/utils/regex",
        "resolvedPath": "src\\app\\routes\\utils\\regex"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "src\\app\\routes\\utils\\pageTypes"
      },
      {
        "source": "../onDemandAudio/getInitialData",
        "resolvedPath": "src\\app\\routes\\onDemandAudio\\getInitialData\\index.ts"
      }
    ]
  },
  "src\\app\\routes\\topic\\getInitialData\\index.js": {
    "incomingDependencies": [
      "src\\app\\routes\\topic\\index.js"
    ],
    "outgoingDependencies": [
      {
        "source": "url-parse",
        "resolvedPath": "url-parse"
      },
      {
        "source": "../../../lib/logger.const",
        "resolvedPath": "src\\app\\lib\\logger.const.js"
      },
      {
        "source": "../../../lib/logger.node",
        "resolvedPath": "src\\app\\lib\\logger.node.js"
      },
      {
        "source": "../../utils/fetchPageData/utils/getErrorStatusCode",
        "resolvedPath": "src\\app\\routes\\utils\\fetchPageData\\utils\\getErrorStatusCode.js"
      },
      {
        "source": "../../utils/fetchDataFromBFF",
        "resolvedPath": "src\\app\\routes\\utils\\fetchDataFromBFF\\index.ts"
      },
      {
        "source": "../../utils/pageTypes",
        "resolvedPath": "src\\app\\routes\\utils\\pageTypes.ts"
      },
      {
        "source": "../../../lib/utilities/isTest",
        "resolvedPath": "src\\app\\lib\\utilities\\isTest\\index.js"
      }
    ]
  },
  "src\\app\\routes\\topic\\getInitialData\\page-config.ts": {
    "incomingDependencies": [
      "src\\app\\routes\\utils\\constructPageFetchUrl\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global.ts"
      }
    ]
  },
  "src\\app\\routes\\topic\\index.js": {
    "incomingDependencies": [
      "src\\app\\routes\\index.js"
    ],
    "outgoingDependencies": [
      {
        "source": "#pages",
        "resolvedPath": "src\\app\\pages"
      },
      {
        "source": "#app/routes/utils/regex",
        "resolvedPath": "src\\app\\routes\\utils\\regex"
      },
      {
        "source": "#app/routes/utils/pageTypes",
        "resolvedPath": "src\\app\\routes\\utils\\pageTypes"
      },
      {
        "source": "./getInitialData",
        "resolvedPath": "src\\app\\routes\\topic\\getInitialData\\index.js"
      }
    ]
  },
  "src\\app\\routes\\utils\\certsRequired\\index.ts": {
    "incomingDependencies": [
      "src\\app\\routes\\article\\getInitialData\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../getEnvironment",
        "resolvedPath": "src\\app\\routes\\utils\\getEnvironment\\index.ts"
      }
    ]
  },
  "src\\app\\routes\\utils\\constructPageFetchUrl\\index.ts": {
    "incomingDependencies": [
      "src\\app\\routes\\utils\\fetchDataFromBFF\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "url-parse",
        "resolvedPath": "url-parse"
      },
      {
        "source": "ramda/src/pipe",
        "resolvedPath": "ramda/src/pipe"
      },
      {
        "source": "#app/routes/utils/getEnvironment",
        "resolvedPath": "src\\app\\routes\\utils\\getEnvironment"
      },
      {
        "source": "#app/lib/utilities/getUrlHelpers/getMostReadUrls",
        "resolvedPath": "src\\app\\lib\\utilities\\getUrlHelpers\\getMostReadUrls"
      },
      {
        "source": "#lib/utilities/urlParser",
        "resolvedPath": "src\\app\\lib\\utilities\\urlParser"
      },
      {
        "source": "#models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global"
      },
      {
        "source": "../handleError",
        "resolvedPath": "src\\app\\routes\\utils\\handleError\\index.ts"
      },
      {
        "source": "../../homePage/getInitialData/page-config",
        "resolvedPath": "src\\app\\routes\\homePage\\getInitialData\\page-config.ts"
      },
      {
        "source": "../../topic/getInitialData/page-config",
        "resolvedPath": "src\\app\\routes\\topic\\getInitialData\\page-config.ts"
      },
      {
        "source": "../pageTypes",
        "resolvedPath": "src\\app\\routes\\utils\\pageTypes.ts"
      },
      {
        "source": "../parseAvRoute",
        "resolvedPath": "src\\app\\routes\\utils\\parseAvRoute\\index.ts"
      }
    ]
  },
  "src\\app\\routes\\utils\\fetchDataFromBFF\\client.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\routes\\utils\\fetchDataFromBFF\\index.ts": {
    "incomingDependencies": [
      "src\\app\\routes\\article\\getInitialData\\index.ts",
      "src\\app\\routes\\homePage\\getInitialData\\index.ts",
      "src\\app\\routes\\mostRead\\getInitialData\\index.js",
      "src\\app\\routes\\topic\\getInitialData\\index.js"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../../server/utilities/getAgent",
        "resolvedPath": "src\\server\\utilities\\getAgent\\index.js"
      },
      {
        "source": "../constructPageFetchUrl",
        "resolvedPath": "src\\app\\routes\\utils\\constructPageFetchUrl\\index.ts"
      },
      {
        "source": "../getEnvironment",
        "resolvedPath": "src\\app\\routes\\utils\\getEnvironment\\index.ts"
      },
      {
        "source": "../../../models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global.ts"
      },
      {
        "source": "../fetchPageData",
        "resolvedPath": "src\\app\\routes\\utils\\fetchPageData\\index.js"
      },
      {
        "source": "../fetchPageData/utils/getErrorStatusCode",
        "resolvedPath": "src\\app\\routes\\utils\\fetchPageData\\utils\\getErrorStatusCode.js"
      },
      {
        "source": "../../../lib/logger.const",
        "resolvedPath": "src\\app\\lib\\logger.const.js"
      },
      {
        "source": "../../../models/types/fetch",
        "resolvedPath": "src\\app\\models\\types\\fetch.ts"
      },
      {
        "source": "../../../lib/logger.node",
        "resolvedPath": "src\\app\\lib\\logger.node.js"
      }
    ]
  },
  "src\\app\\routes\\utils\\fetchPageData\\client.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\app\\routes\\utils\\fetchPageData\\index.js": {
    "incomingDependencies": [
      "src\\app\\routes\\article\\utils\\getOnwardsData.ts",
      "src\\app\\routes\\liveRadio\\getInitialData\\index.js",
      "src\\app\\routes\\onDemandAudio\\getInitialData\\index.ts",
      "src\\app\\routes\\onDemandTV\\getInitialData\\index.js",
      "src\\app\\routes\\utils\\fetchDataFromBFF\\index.ts",
      "src\\app\\routes\\utils\\fetchPageData\\withCache.js"
    ],
    "outgoingDependencies": [
      {
        "source": "isomorphic-fetch",
        "resolvedPath": "isomorphic-fetch"
      },
      {
        "source": "#lib/logger.node",
        "resolvedPath": "src\\app\\lib\\logger.node"
      },
      {
        "source": "#lib/logger.const",
        "resolvedPath": "src\\app\\lib\\logger.const"
      },
      {
        "source": "#lib/statusCodes.const",
        "resolvedPath": "src\\app\\lib\\statusCodes.const"
      },
      {
        "source": "#app/lib/utilities/getFetchTimeouts",
        "resolvedPath": "src\\app\\lib\\utilities\\getFetchTimeouts"
      },
      {
        "source": "#lib/utilities/onClient",
        "resolvedPath": "src\\app\\lib\\utilities\\onClient"
      },
      {
        "source": "#app/lib/utilities/isLocal",
        "resolvedPath": "src\\app\\lib\\utilities\\isLocal"
      },
      {
        "source": "./utils/getErrorStatusCode",
        "resolvedPath": "src\\app\\routes\\utils\\fetchPageData\\utils\\getErrorStatusCode.js"
      },
      {
        "source": "./utils/getUrl",
        "resolvedPath": "src\\app\\routes\\utils\\fetchPageData\\utils\\getUrl\\index.js"
      }
    ]
  },
  "src\\app\\routes\\utils\\fetchPageData\\utils\\getBaseUrl\\index.js": {
    "incomingDependencies": [
      "src\\app\\routes\\utils\\fetchPageData\\utils\\getUrl\\index.js"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\routes\\utils\\fetchPageData\\utils\\getErrorStatusCode.js": {
    "incomingDependencies": [
      "src\\app\\routes\\frontPage\\getInitialData\\index.js",
      "src\\app\\routes\\liveRadio\\getInitialData\\index.js",
      "src\\app\\routes\\mostRead\\getInitialData\\index.js",
      "src\\app\\routes\\onDemandAudio\\getInitialData\\index.ts",
      "src\\app\\routes\\onDemandTV\\getInitialData\\index.js",
      "src\\app\\routes\\topic\\getInitialData\\index.js",
      "src\\app\\routes\\utils\\fetchDataFromBFF\\index.ts",
      "src\\app\\routes\\utils\\fetchPageData\\index.js"
    ],
    "outgoingDependencies": [
      {
        "source": "#lib/utilities/onClient",
        "resolvedPath": "src\\app\\lib\\utilities\\onClient"
      },
      {
        "source": "#lib/statusCodes.const",
        "resolvedPath": "src\\app\\lib\\statusCodes.const"
      }
    ]
  },
  "src\\app\\routes\\utils\\fetchPageData\\utils\\getRouteProps\\fallbackServiceParam\\index.js": {
    "incomingDependencies": [
      "src\\app\\routes\\utils\\fetchPageData\\utils\\getRouteProps\\index.js"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../../../../lib/config/services/loadableConfig",
        "resolvedPath": "src\\app\\lib\\config\\services\\loadableConfig.ts"
      }
    ]
  },
  "src\\app\\routes\\utils\\fetchPageData\\utils\\getRouteProps\\index.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react-router-config",
        "resolvedPath": "node_modules\\@types\\react\\-router-config"
      },
      {
        "source": "ramda/src/path",
        "resolvedPath": "ramda/src/path"
      },
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      },
      {
        "source": "#lib/utilities/variantHandler",
        "resolvedPath": "src\\app\\lib\\utilities\\variantHandler"
      },
      {
        "source": "#app/routes/utils/isAmpPath",
        "resolvedPath": "src\\app\\routes\\utils\\isAmpPath"
      },
      {
        "source": "#app/routes/utils/isAppPath",
        "resolvedPath": "src\\app\\routes\\utils\\isAppPath"
      },
      {
        "source": "#app/routes/utils/isLitePath",
        "resolvedPath": "src\\app\\routes\\utils\\isLitePath"
      },
      {
        "source": "#app/routes",
        "resolvedPath": "src\\app\\routes"
      },
      {
        "source": "./fallbackServiceParam",
        "resolvedPath": "src\\app\\routes\\utils\\fetchPageData\\utils\\getRouteProps\\fallbackServiceParam\\index.js"
      }
    ]
  },
  "src\\app\\routes\\utils\\fetchPageData\\utils\\getUrl\\index.js": {
    "incomingDependencies": [
      "src\\app\\routes\\utils\\fetchPageData\\index.js"
    ],
    "outgoingDependencies": [
      {
        "source": "#lib/utilities/urlParser",
        "resolvedPath": "src\\app\\lib\\utilities\\urlParser"
      },
      {
        "source": "#lib/utilities/onClient",
        "resolvedPath": "src\\app\\lib\\utilities\\onClient"
      },
      {
        "source": "#lib/utilities/isLive",
        "resolvedPath": "src\\app\\lib\\utilities\\isLive"
      },
      {
        "source": "#app/lib/regex.const",
        "resolvedPath": "src\\app\\lib\\regex.const"
      },
      {
        "source": "#app/lib/utilities/getEnvConfig",
        "resolvedPath": "src\\app\\lib\\utilities\\getEnvConfig"
      },
      {
        "source": "../getBaseUrl",
        "resolvedPath": "src\\app\\routes\\utils\\fetchPageData\\utils\\getBaseUrl\\index.js"
      }
    ]
  },
  "src\\app\\routes\\utils\\fetchPageData\\withCache.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "lru-cache",
        "resolvedPath": "lru-cache"
      },
      {
        "source": ".",
        "resolvedPath": "src\\app\\routes\\utils\\fetchPageData\\index.js"
      }
    ]
  },
  "src\\app\\routes\\utils\\getConfig\\index.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "ramda/src/path",
        "resolvedPath": "ramda/src/path"
      },
      {
        "source": "#lib/logger.node",
        "resolvedPath": "src\\app\\lib\\logger.node"
      }
    ]
  },
  "src\\app\\routes\\utils\\getEnvironment\\index.ts": {
    "incomingDependencies": [
      "src\\app\\routes\\utils\\certsRequired\\index.ts",
      "src\\app\\routes\\utils\\fetchDataFromBFF\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "#app/lib/utilities/getEnvConfig",
        "resolvedPath": "src\\app\\lib\\utilities\\getEnvConfig"
      },
      {
        "source": "url-parse",
        "resolvedPath": "url-parse"
      }
    ]
  },
  "src\\app\\routes\\utils\\getPlaceholderImageUrl\\index.js": {
    "incomingDependencies": [
      "src\\app\\routes\\onDemandAudio\\getInitialData\\index.ts",
      "src\\app\\routes\\onDemandTV\\getInitialData\\index.js"
    ],
    "outgoingDependencies": [
      {
        "source": "ramda/src/is",
        "resolvedPath": "ramda/src/is"
      },
      {
        "source": "#app/lib/utilities/getEnvConfig",
        "resolvedPath": "src\\app\\lib\\utilities\\getEnvConfig"
      }
    ]
  },
  "src\\app\\routes\\utils\\getRadioService\\index.js": {
    "incomingDependencies": [
      "src\\app\\routes\\liveRadio\\getInitialData\\index.js",
      "src\\app\\routes\\onDemandAudio\\getInitialData\\index.ts"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\routes\\utils\\handleError\\index.ts": {
    "incomingDependencies": [
      "src\\app\\routes\\article\\getInitialData\\index.ts",
      "src\\app\\routes\\mostRead\\getInitialData\\index.js",
      "src\\app\\routes\\utils\\constructPageFetchUrl\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../models/types/fetch",
        "resolvedPath": "src\\app\\models\\types\\fetch.ts"
      }
    ]
  },
  "src\\app\\routes\\utils\\isAmpPath\\index.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "url-parse",
        "resolvedPath": "url-parse"
      },
      {
        "source": "#app/lib/regex.const",
        "resolvedPath": "src\\app\\lib\\regex.const"
      }
    ]
  },
  "src\\app\\routes\\utils\\isAppPath\\index.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "url-parse",
        "resolvedPath": "url-parse"
      },
      {
        "source": "#app/lib/regex.const",
        "resolvedPath": "src\\app\\lib\\regex.const"
      }
    ]
  },
  "src\\app\\routes\\utils\\isLitePath\\index.ts": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "url-parse",
        "resolvedPath": "url-parse"
      },
      {
        "source": "#app/lib/regex.const",
        "resolvedPath": "src\\app\\lib\\regex.const"
      }
    ]
  },
  "src\\app\\routes\\utils\\overrideRendererOnTest\\index.js": {
    "incomingDependencies": [
      "src\\app\\routes\\liveRadio\\getInitialData\\index.js",
      "src\\app\\routes\\onDemandAudio\\getInitialData\\index.ts",
      "src\\app\\routes\\onDemandTV\\getInitialData\\index.js"
    ],
    "outgoingDependencies": [
      {
        "source": "url-parse",
        "resolvedPath": "url-parse"
      },
      {
        "source": "#lib/utilities/isLive",
        "resolvedPath": "src\\app\\lib\\utilities\\isLive"
      }
    ]
  },
  "src\\app\\routes\\utils\\pageTypes.ts": {
    "incomingDependencies": [
      "src\\app\\components\\Ad\\Amp\\AdSlot\\index.tsx",
      "src\\app\\components\\ATIAnalytics\\params\\index.ts",
      "src\\app\\components\\ChartbeatAnalytics\\utils\\index.ts",
      "src\\app\\components\\Disclaimer\\index.tsx",
      "src\\app\\components\\Image\\index.tsx",
      "src\\app\\components\\MostRead\\index.tsx",
      "src\\app\\components\\ThemeProvider\\withThemeProvider.tsx",
      "src\\app\\contexts\\EventTrackingContext\\index.tsx",
      "src\\app\\contexts\\RequestContext\\getStatsPageIdentifier\\index.ts",
      "src\\app\\legacy\\containers\\PageHandlers\\withData\\shouldRender\\index.js",
      "src\\app\\legacy\\psammead\\psammead-image\\src\\index.jsx",
      "src\\app\\legacy\\psammead\\psammead-social-embed\\src\\index.jsx",
      "src\\app\\models\\types\\global.ts",
      "src\\app\\routes\\frontPage\\getInitialData\\index.js",
      "src\\app\\routes\\homePage\\getInitialData\\index.ts",
      "src\\app\\routes\\mostRead\\getInitialData\\index.js",
      "src\\app\\routes\\topic\\getInitialData\\index.js",
      "src\\app\\routes\\utils\\constructPageFetchUrl\\index.ts"
    ],
    "outgoingDependencies": []
  },
  "src\\app\\routes\\utils\\parseAvRoute\\index.ts": {
    "incomingDependencies": [
      "src\\app\\routes\\utils\\constructPageFetchUrl\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "#lib/config/services/loadableConfig",
        "resolvedPath": "src\\app\\lib\\config\\services\\loadableConfig"
      },
      {
        "source": "#app/models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global"
      }
    ]
  },
  "src\\app\\routes\\utils\\processRecentEpisodes\\index.jsx": {
    "incomingDependencies": [
      "src\\app\\routes\\onDemandAudio\\getInitialData\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "ramda/src/path",
        "resolvedPath": "ramda/src/path"
      },
      {
        "source": "ramda/src/is",
        "resolvedPath": "ramda/src/is"
      }
    ]
  },
  "src\\app\\routes\\utils\\regex\\index.js": {
    "incomingDependencies": [
      "src\\server\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../lib/config/services/loadableConfig",
        "resolvedPath": "src\\app\\lib\\config\\services\\loadableConfig.ts"
      },
      {
        "source": "./utils",
        "resolvedPath": "src\\app\\routes\\utils\\regex\\utils\\index.js"
      }
    ]
  },
  "src\\app\\routes\\utils\\regex\\utils\\index.js": {
    "incomingDependencies": [
      "src\\app\\routes\\utils\\regex\\index.js"
    ],
    "outgoingDependencies": [
      {
        "source": "#app/lib/utilities/isLive",
        "resolvedPath": "src\\app\\lib\\utilities\\isLive"
      }
    ]
  },
  "src\\app\\routes\\utils\\sharedDataTransformers\\addIdsToGroups\\index.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "ramda/src/path",
        "resolvedPath": "ramda/src/path"
      },
      {
        "source": "ramda/src/mergeDeepLeft",
        "resolvedPath": "ramda/src/mergeDeepLeft"
      },
      {
        "source": "../addIdsToItems",
        "resolvedPath": "src\\app\\routes\\utils\\sharedDataTransformers\\addIdsToItems\\index.js"
      }
    ]
  },
  "src\\app\\routes\\utils\\sharedDataTransformers\\addIdsToItems\\index.js": {
    "incomingDependencies": [
      "src\\app\\routes\\utils\\sharedDataTransformers\\addIdsToGroups\\index.js"
    ],
    "outgoingDependencies": [
      {
        "source": "uuid",
        "resolvedPath": "uuid"
      },
      {
        "source": "ramda/src/lensPath",
        "resolvedPath": "ramda/src/lensPath"
      },
      {
        "source": "ramda/src/view",
        "resolvedPath": "ramda/src/view"
      },
      {
        "source": "ramda/src/set",
        "resolvedPath": "ramda/src/set"
      }
    ]
  },
  "src\\app\\routes\\utils\\sharedDataTransformers\\filterEmptyGroupItems\\index.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      }
    ]
  },
  "src\\app\\routes\\utils\\sharedDataTransformers\\filterGroupsWithoutStraplines\\index.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      }
    ]
  },
  "src\\app\\routes\\utils\\sharedDataTransformers\\filterUnknownContentTypes\\index.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      }
    ]
  },
  "src\\app\\routes\\utils\\sharedDataTransformers\\squashTopStories\\index.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "ramda/src/pathOr",
        "resolvedPath": "ramda/src/pathOr"
      }
    ]
  },
  "src\\app\\routes\\utils\\withRadioSchedule\\index.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "isomorphic-fetch",
        "resolvedPath": "isomorphic-fetch"
      },
      {
        "source": "#lib/logger.node",
        "resolvedPath": "src\\app\\lib\\logger.node"
      },
      {
        "source": "#lib/utilities/getUrlHelpers/getRadioSchedulesUrls",
        "resolvedPath": "src\\app\\lib\\utilities\\getUrlHelpers\\getRadioSchedulesUrls"
      },
      {
        "source": "#lib/utilities/urlParser",
        "resolvedPath": "src\\app\\lib\\utilities\\urlParser"
      },
      {
        "source": "#containers/RadioSchedule/utilities/processRadioSchedule",
        "resolvedPath": "src\\app\\legacy\\containers\\RadioSchedule\\utilities\\processRadioSchedule"
      },
      {
        "source": "#lib/logger.const",
        "resolvedPath": "src\\app\\lib\\logger.const"
      },
      {
        "source": "#app/lib/utilities/getEnvConfig",
        "resolvedPath": "src\\app\\lib\\utilities\\getEnvConfig"
      }
    ]
  },
  "src\\app\\utilities\\pixelsToRem\\index.ts": {
    "incomingDependencies": [
      "src\\app\\components\\AmpIframe\\index.styles.tsx",
      "src\\app\\components\\Billboard\\index.styles.ts",
      "src\\app\\components\\Byline\\index.styles.tsx",
      "src\\app\\components\\Disclaimer\\index.styles.ts",
      "src\\app\\components\\EmbedConsentBanner\\ConsentBanner.styles.tsx",
      "src\\app\\components\\Embeds\\EmbedError\\index.styles.tsx",
      "src\\app\\components\\InlineLink\\index.styles.ts",
      "src\\app\\components\\ThemeProvider\\focusIndicator.ts",
      "src\\app\\components\\ThemeProvider\\fontMediaQueries.ts",
      "src\\app\\components\\ThemeProvider\\fontSizes.ts",
      "src\\app\\components\\ThemeProvider\\mediaQueries.ts",
      "src\\app\\components\\ThemeProvider\\spacings.ts",
      "src\\app\\pages\\ArticlePage\\ArticlePage.styles.ts",
      "src\\app\\pages\\MediaArticlePage\\MediaArticlePage.styles.ts",
      "src\\app\\pages\\MediaArticlePage\\PagePromoSections\\LatestMediaSection\\index.styles.ts"
    ],
    "outgoingDependencies": []
  },
  "src\\client.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@emotion/cache",
        "resolvedPath": "@emotion/cache"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "@loadable/component",
        "resolvedPath": "@loadable/component"
      },
      {
        "source": "react-dom/client",
        "resolvedPath": "node_modules\\@types\\react\\-dom\\client"
      },
      {
        "source": "#lib/joinUsTemplate",
        "resolvedPath": "src\\app\\lib\\joinUsTemplate"
      },
      {
        "source": "#lib/logger.node",
        "resolvedPath": "src\\app\\lib\\logger.node"
      },
      {
        "source": "./app/legacy/containers/App",
        "resolvedPath": "src\\app\\legacy\\containers\\App\\index.jsx"
      }
    ]
  },
  "src\\clientEnvVars.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\index.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\integration\\common\\a11y.js": {
    "incomingDependencies": [
      "src\\integration\\common\\index.js"
    ],
    "outgoingDependencies": []
  },
  "src\\integration\\common\\ads.amp.js": {
    "incomingDependencies": [
      "src\\integration\\common\\index.js"
    ],
    "outgoingDependencies": []
  },
  "src\\integration\\common\\ads.canonical.js": {
    "incomingDependencies": [
      "src\\integration\\common\\index.js"
    ],
    "outgoingDependencies": []
  },
  "src\\integration\\common\\ampIframe.amp.js": {
    "incomingDependencies": [
      "src\\integration\\common\\index.js"
    ],
    "outgoingDependencies": []
  },
  "src\\integration\\common\\analytics.amp.js": {
    "incomingDependencies": [
      "src\\integration\\common\\index.js"
    ],
    "outgoingDependencies": []
  },
  "src\\integration\\common\\analytics.canonical.js": {
    "incomingDependencies": [
      "src\\integration\\common\\index.js"
    ],
    "outgoingDependencies": []
  },
  "src\\integration\\common\\appleItunesAppBanner.js": {
    "incomingDependencies": [
      "src\\integration\\common\\index.js"
    ],
    "outgoingDependencies": []
  },
  "src\\integration\\common\\core.amp.js": {
    "incomingDependencies": [
      "src\\integration\\common\\index.js"
    ],
    "outgoingDependencies": []
  },
  "src\\integration\\common\\core.canonical.js": {
    "incomingDependencies": [
      "src\\integration\\common\\index.js"
    ],
    "outgoingDependencies": []
  },
  "src\\integration\\common\\embedHtml.amp.js": {
    "incomingDependencies": [
      "src\\integration\\common\\index.js"
    ],
    "outgoingDependencies": []
  },
  "src\\integration\\common\\embedHtml.canonical.js": {
    "incomingDependencies": [
      "src\\integration\\common\\index.js"
    ],
    "outgoingDependencies": []
  },
  "src\\integration\\common\\embedImages.js": {
    "incomingDependencies": [
      "src\\integration\\common\\index.js"
    ],
    "outgoingDependencies": []
  },
  "src\\integration\\common\\flourishEmbed.amp.js": {
    "incomingDependencies": [
      "src\\integration\\common\\index.js"
    ],
    "outgoingDependencies": []
  },
  "src\\integration\\common\\flourishEmbed.canonical.js": {
    "incomingDependencies": [
      "src\\integration\\common\\index.js"
    ],
    "outgoingDependencies": []
  },
  "src\\integration\\common\\footer.amp.js": {
    "incomingDependencies": [
      "src\\integration\\common\\index.js"
    ],
    "outgoingDependencies": []
  },
  "src\\integration\\common\\footer.js": {
    "incomingDependencies": [
      "src\\integration\\common\\index.js"
    ],
    "outgoingDependencies": []
  },
  "src\\integration\\common\\header.js": {
    "incomingDependencies": [
      "src\\integration\\common\\index.js"
    ],
    "outgoingDependencies": []
  },
  "src\\integration\\common\\image.js": {
    "incomingDependencies": [
      "src\\integration\\common\\index.js"
    ],
    "outgoingDependencies": []
  },
  "src\\integration\\common\\index.js": {
    "incomingDependencies": [
      "src\\integration\\pages\\articles\\ampTests.js",
      "src\\integration\\pages\\articles\\canonicalTests.js",
      "src\\integration\\pages\\articles\\crossPlatformTests.js",
      "src\\integration\\pages\\featureIdxPage\\ampTests.js",
      "src\\integration\\pages\\featureIdxPage\\canonicalTests.js",
      "src\\integration\\pages\\featureIdxPage\\crossPlatformTests.js",
      "src\\integration\\pages\\homePage\\ampTests.js",
      "src\\integration\\pages\\homePage\\canonicalTests.js",
      "src\\integration\\pages\\homePage\\crossPlatformTests.js",
      "src\\integration\\pages\\liveRadio\\canonicalTests.js",
      "src\\integration\\pages\\mediaArticlePage\\ampTests.js",
      "src\\integration\\pages\\mediaArticlePage\\canonicalTests.js",
      "src\\integration\\pages\\mediaArticlePage\\crossPlatformTests.js",
      "src\\integration\\pages\\mediaAssetPage\\ampTests.js",
      "src\\integration\\pages\\mediaAssetPage\\canonicalTests.js",
      "src\\integration\\pages\\mediaAssetPage\\crossPlatformTests.js",
      "src\\integration\\pages\\mostReadPage\\ampTests.js",
      "src\\integration\\pages\\mostReadPage\\canonicalTests.js",
      "src\\integration\\pages\\mostReadPage\\crossPlatformTests.js",
      "src\\integration\\pages\\onDemandAudioPage\\canonicalTests.js",
      "src\\integration\\pages\\onDemandTVPage\\canonicalTests.js",
      "src\\integration\\pages\\photoGalleryPage\\ampTests.js",
      "src\\integration\\pages\\photoGalleryPage\\canonicalTests.js",
      "src\\integration\\pages\\photoGalleryPage\\crossPlatformTests.js",
      "src\\integration\\pages\\podcastPage\\canonicalTests.js",
      "src\\integration\\pages\\storyPage\\ampTests.js",
      "src\\integration\\pages\\storyPage\\canonicalTests.js",
      "src\\integration\\pages\\storyPage\\crossPlatformTests.js",
      "src\\integration\\pages\\topicPage\\canonicalTests.js",
      "src\\integration\\pages\\topicPage\\crossPlatformTests.js"
    ],
    "outgoingDependencies": [
      {
        "source": "./a11y",
        "resolvedPath": "src\\integration\\common\\a11y.js"
      },
      {
        "source": "./analytics.amp",
        "resolvedPath": "src\\integration\\common\\analytics.amp.js"
      },
      {
        "source": "./analytics.canonical",
        "resolvedPath": "src\\integration\\common\\analytics.canonical.js"
      },
      {
        "source": "./core.amp",
        "resolvedPath": "src\\integration\\common\\core.amp.js"
      },
      {
        "source": "./core.canonical",
        "resolvedPath": "src\\integration\\common\\core.canonical.js"
      },
      {
        "source": "./footer",
        "resolvedPath": "src\\integration\\common\\footer.js"
      },
      {
        "source": "./footer.amp",
        "resolvedPath": "src\\integration\\common\\footer.amp.js"
      },
      {
        "source": "./header",
        "resolvedPath": "src\\integration\\common\\header.js"
      },
      {
        "source": "./mainHeading",
        "resolvedPath": "src\\integration\\common\\mainHeading.js"
      },
      {
        "source": "./mediaPlayerAudio",
        "resolvedPath": "src\\integration\\common\\mediaPlayerAudio.js"
      },
      {
        "source": "./mediaPlayer",
        "resolvedPath": "src\\integration\\common\\mediaPlayer.js"
      },
      {
        "source": "./radioSchedule",
        "resolvedPath": "src\\integration\\common\\radioSchedule.js"
      },
      {
        "source": "./recentEpisodes",
        "resolvedPath": "src\\integration\\common\\recentEpisodes.js"
      },
      {
        "source": "./SEO",
        "resolvedPath": "src\\integration\\common\\SEO.js"
      },
      {
        "source": "./SEO.amp",
        "resolvedPath": "src\\integration\\common\\SEO.amp.js"
      },
      {
        "source": "./timestamp",
        "resolvedPath": "src\\integration\\common\\timestamp.js"
      },
      {
        "source": "./image",
        "resolvedPath": "src\\integration\\common\\image.js"
      },
      {
        "source": "./appleItunesAppBanner",
        "resolvedPath": "src\\integration\\common\\appleItunesAppBanner.js"
      },
      {
        "source": "./storyPromo",
        "resolvedPath": "src\\integration\\common\\storyPromo.js"
      },
      {
        "source": "./sections",
        "resolvedPath": "src\\integration\\common\\sections.js"
      },
      {
        "source": "./mostReadTests",
        "resolvedPath": "src\\integration\\common\\mostReadTests.js"
      },
      {
        "source": "./ads.amp",
        "resolvedPath": "src\\integration\\common\\ads.amp.js"
      },
      {
        "source": "./ads.canonical",
        "resolvedPath": "src\\integration\\common\\ads.canonical.js"
      },
      {
        "source": "./flourishEmbed.canonical",
        "resolvedPath": "src\\integration\\common\\flourishEmbed.canonical.js"
      },
      {
        "source": "./flourishEmbed.amp",
        "resolvedPath": "src\\integration\\common\\flourishEmbed.amp.js"
      },
      {
        "source": "./embedHtml.canonical",
        "resolvedPath": "src\\integration\\common\\embedHtml.canonical.js"
      },
      {
        "source": "./embedHtml.amp",
        "resolvedPath": "src\\integration\\common\\embedHtml.amp.js"
      },
      {
        "source": "./embedImages",
        "resolvedPath": "src\\integration\\common\\embedImages.js"
      },
      {
        "source": "./ampIframe.amp",
        "resolvedPath": "src\\integration\\common\\ampIframe.amp.js"
      }
    ]
  },
  "src\\integration\\common\\mainHeading.js": {
    "incomingDependencies": [
      "src\\integration\\common\\index.js"
    ],
    "outgoingDependencies": []
  },
  "src\\integration\\common\\mediaPlayer.js": {
    "incomingDependencies": [
      "src\\integration\\common\\index.js"
    ],
    "outgoingDependencies": []
  },
  "src\\integration\\common\\mediaPlayerAudio.js": {
    "incomingDependencies": [
      "src\\integration\\common\\index.js"
    ],
    "outgoingDependencies": []
  },
  "src\\integration\\common\\mostReadTests.js": {
    "incomingDependencies": [
      "src\\integration\\common\\index.js"
    ],
    "outgoingDependencies": []
  },
  "src\\integration\\common\\radioSchedule.js": {
    "incomingDependencies": [
      "src\\integration\\common\\index.js"
    ],
    "outgoingDependencies": []
  },
  "src\\integration\\common\\recentEpisodes.js": {
    "incomingDependencies": [
      "src\\integration\\common\\index.js"
    ],
    "outgoingDependencies": []
  },
  "src\\integration\\common\\sections.js": {
    "incomingDependencies": [
      "src\\integration\\common\\index.js"
    ],
    "outgoingDependencies": []
  },
  "src\\integration\\common\\SEO.amp.js": {
    "incomingDependencies": [
      "src\\integration\\common\\index.js"
    ],
    "outgoingDependencies": []
  },
  "src\\integration\\common\\SEO.js": {
    "incomingDependencies": [
      "src\\integration\\common\\index.js"
    ],
    "outgoingDependencies": []
  },
  "src\\integration\\common\\storyPromo.js": {
    "incomingDependencies": [
      "src\\integration\\common\\index.js"
    ],
    "outgoingDependencies": []
  },
  "src\\integration\\common\\timestamp.js": {
    "incomingDependencies": [
      "src\\integration\\common\\index.js"
    ],
    "outgoingDependencies": []
  },
  "src\\integration\\common\\topicTags.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\integration\\integrationTestEnvironment.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\integration\\pages\\articles\\ampTests.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../../common",
        "resolvedPath": "src\\integration\\common\\index.js"
      },
      {
        "source": "./crossPlatformTests",
        "resolvedPath": "src\\integration\\pages\\articles\\crossPlatformTests.js"
      }
    ]
  },
  "src\\integration\\pages\\articles\\canonicalTests.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../../common",
        "resolvedPath": "src\\integration\\common\\index.js"
      },
      {
        "source": "./crossPlatformTests",
        "resolvedPath": "src\\integration\\pages\\articles\\crossPlatformTests.js"
      }
    ]
  },
  "src\\integration\\pages\\articles\\crossPlatformTests.js": {
    "incomingDependencies": [
      "src\\integration\\pages\\articles\\ampTests.js",
      "src\\integration\\pages\\articles\\canonicalTests.js"
    ],
    "outgoingDependencies": [
      {
        "source": "../../common",
        "resolvedPath": "src\\integration\\common\\index.js"
      }
    ]
  },
  "src\\integration\\pages\\articles\\gistTests.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\integration\\pages\\articles\\imageCopyrightBBC.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\integration\\pages\\articles\\imageCopyrightNonBBC.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\integration\\pages\\articles\\inlineLink.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\integration\\pages\\articles\\mediaPlayerCaption.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\integration\\pages\\articles\\mediaPlayerPlaceholderTestsAmp.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\integration\\pages\\articles\\mediaPlayerPlaceholderTestsCanonical.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\integration\\pages\\articles\\paragraph.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\integration\\pages\\featureIdxPage\\ampTests.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "./crossPlatformTests",
        "resolvedPath": "src\\integration\\pages\\featureIdxPage\\crossPlatformTests.js"
      },
      {
        "source": "../../common",
        "resolvedPath": "src\\integration\\common\\index.js"
      }
    ]
  },
  "src\\integration\\pages\\featureIdxPage\\canonicalTests.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "./crossPlatformTests",
        "resolvedPath": "src\\integration\\pages\\featureIdxPage\\crossPlatformTests.js"
      },
      {
        "source": "../../common",
        "resolvedPath": "src\\integration\\common\\index.js"
      }
    ]
  },
  "src\\integration\\pages\\featureIdxPage\\crossPlatformTests.js": {
    "incomingDependencies": [
      "src\\integration\\pages\\featureIdxPage\\ampTests.js",
      "src\\integration\\pages\\featureIdxPage\\canonicalTests.js"
    ],
    "outgoingDependencies": [
      {
        "source": "../../common",
        "resolvedPath": "src\\integration\\common\\index.js"
      }
    ]
  },
  "src\\integration\\pages\\homePage\\ampTests.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../../common",
        "resolvedPath": "src\\integration\\common\\index.js"
      },
      {
        "source": "./crossPlatformTests",
        "resolvedPath": "src\\integration\\pages\\homePage\\crossPlatformTests.js"
      }
    ]
  },
  "src\\integration\\pages\\homePage\\canonicalTests.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../../common",
        "resolvedPath": "src\\integration\\common\\index.js"
      },
      {
        "source": "./crossPlatformTests",
        "resolvedPath": "src\\integration\\pages\\homePage\\crossPlatformTests.js"
      }
    ]
  },
  "src\\integration\\pages\\homePage\\crossPlatformTests.js": {
    "incomingDependencies": [
      "src\\integration\\pages\\homePage\\ampTests.js",
      "src\\integration\\pages\\homePage\\canonicalTests.js"
    ],
    "outgoingDependencies": [
      {
        "source": "../../common",
        "resolvedPath": "src\\integration\\common\\index.js"
      },
      {
        "source": "./pageContentTests",
        "resolvedPath": "src\\integration\\pages\\homePage\\pageContentTests.js"
      },
      {
        "source": "./messageBannerTests",
        "resolvedPath": "src\\integration\\pages\\homePage\\messageBannerTests.js"
      }
    ]
  },
  "src\\integration\\pages\\homePage\\messageBannerTests.js": {
    "incomingDependencies": [
      "src\\integration\\pages\\homePage\\crossPlatformTests.js"
    ],
    "outgoingDependencies": []
  },
  "src\\integration\\pages\\homePage\\pageContentTests.js": {
    "incomingDependencies": [
      "src\\integration\\pages\\homePage\\crossPlatformTests.js"
    ],
    "outgoingDependencies": []
  },
  "src\\integration\\pages\\liveRadio\\canonicalTests.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../../common",
        "resolvedPath": "src\\integration\\common\\index.js"
      }
    ]
  },
  "src\\integration\\pages\\mediaArticlePage\\ampTests.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../../common",
        "resolvedPath": "src\\integration\\common\\index.js"
      },
      {
        "source": "./crossPlatformTests",
        "resolvedPath": "src\\integration\\pages\\mediaArticlePage\\crossPlatformTests.js"
      }
    ]
  },
  "src\\integration\\pages\\mediaArticlePage\\canonicalTests.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../../common",
        "resolvedPath": "src\\integration\\common\\index.js"
      },
      {
        "source": "./crossPlatformTests",
        "resolvedPath": "src\\integration\\pages\\mediaArticlePage\\crossPlatformTests.js"
      }
    ]
  },
  "src\\integration\\pages\\mediaArticlePage\\crossPlatformTests.js": {
    "incomingDependencies": [
      "src\\integration\\pages\\mediaArticlePage\\ampTests.js",
      "src\\integration\\pages\\mediaArticlePage\\canonicalTests.js"
    ],
    "outgoingDependencies": [
      {
        "source": "../../common",
        "resolvedPath": "src\\integration\\common\\index.js"
      }
    ]
  },
  "src\\integration\\pages\\mediaAssetPage\\ampTests.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../../common",
        "resolvedPath": "src\\integration\\common\\index.js"
      },
      {
        "source": "./crossPlatformTests",
        "resolvedPath": "src\\integration\\pages\\mediaAssetPage\\crossPlatformTests.js"
      }
    ]
  },
  "src\\integration\\pages\\mediaAssetPage\\canonicalTests.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../../common",
        "resolvedPath": "src\\integration\\common\\index.js"
      },
      {
        "source": "./crossPlatformTests",
        "resolvedPath": "src\\integration\\pages\\mediaAssetPage\\crossPlatformTests.js"
      }
    ]
  },
  "src\\integration\\pages\\mediaAssetPage\\crossPlatformTests.js": {
    "incomingDependencies": [
      "src\\integration\\pages\\mediaAssetPage\\ampTests.js",
      "src\\integration\\pages\\mediaAssetPage\\canonicalTests.js"
    ],
    "outgoingDependencies": [
      {
        "source": "../../common",
        "resolvedPath": "src\\integration\\common\\index.js"
      }
    ]
  },
  "src\\integration\\pages\\mostReadPage\\ampTests.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../../common",
        "resolvedPath": "src\\integration\\common\\index.js"
      },
      {
        "source": "./crossPlatformTests",
        "resolvedPath": "src\\integration\\pages\\mostReadPage\\crossPlatformTests.js"
      }
    ]
  },
  "src\\integration\\pages\\mostReadPage\\canonicalTests.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../../common",
        "resolvedPath": "src\\integration\\common\\index.js"
      },
      {
        "source": "./crossPlatformTests",
        "resolvedPath": "src\\integration\\pages\\mostReadPage\\crossPlatformTests.js"
      }
    ]
  },
  "src\\integration\\pages\\mostReadPage\\crossPlatformTests.js": {
    "incomingDependencies": [
      "src\\integration\\pages\\mostReadPage\\ampTests.js",
      "src\\integration\\pages\\mostReadPage\\canonicalTests.js"
    ],
    "outgoingDependencies": [
      {
        "source": "../../common",
        "resolvedPath": "src\\integration\\common\\index.js"
      }
    ]
  },
  "src\\integration\\pages\\onDemandAudioPage\\canonicalTests.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../../common",
        "resolvedPath": "src\\integration\\common\\index.js"
      },
      {
        "source": "./commonEpisodeTests",
        "resolvedPath": "src\\integration\\pages\\onDemandAudioPage\\commonEpisodeTests.js"
      }
    ]
  },
  "src\\integration\\pages\\onDemandAudioPage\\commonEpisodeTests.js": {
    "incomingDependencies": [
      "src\\integration\\pages\\onDemandAudioPage\\canonicalTests.js",
      "src\\integration\\pages\\onDemandAudioPage\\expiredEpisodeTests.js"
    ],
    "outgoingDependencies": []
  },
  "src\\integration\\pages\\onDemandAudioPage\\expiredEpisodeTests.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "./commonEpisodeTests",
        "resolvedPath": "src\\integration\\pages\\onDemandAudioPage\\commonEpisodeTests.js"
      }
    ]
  },
  "src\\integration\\pages\\onDemandTVPage\\canonicalTests.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../../common",
        "resolvedPath": "src\\integration\\common\\index.js"
      },
      {
        "source": "./commonEpisodeTests",
        "resolvedPath": "src\\integration\\pages\\onDemandTVPage\\commonEpisodeTests.js"
      }
    ]
  },
  "src\\integration\\pages\\onDemandTVPage\\commonEpisodeTests.js": {
    "incomingDependencies": [
      "src\\integration\\pages\\onDemandTVPage\\canonicalTests.js",
      "src\\integration\\pages\\onDemandTVPage\\expiredEpisodeTests.js"
    ],
    "outgoingDependencies": []
  },
  "src\\integration\\pages\\onDemandTVPage\\expiredEpisodeTests.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "./commonEpisodeTests",
        "resolvedPath": "src\\integration\\pages\\onDemandTVPage\\commonEpisodeTests.js"
      }
    ]
  },
  "src\\integration\\pages\\photoGalleryPage\\ampTests.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../../common",
        "resolvedPath": "src\\integration\\common\\index.js"
      },
      {
        "source": "./crossPlatformTests",
        "resolvedPath": "src\\integration\\pages\\photoGalleryPage\\crossPlatformTests.js"
      }
    ]
  },
  "src\\integration\\pages\\photoGalleryPage\\canonicalTests.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../../common",
        "resolvedPath": "src\\integration\\common\\index.js"
      },
      {
        "source": "./crossPlatformTests",
        "resolvedPath": "src\\integration\\pages\\photoGalleryPage\\crossPlatformTests.js"
      }
    ]
  },
  "src\\integration\\pages\\photoGalleryPage\\crossPlatformTests.js": {
    "incomingDependencies": [
      "src\\integration\\pages\\photoGalleryPage\\ampTests.js",
      "src\\integration\\pages\\photoGalleryPage\\canonicalTests.js"
    ],
    "outgoingDependencies": [
      {
        "source": "../../common",
        "resolvedPath": "src\\integration\\common\\index.js"
      }
    ]
  },
  "src\\integration\\pages\\podcastPage\\canonicalTests.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../../common",
        "resolvedPath": "src\\integration\\common\\index.js"
      },
      {
        "source": "./commonEpisodeTests",
        "resolvedPath": "src\\integration\\pages\\podcastPage\\commonEpisodeTests.js"
      }
    ]
  },
  "src\\integration\\pages\\podcastPage\\commonEpisodeTests.js": {
    "incomingDependencies": [
      "src\\integration\\pages\\podcastPage\\canonicalTests.js"
    ],
    "outgoingDependencies": []
  },
  "src\\integration\\pages\\storyPage\\ampIncludeTests.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\integration\\pages\\storyPage\\ampTests.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../../common",
        "resolvedPath": "src\\integration\\common\\index.js"
      },
      {
        "source": "./crossPlatformTests",
        "resolvedPath": "src\\integration\\pages\\storyPage\\crossPlatformTests.js"
      }
    ]
  },
  "src\\integration\\pages\\storyPage\\canonicalIncludeTests.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\integration\\pages\\storyPage\\canonicalTests.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../../common",
        "resolvedPath": "src\\integration\\common\\index.js"
      },
      {
        "source": "./crossPlatformTests",
        "resolvedPath": "src\\integration\\pages\\storyPage\\crossPlatformTests.js"
      }
    ]
  },
  "src\\integration\\pages\\storyPage\\crossPlatformTests.js": {
    "incomingDependencies": [
      "src\\integration\\pages\\storyPage\\ampTests.js",
      "src\\integration\\pages\\storyPage\\canonicalTests.js"
    ],
    "outgoingDependencies": [
      {
        "source": "../../common",
        "resolvedPath": "src\\integration\\common\\index.js"
      }
    ]
  },
  "src\\integration\\pages\\topicPage\\canonicalTests.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "./crossPlatformTests",
        "resolvedPath": "src\\integration\\pages\\topicPage\\crossPlatformTests.js"
      },
      {
        "source": "../../common",
        "resolvedPath": "src\\integration\\common\\index.js"
      }
    ]
  },
  "src\\integration\\pages\\topicPage\\crossPlatformTests.js": {
    "incomingDependencies": [
      "src\\integration\\pages\\topicPage\\canonicalTests.js"
    ],
    "outgoingDependencies": [
      {
        "source": "../../common",
        "resolvedPath": "src\\integration\\common\\index.js"
      }
    ]
  },
  "src\\integration\\utils\\camelCaseToText.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\integration\\utils\\fetchDom.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\integration\\utils\\getPageTypeFromTestPath.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\integration\\utils\\runTests\\index.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\poly\\legacy.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "core-js/es/map",
        "resolvedPath": "core-js/es/map"
      },
      {
        "source": "core-js/es/set",
        "resolvedPath": "core-js/es/set"
      },
      {
        "source": "core-js/es/symbol",
        "resolvedPath": "core-js/es/symbol"
      },
      {
        "source": "core-js/es/object/assign",
        "resolvedPath": "core-js/es/object/assign"
      },
      {
        "source": "core-js/es/weak-map",
        "resolvedPath": "core-js/es/weak-map"
      },
      {
        "source": "polyfill-crypto.getrandomvalues",
        "resolvedPath": "polyfill-crypto.getrandomvalues"
      }
    ]
  },
  "src\\poly\\modern.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "./safari-nomodule",
        "resolvedPath": "src\\poly\\safari-nomodule.js"
      }
    ]
  },
  "src\\poly\\safari-nomodule.js": {
    "incomingDependencies": [
      "src\\poly\\modern.js"
    ],
    "outgoingDependencies": []
  },
  "src\\server\\Document\\component.tsx": {
    "incomingDependencies": [
      "src\\server\\Document\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "@emotion/server/create-instance",
        "resolvedPath": "@emotion/server/create-instance"
      },
      {
        "source": "react-helmet",
        "resolvedPath": "node_modules\\@types\\react\\-helmet"
      },
      {
        "source": "./Renderers/LiteRenderer",
        "resolvedPath": "src\\server\\Document\\Renderers\\LiteRenderer.tsx"
      },
      {
        "source": "./Renderers/CanonicalRenderer",
        "resolvedPath": "src\\server\\Document\\Renderers\\CanonicalRenderer.tsx"
      },
      {
        "source": "./Renderers/AmpRenderer",
        "resolvedPath": "src\\server\\Document\\Renderers\\AmpRenderer.tsx"
      },
      {
        "source": "./Renderers/litePageTransforms",
        "resolvedPath": "src\\server\\Document\\Renderers\\litePageTransforms\\index.ts"
      }
    ]
  },
  "src\\server\\Document\\index.jsx": {
    "incomingDependencies": [
      "src\\server\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "path",
        "resolvedPath": "path"
      },
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "react-dom/server",
        "resolvedPath": "node_modules\\@types\\react\\-dom\\server"
      },
      {
        "source": "@loadable/server",
        "resolvedPath": "@loadable/server"
      },
      {
        "source": "@emotion/react",
        "resolvedPath": "@emotion/react"
      },
      {
        "source": "@emotion/server/create-instance",
        "resolvedPath": "@emotion/server/create-instance"
      },
      {
        "source": "@emotion/cache",
        "resolvedPath": "@emotion/cache"
      },
      {
        "source": "react-helmet",
        "resolvedPath": "node_modules\\@types\\react\\-helmet"
      },
      {
        "source": "#containers/App",
        "resolvedPath": "src\\app\\legacy\\containers\\App"
      },
      {
        "source": "./component",
        "resolvedPath": "src\\server\\Document\\component.tsx"
      },
      {
        "source": "../utilities/attributeFunctions",
        "resolvedPath": "src\\server\\utilities\\attributeFunctions\\index.js"
      }
    ]
  },
  "src\\server\\Document\\Renderers\\AmpRenderer.tsx": {
    "incomingDependencies": [
      "src\\server\\Document\\component.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "#psammead/psammead-assets/src/amp-boilerplate",
        "resolvedPath": "src\\app\\legacy\\psammead\\psammead-assets\\src\\amp-boilerplate"
      },
      {
        "source": "#components/AmpGeo",
        "resolvedPath": "src\\app\\legacy\\components\\AmpGeo"
      },
      {
        "source": "./types",
        "resolvedPath": "src\\server\\Document\\Renderers\\types.ts"
      }
    ]
  },
  "src\\server\\Document\\Renderers\\CanonicalRenderer.tsx": {
    "incomingDependencies": [
      "src\\server\\Document\\component.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "#app/legacy/components/IfAboveIE9Comment",
        "resolvedPath": "src\\app\\legacy\\components\\IfAboveIE9Comment"
      },
      {
        "source": "#app/lib/noJs.const",
        "resolvedPath": "src\\app\\lib\\noJs.const"
      },
      {
        "source": "#app/lib/utilities/getEnvConfig",
        "resolvedPath": "src\\app\\lib\\utilities\\getEnvConfig"
      },
      {
        "source": "#app/lib/utilities/serialiseForScript",
        "resolvedPath": "src\\app\\lib\\utilities\\serialiseForScript"
      },
      {
        "source": "./types",
        "resolvedPath": "src\\server\\Document\\Renderers\\types.ts"
      }
    ]
  },
  "src\\server\\Document\\Renderers\\litePageTransforms\\index.ts": {
    "incomingDependencies": [
      "src\\server\\Document\\component.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "./transformAnchorTags",
        "resolvedPath": "src\\server\\Document\\Renderers\\litePageTransforms\\transformAnchorTags.ts"
      }
    ]
  },
  "src\\server\\Document\\Renderers\\litePageTransforms\\transformAnchorTags.ts": {
    "incomingDependencies": [
      "src\\server\\Document\\Renderers\\litePageTransforms\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "#app/models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global"
      },
      {
        "source": "#lib/config/services/loadableConfig",
        "resolvedPath": "src\\app\\lib\\config\\services\\loadableConfig"
      }
    ]
  },
  "src\\server\\Document\\Renderers\\LiteRenderer.tsx": {
    "incomingDependencies": [
      "src\\server\\Document\\component.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "./types",
        "resolvedPath": "src\\server\\Document\\Renderers\\types.ts"
      }
    ]
  },
  "src\\server\\Document\\Renderers\\types.ts": {
    "incomingDependencies": [
      "src\\server\\Document\\Renderers\\AmpRenderer.tsx",
      "src\\server\\Document\\Renderers\\CanonicalRenderer.tsx",
      "src\\server\\Document\\Renderers\\LiteRenderer.tsx"
    ],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      }
    ]
  },
  "src\\server\\index.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "express",
        "resolvedPath": "express"
      },
      {
        "source": "compression",
        "resolvedPath": "compression"
      },
      {
        "source": "ramda/src/path",
        "resolvedPath": "ramda/src/path"
      },
      {
        "source": "ramda/src/omit",
        "resolvedPath": "ramda/src/omit"
      },
      {
        "source": "helmet",
        "resolvedPath": "helmet"
      },
      {
        "source": "#app/routes",
        "resolvedPath": "src\\app\\routes"
      },
      {
        "source": "#lib/logger.node",
        "resolvedPath": "src\\app\\lib\\logger.node"
      },
      {
        "source": "#app/routes/utils/fetchPageData/utils/getRouteProps",
        "resolvedPath": "src\\app\\routes\\utils\\fetchPageData\\utils\\getRouteProps"
      },
      {
        "source": "#lib/logger.const",
        "resolvedPath": "src\\app\\lib\\logger.const"
      },
      {
        "source": "#app/lib/utilities/getToggles/withCache",
        "resolvedPath": "src\\app\\lib\\utilities\\getToggles\\withCache"
      },
      {
        "source": "#lib/statusCodes.const",
        "resolvedPath": "src\\app\\lib\\statusCodes.const"
      },
      {
        "source": "./utilities/cspHeader",
        "resolvedPath": "src\\server\\utilities\\cspHeader\\index.js"
      },
      {
        "source": "./utilities/logResponseTime",
        "resolvedPath": "src\\server\\utilities\\logResponseTime\\index.js"
      },
      {
        "source": "./Document",
        "resolvedPath": "src\\server\\Document\\index.jsx"
      },
      {
        "source": "../app/routes/utils/regex",
        "resolvedPath": "src\\app\\routes\\utils\\regex\\index.js"
      },
      {
        "source": "./utilities/customMetrics",
        "resolvedPath": "src\\server\\utilities\\customMetrics\\index.ts"
      },
      {
        "source": "./utilities/customMetrics/metrics.const",
        "resolvedPath": "src\\server\\utilities\\customMetrics\\metrics.const.ts"
      },
      {
        "source": "./local",
        "resolvedPath": "src\\server\\local\\index.js"
      },
      {
        "source": "./utilities/getAgent",
        "resolvedPath": "src\\server\\utilities\\getAgent\\index.js"
      },
      {
        "source": "./utilities/mvtHeader",
        "resolvedPath": "src\\server\\utilities\\mvtHeader\\index.js"
      },
      {
        "source": "./utilities/getAssetOrigins",
        "resolvedPath": "src\\server\\utilities\\getAssetOrigins\\index.js"
      },
      {
        "source": "./utilities/extractHeaders",
        "resolvedPath": "src\\server\\utilities\\extractHeaders\\index.ts"
      }
    ]
  },
  "src\\server\\local\\constructDataFilePath\\index.js": {
    "incomingDependencies": [
      "src\\server\\local\\index.js"
    ],
    "outgoingDependencies": [
      {
        "source": "path",
        "resolvedPath": "path"
      }
    ]
  },
  "src\\server\\local\\index.js": {
    "incomingDependencies": [
      "src\\server\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "path",
        "resolvedPath": "path"
      },
      {
        "source": "express-static-gzip",
        "resolvedPath": "express-static-gzip"
      },
      {
        "source": "#app/routes/utils/regex",
        "resolvedPath": "src\\app\\routes\\utils\\regex"
      },
      {
        "source": "#lib/logger.const",
        "resolvedPath": "src\\app\\lib\\logger.const"
      },
      {
        "source": "#lib/logger.node",
        "resolvedPath": "src\\app\\lib\\logger.node"
      },
      {
        "source": "./constructDataFilePath",
        "resolvedPath": "src\\server\\local\\constructDataFilePath\\index.js"
      }
    ]
  },
  "src\\server\\utilities\\attributeFunctions\\index.js": {
    "incomingDependencies": [
      "src\\server\\Document\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../encodeChunkUri",
        "resolvedPath": "src\\server\\utilities\\encodeChunkUri\\index.js"
      }
    ]
  },
  "src\\server\\utilities\\cspHeader\\directives.js": {
    "incomingDependencies": [
      "src\\server\\utilities\\cspHeader\\index.js"
    ],
    "outgoingDependencies": [
      {
        "source": "./domainLists",
        "resolvedPath": "src\\server\\utilities\\cspHeader\\domainLists.js"
      }
    ]
  },
  "src\\server\\utilities\\cspHeader\\domainLists.js": {
    "incomingDependencies": [
      "src\\server\\utilities\\cspHeader\\directives.js"
    ],
    "outgoingDependencies": []
  },
  "src\\server\\utilities\\cspHeader\\index.js": {
    "incomingDependencies": [
      "src\\server\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "helmet-csp",
        "resolvedPath": "helmet-csp"
      },
      {
        "source": "#app/routes/utils/fetchPageData/utils/getRouteProps",
        "resolvedPath": "src\\app\\routes\\utils\\fetchPageData\\utils\\getRouteProps"
      },
      {
        "source": "#lib/utilities/isLive",
        "resolvedPath": "src\\app\\lib\\utilities\\isLive"
      },
      {
        "source": "./directives",
        "resolvedPath": "src\\server\\utilities\\cspHeader\\directives.js"
      }
    ]
  },
  "src\\server\\utilities\\customMetrics\\index.ts": {
    "incomingDependencies": [
      "src\\server\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "aws-embedded-metrics",
        "resolvedPath": "aws-embedded-metrics"
      },
      {
        "source": "#app/models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global"
      },
      {
        "source": "../onEnvironment",
        "resolvedPath": "src\\server\\utilities\\onEnvironment\\index.js"
      }
    ]
  },
  "src\\server\\utilities\\customMetrics\\metrics.const.ts": {
    "incomingDependencies": [
      "src\\server\\index.jsx"
    ],
    "outgoingDependencies": []
  },
  "src\\server\\utilities\\encodeChunkUri\\index.js": {
    "incomingDependencies": [
      "src\\server\\utilities\\attributeFunctions\\index.js"
    ],
    "outgoingDependencies": []
  },
  "src\\server\\utilities\\extractHeaders\\index.ts": {
    "incomingDependencies": [
      "src\\server\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "http",
        "resolvedPath": "http"
      },
      {
        "source": "#app/lib/utilities/cookieCountries",
        "resolvedPath": "src\\app\\lib\\utilities\\cookieCountries"
      }
    ]
  },
  "src\\server\\utilities\\getAgent\\certs.js": {
    "incomingDependencies": [
      "src\\server\\utilities\\getAgent\\index.js"
    ],
    "outgoingDependencies": [
      {
        "source": "fs",
        "resolvedPath": "fs"
      }
    ]
  },
  "src\\server\\utilities\\getAgent\\index.js": {
    "incomingDependencies": [
      "src\\app\\routes\\article\\getInitialData\\index.ts",
      "src\\app\\routes\\utils\\fetchDataFromBFF\\index.ts",
      "src\\server\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "https",
        "resolvedPath": "https"
      },
      {
        "source": "tls",
        "resolvedPath": "tls"
      },
      {
        "source": "./certs",
        "resolvedPath": "src\\server\\utilities\\getAgent\\certs.js"
      }
    ]
  },
  "src\\server\\utilities\\getAssetOrigins\\index.js": {
    "incomingDependencies": [
      "src\\server\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "../serviceConfigs",
        "resolvedPath": "src\\server\\utilities\\serviceConfigs\\index.ts"
      }
    ]
  },
  "src\\server\\utilities\\logResponseTime\\index.js": {
    "incomingDependencies": [
      "src\\server\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "#lib/logger.node",
        "resolvedPath": "src\\app\\lib\\logger.node"
      },
      {
        "source": "#lib/logger.const",
        "resolvedPath": "src\\app\\lib\\logger.const"
      }
    ]
  },
  "src\\server\\utilities\\mvtHeader\\enabledExperimentsList.js": {
    "incomingDependencies": [
      "src\\server\\utilities\\mvtHeader\\getMvtExperiments\\index.js"
    ],
    "outgoingDependencies": []
  },
  "src\\server\\utilities\\mvtHeader\\getMvtExperiments\\index.js": {
    "incomingDependencies": [
      "src\\server\\utilities\\mvtHeader\\index.js"
    ],
    "outgoingDependencies": [
      {
        "source": "../enabledExperimentsList",
        "resolvedPath": "src\\server\\utilities\\mvtHeader\\enabledExperimentsList.js"
      }
    ]
  },
  "src\\server\\utilities\\mvtHeader\\getMvtVaryHeaders\\index.js": {
    "incomingDependencies": [
      "src\\server\\utilities\\mvtHeader\\index.js"
    ],
    "outgoingDependencies": []
  },
  "src\\server\\utilities\\mvtHeader\\index.js": {
    "incomingDependencies": [
      "src\\server\\index.jsx"
    ],
    "outgoingDependencies": [
      {
        "source": "./getMvtExperiments",
        "resolvedPath": "src\\server\\utilities\\mvtHeader\\getMvtExperiments\\index.js"
      },
      {
        "source": "./getMvtVaryHeaders",
        "resolvedPath": "src\\server\\utilities\\mvtHeader\\getMvtVaryHeaders\\index.js"
      }
    ]
  },
  "src\\server\\utilities\\onEnvironment\\index.js": {
    "incomingDependencies": [
      "src\\server\\utilities\\customMetrics\\index.ts"
    ],
    "outgoingDependencies": [
      {
        "source": "#app/lib/utilities/getEnvConfig",
        "resolvedPath": "src\\app\\lib\\utilities\\getEnvConfig"
      }
    ]
  },
  "src\\server\\utilities\\serviceConfigs\\index.ts": {
    "incomingDependencies": [
      "src\\app\\contexts\\ServiceContext\\__mocks__\\index.tsx",
      "src\\app\\legacy\\containers\\ArticleTimestamp\\timeFormatTests\\generateTimeFormats.js",
      "src\\server\\utilities\\getAssetOrigins\\index.js"
    ],
    "outgoingDependencies": [
      {
        "source": "../../../app/lib/config/services/afaanoromoo",
        "resolvedPath": "src\\app\\lib\\config\\services\\afaanoromoo.ts"
      },
      {
        "source": "../../../app/lib/config/services/afrique",
        "resolvedPath": "src\\app\\lib\\config\\services\\afrique.ts"
      },
      {
        "source": "../../../app/lib/config/services/amharic",
        "resolvedPath": "src\\app\\lib\\config\\services\\amharic.ts"
      },
      {
        "source": "../../../app/lib/config/services/arabic",
        "resolvedPath": "src\\app\\lib\\config\\services\\arabic.ts"
      },
      {
        "source": "../../../app/lib/config/services/archive",
        "resolvedPath": "src\\app\\lib\\config\\services\\archive.ts"
      },
      {
        "source": "../../../app/lib/config/services/azeri",
        "resolvedPath": "src\\app\\lib\\config\\services\\azeri.ts"
      },
      {
        "source": "../../../app/lib/config/services/bengali",
        "resolvedPath": "src\\app\\lib\\config\\services\\bengali.ts"
      },
      {
        "source": "../../../app/lib/config/services/burmese",
        "resolvedPath": "src\\app\\lib\\config\\services\\burmese.ts"
      },
      {
        "source": "../../../app/lib/config/services/cymrufyw",
        "resolvedPath": "src\\app\\lib\\config\\services\\cymrufyw.ts"
      },
      {
        "source": "../../../app/lib/config/services/gahuza",
        "resolvedPath": "src\\app\\lib\\config\\services\\gahuza.ts"
      },
      {
        "source": "../../../app/lib/config/services/gujarati",
        "resolvedPath": "src\\app\\lib\\config\\services\\gujarati.ts"
      },
      {
        "source": "../../../app/lib/config/services/hausa",
        "resolvedPath": "src\\app\\lib\\config\\services\\hausa.ts"
      },
      {
        "source": "../../../app/lib/config/services/hindi",
        "resolvedPath": "src\\app\\lib\\config\\services\\hindi.ts"
      },
      {
        "source": "../../../app/lib/config/services/igbo",
        "resolvedPath": "src\\app\\lib\\config\\services\\igbo.ts"
      },
      {
        "source": "../../../app/lib/config/services/indonesia",
        "resolvedPath": "src\\app\\lib\\config\\services\\indonesia.ts"
      },
      {
        "source": "../../../app/lib/config/services/japanese",
        "resolvedPath": "src\\app\\lib\\config\\services\\japanese.ts"
      },
      {
        "source": "../../../app/lib/config/services/korean",
        "resolvedPath": "src\\app\\lib\\config\\services\\korean.ts"
      },
      {
        "source": "../../../app/lib/config/services/kyrgyz",
        "resolvedPath": "src\\app\\lib\\config\\services\\kyrgyz.ts"
      },
      {
        "source": "../../../app/lib/config/services/marathi",
        "resolvedPath": "src\\app\\lib\\config\\services\\marathi.ts"
      },
      {
        "source": "../../../app/lib/config/services/mundo",
        "resolvedPath": "src\\app\\lib\\config\\services\\mundo.ts"
      },
      {
        "source": "../../../app/lib/config/services/naidheachdan",
        "resolvedPath": "src\\app\\lib\\config\\services\\naidheachdan.ts"
      },
      {
        "source": "../../../app/lib/config/services/nepali",
        "resolvedPath": "src\\app\\lib\\config\\services\\nepali.ts"
      },
      {
        "source": "../../../app/lib/config/services/news",
        "resolvedPath": "src\\app\\lib\\config\\services\\news.ts"
      },
      {
        "source": "../../../app/lib/config/services/pashto",
        "resolvedPath": "src\\app\\lib\\config\\services\\pashto.ts"
      },
      {
        "source": "../../../app/lib/config/services/persian",
        "resolvedPath": "src\\app\\lib\\config\\services\\persian.ts"
      },
      {
        "source": "../../../app/lib/config/services/pidgin",
        "resolvedPath": "src\\app\\lib\\config\\services\\pidgin.ts"
      },
      {
        "source": "../../../app/lib/config/services/portuguese",
        "resolvedPath": "src\\app\\lib\\config\\services\\portuguese.ts"
      },
      {
        "source": "../../../app/lib/config/services/punjabi",
        "resolvedPath": "src\\app\\lib\\config\\services\\punjabi.ts"
      },
      {
        "source": "../../../app/lib/config/services/russian",
        "resolvedPath": "src\\app\\lib\\config\\services\\russian.ts"
      },
      {
        "source": "../../../app/lib/config/services/scotland",
        "resolvedPath": "src\\app\\lib\\config\\services\\scotland.ts"
      },
      {
        "source": "../../../app/lib/config/services/sport",
        "resolvedPath": "src\\app\\lib\\config\\services\\sport.ts"
      },
      {
        "source": "../../../app/lib/config/services/serbian",
        "resolvedPath": "src\\app\\lib\\config\\services\\serbian.ts"
      },
      {
        "source": "../../../app/lib/config/services/sinhala",
        "resolvedPath": "src\\app\\lib\\config\\services\\sinhala.ts"
      },
      {
        "source": "../../../app/lib/config/services/somali",
        "resolvedPath": "src\\app\\lib\\config\\services\\somali.ts"
      },
      {
        "source": "../../../app/lib/config/services/swahili",
        "resolvedPath": "src\\app\\lib\\config\\services\\swahili.ts"
      },
      {
        "source": "../../../app/lib/config/services/tamil",
        "resolvedPath": "src\\app\\lib\\config\\services\\tamil.ts"
      },
      {
        "source": "../../../app/lib/config/services/telugu",
        "resolvedPath": "src\\app\\lib\\config\\services\\telugu.ts"
      },
      {
        "source": "../../../app/lib/config/services/thai",
        "resolvedPath": "src\\app\\lib\\config\\services\\thai.ts"
      },
      {
        "source": "../../../app/lib/config/services/tigrinya",
        "resolvedPath": "src\\app\\lib\\config\\services\\tigrinya.ts"
      },
      {
        "source": "../../../app/lib/config/services/turkce",
        "resolvedPath": "src\\app\\lib\\config\\services\\turkce.ts"
      },
      {
        "source": "../../../app/lib/config/services/ukchina",
        "resolvedPath": "src\\app\\lib\\config\\services\\ukchina.ts"
      },
      {
        "source": "../../../app/lib/config/services/ukrainian",
        "resolvedPath": "src\\app\\lib\\config\\services\\ukrainian.ts"
      },
      {
        "source": "../../../app/lib/config/services/urdu",
        "resolvedPath": "src\\app\\lib\\config\\services\\urdu.ts"
      },
      {
        "source": "../../../app/lib/config/services/uzbek",
        "resolvedPath": "src\\app\\lib\\config\\services\\uzbek.ts"
      },
      {
        "source": "../../../app/lib/config/services/vietnamese",
        "resolvedPath": "src\\app\\lib\\config\\services\\vietnamese.ts"
      },
      {
        "source": "../../../app/lib/config/services/ws",
        "resolvedPath": "src\\app\\lib\\config\\services\\ws.ts"
      },
      {
        "source": "../../../app/lib/config/services/yoruba",
        "resolvedPath": "src\\app\\lib\\config\\services\\yoruba.ts"
      },
      {
        "source": "../../../app/lib/config/services/zhongwen",
        "resolvedPath": "src\\app\\lib\\config\\services\\zhongwen.ts"
      },
      {
        "source": "../../../app/models/types/global",
        "resolvedPath": "src\\app\\models\\types\\global.ts"
      },
      {
        "source": "../../../app/models/types/serviceConfig",
        "resolvedPath": "src\\app\\models\\types\\serviceConfig.ts"
      }
    ]
  },
  "src\\startServer.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "cluster",
        "resolvedPath": "cluster"
      },
      {
        "source": "os",
        "resolvedPath": "os"
      },
      {
        "source": "#lib/logger.const",
        "resolvedPath": "src\\app\\lib\\logger.const"
      }
    ]
  },
  "src\\testHelpers\\config.js": {
    "incomingDependencies": [],
    "outgoingDependencies": []
  },
  "src\\testHelpers\\jest-setup.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "jest-fetch-mock",
        "resolvedPath": "jest-fetch-mock"
      },
      {
        "source": "path",
        "resolvedPath": "path"
      },
      {
        "source": "util",
        "resolvedPath": "util"
      }
    ]
  },
  "src\\testHelpers\\loggerMock.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "../app/lib/logger.node",
        "resolvedPath": "src\\app\\lib\\logger.node.js"
      }
    ]
  },
  "src\\testHelpers\\mockComponents.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      }
    ]
  },
  "src\\testHelpers\\setupTests.js": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "colors",
        "resolvedPath": "colors"
      },
      {
        "source": "@testing-library/jest-dom",
        "resolvedPath": "@testing-library/jest-dom"
      }
    ]
  },
  "src\\testHelpers\\withTimeMachine.jsx": {
    "incomingDependencies": [],
    "outgoingDependencies": [
      {
        "source": "react",
        "resolvedPath": "node_modules\\@types\\react"
      },
      {
        "source": "../../.storybook/time-machine",
        "resolvedPath": ".storybook\\time-machine.js"
      }
    ]
  }
}